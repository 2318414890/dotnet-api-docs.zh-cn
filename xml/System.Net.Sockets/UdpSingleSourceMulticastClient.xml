<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpSingleSourceMulticastClient.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522d8e0a33fcc708ac83a1356d04077ab35d0449c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22d8e0a33fcc708ac83a1356d04077ab35d0449c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</source>
          <target state="translated">一个从单一源接收多播流量的客户端，亦称为源特定多播 (SSM)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>The multicast group address and sender source address must be known.</source>
          <target state="translated">必须知道的多播的组地址和发件人源地址。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>In addition to receiving multicast data from a specific sender, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> client can also send unicast data back to the sender.</source>
          <target state="translated">除了从特定的发件人，接收多播的数据<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>客户端还可以返回到发件人发送单播数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>To receive multicast from multiple sources, or when the sources aren't known in advance, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> class instead.</source>
          <target state="translated">若要从多个源接收多播或源不事先已知的当使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The sender source address for this receiver to subscribe to.</source>
          <target state="translated">此接收器要订阅的发送器源地址。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The multicast group address for this receiver to subscribe to.</source>
          <target state="translated">此接收器要订阅的多播组地址。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The local port for this receiver to bind to.</source>
          <target state="translated">此接收器要绑定到的本地端口。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from a single source.</source>
          <target state="translated">创建一个可以订阅组地址并从单一源接收数据报的新 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP 客户端。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>构造函数将 UDP 多播套接字的组地址和端口，与相关联，但不会绑定或以其他方式使用套接字。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.</source>
          <target state="translated"><ph id="ph1">`groupAddress`</ph>参数可能是 IPv6 或 IPv4 多播地址。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>However, the address family of the <ph id="ph1">`sourceAddress`</ph> and <ph id="ph2">`groupAddress`</ph> parameters must the same.</source>
          <target state="translated">但是的地址族<ph id="ph1">`sourceAddress`</ph>和<ph id="ph2">`groupAddress`</ph>参数必须相同。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`localPort`</ph> parameter must not specify a port less than 1,024.</source>
          <target state="translated"><ph id="ph1">`localPort`</ph>参数必须指定一个端口小于 1024。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> and <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph> must be the same address family.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph> 必须为相同地址族。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> 小于 0</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> 大于 65,535。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 1024</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> 小于 1024</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>A callback method to invoke when the operation completes.</source>
          <target state="translated">要在此操作完成时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">要传递给此操作的 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 方法的可选状态信息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated">绑定套接字并开始多播组的联接操作，以便允许接收来自单个源地址的数据报。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">引用此操作的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph>方法将 UDP 多播套接字绑定到的本地端口和联接多播的组以允许从单个源地址收到的数据报。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group address, single source address, and local port to bind to are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">中指定的多播的组地址、 单个源地址和要绑定到的本地端口<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.</source>
          <target state="translated">中指定的方法<ph id="ph1">`callback`</ph>要加入多播的组的操作已完成时调用参数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">如果所需的运行时，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph>方法还会执行策略检查以验证客户端是否允许访问多播的组。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">如果客户端不允许访问，<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发与<ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group has already been joined or a join operation is currently in progress.</source>
          <target state="translated">已经联接多播组，或联接操作正在进行。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to store the received data.</source>
          <target state="translated">用于存储已接收数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where the data should be stored.</source>
          <target state="translated">应存储数据的 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 开始处的偏移量（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to receive and store in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要接收并存储在 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中的最大字节数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">要在此操作完成时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">要传递给此操作的 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 方法的可选状态信息。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</source>
          <target state="translated">开始执行从已联接的多播组接收数据包的操作，并在来自指定发送器的数据包到达组时调用指定的回叫。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">引用此操作的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>方法开始从来自单个发件人已联接的多播组接收 UDP 数据包的操作。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The local port, multicast group, and sender source address are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">中指定的本地端口、 多播的组和发件人源地址<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast client must also have completed a join to the multicast group.</source>
          <target state="translated">多播客户端必须具有已完成加入多播组。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">中指定的方法<ph id="ph1">`callback`</ph>收到数据包时，将调用参数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">它可具有套接字失败，如果接收操作失败同步，虽然这是使用 UDP 不常见。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">如果发生套接字失败，<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">收到的错误指定的成员为<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 小于 0</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小于 0</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上此计数大于 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket for receiving.</source>
          <target state="translated">试图访问供接收的套接字时发生错误。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to send.</source>
          <target state="translated">包含要发送的数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to read the data to be sent.</source>
          <target state="translated">要从中读取待发送数据的从 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 开始处的偏移量（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send from the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要从 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 发送的字节数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote port to which the packet is to be sent.</source>
          <target state="translated">要向其发送数据包的远程端口。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote address is specified by the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> constructor.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> 构造函数指定的远程地址。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">要在此操作完成时调用的回调方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">要传递给此操作的 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 方法的可选状态信息。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of sending a unicast packet to the source previously specified.</source>
          <target state="translated">开始执行向之前指定的源发送单播数据包的操作。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">引用此操作的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method begins an operation of sending a UDP packet to the source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>方法开始将 UDP 数据包发送到以前指定的源的操作。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</source>
          <target state="translated">某些协议使用此信息来传递流控制，质量的服务统计信息或恢复消息。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has been sent.</source>
          <target state="translated">中指定的方法<ph id="ph1">`callback`</ph>发送数据包时，将调用参数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">客户端必须已完成加入多播组。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If the destination port specified in the <ph id="ph1">`remotePort`</ph> parameter is less than 1,024, a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">如果在指定目标端口<ph id="ph1">`remotePort`</ph>参数为小于 1024，<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发与<ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">它可具有套接字失败，如果发送操作失败同步，虽然这是使用 UDP 不常见。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">如果发生套接字失败，<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">收到的错误指定的成员为<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 小于 0</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小于 0</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上此计数大于 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph> is less than 0 or greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph> 小于 0 或大于 65,535。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Leaves the multicast group and releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> class and the underlying the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">离开多播组并释放 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 类和基础 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 对象的 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The result of the asynchronous join operation.</source>
          <target state="translated">异步联接操作的结果。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>Completes the asynchronous join group operation to a multicast group.</source>
          <target state="translated">完成多播组的异步联接组操作。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph>方法完成异步绑定到套接字和联接的多播组的操作。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">如果所需的运行时，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph>方法还会执行策略检查以验证客户端是否允许访问多播的组。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">如果客户端不允许访问，<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发与<ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If there is a socket failure while performing the join group operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">如果执行联接组操作，时套接字失败<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">收到的错误指定的成员为<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The result of the asynchronous receive operation.</source>
          <target state="translated">异步接收操作的结果。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The source endpoint where the packet was received from.</source>
          <target state="translated">从中接收数据包的源终结点。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</source>
          <target state="translated">完成从已联接的多播组接收数据包的异步操作并提供接收到的信息。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The length, in bytes, of the message stored in the <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter passed to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">存储在传递给 <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 方法的 <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 参数中的消息的长度（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph>方法完成一个异步操作以从单个源中的多播组接收数据包。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">如果在执行接收操作时出现套接字失败<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">收到的错误指定的成员为<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The result of the asynchronous send operation.</source>
          <target state="translated">异步发送操作的结果。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>Completes the operation of sending a unicast packet to a single source.</source>
          <target state="translated">完成向单个源发送单播数据包的操作。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph> method completes an asynchronous operation to send a packet to single source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph>方法完成一个异步操作以将数据包发送到以前指定的单一源。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">如果在执行接收操作时出现套接字失败<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">收到的错误指定的成员为<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Gets or sets the size, in bytes, of the receive buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast receive operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 实例上的多播接收操作。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The size, in bytes, of the receive buffer.</source>
          <target state="translated">接收缓冲区的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">`ReceiveBufferSize`</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">`ReceiveBufferSize`</ph>属性获取或设置大小，以字节为单位的接收缓冲区的基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>用于对此的多播的接收操作<ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Specifically, the <ph id="ph1">`ReceiveBufferSize`</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">具体而言，<ph id="ph1">`ReceiveBufferSize`</ph>属性控制当数据包到达，但尚未调用应用程序时，堆栈所使用的缓冲区的大小<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>If this buffer gets filled up and packets keep coming before the application calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> methods, old packets will get dropped.</source>
          <target state="translated">如果此缓冲区被填满和应用程序调用之前不断涌现数据包<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph>方法，旧的数据包将被丢弃。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">应用程序永远无法接收旧的数据包，并在它调用时将收到较新的数据包<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The default size of the receive buffer on Windows is 8,192.</source>
          <target state="translated">在 Windows 上的接收缓冲区的默认大小为 8192。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">指定的缓冲区大小小于 0。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Gets or sets the size, in bytes, of the send buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 实例上的多播发送操作。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The size, in bytes, of the send buffer.</source>
          <target state="translated">发送缓冲区的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated">SendBufferSize 属性获取或设置大小，以字节为单位的发送缓冲区的基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>用于对此的多播的发送操作<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Mac OS X, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method start failing.</source>
          <target state="translated">在 Mac OS X<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>属性控制字节数可能处于网络堆栈发送等待缓冲区之前对其他调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>方法启动失败。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</source>
          <target state="translated">Mac OS X 上的应用程序可能需要加以注意此属性，如果它们在短时间范围内发送大量的 UDP 数据包。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Windows, calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method will take longer to call the callback depending on the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.</source>
          <target state="translated">在 Windows 上，调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>方法将采用更长时间才能调用根据的值的回调<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>属性，如果发送缓冲区已满。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>属性仅控制是否用户的缓冲区保持在物理内存中锁定，直到发送完成。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The default size of the send buffer on Windows is 8,192.</source>
          <target state="translated">在 Windows 上的发送缓冲区的默认大小为 8192。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">指定的缓冲区大小小于 0。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">尚未联接多播组。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>