<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpClient.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56637514a0d67fe6299f5e3d0a20f346399311c43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6637514a0d67fe6299f5e3d0a20f346399311c43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Provides User Datagram Protocol (UDP) network services.</source>
          <target state="translated">提供用户数据报协议 (UDP) 网络服务。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类提供了用于发送和接收无连接的 UDP 数据报在阻止同步模式的简单方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</source>
          <target state="translated">UDP 是一种无连接的传输协议，因为你不需要建立远程主机的连接之前发送和接收数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You do, however, have the option of establishing a default remote host in one of the following two ways:</source>
          <target state="translated">但是，执行操作，可以在以下两种方式之一中建立默认远程主机的选择：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using the remote host name and port number as parameters.</source>
          <target state="translated">创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类使用的远程主机名和端口号作为参数。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class and then call the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类，然后调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You can use any of the send methods provided in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to send data to a remote device.</source>
          <target state="translated">你可以使用任何中提供的发送方法<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>将数据发送到远程设备。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method to receive data from remote hosts.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法从远程主机接收数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> using a host name or <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> if you have already specified a default remote host.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>使用主机名或<ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>如果已经指定了默认远程主机。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>If you do, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw an exception.</source>
          <target state="translated">如果这样做，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>将引发异常。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> methods also allow you to send and receive multicast datagrams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> 方法还允许您发送和接收多播数据报。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method to subscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法来订阅<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>到多播组。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method to unsubscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from a multicast group.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法来取消订阅<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>从多播组。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The following example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> connection using the host name www.contoso.com on port 11000.</source>
          <target state="translated">下面的示例建立<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>端口 11000 上使用主机名称 www.contoso.com 的连接。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>A small string message is sent to two separate remote host machines.</source>
          <target state="translated">很短的字符串消息发送到两个单独的远程主机计算机。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until a message is received.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法将阻止执行，直到收到一条消息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>传递给<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>，显示响应的主机的标识。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>To establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">若要建立一个传出连接或接受传入请求。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</source>
          <target state="translated">此构造函数创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>和允许基础服务提供程序分配的最合适的本地 IPv4 地址和端口号。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">如果使用此构造函数，则<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例设置不能更改或覆盖具有 IPv6 目标的连接方法调用的 IPv4 地址族。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">此构造函数不是适用于加入多播的组，因为它不执行套接字绑定。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Also, it works only with IPv4 address types.</source>
          <target state="translated">此外，它仅适用于 IPv4 地址类型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>The following example demonstrates how to use the default constructor to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">下面的示例演示如何使用默认构造函数创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The local port number from which you intend to communicate.</source>
          <target state="translated">要通过其进行通信的本地端口号。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例，并将它绑定到所提供的本地端口号。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">此构造函数创建基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>并将其绑定到你想要进行通信的端口号。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Use this constructor if you are only interested in setting the local port number.</source>
          <target state="translated">如果你只是想设置的本地端口号，请使用此构造函数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The underlying service provider will assign the local IP address.</source>
          <target state="translated">基础服务提供程序将指定本地 IP 地址。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you pass 0 to the constructor, the underlying service provider will assign a port number.</source>
          <target state="translated">如果将 0 传递给构造函数时，基础服务提供程序将分配一个端口号。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">如果使用此构造函数，则<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例设置不能更改或覆盖具有 IPv6 目标的连接方法调用的 IPv4 地址族。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">此构造函数仅适用于 IPv4 地址类型。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The following example demonstrates using a local port number to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">下面的示例演示了如何使用本地端口号创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 参数大于 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 或小于 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that respresents the local endpoint to which you bind the UDP connection.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>，表示将 UDP 连接绑定到的本地终结点。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例，并将其绑定到指定的本地终结点。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">此构造函数创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>和将其绑定到<ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>指定的<ph id="ph3">`localEP`</ph>参数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">在调用此构造函数之前，必须创建<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>使用你想要发送和接收数据的 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number for sending and receiving data.</source>
          <target state="translated">不需要指定用于发送和接收数据的本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">如果不这样做，则基础服务提供程序将分配的最合适的本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`localEP`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">如果使用此构造函数，则<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例设置与指定的地址族<ph id="ph2">`localEP`</ph>不能更改或覆盖具有不同的地址族的连接方法调用的参数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">下面的示例演示如何创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类使用本地终结点。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值之一，它指定套接字的寻址方案。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated"><ph id="ph1">`family`</ph>参数确定侦听器使用的 IP 版本 4 地址 (IPv4) 或 IP 版本 6 (IPv6) 地址。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">若要使用的 IPv4 地址，将传递<ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">若要使用 IPv6 地址，将传递<ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">传递任何其他值都将导致方法会引发<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">如果使用此构造函数，则<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例设置与指定的地址族<ph id="ph2">`family`</ph>不能更改或覆盖具有不同的地址族的连接方法调用的参数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>不适用于加入多播的组，因为它不执行套接字绑定。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">用来侦听传入的连接尝试的端口。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值之一，它指定套接字的寻址方案。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例，并将它绑定到所提供的本地端口号。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">此构造函数创建基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>并将其绑定到你想要进行通信的端口号。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated"><ph id="ph1">`family`</ph>参数确定侦听器使用的 IP 版本 4 地址 (IPv4) 或 IP 版本 6 (IPv6) 地址。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">若要使用的 IPv4 地址，将传递<ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">若要使用 IPv6 地址，将传递<ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">传递任何其他值都将导致方法会引发<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">如果使用此构造函数，则<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例设置与指定的地址族<ph id="ph2">`family`</ph>不能更改或覆盖具有不同的地址族的连接方法调用的参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The following code example shows how to create a UDP client to use in a multicast group.</source>
          <target state="translated">下面的代码示例演示如何创建 UDP 客户端使用多播组中。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 大于 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 或小于 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The name of the remote DNS host to which you intend to connect.</source>
          <target state="translated">要连接到的远程 DNS 主机的名称。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The remote port number to which you intend to connect.</source>
          <target state="translated">要连接到的远程端口号。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and establishes a default remote host.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 类的新实例，并建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>This constructor initializes a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and establishes a remote host using the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">此构造函数初始化新<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>并建立远程主机使用<ph id="ph2">`hostname`</ph>和<ph id="ph3">`port`</ph>参数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">建立默认远程主机的操作是可选的。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you use this constructor, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">如果你使用此构造函数，无需在每次调用中指定远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">指定默认远程主机限制只能访问该主机。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>You can change the default remote host at any time by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">可以通过调用在任何时候更改默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you want to specify a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, do not use this constructor.</source>
          <target state="translated">如果你想要调用中指定的远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法，不使用此构造函数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">下面的示例演示如何创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类使用主机名和端口号。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Gets or sets a value indicating whether a default remote host has been established.</source>
          <target state="translated">获取或设置一个值，该值指示是否已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果连接处于活动状态，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to determine if a default remote host has been established.</source>
          <target state="translated">类派生自<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>可以使用此属性以确定是否已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>You can establish a default remote host by using the appropriate constructor or by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">你可以通过使用适当的构造函数或通过调用建立默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>If you do establish a default remote host, you cannot specify a remote host in your call to <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</source>
          <target state="translated">如果执行建立默认远程主机，则无法调用中指定远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Boolean value that specifies whether to enable or disable NAT traversal.</source>
          <target state="translated">一个布尔值，该值指定是启用还是禁用 NAT 遍历。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Enables or disables Network Address Translation (NAT) traversal on a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> instance.</source>
          <target state="translated">启用或禁用针对 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 实例的网络地址转换 (NAT) 遍历。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> method is used to enable or disable NAT traversal for a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph>方法用于启用或禁用的 NAT 遍历<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</source>
          <target state="translated">可能使用 Teredo、 6to4 或 ISATAP 隧道提供 NAT 遍历。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is false, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</source>
          <target state="translated">当<ph id="ph1">`allowed`</ph>参数为 false，<ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph>关联的套接字上的选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This explicitly disables NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">这将显式禁止 NAT 遍历<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is true, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</source>
          <target state="translated">当<ph id="ph1">`allowed`</ph>参数为 true，<ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph>关联的套接字上的选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This may allow NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> depending on firewall rules in place on the system.</source>
          <target state="translated">这可能使 NAT 遍历<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>具体取决于系统上实施防火墙规则。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Teredo 地址是 IPv6 地址的前缀为 2001年:: / 32。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Teredo 地址可以返回通过正常的 DNS 名称解析或枚举为分配给了本地接口的 IPv6 地址。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>Gets the amount of data received from the network that is available to read.</source>
          <target state="translated">获取从网络接收的可读取的数据量。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The number of bytes of data received from the network.</source>
          <target state="translated">从网络接收的数据字节数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property is used to determine the amount of data queued in the network buffer for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph>属性用于确定在读取的网络缓冲区中排队的数据量。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">如果数据不可用，调用<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>获取数据。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If no data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property returns 0.</source>
          <target state="translated">如果没有数据不可用，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph>属性都返回 0。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If the remote host shuts down or closes the connection, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property throws a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果远程主机关闭或关闭了连接，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph>属性将引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>/ for a detailed description of the error.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档为要获取特定的错误代码和参考<bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>/ 有关的详细说明错误。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the receive operation.</source>
          <target state="translated">一个用户定义的对象，其中包含接收操作的相关信息。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Receives a datagram from a remote host asynchronously.</source>
          <target state="translated">从远程主机异步接收数据报。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous receive.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步接收。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`requestCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">此方法不会阻止，直到完成该操作。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">若要阻止该操作完成之前，请使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> to asynchronously receive a server response.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph>异步接收服务器响应。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">将数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组，其中包含要发送的数据。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">要发送的字节数。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">一个用户定义的对象，其中包含该发送操作的信息。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 requestCallback<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">将数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination was specified previously by a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</source>
          <target state="translated">先前已通过调用 <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph> 指定目标。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步发送。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`requestCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">此方法不会阻止该操作完成之前。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>以异步方式发送服务器请求。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组，其中包含要发送的数据。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">要发送的字节数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the destination for the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>，它表示数据的目标位置。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">一个用户定义的对象，其中包含该发送操作的信息。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">将数据报异步发送到目标。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The destination is specified by a <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</source>
          <target state="translated">目标由 <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步发送。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`requestCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">此方法不会阻止，直到完成该操作。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>以异步方式发送服务器请求。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组，其中包含要发送的数据。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">要发送的字节数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination host.</source>
          <target state="translated">目标主机。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination port number.</source>
          <target state="translated">目标端口号。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">一个用户定义的对象，其中包含该发送操作的信息。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">将数据报异步发送到目标。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination is specified by the host name and port number.</source>
          <target state="translated">目标由主机名和端口号指定。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步发送。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`requestCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">此方法不会阻止，直到完成该操作。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>以异步方式发送服务器请求。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Gets or sets the underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">获取或设置基础网络 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The underlying Network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">基础网络 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> 创建<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>用于发送和通过网络接收数据。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">类派生自<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>可以使用此属性来获取或设置此<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> provides.</source>
          <target state="translated">使用基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>从返回<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>如果需要访问之外，这些设备<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>设置基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>到一个现有<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>This is useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">如果你想要充分利用的简单性这很有用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>使用预先存在的<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>In this example, broadcasting is enabled for the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">在此示例中，为基础启用广播<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Closes the UDP connection.</source>
          <target state="translated">关闭 UDP 连接。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> disables the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and releases all managed and unmanaged resources associated with the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph>禁用基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>并释放与关联的所有托管和非托管资源<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The following example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示结束<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Establishes a default remote host.</source>
          <target state="translated">建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that specifies the network endpoint to which you intend to send data.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>，它指定要将数据发送到的网络终结点。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishes a default remote host using the specified network endpoint.</source>
          <target state="translated">使用指定的网络终结点建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the value specified in the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法建立默认远程主机使用中指定的值<ph id="ph2">`endPoint`</ph>参数。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">一旦建立，则不需要在每次调用中指定远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">建立默认远程主机的操作是可选的。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">指定默认远程主机限制只能访问该主机。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">如果你想要将数据报发送到不同的远程主机，必须进行另一个调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法或创建另一个<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>而无需默认远程主机。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果你已经建立默认远程主机，还提供一台远程主机调用中<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>将引发<ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph>方法，而非将放弃指定的默认到达发件人地址的任何数据报。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the Client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不能设置为使用此方法，除非从继承广播地址的默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>，客户端方法用于获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">但是可以、 为默认值的广播的数据广播地址，255.255.255.255，如果你指定<ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph>调用中<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">如果你的应用程序需要更好地控制广播地址，你可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">因为 UDP 协议是无连接、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法不会阻止。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法如果你想要接收多路广播数据报。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to establish a default remote host.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host to which you intend to send data.</source>
          <target state="translated">要将数据发送到的远程主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend send data.</source>
          <target state="translated">要将数据发送到的端口号。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishes a default remote host using the specified IP address and port number.</source>
          <target state="translated">使用指定的 IP 地址和端口号建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`addr`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法建立默认远程主机使用中指定的值<ph id="ph2">`addr`</ph>和<ph id="ph3">`port`</ph>参数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">一旦建立，则不需要在每次调用中指定远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">建立默认远程主机的操作是可选的。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">指定默认远程主机限制只能访问该主机。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">如果你想要将数据报发送到不同的远程主机，必须进行另一个调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法或创建另一个<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>而无需默认远程主机。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果你已经建立默认远程主机，还提供一台远程主机调用中<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>将引发<ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph>方法，而非将放弃指定的默认到达发件人地址的任何数据报。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不能设置为使用此方法，除非从继承广播地址的默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>，客户端方法用于获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">但是可以、 为默认值的广播的数据广播地址，255.255.255.255，如果你指定<ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph>调用中<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">如果你的应用程序需要更好地控制广播地址，你可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">因为 UDP 协议是无连接、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法不会阻止。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法如果你想要接收多路广播数据报。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following example uses an IP address and port number to connect with a remote host.</source>
          <target state="translated">下面的示例使用 IP 地址和端口号连接与远程主机。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend send data.</source>
          <target state="translated">要将数据发送到的远程主机的 DNS 名称。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The port number on the remote host to which you intend to send data.</source>
          <target state="translated">要将数据发送到的远程主机上的端口号。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishes a default remote host using the specified host name and port number.</source>
          <target state="translated">使用指定的主机名和端口号建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`port`</ph> and <ph id="ph3">`hostname`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法建立默认远程主机使用中指定的值<ph id="ph2">`port`</ph>和<ph id="ph3">`hostname`</ph>参数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">一旦建立，则不需要在每次调用中指定远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">建立默认远程主机的操作是可选的。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">指定默认远程主机限制只能访问该主机。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">如果你想要将数据报发送到不同的远程主机，必须进行另一个调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法或创建另一个<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>而无需默认远程主机。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果你已经建立默认远程主机，还提供一台远程主机调用中<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>将引发<ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph>方法，而非将放弃指定的默认到达发件人地址的任何数据报。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不能设置为使用此方法，除非从继承广播地址的默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>，客户端方法用于获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">但是可以、 为默认值的广播的数据广播地址，255.255.255.255，如果你指定<ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph>调用中<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">如果你的应用程序需要更好地控制广播地址，你可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">因为 UDP 协议是无连接、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法不会阻止。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法如果你想要接收多路广播数据报。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The following example uses the host name and port number to connect to a remote host.</source>
          <target state="translated">下面的示例使用要连接到远程主机的主机名和端口号。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 占用的托管和非托管资源。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>引用。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows Internet Protocol (IP) datagrams to be fragmented.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值指定 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 是否允许将 Internet 协议 (IP) 数据报分段。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows datagram fragmentation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 允许数据报分段，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</source>
          <target state="translated">其大小超过最大传输单元 (MTU) 的传输介质时，数据报需要碎片。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams may be fragmented by the sending host or by an intermediate router.</source>
          <target state="translated">数据报发送主机或中间路由器可以对消息分片。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>If a datagram must be fragmented, and the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</source>
          <target state="translated">如果必须碎片数据报，和<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph>选项设置、 数据报将被丢弃，以及 Internet 控制消息协议 (ICMP) 错误消息发送回数据报的发件人。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>This property can be set only for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">只能为使用 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 标志或 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> 标志的套接字设置该属性。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Leaves a multicast group.</source>
          <target state="translated">退出多播组。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">要退出的多播组的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Leaves a multicast group.</source>
          <target state="translated">退出多播组。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法中提取<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>从由指定标识的多播组<ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法，基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>将 Internet 组管理协议 (IGMP) 数据包发送到路由器上，从多播组中删除路由器。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>中提取从组中，将不再能够接收数据报发送到该组。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The following example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">下面的示例演示如何通过提供多播的地址删除多播的组。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">IP 地址与定义套接字的寻址方案所用的 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值不相符。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">要退出的多播组的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The local address of the multicast group to leave.</source>
          <target state="translated">要退出的多播组的本地地址。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Leaves a multicast group.</source>
          <target state="translated">退出多播组。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法中提取<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>从由指定标识的多播组<ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法，基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>将 Internet 组管理协议 (IGMP) 数据包发送到路由器上，从多播组中删除路由器。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>中提取从组中，将不再能够接收数据报发送到该组。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>属性来获取特定的错误代码。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following code example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">下面的代码示例演示如何通过提供多播的地址删除多播的组。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">IP 地址与定义套接字的寻址方案所用的 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值不相符。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> may send or receive broadcast packets.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值指定 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 是否可以发送或接收广播数据包。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows broadcast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 允许广播数据包，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Broadcasting is limited to a specific subnet.</source>
          <target state="translated">广播仅限于特定子网。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</source>
          <target state="translated">您可以通过将数据包发送到 255.255.255.255; 广播到你的本地子网或者，你可以使用定向广播的地址，这是与设置的主机部分中的所有位的 Internet 协议 (IP) 地址的网络部分。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</source>
          <target state="translated">例如，如果你的 IP 地址是的 192.168.1.40 （C 类地址，使用的网络部分作为前三个八位字节和的主机部分是最后一个八位字节），则定向广播的地址是 192.168.1.255。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">调用 <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> 后返回的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The specified remote endpoint.</source>
          <target state="translated">指定的远程终结点。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>Ends a pending asynchronous receive.</source>
          <target state="translated">结束挂起的异步接收。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>If successful, an array of bytes that contains datagram data.</source>
          <target state="translated">如果成功，则返回包含数据报数据的字节数组。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">此方法受到阻止，直到操作完成。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式执行此操作，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous receive of a server response.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>完成异步接收服务器响应。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">对 <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> 方法的调用未返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated">先前曾为异步读取调用过 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An error occurred when attempting to access the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">尝试访问基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 时出错。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</source>
          <target state="translated">调用 <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph> 后返回的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>Ends a pending asynchronous send.</source>
          <target state="translated">结束挂起的异步发送。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>If successful, the number of bytes sent to the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">如果成功，则返回已发送到 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 的字节数。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">此方法受到阻止，直到操作完成。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式执行此操作，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous send of a server request.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph>以完成服务器请求的异步发送。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">对 <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph> 方法的调用未返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated">先前曾为异步读取调用过 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">尝试访问基础套接字时出错。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指定 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 是否只允许一个客户端使用端口。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 只允许一个客户端使用特定端口，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；在所有其他版本中，默认为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">默认情况下，多个客户端可以使用特定端口，但是，只有一个客户端可以执行网络流量发送到端口的操作。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph>属性以防止多个客户端使用特定端口。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">基础套接字绑定到客户端端口之前，必须设置此属性。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>、 客户端端口绑定为构造函数中，会产生副作用和随后无法设置<ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph>属性</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, and gets and sets the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>，然后获取并设置<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">尝试访问基础套接字时出错。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 添加到多播组。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">要加入的组的多播 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 添加到多播组。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法订阅<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>到使用指定的多播组<ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法，基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>将 Internet 组管理协议 (IGMP) 数据包发送到请求到多播组的成员身份的路由器。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">多播的地址范围是 224.0.0.0 到 239.255.255.255。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果指定的地址在此范围之外，或对其进行请求的路由器不支持多路启用，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>将引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">一次<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>列出使用多播组的成员作为路由器时，它将能够接收发送到指定的多路广播数据报<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</source>
          <target state="translated">你必须创建<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>使用多址广播的端口号; 否则，你将不能接收多路广播数据报。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, or the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will not work.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法之前调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法，或<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法不适用。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">不需要属于要将数据报发送到多播 IP 地址的多播组。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Before joining a multicast group, make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">之前加入多播的组，请确保该套接字绑定到端口或终结点。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</source>
          <target state="translated">通过调用接受一个端口或终结点作为参数的构造函数之一来执行该操作。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">若要停止接收多路广播数据报，调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法并提供<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>从中您是否要退出的组。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>In the IPv6 case, there are several multicast address ranges you can choose from.</source>
          <target state="translated">在 IPv6 情况下，有一些你可以从选择的多个多播的地址范围。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Please, refer to the IETF RFC 2375.</source>
          <target state="translated">请请参阅 IETF RFC 2375。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">不能调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>构造没有的特定本地端口的情况下 (即，使用<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph>或<ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The following code example demonstrates how to join a multicast group by providing a multicast address.</source>
          <target state="translated">下面的代码示例演示如何通过提供多播的地址加入多播的组。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">IP 地址与定义套接字的寻址方案所用的 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值不相符。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The interface index associated with the local IP address on which to join the multicast group.</source>
          <target state="translated">与在其上加入多播组的本地 IP 地址关联的接口索引。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">要加入的组的多播 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 添加到多播组。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Before joining a multicast group, be sure the socket is bound to the port or endpoint.</source>
          <target state="translated">之前加入多播的组，请确保该套接字绑定到端口或终结点。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">你可以调用接受一个端口或终结点作为参数的构造函数之一来执行此操作。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The <ph id="ph1">`infindex`</ph> parameter is used to identify a hardware interface on the same link.</source>
          <target state="translated"><ph id="ph1">`infindex`</ph>参数用于标识的相同链接上的硬件接口。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">有多个多播的地址范围，可供选择。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Refer to the IETF RFC 2375.</source>
          <target state="translated">请参阅 IETF RFC 2375。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated">不能调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>构造没有的特定本地端口的情况下 (即，使用<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph>或<ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to join.</source>
          <target state="translated">要加入的多播组的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The Time to Live (TTL), measured in router hops.</source>
          <target state="translated">生存时间 (TTL)，以路由器跃点数为单位。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group with the specified Time to Live (TTL).</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 添加到具有指定生存时间 (TTL) 的多播组。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法订阅<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>到使用指定的多播组<ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法，基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>将 Internet 组管理协议 (IGMP) 数据包发送到请求到多播组的成员身份的路由器。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">多播的地址范围是 224.0.0.0 到 239.255.255.255。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果指定的地址在此范围之外，或对其进行请求的路由器不支持多路启用，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>将引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`timeToLive`</ph> parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</source>
          <target state="translated"><ph id="ph1">`timeToLive`</ph>参数指定路由器跃点数将被丢弃之前允许对多路广播数据报。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">一次<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>列出使用多播组的成员作为路由器时，它将能够接收发送到指定的多路广播数据报<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</source>
          <target state="translated">你必须创建<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>使用多址广播的端口号否则你将无法接收多路广播数据报。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method or the receive method will not work.</source>
          <target state="translated">不要调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法之前调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法或 receive 方法不起作用。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">不需要属于要将数据报发送到多播 IP 地址的多播组。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Before joining a multicast group make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">加入多播的组之前请确保该套接字绑定到端口或终结点。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do that by calling one of the constructors that accept as parameter a port or an endpoint.</source>
          <target state="translated">通过调用一个端口或终结点接受作为参数的构造函数之一来执行该操作。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">若要停止接收多路广播数据报，调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph>方法并提供<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>从中您是否要退出的组。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">不能调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>构造没有的特定本地端口的情况下 (即，使用<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph>或<ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</source>
          <target state="translated">下面的示例演示如何通过提供两个参数，多播的地址和一个数字，表示在 TTL 加入多播的组。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The TTL provided is not between 0 and 255</source>
          <target state="translated">所提供的 TTL 不在 0 和 255 之间</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">IP 地址与定义套接字的寻址方案所用的 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> 值不相符。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">要加入的组的多播 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The local <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated">本地 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 添加到多播组。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</source>
          <target state="translated">加入多播的组之前，请确保该套接字已经绑定到端口或终结点。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">你可以调用接受一个端口或终结点作为参数的构造函数之一来执行此操作。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">有多个多播的地址范围，可供选择。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can find them in the IETF RFC 2375.</source>
          <target state="translated">你可以在 IETF RFC 2375 找到它们。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">不能调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>构造没有的特定本地端口的情况下 (即，使用<ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph>或<ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph>构造函数)。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether outgoing multicast packets are delivered to the sending application.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值指定是否将输出多播数据包传递给发送应用程序。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> receives outgoing multicast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 接收传出的多路广播数据包，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Multicast is a scalable method for many-to-many communication on the Internet.</source>
          <target state="translated">多路广播是用于在 Internet 上的多对多通信的可扩展方法。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</source>
          <target state="translated">如果进程订阅到多播地址时，任何数据包发送到多播地址已订阅的每个其他进程，接收过程。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the remote host from which the data was sent.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>，它表示从其发送数据的远程主机。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Returns a UDP datagram that was sent by a remote host.</source>
          <target state="translated">返回由远程主机发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains datagram data.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它包含数据报数据。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will block until a datagram arrives from a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法将阻塞，直到从远程主机的数据报到达。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>When data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will read the first enqueued datagram and return the data portion as a byte array.</source>
          <target state="translated">当数据不可用时，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法将读取第一个排队数据报并返回以字节数组形式的数据部分。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>This method populates the <ph id="ph1">`remoteEP`</ph> parameter with the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> and port number of the sender.</source>
          <target state="translated">此方法填充<ph id="ph1">`remoteEP`</ph>参数<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>和发件人的端口号。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will accept datagrams from that host only.</source>
          <target state="translated">如果指定中的默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法将接受来自该主机仅数据报。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">所有其他数据报将被放弃。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">如果你想要接收多路广播数据报，请勿调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法之前调用<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>用于接收数据报必须创建使用多址广播的端口号。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until it receives a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>方法将阻止执行，直至其收到一条消息。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>传递给<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>，显示响应的主机的标识。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns a UDP datagram asynchronously that was sent by a remote host.</source>
          <target state="translated">异步返回由远程主机发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the UDP packet has been received.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; 对象都完成后接收 UDP 数据包。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, this method will accept datagrams from that host only.</source>
          <target state="translated">如果指定中的默认远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法，此方法将接受来自该主机仅数据报。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">所有其他数据报将被放弃。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling this method.</source>
          <target state="translated">如果你想要接收多路广播数据报，请勿调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>之前调用此方法的方法。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>用于接收数据报必须创建使用多址广播的端口号。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">将 UDP 数据报发送到远程主机。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">将 UDP 数据报发送到远程主机。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">已发送的字节数。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and returns the number of bytes sent.</source>
          <target state="translated">此重载将数据报发送到中建立的远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法并返回已发送的字节数。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果不调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>之前调用此重载<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法会引发<ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">如果你想要将数据报发送到不同的远程主机，则必须调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法并指定所需的远程主机。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">使用其他<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法重载，可将数据报发送到广播地址。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>You must establish a default remote host prior to using this overload.</source>
          <target state="translated">你必须建立默认远程主机之前使用此重载。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>，表示要将数据报发送到的主机和端口。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram to the host at the specified remote endpoint.</source>
          <target state="translated">将 UDP 数据报发送到位于指定远程终结点的主机。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes sent.</source>
          <target state="translated">已发送的字节数。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法将数据报发送到指定的终结点，并返回成功发送的字节数。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">之前调用此重载，你必须首先创建<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>使用将向其传递你的数据报的远程主机的 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">你可以将数据报发送到默认广播地址，255.255.255.255，通过指定<ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>为<ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method as the <ph id="ph3">`endPoint`</ph> parameter.</source>
          <target state="translated">创建此后<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>，将其传递到<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法作为<ph id="ph3">`endPoint`</ph>参数。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果你想要将数据报发送到任何其他广播地址，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">你还可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">不提供<ph id="ph1">`endPoint`</ph>此方法如果你已建立与远程主机参数<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果这样做，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法会引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to specify the target host.</source>
          <target state="translated">此示例使用<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>若要指定目标主机。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">要向其发送数据报的远程主机的名称。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">要与之通信的远程端口号。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram to a specified port on a specified remote host.</source>
          <target state="translated">将 UDP 数据报发送到指定远程主机上的指定端口。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">已发送的字节数。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the values specified by the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters and returns the number of bytes successfully sent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法将数据报发送到指定的值<ph id="ph2">`hostname`</ph>和<ph id="ph3">`port`</ph>参数，并返回成功发送的字节数。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">您可以向默认广播地址发送数据报，通过为指定"255.255.255.255"<ph id="ph1">`hostname`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果你想要将数据报发送到任何其他广播地址，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">你还可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">不提供主机名或端口号对此方法，如果你已建立与远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果这样做，<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法会引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This example uses a host name and a port number to identify the target host.</source>
          <target state="translated">此示例使用主机名和端口号来标识目标主机。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">将 UDP 数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">将 UDP 数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">此重载将数据报发送到中建立的远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果不调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>之前调用此重载，该方法将引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">如果你想要将数据报发送到不同的远程主机，则必须调用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法并指定所需的远程主机。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">使用其他<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph>方法重载，可将数据报发送到广播地址。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>，表示要将数据报发送到的主机和端口。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">将 UDP 数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This method sends datagrams to the specified endpoint.</source>
          <target state="translated">此方法将数据报发送到指定的终结点。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">之前调用此重载，你必须首先创建<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>使用将向其传递你的数据报的远程主机的 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">你可以将数据报发送到默认广播地址，255.255.255.255，通过指定<ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>为<ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to this method as the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">创建此后<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>，将其传递给此方法作为<ph id="ph2">`endPoint`</ph>参数。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果你想要将数据报发送到任何其他广播地址，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">你还可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">不提供<ph id="ph1">`endPoint`</ph>此方法如果你已建立与远程主机参数<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">否则，此方法将引发<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">数据报中的字节数。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">要向其发送数据报的远程主机的名称。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">要与之通信的远程端口号。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">将 UDP 数据报异步发送到远程主机。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This method sends datagrams to the values specified by the <ph id="ph1">`hostname`</ph> and <ph id="ph2">`port`</ph> parameters.</source>
          <target state="translated">此方法将数据报发送到指定的值<ph id="ph1">`hostname`</ph>和<ph id="ph2">`port`</ph>参数。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">您可以向默认广播地址发送数据报，通过为指定"255.255.255.255"<ph id="ph1">`hostname`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果你想要将数据报发送到任何其他广播地址，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>，并将套接字选项设置为<ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">你还可以还原到使用<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">不提供主机名或端口号对此方法，如果你已建立与远程主机<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">否则，此方法将引发<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">一旦你已获得此代码，你可以引用的 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已建立默认远程主机。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">获取或设置一个值，它指定由 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> 发送的 Internet 协议 (IP) 数据包的生存时间 (TTL)。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value.</source>
          <target state="translated">TTL 值。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</source>
          <target state="translated">TTL 值指示的路由器数据包可以遍历路由器放弃数据包和 Internet 控制消息协议 (ICMP)"TTL 超出"之前的最大数目的错误消息返回到发件人。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph>属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>