<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="084168d83286cd4ae2fe9807e27baab220ca0c74" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52226882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="da5ce-101">提供用户数据报协议 (UDP) 网络服务。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da5ce-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-102"><xref:System.Net.Sockets.UdpClient>类提供了用于发送和接收无连接的 UDP 数据报中阻止同步模式下的简单方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="da5ce-103">因为 UDP 是无连接传输协议，你不需要建立远程主机连接之前发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="da5ce-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="da5ce-104">但是，执行操作，有以下两种方式之一建立默认远程主机的选项：</span><span class="sxs-lookup"><span data-stu-id="da5ce-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="da5ce-105">创建的实例<xref:System.Net.Sockets.UdpClient>类使用的远程主机名和端口号作为参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="da5ce-106">创建的实例<xref:System.Net.Sockets.UdpClient>类，然后调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="da5ce-107">您可以使用任何中提供的发送方法<xref:System.Net.Sockets.UdpClient>将数据发送到远程设备。</span><span class="sxs-lookup"><span data-stu-id="da5ce-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="da5ce-108">使用<xref:System.Net.Sockets.UdpClient.Receive%2A>方法从远程主机接收数据。</span><span class="sxs-lookup"><span data-stu-id="da5ce-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-109">不要调用<xref:System.Net.Sockets.UdpClient.Send%2A>使用主机名或<xref:System.Net.IPEndPoint>如果已经指定了默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="da5ce-110">如果这样做，<xref:System.Net.Sockets.UdpClient>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="da5ce-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="da5ce-111"><xref:System.Net.Sockets.UdpClient> 方法还允许您发送和接收多播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="da5ce-112">使用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法来订阅<xref:System.Net.Sockets.UdpClient>到多播组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="da5ce-113">使用<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法来取消订阅<xref:System.Net.Sockets.UdpClient>从多播组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-114">下面的示例建立<xref:System.Net.Sockets.UdpClient>11000 端口上使用主机名称 www.contoso.com 的连接。</span><span class="sxs-lookup"><span data-stu-id="da5ce-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="da5ce-115">小字符串消息发送到两个单独的远程主机计算机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="da5ce-116"><xref:System.Net.Sockets.UdpClient.Receive%2A>方法阻止执行，直到收到一条消息。</span><span class="sxs-lookup"><span data-stu-id="da5ce-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="da5ce-117">使用<xref:System.Net.IPEndPoint>传递给<xref:System.Net.Sockets.UdpClient.Receive%2A>，显示响应的主机的标识。</span><span class="sxs-lookup"><span data-stu-id="da5ce-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="da5ce-118">若要建立传出连接，或接受传入的请求。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da5ce-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="da5ce-119">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="da5ce-119">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-120">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-121">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-122">此构造函数创建一个新<xref:System.Net.Sockets.UdpClient>和允许基础服务提供程序分配的最合适的本地 IPv4 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-122">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="da5ce-123">如果使用此构造函数，则<xref:System.Net.Sockets.UdpClient>实例设置不能更改或覆盖与 IPv6 目标的连接方法调用的 IPv4 地址族。</span><span class="sxs-lookup"><span data-stu-id="da5ce-123">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-124">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-124">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-125">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-125">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-126">此构造函数不是适用于加入多播的组，因为它不执行套接字绑定的。</span><span class="sxs-lookup"><span data-stu-id="da5ce-126">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="da5ce-127">此外，它仅适用于 IPv4 地址类型。</span><span class="sxs-lookup"><span data-stu-id="da5ce-127">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-128">下面的示例演示如何使用默认构造函数创建的实例<xref:System.Net.Sockets.UdpClient>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-128">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-129">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-129">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="da5ce-130">要通过其进行通信的本地端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-130">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-131">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将它绑定到所提供的本地端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-132">此构造函数创建基础<xref:System.Net.Sockets.Socket>并将其绑定到你想要进行通信的端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-132">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="da5ce-133">如果您只是想设置本地端口号，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-133">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="da5ce-134">基础服务提供程序将指定本地 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-134">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="da5ce-135">如果将 0 传递给构造函数时，基础服务提供程序将分配一个端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-135">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="da5ce-136">如果使用此构造函数，则<xref:System.Net.Sockets.UdpClient>实例设置不能更改或覆盖与 IPv6 目标的连接方法调用的 IPv4 地址族。</span><span class="sxs-lookup"><span data-stu-id="da5ce-136">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-137">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-137">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-138">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-138">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-139">此构造函数仅适用于 IPv4 地址类型。</span><span class="sxs-lookup"><span data-stu-id="da5ce-139">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-140">下面的示例演示如何使用本地端口号创建的实例<xref:System.Net.Sockets.UdpClient>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-140">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-141">
            <paramref name="port" /> 参数大于 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 或小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-141">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-142">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-142">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="da5ce-143">一个 <see cref="T:System.Net.IPEndPoint" />，表示将 UDP 连接绑定到的本地终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-143">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-144">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将其绑定到指定的本地终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-145">此构造函数创建一个新<xref:System.Net.Sockets.UdpClient>并将其绑定到<xref:System.Net.IPEndPoint>指定的`localEP`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-145">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="da5ce-146">调用此构造函数之前，必须创建<xref:System.Net.IPEndPoint>使用想要发送和接收数据的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-146">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="da5ce-147">不需要指定用于发送和接收数据的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-147">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="da5ce-148">如果不这样做，基础服务提供程序将分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-148">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="da5ce-149">如果使用此构造函数，则<xref:System.Net.Sockets.UdpClient>实例设置与由指定的地址族`localEP`不能更改或覆盖具有不同的地址族的 connect 方法调用的参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-149">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-150">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-151">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-151">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-152">下面的示例演示如何创建的实例<xref:System.Net.Sockets.UdpClient>类使用的本地终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-152">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-153">
            <paramref name="localEP" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-153">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-154">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-154">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="da5ce-155">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一，它指定套接字的寻址方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-155">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-156">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-156">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-157">`family`参数确定侦听器使用 IP 版本 4 地址 (IPv4) 或 IP 版本 6 (IPv6) 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-157">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="da5ce-158">若要使用的 IPv4 地址，请将传递<xref:System.Net.Sockets.AddressFamily.InterNetwork>值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-158">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="da5ce-159">若要使用 IPv6 地址，请将传递<xref:System.Net.Sockets.AddressFamily.InterNetworkV6>值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-159">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="da5ce-160">传递的任何其他值都将导致方法会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-160">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="da5ce-161">如果使用此构造函数，则<xref:System.Net.Sockets.UdpClient>实例设置与由指定的地址族`family`不能更改或覆盖具有不同的地址族的 connect 方法调用的参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-161">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-162">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-162">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-163">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-163">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-164"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>并不适用于加入多播的组，因为它不执行套接字绑定。</span><span class="sxs-lookup"><span data-stu-id="da5ce-164">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-165">
            <paramref name="family" /> 不是 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-165">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-166">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-166">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="da5ce-167">用来侦听传入的连接尝试的端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-167">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="da5ce-168">
            <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一，它指定套接字的寻址方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-168">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-169">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并将它绑定到所提供的本地端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-169">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-170">此构造函数创建基础<xref:System.Net.Sockets.Socket>并将其绑定到你想要进行通信的端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-170">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="da5ce-171">`family`参数确定侦听器使用 IP 版本 4 地址 (IPv4) 或 IP 版本 6 (IPv6) 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-171">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="da5ce-172">若要使用的 IPv4 地址，请将传递<xref:System.Net.Sockets.AddressFamily.InterNetwork>值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-172">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="da5ce-173">若要使用 IPv6 地址，请将传递<xref:System.Net.Sockets.AddressFamily.InterNetworkV6>值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-173">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="da5ce-174">传递的任何其他值都将导致方法会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-174">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="da5ce-175">如果使用此构造函数，则<xref:System.Net.Sockets.UdpClient>实例设置与由指定的地址族`family`不能更改或覆盖具有不同的地址族的 connect 方法调用的参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-175">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-176">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-176">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-177">当你获取此代码时，请参阅[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-177">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-178">下面的代码示例演示如何创建多路广播组中使用的 UDP 客户端。</span><span class="sxs-lookup"><span data-stu-id="da5ce-178">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-179">
            <paramref name="family" /> 不是 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-179">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-180">
            <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 或小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-180">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-181">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-181">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="da5ce-182">要连接到的远程 DNS 主机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-182">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-183">要连接到的远程端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-183">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-184">初始化 <see cref="T:System.Net.Sockets.UdpClient" /> 类的新实例，并建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-184">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-185">此构造函数初始化新<xref:System.Net.Sockets.UdpClient>，并建立远程主机使用`hostname`和`port`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-185">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="da5ce-186">建立默认远程主机是可选的。</span><span class="sxs-lookup"><span data-stu-id="da5ce-186">Establishing a default remote host is optional.</span></span> <span data-ttu-id="da5ce-187">如果使用此构造函数，无需在每次调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-187">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-188">指定默认远程主机限制只能访问该主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-188">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="da5ce-189">可以通过调用在任何时候更改默认远程主机<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-189">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-190">如果想要调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>方法，不要使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-190">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-191">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-191">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-192">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-192">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-193">下面的示例演示如何创建的实例<xref:System.Net.Sockets.UdpClient>类使用主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-193">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-194">
            <paramref name="hostname" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-194">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-195">
            <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-195">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-196">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-196">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-197">获取或设置一个值，该值指示是否已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-197">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-198">如果连接处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-198">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-199">类派生自<xref:System.Net.Sockets.UdpClient>可以使用此属性以确定是否已建立默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-199">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="da5ce-200">您可以通过使用适当的构造函数或调用建立默认远程主机<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-200">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-201">如果执行建立默认远程主机，则不能调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-201">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="da5ce-202">一个布尔值，该值指定是启用还是禁用 NAT 遍历。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-202">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-203">启用或禁用针对 <see cref="T:System.Net.Sockets.UdpClient" /> 实例的网络地址转换 (NAT) 遍历。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-203">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-204"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A>方法用于启用或禁用 NAT 遍历<xref:System.Net.Sockets.UdpClient>实例。</span><span class="sxs-lookup"><span data-stu-id="da5ce-204">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="da5ce-205">可以使用 Teredo、 6to4、 或的 ISATAP 隧道提供 NAT 遍历。</span><span class="sxs-lookup"><span data-stu-id="da5ce-205">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="da5ce-206">当`allowed`参数为 false，<xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>关联的套接字上的选项设置为<xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-206">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="da5ce-207">这将显式禁用 NAT 遍历<xref:System.Net.Sockets.UdpClient>实例。</span><span class="sxs-lookup"><span data-stu-id="da5ce-207">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="da5ce-208">当`allowed`参数为 true，<xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>关联的套接字上的选项设置为<xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-208">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="da5ce-209">这可能使 NAT 遍历<xref:System.Net.Sockets.UdpClient>具体取决于在系统上发生的防火墙规则。</span><span class="sxs-lookup"><span data-stu-id="da5ce-209">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="da5ce-210">Teredo 地址为 IPv6 地址前缀为 2001年:: / 32。</span><span class="sxs-lookup"><span data-stu-id="da5ce-210">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="da5ce-211">Teredo 地址可以是返回通过正常的 DNS 名称解析或枚举为分配给本地接口的 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-211">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-212">获取从网络接收的可读取的数据量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-212">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-213">从网络接收的数据字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-213">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-214"><xref:System.Net.Sockets.UdpClient.Available%2A>属性用于确定在进行读取的网络缓冲区中对排队的数据量。</span><span class="sxs-lookup"><span data-stu-id="da5ce-214">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="da5ce-215">如果数据不可用，则调用<xref:System.Net.Sockets.NetworkStream.Read%2A>来获取的数据。</span><span class="sxs-lookup"><span data-stu-id="da5ce-215">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="da5ce-216">如果没有数据可用，<xref:System.Net.Sockets.UdpClient.Available%2A>属性将返回 0。</span><span class="sxs-lookup"><span data-stu-id="da5ce-216">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="da5ce-217">如果远程主机关闭，或关闭的连接<xref:System.Net.Sockets.UdpClient.Available%2A>属性，则会引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-217">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-218">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定错误代码，并在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档，请参阅[ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)/ 有关的详细说明出现错误。</span><span class="sxs-lookup"><span data-stu-id="da5ce-218">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-219">下面的代码示例演示如何使用<xref:System.Net.Sockets.UdpClient.Available%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-219">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-220">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-220">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-221">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-221">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="da5ce-222">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-222">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="da5ce-223">一个用户定义的对象，其中包含接收操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-223">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="da5ce-224">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-224">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-225">从远程主机异步接收数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-225">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-226">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-226">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-227">异步<xref:System.Net.Sockets.UdpClient.BeginReceive%2A>完成操作，必须通过调用<xref:System.Net.Sockets.UdpClient.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-227">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="da5ce-228">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="da5ce-228">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="da5ce-229">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-229">This method does not block until the operation is complete.</span></span> <span data-ttu-id="da5ce-230">若要阻止，直到完成该操作后，使用<xref:System.Net.Sockets.UdpClient.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-230">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="da5ce-231">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-231">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-232">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginReceive%2A>异步接收服务器响应。</span><span class="sxs-lookup"><span data-stu-id="da5ce-232">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-233">将数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-233">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-234">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-234">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-235">要发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-235">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="da5ce-236">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="da5ce-237">一个用户定义的对象，其中包含该发送操作的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-237">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="da5ce-238">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-238">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-239">将数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-239">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="da5ce-240">先前已通过调用 <see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> 指定目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-240">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-241">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-241">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-242">异步<xref:System.Net.Sockets.UdpClient.BeginSend%2A>完成操作，必须通过调用<xref:System.Net.Sockets.UdpClient.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-242">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="da5ce-243">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="da5ce-243">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="da5ce-244">此方法不会阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="da5ce-244">This method does not block until the operation completes.</span></span> <span data-ttu-id="da5ce-245">若要阻止，直到完成该操作后，使用之一<xref:System.Net.Sockets.UdpClient.Send%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="da5ce-245">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="da5ce-246">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-247">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginSend%2A>以异步方式发送服务器的请求。</span><span class="sxs-lookup"><span data-stu-id="da5ce-247">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-248">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-248">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-249">要发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-249">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="da5ce-250">
            <see cref="T:System.Net.EndPoint" />，它表示数据的目标位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-250">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="da5ce-251">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-251">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="da5ce-252">一个用户定义的对象，其中包含该发送操作的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-252">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="da5ce-253">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-253">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-254">将数据报异步发送到目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-254">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="da5ce-255">目标由 <see cref="T:System.Net.EndPoint" /> 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-255">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-256">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-256">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-257">异步<xref:System.Net.Sockets.UdpClient.BeginSend%2A>完成操作，必须通过调用<xref:System.Net.Sockets.UdpClient.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-257">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="da5ce-258">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="da5ce-258">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="da5ce-259">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-259">This method does not block until the operation is complete.</span></span> <span data-ttu-id="da5ce-260">若要阻止，直到完成该操作后，使用之一<xref:System.Net.Sockets.UdpClient.Send%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="da5ce-260">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="da5ce-261">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-261">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-262">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginSend%2A>以异步方式发送服务器的请求。</span><span class="sxs-lookup"><span data-stu-id="da5ce-262">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-263">一个 <see cref="T:System.Byte" /> 数组，其中包含要发送的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-263">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-264">要发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-264">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="da5ce-265">目标主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-265">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-266">目标端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-266">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="da5ce-267">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-267">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="da5ce-268">一个用户定义的对象，其中包含该发送操作的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-268">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="da5ce-269">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-269">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-270">将数据报异步发送到目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-270">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="da5ce-271">目标由主机名和端口号指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-271">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-272">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步发送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-272">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-273">异步<xref:System.Net.Sockets.UdpClient.BeginSend%2A>完成操作，必须通过调用<xref:System.Net.Sockets.UdpClient.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-273">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="da5ce-274">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="da5ce-274">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="da5ce-275">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-275">This method does not block until the operation is complete.</span></span> <span data-ttu-id="da5ce-276">若要阻止，直到完成该操作后，使用之一<xref:System.Net.Sockets.UdpClient.Send%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="da5ce-276">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="da5ce-277">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-277">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-278">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginSend%2A>以异步方式发送服务器的请求。</span><span class="sxs-lookup"><span data-stu-id="da5ce-278">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-279">获取或设置基础网络 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-279">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-280">基础网络 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-280">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-281"><xref:System.Net.Sockets.UdpClient> 创建<xref:System.Net.Sockets.Socket>用于发送和接收通过网络数据。</span><span class="sxs-lookup"><span data-stu-id="da5ce-281"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="da5ce-282">类派生自<xref:System.Net.Sockets.UdpClient>可以使用此属性获取或设置此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-282">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="da5ce-283">使用基础<xref:System.Net.Sockets.Socket>从返回<xref:System.Net.Sockets.UdpClient.Client%2A>如果你需要访问除此之外的<xref:System.Net.Sockets.UdpClient>提供。</span><span class="sxs-lookup"><span data-stu-id="da5ce-283">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="da5ce-284">此外可以使用<xref:System.Net.Sockets.UdpClient.Client%2A>若要设置的基础<xref:System.Net.Sockets.Socket>到现有<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-284">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="da5ce-285">如果你想要充分利用的简单性这很有用<xref:System.Net.Sockets.UdpClient>使用预先存在的<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-285">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-286">下面的示例演示如何将<xref:System.Net.Sockets.UdpClient.Client%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-286">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="da5ce-287">在此示例中，为基础启用广播<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-287">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-288">关闭 UDP 连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-288">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-289"><xref:System.Net.Sockets.UdpClient.Close%2A>禁用基础<xref:System.Net.Sockets.Socket>并释放与关联的所有托管和非托管资源<xref:System.Net.Sockets.UdpClient>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-289">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-290">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-290">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-291">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-291">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-292">下面的示例演示结束<xref:System.Net.Sockets.UdpClient>通过调用<xref:System.Net.Sockets.UdpClient.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-292">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-293">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-293">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-294">建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-294">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="da5ce-295">一个 <see cref="T:System.Net.IPEndPoint" />，它指定要将数据发送到的网络终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-295">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-296">使用指定的网络终结点建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-296">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-297"><xref:System.Net.Sockets.UdpClient.Connect%2A>方法建立默认远程主机使用中指定的值`endPoint`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-297">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="da5ce-298">一旦建立，无需在每次调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-298">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="da5ce-299">建立默认远程主机是可选的。</span><span class="sxs-lookup"><span data-stu-id="da5ce-299">Establishing a default remote host is optional.</span></span> <span data-ttu-id="da5ce-300">指定默认远程主机限制只能访问该主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-300">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="da5ce-301">如果你想要将数据报发送到不同的远程主机，必须进行再次调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法或创建另一个<xref:System.Net.Sockets.UdpClient>而无需默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-301">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="da5ce-302">如果您已经建立默认远程主机，并且还提供远程主机调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法，<xref:System.Net.Sockets.UdpClient.Send%2A>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-302">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-303">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-303">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-304">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-304">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-305">如果调用<xref:System.Net.Sockets.Socket.Connect%2A>方法，而不将放弃指定的默认发件人地址到达任何数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-305">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="da5ce-306">不能设置为广播地址使用此方法，除非从继承默认远程主机<xref:System.Net.Sockets.UdpClient>，使用客户端方法以获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-306">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="da5ce-307">但是，可以为默认值的广播的数据广播地址，255.255.255.255，如果指定<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-307">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-308">如果你的应用程序需要广播地址的更好地控制，您可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-308">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-309">因为 UDP 协议是无连接、<xref:System.Net.Sockets.UdpClient.Connect%2A>方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="da5ce-309">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="da5ce-310">不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法如果你想要接收多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-310">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-311">下面的示例使用<xref:System.Net.IPEndPoint>建立默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-311">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-312">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-312">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-313">
            <paramref name="endPoint" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-313">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-314">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-314">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="da5ce-315">要将数据发送到的远程主机的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-315">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-316">要将数据发送到的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-316">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-317">使用指定的 IP 地址和端口号建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-317">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-318"><xref:System.Net.Sockets.UdpClient.Connect%2A>方法建立默认远程主机使用中指定的值`addr`和`port`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-318">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="da5ce-319">一旦建立，无需在每次调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-319">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="da5ce-320">建立默认远程主机是可选的。</span><span class="sxs-lookup"><span data-stu-id="da5ce-320">Establishing a default remote host is optional.</span></span> <span data-ttu-id="da5ce-321">指定默认远程主机限制只能访问该主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-321">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="da5ce-322">如果你想要将数据报发送到不同的远程主机，必须进行再次调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法或创建另一个<xref:System.Net.Sockets.UdpClient>而无需默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-322">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="da5ce-323">如果您已经建立默认远程主机，并且还提供远程主机调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法，<xref:System.Net.Sockets.UdpClient.Send%2A>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-323">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-324">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-324">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-325">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-325">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-326">如果调用<xref:System.Net.Sockets.Socket.Connect%2A>方法，而不将放弃指定的默认发件人地址到达任何数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-326">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="da5ce-327">不能设置为广播地址使用此方法，除非从继承默认远程主机<xref:System.Net.Sockets.UdpClient>，使用客户端方法以获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-327">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="da5ce-328">但是，可以为默认值的广播的数据广播地址，255.255.255.255，如果指定<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-328">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-329">如果你的应用程序需要广播地址的更好地控制，您可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-329">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-330">因为 UDP 协议是无连接、<xref:System.Net.Sockets.UdpClient.Connect%2A>方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="da5ce-330">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="da5ce-331">不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法如果你想要接收多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-331">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-332">下面的示例使用 IP 地址和端口号连接与远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-332">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-333">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-333">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-334">
            <paramref name="addr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-334">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-335">
            <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-335">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-336">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-336">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="da5ce-337">要将数据发送到的远程主机的 DNS 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-337">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-338">要将数据发送到的远程主机上的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-338">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-339">使用指定的主机名和端口号建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-339">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-340"><xref:System.Net.Sockets.UdpClient.Connect%2A>方法建立默认远程主机使用中指定的值`port`和`hostname`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-340">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="da5ce-341">一旦建立，无需在每次调用中指定远程主机<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-341">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="da5ce-342">建立默认远程主机是可选的。</span><span class="sxs-lookup"><span data-stu-id="da5ce-342">Establishing a default remote host is optional.</span></span> <span data-ttu-id="da5ce-343">指定默认远程主机限制只能访问该主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-343">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="da5ce-344">如果你想要将数据报发送到不同的远程主机，必须进行再次调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法或创建另一个<xref:System.Net.Sockets.UdpClient>而无需默认远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-344">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="da5ce-345">如果您已经建立默认远程主机，并且还提供远程主机调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法，<xref:System.Net.Sockets.UdpClient.Send%2A>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-345">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-346">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-346">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-347">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-347">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-348">如果调用<xref:System.Net.Sockets.Socket.Connect%2A>方法，而不将放弃指定的默认发件人地址到达任何数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-348">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="da5ce-349">不能设置为广播地址使用此方法，除非从继承默认远程主机<xref:System.Net.Sockets.UdpClient>，使用客户端方法以获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-349">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="da5ce-350">但是，可以为默认值的广播的数据广播地址，255.255.255.255，如果指定<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>调用中<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-350">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-351">如果你的应用程序需要广播地址的更好地控制，您可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-351">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-352">因为 UDP 协议是无连接、<xref:System.Net.Sockets.UdpClient.Connect%2A>方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="da5ce-352">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="da5ce-353">不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法如果你想要接收多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-353">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-354">下面的示例使用要连接到远程主机的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-354">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-355">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-355">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-356">
            <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-356">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-357">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-357">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-358">释放由 <see cref="T:System.Net.Sockets.UdpClient" /> 占用的托管和非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-358">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="da5ce-359">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-359">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-360">释放由 <see cref="T:System.Net.Sockets.UdpClient" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-360">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-361">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-361">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="da5ce-362">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="da5ce-362">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="da5ce-363"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="da5ce-363"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="da5ce-364">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Net.Sockets.UdpClient>的引用。</span><span class="sxs-lookup"><span data-stu-id="da5ce-364">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="da5ce-365">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-365">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="da5ce-366">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da5ce-366">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="da5ce-367">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da5ce-367">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="da5ce-368">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da5ce-368">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="da5ce-369">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da5ce-369">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-370">获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否允许将 Internet 协议 (IP) 数据报分段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-370">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-371">如果 <see cref="T:System.Net.Sockets.UdpClient" /> 允许数据报分段，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-371">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da5ce-372">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-372">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-373">其大小超过最大传输单元 (MTU) 的传输媒体时，数据报要求碎片。</span><span class="sxs-lookup"><span data-stu-id="da5ce-373">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="da5ce-374">数据报发送主机或中间路由器可以对消息分片。</span><span class="sxs-lookup"><span data-stu-id="da5ce-374">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="da5ce-375">如果必须碎片数据报，和<xref:System.Net.Sockets.Socket.DontFragment%2A>选项设置、 数据报将被放弃，并且 Internet 控制消息协议 (ICMP) 错误消息发送回发送方的数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-375">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-376">下面的代码示例演示如何使用<xref:System.Net.Sockets.Socket.DontFragment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-376">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="da5ce-377">只能为使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字设置该属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-377">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-378">退出多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-378">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-379">要退出的多播组的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-379">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-380">退出多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-380">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-381"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法中提取<xref:System.Net.Sockets.UdpClient>标识由指定的多路广播组从<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-381">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="da5ce-382">在调用<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法，基础<xref:System.Net.Sockets.Socket>将 Internet 组管理协议 (IGMP) 数据包发送到路由器，从多播组中删除路由器。</span><span class="sxs-lookup"><span data-stu-id="da5ce-382">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="da5ce-383">之后<xref:System.Net.Sockets.UdpClient>中提取从组中，将不再能够接收数据报发送到该组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-383">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-384">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-384">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-385">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-385">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-386">下面的示例演示如何通过提供多播的地址中删除多路广播的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-386">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-387">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-387">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-388">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-388">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-389">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-389">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-390">
            <paramref name="multicastAddr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-390">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-391">要退出的多播组的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-391">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="da5ce-392">要退出的多播组的本地地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-392">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-393">退出多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-393">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-394"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法中提取<xref:System.Net.Sockets.UdpClient>标识由指定的多路广播组从<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-394">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="da5ce-395">在调用<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法，基础<xref:System.Net.Sockets.Socket>将 Internet 组管理协议 (IGMP) 数据包发送到路由器，从多播组中删除路由器。</span><span class="sxs-lookup"><span data-stu-id="da5ce-395">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="da5ce-396">之后<xref:System.Net.Sockets.UdpClient>中提取从组中，将不再能够接收数据报发送到该组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-396">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-397">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>属性来获取特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-397">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-398">获取此代码后，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-398">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-399">下面的代码示例演示如何通过提供多播的地址中删除多路广播的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-399">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-400">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-400">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-401">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-401">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-402">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-402">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-403">
            <paramref name="multicastAddr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-403">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-404">获取或设置 <see cref="T:System.Boolean" /> 值，该值指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否可以发送或接收广播数据包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-404">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-405">如果 <see cref="T:System.Net.Sockets.UdpClient" /> 允许广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-405">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da5ce-406">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-406">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-407">广播是限于特定子网。</span><span class="sxs-lookup"><span data-stu-id="da5ce-407">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="da5ce-408">您可以通过将数据包发送到 255.255.255.255; 广播到你的本地子网或者，可以使用定向广播的地址，这是使用中的主机部分设置的所有位的 Internet 协议 (IP) 地址的网络部分。</span><span class="sxs-lookup"><span data-stu-id="da5ce-408">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="da5ce-409">例如，如果你的 IP 地址是的 192.168.1.40 （C 类地址，使用的网络部分的前三个八位字节，作为和的主机部分是最后一个八进制数），则定向广播的地址是 192.168.1.255。</span><span class="sxs-lookup"><span data-stu-id="da5ce-409">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-410">下面的代码示例演示如何使用<xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-410">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="da5ce-411">调用 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-411">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="da5ce-412">指定的远程终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-412">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-413">结束挂起的异步接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-413">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-414">如果成功，则返回包含数据报数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-414">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-415">此方法将阻塞，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="da5ce-415">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="da5ce-416">若要以同步方式执行此操作，请使用<xref:System.Net.Sockets.UdpClient.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-416">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-417">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginSend%2A>以完成服务器的响应的异步接收。</span><span class="sxs-lookup"><span data-stu-id="da5ce-417">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-418">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-418">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-419">对 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-419">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-420">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-420">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-421">尝试访问基础 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-421">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-422">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-422">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="da5ce-423">调用 <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-423">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-424">结束挂起的异步发送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-424">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-425">如果成功，则返回已发送到 <see cref="T:System.Net.Sockets.UdpClient" /> 的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-425">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-426">此方法将阻塞，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="da5ce-426">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="da5ce-427">若要以同步方式执行此操作，请使用<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-427">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-428">下面的代码示例使用<xref:System.Net.Sockets.UdpClient.BeginSend%2A>以完成服务器请求的异步发送。</span><span class="sxs-lookup"><span data-stu-id="da5ce-428">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-429">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-429">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-430">对 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的调用未返回 <paramref name="asyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-430">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-431">先前曾为异步读取调用过 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-431">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-432">尝试访问基础套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-432">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-433">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-433">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-434">获取或设置 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.UdpClient" /> 是否只允许一个客户端使用端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-434">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-435">如果 <see cref="T:System.Net.Sockets.UdpClient" /> 只允许一个客户端使用特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-435">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da5ce-436">在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-436">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-437">默认情况下，多个客户端可以使用特定端口，但是，只有一个客户端可以执行对发送到端口的网络流量的操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-437">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="da5ce-438">可以使用<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>属性可防止多个客户端使用特定端口。</span><span class="sxs-lookup"><span data-stu-id="da5ce-438">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="da5ce-439">基础套接字绑定到客户端端口之前，必须设置此属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-439">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="da5ce-440">如果您调用<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>， <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>， <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>，或<xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>，该客户端端口绑定的构造函数中，产生了负面影响，并随后不能设置<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>属性</span><span class="sxs-lookup"><span data-stu-id="da5ce-440">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-441">下面的代码示例将创建<xref:System.Net.Sockets.UdpClient>，并获取和设置<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-441">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-442">尝试访问基础套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-442">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-443">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-443">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-444">将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-444">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-445">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-445">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-446">将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-446">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-447"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法订阅<xref:System.Net.Sockets.UdpClient>到使用指定的多路广播组<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-447">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="da5ce-448">在调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法，基础<xref:System.Net.Sockets.Socket>将 Internet 组管理协议 (IGMP) 数据包发送到路由器请求多路广播组的成员身份。</span><span class="sxs-lookup"><span data-stu-id="da5ce-448">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="da5ce-449">多播的地址范围为 224.0.0.0 到 239.255.255.255 之间。</span><span class="sxs-lookup"><span data-stu-id="da5ce-449">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="da5ce-450">如果指定的地址在此范围之外或在请求发出的路由器不支持多路启用，<xref:System.Net.Sockets.UdpClient>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-450">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-451">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-452">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-452">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="da5ce-453">一次<xref:System.Net.Sockets.UdpClient>列出与多路广播组的成员作为路由器，它将能够接收多路广播数据报发送到指定<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-453">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-454">必须创建<xref:System.Net.Sockets.UdpClient>使用多播的端口号; 否则，你将不能接收多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-454">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="da5ce-455">不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法之前调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法，或<xref:System.Net.Sockets.UdpClient.Receive%2A>方法将不起作用。</span><span class="sxs-lookup"><span data-stu-id="da5ce-455">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="da5ce-456">不需要属于多路广播组以将数据报发送到多播 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-456">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="da5ce-457">之前加入多播的组，请确保套接字绑定到端口或终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-457">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="da5ce-458">通过调用接受一个端口或终结点作为参数的构造函数之一来执行该操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-458">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="da5ce-459">若要停止接收多路广播数据报，调用<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法，并提供<xref:System.Net.IPAddress>要从其退出的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-459">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-460">在 IPv6 的情况下，有一些您可以从选择的多个多播的地址范围。</span><span class="sxs-lookup"><span data-stu-id="da5ce-460">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="da5ce-461">请参阅 IETF RFC 2375。</span><span class="sxs-lookup"><span data-stu-id="da5ce-461">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-462">不能调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>上<xref:System.Net.Sockets.UdpClient>构造没有特定本地端口的情况下 (即，使用<xref:System.Net.Sockets.UdpClient.%23ctor>或<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>构造函数)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-462">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-463">下面的代码示例演示如何通过提供多播的地址加入多播的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-463">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-464">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-464">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-465">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-465">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-466">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-466">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="da5ce-467">与在其上加入多播组的本地 IP 地址关联的接口索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-467">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-468">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-468">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-469">将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-469">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-470">在加入多播的组之前, 请确保套接字绑定到端口或终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-470">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="da5ce-471">可以通过调用接受一个端口或终结点作为参数的构造函数之一来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-471">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="da5ce-472">`infindex`参数用于标识的同一链接上的硬件接口。</span><span class="sxs-lookup"><span data-stu-id="da5ce-472">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-473">有多个多播的地址范围，可供选择。</span><span class="sxs-lookup"><span data-stu-id="da5ce-473">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="da5ce-474">请参阅 IETF RFC 2375。</span><span class="sxs-lookup"><span data-stu-id="da5ce-474">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-475">不能调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>上<xref:System.Net.Sockets.UdpClient>构造没有特定本地端口的情况下 (即，使用<xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType>或<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>构造函数)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-475">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-476">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-476">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-477">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-477">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-478">要加入的多播组的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-478">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="da5ce-479">生存时间 (TTL)，以路由器跃点数为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-479">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-480">将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到具有指定生存时间 (TTL) 的多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-480">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-481"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法订阅<xref:System.Net.Sockets.UdpClient>到使用指定的多路广播组<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-481">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="da5ce-482">在调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法，基础<xref:System.Net.Sockets.Socket>将 Internet 组管理协议 (IGMP) 数据包发送到路由器请求多路广播组的成员身份。</span><span class="sxs-lookup"><span data-stu-id="da5ce-482">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="da5ce-483">多播的地址范围为 224.0.0.0 到 239.255.255.255 之间。</span><span class="sxs-lookup"><span data-stu-id="da5ce-483">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="da5ce-484">如果指定的地址在此范围之外或在请求发出的路由器不支持多路启用，<xref:System.Net.Sockets.UdpClient>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-484">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-485">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-485">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-486">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-486">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="da5ce-487">`timeToLive`参数指定路由器跃点数将放弃前允许进行多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-487">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="da5ce-488">一次<xref:System.Net.Sockets.UdpClient>列出与多路广播组的成员作为路由器，它将能够接收多路广播数据报发送到指定<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-488">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-489">必须创建<xref:System.Net.Sockets.UdpClient>使用多播的端口号否则你将无法接收多路广播数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-489">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="da5ce-490">不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法之前调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法或 receive 方法将无法工作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-490">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="da5ce-491">不需要属于多路广播组以将数据报发送到多播 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-491">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="da5ce-492">加入多播的组之前请确保套接字绑定到端口或终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-492">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="da5ce-493">通过调用一个端口或终结点接受作为参数的构造函数之一来执行该操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-493">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="da5ce-494">若要停止接收多路广播数据报，调用<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>方法，并提供<xref:System.Net.IPAddress>要从其退出的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-494">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-495">不能调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>上<xref:System.Net.Sockets.UdpClient>构造没有特定本地端口的情况下 (即，使用<xref:System.Net.Sockets.UdpClient.%23ctor>或<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>构造函数)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-495">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-496">下面的示例演示如何通过提供两个参数，多播的地址和一个数字，表示 TTL 联接多播的组。</span><span class="sxs-lookup"><span data-stu-id="da5ce-496">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da5ce-497">所提供的 TTL 不在 0 和 255 之间</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-497">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-498">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-498">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-499">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-499">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-500">
            <paramref name="multicastAddr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-500">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da5ce-501">IP 地址与定义套接字的寻址方案所用的 <see cref="T:System.Net.Sockets.AddressFamily" /> 值不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-501">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="da5ce-502">要加入的组的多播 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-502">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="da5ce-503">本地 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-503">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-504">将 <see cref="T:System.Net.Sockets.UdpClient" /> 添加到多播组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-504">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-505">加入多播的组之前，请务必套接字绑定到端口或终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-505">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="da5ce-506">可以通过调用接受一个端口或终结点作为参数的构造函数之一来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-506">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-507">有多个多播的地址范围，可供选择。</span><span class="sxs-lookup"><span data-stu-id="da5ce-507">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="da5ce-508">您可以在 IETF RFC 2375 中找到它们。</span><span class="sxs-lookup"><span data-stu-id="da5ce-508">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-509">不能调用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>上<xref:System.Net.Sockets.UdpClient>构造没有特定本地端口的情况下 (即，使用<xref:System.Net.Sockets.UdpClient.%23ctor>或<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>构造函数)。</span><span class="sxs-lookup"><span data-stu-id="da5ce-509">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-510">下面的代码示例演示如何使用<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-510">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-511">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-511">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-512">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-512">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-513">获取或设置 <see cref="T:System.Boolean" /> 值，该值指定是否将输出多播数据包传递给发送应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-513">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-514">如果 <see cref="T:System.Net.Sockets.UdpClient" /> 接收传出的多路广播数据包，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-514">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-515">多播是在 Internet 上的多对多通信的可缩放方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-515">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="da5ce-516">如果一个过程订阅的多播地址，任何发送数据包的进程会接收到已订阅的多播地址的每个其他进程。</span><span class="sxs-lookup"><span data-stu-id="da5ce-516">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-517">下面的代码示例演示如何使用<xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-517">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="da5ce-518">一个 <see cref="T:System.Net.IPEndPoint" />，它表示从其发送数据的远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-518">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-519">返回由远程主机发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-519">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-520">一个 <see cref="T:System.Byte" /> 类型的数组，它包含数据报数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-520">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-521"><xref:System.Net.Sockets.UdpClient.Receive%2A>方法会阻塞，直到数据报到达从远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-521">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="da5ce-522">数据不可用，<xref:System.Net.Sockets.UdpClient.Receive%2A>方法会读取第一个排队数据报并返回字节数组形式的数据部分。</span><span class="sxs-lookup"><span data-stu-id="da5ce-522">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="da5ce-523">此方法填充`remoteEP`参数与<xref:System.Net.IPAddress>和发件人的端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-523">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="da5ce-524">如果指定中的默认远程主机<xref:System.Net.Sockets.UdpClient.Connect%2A>方法，<xref:System.Net.Sockets.UdpClient.Receive%2A>方法将接受该主机仅从数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-524">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="da5ce-525">将丢弃所有其他数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-525">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="da5ce-526">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-526">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-527">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-527">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-528">如果你想要接收多路广播数据报，不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法之前调用<xref:System.Net.Sockets.UdpClient.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-528">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="da5ce-529"><xref:System.Net.Sockets.UdpClient>用于接收数据报必须在创建使用多路广播的端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-529">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-530">下面的示例演示<xref:System.Net.Sockets.UdpClient.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-530">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="da5ce-531"><xref:System.Net.Sockets.UdpClient.Receive%2A>方法阻止执行，直到收到一条消息。</span><span class="sxs-lookup"><span data-stu-id="da5ce-531">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="da5ce-532">使用<xref:System.Net.IPEndPoint>传递给<xref:System.Net.Sockets.UdpClient.Receive%2A>，显示响应的主机的标识。</span><span class="sxs-lookup"><span data-stu-id="da5ce-532">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-533">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-533">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-534">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-534">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-535">异步返回由远程主机发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-535">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-536">返回 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-536">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="da5ce-537">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-537">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-538">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="da5ce-538">This operation will not block.</span></span> <span data-ttu-id="da5ce-539">返回<xref:System.Threading.Tasks.Task%601>> 对象将完成后接收 UDP 数据包。</span><span class="sxs-lookup"><span data-stu-id="da5ce-539">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="da5ce-540">如果指定默认远程主机中的<xref:System.Net.Sockets.UdpClient.Connect%2A>方法，此方法将接受该主机仅从数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-540">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="da5ce-541">将丢弃所有其他数据报。</span><span class="sxs-lookup"><span data-stu-id="da5ce-541">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="da5ce-542">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-542">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-543">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-543">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="da5ce-544">如果你想要接收多路广播数据报，不要调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-544">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="da5ce-545"><xref:System.Net.Sockets.UdpClient>用于接收数据报必须在创建使用多路广播的端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-545">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-546">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-546">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-547">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-547">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-548">将 UDP 数据报发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-548">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="da5ce-549">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-549">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-550">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-550">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-551">将 UDP 数据报发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-551">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-552">已发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-552">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-553">此重载将数据报发送到远程主机中建立<xref:System.Net.Sockets.UdpClient.Connect%2A>方法，并返回发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-553">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="da5ce-554">如果不调用<xref:System.Net.Sockets.UdpClient.Connect%2A>之前调用此重载<xref:System.Net.Sockets.UdpClient.Send%2A>方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-554">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-555">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-555">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-556">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-556">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-557">如果你想要将数据报发送到不同的远程主机，则必须调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法并指定所需的远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-557">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="da5ce-558">使用其他<xref:System.Net.Sockets.UdpClient.Send%2A>方法重载，可将数据报发送到广播地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-558">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-559">下面的示例演示<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-559">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-560">必须建立默认远程主机之前使用此重载。</span><span class="sxs-lookup"><span data-stu-id="da5ce-560">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-561">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-561">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-562">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-562">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-563">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-563">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-564">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-564">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="da5ce-565">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-565">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-566">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-566">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="da5ce-567">一个 <see cref="T:System.Net.IPEndPoint" />，表示要将数据报发送到的主机和端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-567">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-568">将 UDP 数据报发送到位于指定远程终结点的主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-568">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-569">已发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-569">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-570"><xref:System.Net.Sockets.UdpClient.Send%2A>方法将数据报发送到指定终结点，并返回已成功发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-570">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="da5ce-571">之前调用此重载，您必须首先创建<xref:System.Net.IPEndPoint>使用将向其传递你的数据报的远程主机的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-571">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="da5ce-572">可以将数据报发送到默认广播地址，255.255.255.255，通过指定<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>有关<xref:System.Net.IPAddress.Address%2A>属性的<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-572">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="da5ce-573">创建这之后<xref:System.Net.IPEndPoint>，将其传递给<xref:System.Net.Sockets.UdpClient.Send%2A>方法作为`endPoint`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-573">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="da5ce-574">如果你想要将数据报发送到任何其他广播地址，使用<xref:System.Net.Sockets.UdpClient.Client%2A>方法来获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-574">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="da5ce-575">此外可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-575">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-576">未提供`endPoint`此方法，如果您已建立与远程主机参数<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-576">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-577">如果这样做，<xref:System.Net.Sockets.UdpClient.Send%2A>方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-577">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-578">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-578">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-579">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-579">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-580">下面的示例演示<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-580">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-581">此示例使用<xref:System.Net.IPEndPoint>来指定目标主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-581">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-582">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-582">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-583">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-583">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-584">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-584">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-585">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-585">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="da5ce-586">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-586">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-587">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-587">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="da5ce-588">要向其发送数据报的远程主机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-588">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-589">要与之通信的远程端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-589">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-590">将 UDP 数据报发送到指定远程主机上的指定端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-590">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-591">已发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-591">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-592"><xref:System.Net.Sockets.UdpClient.Send%2A>方法将数据报发送到指定的值来`hostname`和`port`参数，并返回已成功发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-592">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="da5ce-593">可以向默认广播地址发送数据报，通过为指定"255.255.255.255"`hostname`参数值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-593">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="da5ce-594">如果你想要将数据报发送到任何其他广播地址，使用<xref:System.Net.Sockets.UdpClient.Client%2A>方法来获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-594">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="da5ce-595">此外可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-595">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da5ce-596">不提供主机名或端口号对此方法，如果您已建立与远程主机<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-596">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-597">如果这样做，<xref:System.Net.Sockets.UdpClient.Send%2A>方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-597">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-598">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-598">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-599">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-599">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-600">下面的示例演示<xref:System.Net.Sockets.UdpClient.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-600">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="da5ce-601">此示例使用主机名和端口号来标识目标主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-601">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-602">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-602">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-603">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-603">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-604">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-604">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-605">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-605">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-606">将 UDP 数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-606">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-607">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-607">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-608">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-608">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-609">将 UDP 数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-609">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-610">返回 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-610">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-611">此重载将数据报发送到远程主机中建立<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-611">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-612">如果不调用<xref:System.Net.Sockets.UdpClient.Connect%2A>之前调用此重载，该方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-612">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-613">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-613">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-614">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-614">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="da5ce-615">如果你想要将数据报发送到不同的远程主机，则必须调用<xref:System.Net.Sockets.UdpClient.Connect%2A>方法并指定所需的远程主机。</span><span class="sxs-lookup"><span data-stu-id="da5ce-615">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="da5ce-616">使用其他<xref:System.Net.Sockets.UdpClient.SendAsync%2A>方法重载，可将数据报发送到广播地址。</span><span class="sxs-lookup"><span data-stu-id="da5ce-616">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-617">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-617">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-618">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-618">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-619">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-619">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-620">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-620">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-621">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-621">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-622">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-622">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="da5ce-623">一个 <see cref="T:System.Net.IPEndPoint" />，表示要将数据报发送到的主机和端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-623">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-624">将 UDP 数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-624">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-625">返回 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-625">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-626">此方法将数据报发送到指定终结点。</span><span class="sxs-lookup"><span data-stu-id="da5ce-626">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="da5ce-627">之前调用此重载，您必须首先创建<xref:System.Net.IPEndPoint>使用将向其传递你的数据报的远程主机的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="da5ce-627">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="da5ce-628">可以将数据报发送到默认广播地址，255.255.255.255，通过指定<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>有关<xref:System.Net.IPAddress.Address%2A>属性的<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-628">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="da5ce-629">创建这之后<xref:System.Net.IPEndPoint>，将其传递给此方法作为`endPoint`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-629">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="da5ce-630">如果你想要将数据报发送到任何其他广播地址，使用<xref:System.Net.Sockets.UdpClient.Client%2A>方法来获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-630">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="da5ce-631">此外可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-631">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="da5ce-632">未提供`endPoint`此方法，如果您已建立与远程主机参数<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-632">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-633">否则，此方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-633">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-634">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-634">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-635">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-635">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-636">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-636">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-637">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-637">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-638">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-638">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-639">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-639">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="da5ce-640">一个 <see cref="T:System.Byte" /> 类型的数组，它指定你打算以字节数组形式发送的 UDP 数据报。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-640">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="da5ce-641">数据报中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-641">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="da5ce-642">要向其发送数据报的远程主机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-642">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="da5ce-643">要与之通信的远程端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-643">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da5ce-644">将 UDP 数据报异步发送到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-644">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da5ce-645">返回 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-645">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-646">此方法将数据报发送到指定的值`hostname`和`port`参数。</span><span class="sxs-lookup"><span data-stu-id="da5ce-646">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="da5ce-647">可以向默认广播地址发送数据报，通过为指定"255.255.255.255"`hostname`参数值。</span><span class="sxs-lookup"><span data-stu-id="da5ce-647">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="da5ce-648">如果你想要将数据报发送到任何其他广播地址，使用<xref:System.Net.Sockets.UdpClient.Client%2A>方法来获取基础<xref:System.Net.Sockets.Socket>，并将套接字选项设置为<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-648">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="da5ce-649">此外可以恢复为使用<xref:System.Net.Sockets.Socket>类。</span><span class="sxs-lookup"><span data-stu-id="da5ce-649">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="da5ce-650">不提供主机名或端口号对此方法，如果您已建立与远程主机<xref:System.Net.Sockets.UdpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da5ce-650">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="da5ce-651">否则，此方法将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="da5ce-651">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="da5ce-652">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>若要获取特定的错误代码。</span><span class="sxs-lookup"><span data-stu-id="da5ce-652">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="da5ce-653">一旦您获取此代码，可以参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)有关错误的详细说明的文档。</span><span class="sxs-lookup"><span data-stu-id="da5ce-653">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da5ce-654">
            <paramref name="dgram" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-654">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da5ce-655">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已建立默认远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-655">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da5ce-656">
            <see cref="T:System.Net.Sockets.UdpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-656">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="da5ce-657">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-657">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da5ce-658">获取或设置一个值，它指定由 <see cref="T:System.Net.Sockets.UdpClient" /> 发送的 Internet 协议 (IP) 数据包的生存时间 (TTL)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-658">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da5ce-659">TTL 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da5ce-659">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da5ce-660">TTL 值指示的路由器数据包可以遍历路由器会丢弃该数据包和 Internet 控制消息协议 (ICMP)"超出 TTL"之前的最大数目的错误信息返回到发件人。</span><span class="sxs-lookup"><span data-stu-id="da5ce-660">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da5ce-661">下面的代码示例演示如何使用<xref:System.Net.Sockets.UdpClient.Ttl%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="da5ce-661">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>