<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0617f3253c45e970eb3408a8b62c2e5643337219" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37476488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <TypeSignature Language="F#" Value="type SocketType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="acb5b-101">指定 <see cref="T:System.Net.Sockets.Socket" /> 类的实例表示的套接字类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="acb5b-101">Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acb5b-102">之前<xref:System.Net.Sockets.Socket>可以发送和接收数据，则必须首先使用来创建<xref:System.Net.Sockets.AddressFamily>即<xref:System.Net.Sockets.SocketType>，和一个<xref:System.Net.Sockets.ProtocolType>。</span><span class="sxs-lookup"><span data-stu-id="acb5b-102">Before a <xref:System.Net.Sockets.Socket> can send and receive data, it must first be created using an <xref:System.Net.Sockets.AddressFamily>, a <xref:System.Net.Sockets.SocketType>, and a <xref:System.Net.Sockets.ProtocolType>.</span></span> <span data-ttu-id="acb5b-103"><xref:System.Net.Sockets.SocketType>枚举提供若干选项用于定义类型的<xref:System.Net.Sockets.Socket>想要打开。</span><span class="sxs-lookup"><span data-stu-id="acb5b-103">The <xref:System.Net.Sockets.SocketType> enumeration provides several options for defining the type of <xref:System.Net.Sockets.Socket> that you intend to open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="acb5b-104"><xref:System.Net.Sockets.SocketType> 有时隐式指示这<xref:System.Net.Sockets.ProtocolType>中使用<xref:System.Net.Sockets.AddressFamily>。</span><span class="sxs-lookup"><span data-stu-id="acb5b-104"><xref:System.Net.Sockets.SocketType> sometimes implicitly indicates which <xref:System.Net.Sockets.ProtocolType> is used within an <xref:System.Net.Sockets.AddressFamily>.</span></span> <span data-ttu-id="acb5b-105">例如，当<xref:System.Net.Sockets.SocketType?displayProperty=nameWithType>是<xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>，则<xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType>始终<xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="acb5b-105">For example, when the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="acb5b-106">当<xref:System.Net.Sockets.SocketType?displayProperty=nameWithType>是<xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>，则<xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType>始终<xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="acb5b-106">When the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="acb5b-107">如果你尝试创建<xref:System.Net.Sockets.Socket>不兼容结合<xref:System.Net.Sockets.Socket>引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="acb5b-107">If you try to create a <xref:System.Net.Sockets.Socket> with an incompatible combination, <xref:System.Net.Sockets.Socket> throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acb5b-108">下面的示例使用<xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>作为参数<xref:System.Net.Sockets.Socket>构造函数。</span><span class="sxs-lookup"><span data-stu-id="acb5b-108">The following example uses <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> as a parameter to the <xref:System.Net.Sockets.Socket> constructor.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberSignature Language="F#" Value="Dgram = 2" Usage="System.Net.Sockets.SocketType.Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-109">支持数据报，即最大长度固定（通常很小）的无连接、不可靠消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-109">Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length.</span>
          </span>
          <span data-ttu-id="acb5b-110">消息可能会丢失或重复并可能在到达时不按顺序排列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-110">Messages might be lost or duplicated and might arrive out of order.</span>
          </span>
          <span data-ttu-id="acb5b-111">
            <see cref="T:System.Net.Sockets.Socket" /> 类型的 <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 在发送和接收数据之前不需要任何连接，并且可以与多个对方主机进行通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-111">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers.</span>
          </span>
          <span data-ttu-id="acb5b-112">
            <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 使用数据报协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) 和 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-112">
              <see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="acb5b-113">地址族。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-113">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberSignature Language="F#" Value="Raw = 3" Usage="System.Net.Sockets.SocketType.Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-114">支持对基础传输协议的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-114">Supports access to the underlying transport protocol.</span>
          </span>
          <span data-ttu-id="acb5b-115">通过使用 <see cref="F:System.Net.Sockets.SocketType.Raw" />，可以使用 Internet 控制消息协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) 和 Internet 组管理协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) 这样的协议来进行通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-115">Using <see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span>
          </span>
          <span data-ttu-id="acb5b-116">在发送时，您的应用程序必须提供完整的 IP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-116">Your application must provide a complete IP header when sending.</span>
          </span>
          <span data-ttu-id="acb5b-117">所接收的数据报在返回时会保持其 IP 标头和选项不变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-117">Received datagrams return with the IP header and options intact.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberSignature Language="F#" Value="Rdm = 4" Usage="System.Net.Sockets.SocketType.Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-118">支持无连接、面向消息、以可靠方式发送的消息，并保留数据中的消息边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-118">Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data.</span>
          </span>
          <span data-ttu-id="acb5b-119">RDM（以可靠方式发送的消息）消息会依次到达，不会重复。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-119">Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order.</span>
          </span>
          <span data-ttu-id="acb5b-120">此外，如果消息丢失，将会通知发送方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-120">Furthermore, the sender is notified if messages are lost.</span>
          </span>
          <span data-ttu-id="acb5b-121">如果使用 <see cref="F:System.Net.Sockets.SocketType.Rdm" /> 初始化 <see cref="T:System.Net.Sockets.Socket" />，则在发送和接收数据之前无需建立远程主机连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-121">If you initialize a <see cref="T:System.Net.Sockets.Socket" /> using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data.</span>
          </span>
          <span data-ttu-id="acb5b-122">利用 <see cref="F:System.Net.Sockets.SocketType.Rdm" />，您可以与多个对方主机进行通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-122">With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberSignature Language="F#" Value="Seqpacket = 5" Usage="System.Net.Sockets.SocketType.Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-123">在网络上提供排序字节流的面向连接且可靠的双向传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-123">Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network.</span>
          </span>
          <span data-ttu-id="acb5b-124">
            <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 不重复数据，它在数据流中保留边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-124">
              <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream.</span>
          </span>
          <span data-ttu-id="acb5b-125">
            <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 类型的 <see cref="T:System.Net.Sockets.Socket" /> 与单个对方主机通信，并且在通信开始之前需要建立远程主机连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-125">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberSignature Language="F#" Value="Stream = 1" Usage="System.Net.Sockets.SocketType.Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-126">支持可靠、双向、基于连接的字节流，而不重复数据，也不保留边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-126">Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries.</span>
          </span>
          <span data-ttu-id="acb5b-127">此类型的 <see cref="T:System.Net.Sockets.Socket" /> 与单个对方主机通信，并且在通信开始之前需要建立远程主机连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-127">A <see cref="T:System.Net.Sockets.Socket" /> of this type communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
          <span data-ttu-id="acb5b-128">
            <see cref="F:System.Net.Sockets.SocketType.Stream" /> 使用传输控制协议 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) 和 <see langword="AddressFamily" />。<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-128">
              <see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="acb5b-129">地址族。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-129">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = -1" Usage="System.Net.Sockets.SocketType.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="acb5b-130">指定未知的 <see cref="T:System.Net.Sockets.Socket" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acb5b-130">Specifies an unknown <see cref="T:System.Net.Sockets.Socket" /> type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>