<Type Name="SendPacketsElement" FullName="System.Net.Sockets.SendPacketsElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1c0c3a7f4a18235bf9e80ba34c1c33764c061e8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643888" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendPacketsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendPacketsElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SendPacketsElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SendPacketsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendPacketsElement" />
  <TypeSignature Language="F#" Value="type SendPacketsElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 数组中的一个元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类用于增强<xref:System.Net.Sockets.Socket>类以供使用异步网络 I/O 实现最高性能的服务器应用程序使用。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
    </remarks>
    <threadsafe>此类的实例都是线程安全。</threadsafe>
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <summary>使用指定的缓冲区初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类使用字节数组的数据。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> 参数不能为 null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement filepath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <summary>使用指定的文件初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类文件的文件名。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 通过支持通用命名约定 (UNC) 路径`filepath`参数。 如果文件是当前工作目录中，不需要指定任何路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filepath" /> 参数不能为 null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <c>buffer</c> 的起始位置与 <c>buffer</c> 中开始发送 <c>buffer</c> 参数中指定数据的位置之间的偏移。</param>
        <param name="count">从 <c>offset</c> 参数开始发送的字节数。 如果 <c>count</c> 为零，则不发送任何字节。</param>
        <summary>使用指定的缓冲区、缓冲区偏移量和计数初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类使用字节数组的数据。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  <paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <c>filepath</c> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <c>offset</c> 参数开始发送的字节数。 如果 <c>count</c> 为零，则发送整个文件。</param>
        <summary>使用指定的文件名路径、偏移量和计数初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类文件的文件名。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 通过支持通用命名约定 (UNC) 路径`filepath`参数。 如果文件是当前工作目录中，不需要指定任何路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filepath" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  <paramref name="offset" /> 和 <paramref name="count" /> 必须小于 <paramref name="filepath" /> 参数表示的文件的大小。</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <c>buffer</c> 的起始位置与 <c>buffer</c> 中开始发送 <c>buffer</c> 参数中指定数据的位置之间的偏移。</param>
        <param name="count">从 <c>offset</c> 参数开始发送的字节数。 如果 <c>count</c> 为零，则不发送任何字节。</param>
        <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的缓冲区、缓冲区偏移量和计数，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类使用字节数组的数据。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  <paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <c>filepath</c> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <c>offset</c> 参数开始发送的字节数。 如果 <c>count</c> 为零，则发送整个文件。</param>
        <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的文件名路径、缓冲区偏移量和计数，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%29>构造函数初始化的新实例<xref:System.Net.Sockets.SendPacketsElement>类文件的文件名。 <xref:System.Net.Sockets.SendPacketsElement>类用于<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>属性来获取或设置数据缓冲区或文件发送使用<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。  
  
 通过支持通用命名约定 (UNC) 路径`filepath`参数。 如果文件是当前工作目录中，不需要指定任何路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filepath" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  <paramref name="offset" /> 和 <paramref name="count" /> 必须小于 <paramref name="filepath" /> 参数表示的文件的大小。</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="buffer" /> 参数初始化的情况下发送的缓冲区。</summary>
        <value>在使用 <paramref name="buffer" /> 参数初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的情况下发送的字节缓冲区。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为<xref:System.Net.Sockets.SendPacketsElement.Buffer%2A>属性是一个零长度数组，如果<xref:System.Net.Sockets.SendPacketsElement>类不使用初始化`buffer`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SendPacketsElement.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要发送的字节的计数。</summary>
        <value>在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="count" /> 参数初始化的情况下发送的字节计数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为<xref:System.Net.Sockets.SendPacketsElement.Count%2A>属性是为零<xref:System.Net.Sockets.SendPacketsElement>类不使用初始化`count`参数。  
  
 如果<xref:System.Net.Sockets.SendPacketsElement.Count%2A>为零的文件发送整个文件。 如果<xref:System.Net.Sockets.SendPacketsElement.Count%2A>为零的缓冲区，不发送任何字节。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfPacket">
      <MemberSignature Language="C#" Value="public bool EndOfPacket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfPacket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfPacket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfPacket { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfPacket : bool" Usage="System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个布尔值，该值指示此元素是否不应与从套接字层到传输层的单一发送请求中的下一个元素合并。</summary>
        <value>一个布尔值，该值指示此元素是否不应当与单一发送请求中的下一个元素合并。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为<xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A>属性为 false 如果<xref:System.Net.Sockets.SendPacketsElement>类不使用初始化`endOfPacket`参数设置为 true。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="filepath" /> 参数初始化的情况下发送的文件的文件名。</summary>
        <value>在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="filepath" /> 参数初始化的情况下发送的文件的文件名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过支持通用命名约定 (UNC) 路径<xref:System.Net.Sockets.SendPacketsElement.FilePath%2A>属性。 如果文件是当前工作目录中，不需要指定任何路径信息。  
  
 默认值为<xref:System.Net.Sockets.SendPacketsElement.FilePath%2A>属性为空字符串，如果<xref:System.Net.Sockets.SendPacketsElement>类不使用初始化`filepath`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</summary>
        <value>以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为<xref:System.Net.Sockets.SendPacketsElement.Offset%2A>属性是为零<xref:System.Net.Sockets.SendPacketsElement>类不使用初始化`offset`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>