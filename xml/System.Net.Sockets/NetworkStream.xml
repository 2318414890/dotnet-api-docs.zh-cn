<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f9b3287ea8eafb8d3d2d9f207429a0f3d86eb49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eb846-101">为网络访问提供数据的基础流。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb846-101">Provides the underlying stream of data for network access.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-102"><xref:System.Net.Sockets.NetworkStream>类提供用于通过发送和接收数据的方法<xref:System.Net.Sockets.SocketType.Stream>中阻止模式套接字。</span><span class="sxs-lookup"><span data-stu-id="eb846-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="eb846-103">有关阻止与非阻止<xref:System.Net.Sockets.Socket>s，请参阅[使用异步客户端套接字](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)。</span><span class="sxs-lookup"><span data-stu-id="eb846-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="eb846-104">你可以使用<xref:System.Net.Sockets.NetworkStream>这两个同步和异步数据传输的类。</span><span class="sxs-lookup"><span data-stu-id="eb846-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="eb846-105">有关同步和异步通信的详细信息，请参阅[套接字](~/docs/framework/network-programming/sockets.md)。</span><span class="sxs-lookup"><span data-stu-id="eb846-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="eb846-106">若要创建<xref:System.Net.Sockets.NetworkStream>，你必须提供连接<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-107">你还可以指定什么<xref:System.IO.FileAccess>权限<xref:System.Net.Sockets.NetworkStream>通过提供具有<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-108">默认情况下，关闭<xref:System.Net.Sockets.NetworkStream>不会关闭提供<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-109">如果你想<xref:System.Net.Sockets.NetworkStream>必须具有权限才能关闭提供<xref:System.Net.Sockets.Socket>，必须指定`true`的值的`ownsSocket`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="eb846-110">使用<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法用于简单的单线程同步阻止 I/O。</span><span class="sxs-lookup"><span data-stu-id="eb846-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="eb846-111">如果你想要处理你使用单独的线程的 I/O，请考虑使用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>和<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法，或<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>和<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法进行通信。</span><span class="sxs-lookup"><span data-stu-id="eb846-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="eb846-112"><xref:System.Net.Sockets.NetworkStream>不支持随机访问网络数据流。</span><span class="sxs-lookup"><span data-stu-id="eb846-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="eb846-113">值<xref:System.Net.Sockets.NetworkStream.CanSeek%2A>属性，该值指示流是否支持查找，始终是`false`; 读取<xref:System.Net.Sockets.NetworkStream.Position%2A>属性，读取<xref:System.Net.Sockets.NetworkStream.Length%2A>属性或调用<xref:System.Net.Sockets.NetworkStream.Seek%2A>方法会引发<xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="eb846-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="eb846-114">读取和写入的实例上可以同时执行操作<xref:System.Net.Sockets.NetworkStream>而无需同步的类。</span><span class="sxs-lookup"><span data-stu-id="eb846-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="eb846-115">只要没有进行写入操作的一个唯一线程和进行读取操作的一个唯一线程，读取之间将有存在交叉引用，并且是必需的写线程和不同步。</span><span class="sxs-lookup"><span data-stu-id="eb846-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-116">下面的代码示例演示如何创建<xref:System.Net.Sockets.NetworkStream>从连接<xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket>并执行基本同步阻止 I/O。</span><span class="sxs-lookup"><span data-stu-id="eb846-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-117">创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="eb846-118">
            <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-119">为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-120"><xref:System.Net.Sockets.NetworkStream>创建到指定的读/写访问与<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-121"><xref:System.Net.Sockets.NetworkStream>不拥有基础<xref:System.Net.Sockets.Socket>，因此调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法不会关闭<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-122">下面的代码示例演示如何创建<xref:System.Net.Sockets.NetworkStream>与<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-123">
            <paramref name="socket" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-124">未连接 <paramref name="socket" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-124">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="eb846-125">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-125">-or-</span>
          </span>
          <span data-ttu-id="eb846-126">
            <paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="eb846-127">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-127">-or-</span>
          </span>
          <span data-ttu-id="eb846-128">
            <paramref name="socket" /> 参数处于非阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="eb846-129">
            <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-129">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="ownsSocket">
          <span data-ttu-id="eb846-130">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-130">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-131">用指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 初始化 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-132"><xref:System.Net.Sockets.NetworkStream>创建到指定的读/写访问与<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-132">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-133">如果值`ownsSocket`参数是`true`、<xref:System.Net.Sockets.NetworkStream>取得所有权的基础<xref:System.Net.Sockets.Socket>，并调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法也会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-133">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-134">下面的代码示例创建<xref:System.Net.Sockets.NetworkStream>与所有权<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-134">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-135">
            <paramref name="socket" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-135">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-136">未连接 <paramref name="socket" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-136">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="eb846-137">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-137">-or-</span>
          </span>
          <span data-ttu-id="eb846-138">
            <paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性的值不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-138">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="eb846-139">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-139">-or-</span>
          </span>
          <span data-ttu-id="eb846-140">
            <paramref name="socket" /> 参数处于非阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-140">the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="eb846-141">
            <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-141">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="eb846-142">
            <see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-142">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-143">用指定的访问权限为指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 创建 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-143">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-144"><xref:System.Net.Sockets.NetworkStream>创建到指定的指定访问权限<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-144">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-145">使用此构造函数，<xref:System.Net.Sockets.NetworkStream>不拥有基础<xref:System.Net.Sockets.Socket>，因此调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法不会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-145">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="eb846-146">`access`参数集<xref:System.Net.Sockets.NetworkStream.CanRead%2A>和<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-146">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-147">如果指定<xref:System.IO.FileAccess.Write>，则<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-147">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="eb846-148">如果指定<xref:System.IO.FileAccess.Read>，则<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-148">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="eb846-149">如果指定<xref:System.IO.FileAccess.ReadWrite>，允许这两个方法调用。</span><span class="sxs-lookup"><span data-stu-id="eb846-149">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-150">下面的代码示例创建<xref:System.Net.Sockets.NetworkStream>能够读取和写入<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-150">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-151">
            <paramref name="socket" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-151">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-152">未连接 <paramref name="socket" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-152">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="eb846-153">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-153">-or-</span>
          </span>
          <span data-ttu-id="eb846-154">
            <paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-154">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="eb846-155">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-155">-or-</span>
          </span>
          <span data-ttu-id="eb846-156">
            <paramref name="socket" /> 参数处于非阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-156">the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="eb846-157">
            <see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-157">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="eb846-158">
            <see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-158">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <param name="ownsSocket">
          <span data-ttu-id="eb846-159">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-159">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-160">用指定的访问权限和指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-160">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-161"><xref:System.Net.Sockets.NetworkStream>创建到指定的读/写访问与<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-161">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-162">如果值`ownsSocket`参数是`true`、<xref:System.Net.Sockets.NetworkStream>取得所有权的基础<xref:System.Net.Sockets.Socket>，并调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法也会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-162">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="eb846-163">`access`参数集<xref:System.Net.Sockets.NetworkStream.CanRead%2A>和<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-163">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-164">如果指定<xref:System.IO.FileAccess.Write>，则<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-164">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="eb846-165">如果指定<xref:System.IO.FileAccess.Read>，则<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-165">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="eb846-166">如果指定<xref:System.IO.FileAccess.ReadWrite>，允许这两个方法调用。</span><span class="sxs-lookup"><span data-stu-id="eb846-166">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-167">下面的代码示例创建<xref:System.Net.Sockets.NetworkStream>能够读取和写入<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-167">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-168">所有权<xref:System.Net.Sockets.Socket>授予此<xref:System.Net.Sockets.NetworkStream>通过指定`true`为`ownsSocket`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-168">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-169">
            <paramref name="socket" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-169">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-170">未连接 <paramref name="socket" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-170">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="eb846-171">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-171">-or-</span>
          </span>
          <span data-ttu-id="eb846-172">
            <paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-172">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="eb846-173">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-173">-or-</span>
          </span>
          <span data-ttu-id="eb846-174">
            <paramref name="socket" /> 参数处于非阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-174">The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="eb846-175">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-175">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb846-176">
            <c>buffer</c> 中开始存储数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-176">The location in <c>buffer</c> to begin storing the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="eb846-177">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-177">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="eb846-178">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-178">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eb846-179">一个包含用户定义的任何附加数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-179">An object that contains any additional user-defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-180">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 开始异步读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-180">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-181">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-181">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-182"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法会启动以异步方式从传入的网络缓冲区中读取数据。</span><span class="sxs-lookup"><span data-stu-id="eb846-182">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="eb846-183">调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法使你能够接收在单独的执行线程中的数据。</span><span class="sxs-lookup"><span data-stu-id="eb846-183">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="eb846-184">你必须创建实现一个回调方法<xref:System.AsyncCallback>委托并将传递到其名称<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-184">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="eb846-185">至少，你`state`参数必须包含<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-185">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-186">由于你将想要获取你的回调方法中接收到的数据，你应创建较小的类或结构，用于保存读取的缓冲区和任何其他有用信息。</span><span class="sxs-lookup"><span data-stu-id="eb846-186">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="eb846-187">传递到结构或类实例<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法通过`state`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-187">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="eb846-188">你的回调方法应调用<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-188">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="eb846-189">当你的应用程序调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>，系统将等待，直到接收数据或发生错误，并且然后系统将使用一个单独的线程执行指定的回调方法，并且阻止<xref:System.Net.Sockets.NetworkStream.EndRead%2A>直到提供<xref:System.Net.Sockets.NetworkStream>读取数据或引发异常。</span><span class="sxs-lookup"><span data-stu-id="eb846-189">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="eb846-190">如果你想要阻止后调用的原始线程<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法，请使用<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-190">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="eb846-191">调用<xref:System.Threading.EventWaitHandle.Set%2A>当你想要继续执行原始线程时的回调方法中。</span><span class="sxs-lookup"><span data-stu-id="eb846-191">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="eb846-192">有关编写回调方法的其他信息，请参阅[委托作为回调方法进行封送](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="eb846-192">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="eb846-193"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法读取原样可用，直到达到指定的字节数多的数据`size`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-193">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-194">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-194">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb846-195">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-195">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="eb846-196">读取和写入的实例上可以同时执行操作<xref:System.Net.Sockets.NetworkStream>而无需同步的类。</span><span class="sxs-lookup"><span data-stu-id="eb846-196">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="eb846-197">只要没有进行写入操作的一个唯一线程和进行读取操作的一个唯一线程，读取之间将有存在交叉引用，并且是必需的写线程和不同步。</span><span class="sxs-lookup"><span data-stu-id="eb846-197">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-198">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>从网络流异步读取数据。</span><span class="sxs-lookup"><span data-stu-id="eb846-198">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="eb846-199">`myReadCallBack`方法实现<xref:System.AsyncCallback>委派并由系统调用时<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="eb846-199">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-200">
            <paramref name="buffer" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-200">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-201">
            <paramref name="offset" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-201">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-202">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-202">-or-</span>
          </span>
          <span data-ttu-id="eb846-203">
            <paramref name="offset" /> 参数大于 <paramref name="buffer" /> 参数的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-203">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span>
          </span>
          <span data-ttu-id="eb846-204">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-204">-or-</span>
          </span>
          <span data-ttu-id="eb846-205">
            <paramref name="size" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-205">The <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-206">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-206">-or-</span>
          </span>
          <span data-ttu-id="eb846-207">
            <paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-207">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-208">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-208">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-209">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-209">-or-</span>
          </span>
          <span data-ttu-id="eb846-210">从网络读取时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-210">There was a failure while reading from the network.</span>
          </span>
          <span data-ttu-id="eb846-211">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-211">-or-</span>
          </span>
          <span data-ttu-id="eb846-212">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-212">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-213">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-213">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="eb846-214">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-214">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb846-215">
            <c>buffer</c> 中开始发送数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-215">The location in <c>buffer</c> to begin sending the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="eb846-216">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-216">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="eb846-217">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-217">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eb846-218">一个包含用户定义的任何附加数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-218">An object that contains any additional user-defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-219">开始向流异步写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-219">Begins an asynchronous write to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-220">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-220">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-221"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法会启动到远程主机的异步发送操作。</span><span class="sxs-lookup"><span data-stu-id="eb846-221">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="eb846-222">调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法使你能够发送单独的执行线程中的数据。</span><span class="sxs-lookup"><span data-stu-id="eb846-222">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="eb846-223">你必须创建实现一个回调方法<xref:System.AsyncCallback>委托并将传递到其名称<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-223">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="eb846-224">至少，你`state`参数必须包含<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-224">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-225">如果你的回调需要详细信息，可以创建一个小型类或结构，用于保存<xref:System.Net.Sockets.NetworkStream>和其他必需的信息。</span><span class="sxs-lookup"><span data-stu-id="eb846-225">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="eb846-226">传递到结构或类实例<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法通过`state`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-226">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="eb846-227">你的回调方法应实现<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-227">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="eb846-228">当你的应用程序调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>，系统将使用一个单独的线程执行指定的回调方法，并阻止在<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>直到<xref:System.Net.Sockets.NetworkStream>发送请求的字节数或引发异常。</span><span class="sxs-lookup"><span data-stu-id="eb846-228">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="eb846-229">如果你想要阻止后调用的原始线程<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法，请使用<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-229">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="eb846-230">调用<xref:System.Threading.EventWaitHandle.Set%2A>当你想要继续执行原始线程时的回调方法中。</span><span class="sxs-lookup"><span data-stu-id="eb846-230">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="eb846-231">有关编写回调方法的其他信息，请参阅[委托作为回调方法进行封送](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="eb846-231">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-232">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-232">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb846-233">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-233">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="eb846-234">读取和写入的实例上可以同时执行操作<xref:System.Net.Sockets.NetworkStream>而无需同步的类。</span><span class="sxs-lookup"><span data-stu-id="eb846-234">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="eb846-235">只要没有进行写入操作的一个唯一线程和进行读取操作的一个唯一线程，读取之间将有存在交叉引用，并且是必需的写线程和不同步。</span><span class="sxs-lookup"><span data-stu-id="eb846-235">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-236">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>将数据异步写入网络流。</span><span class="sxs-lookup"><span data-stu-id="eb846-236">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="eb846-237">`myWriteCallBack`方法实现<xref:System.AsyncCallback>委派并由系统调用时<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="eb846-237">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-238">
            <paramref name="buffer" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-238">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-239">
            <paramref name="offset" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-239">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-240">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-240">-or-</span>
          </span>
          <span data-ttu-id="eb846-241">
            <paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-241">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="eb846-242">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-242">-or-</span>
          </span>
          <span data-ttu-id="eb846-243">
            <paramref name="size" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-243">The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-244">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-244">-or-</span>
          </span>
          <span data-ttu-id="eb846-245">
            <paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-245">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-246">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-246">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-247">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-247">-or-</span>
          </span>
          <span data-ttu-id="eb846-248">写入到网络时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-248">There was a failure while writing to the network.</span>
          </span>
          <span data-ttu-id="eb846-249">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-249">-or-</span>
          </span>
          <span data-ttu-id="eb846-250">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-250">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-251">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-251">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-252">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-252">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-253">如果可从该流读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-253">
              <see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb846-254">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-254">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-255">如果<xref:System.Net.Sockets.NetworkStream.CanRead%2A>是`true`，<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-255">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="eb846-256">提供相应<xref:System.IO.FileAccess>枚举值，在构造函数中设置的可读性和可写性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-256">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-257"><xref:System.Net.Sockets.NetworkStream.CanRead%2A>时设置属性<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="eb846-257">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-258">下面的代码示例检查<xref:System.Net.Sockets.NetworkStream.CanRead%2A>以便确认<xref:System.Net.Sockets.NetworkStream>是可读。</span><span class="sxs-lookup"><span data-stu-id="eb846-258">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="eb846-259">它然后上执行读取的操作<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-259">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-260">获取一个值，该值指示流是否支持查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-260">Gets a value that indicates whether the stream supports seeking.</span>
          </span>
          <span data-ttu-id="eb846-261">当前不支持此属性，它始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-261">This property is not currently supported.This property always returns <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-262">所有情况下都为 <see langword="false" />，指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 不能在流中查找特定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-262">
              <see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-263">指示超时属性是否可用于 <see cref="T:System.Net.Sockets.NetworkStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-263">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-264">在所有情况下均为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-264">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-265">此属性是存在的因为它从继承<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-265">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-266">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-266">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-267">如果数据可写入 <see cref="T:System.Net.Sockets.NetworkStream" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-267">
              <see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb846-268">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-268">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-269">如果<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>是`true`，<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-269">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="eb846-270">提供相应<xref:System.IO.FileAccess>枚举值，在构造函数中设置的可读性和可写性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-270">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-271"><xref:System.Net.Sockets.NetworkStream.CanWrite%2A>时设置属性<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="eb846-271">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-272">下面的代码示例检查<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>以便确认<xref:System.Net.Sockets.NetworkStream>是可写。</span><span class="sxs-lookup"><span data-stu-id="eb846-272">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="eb846-273">它然后对执行写入操作<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-273">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="eb846-274">一个 32 位带符号整数，用于指定在关闭前等待发送所有剩余数据的毫秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-274">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-275">等待指定的时间获许发送数据之后，关闭 <see cref="T:System.Net.Sockets.NetworkStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-276"><xref:System.Net.Sockets.NetworkStream.Close%2A>方法释放与关联的非托管及托管资源<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-276">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-277">如果<xref:System.Net.Sockets.NetworkStream>拥有基础<xref:System.Net.Sockets.Socket>，也会关闭。</span><span class="sxs-lookup"><span data-stu-id="eb846-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="eb846-278">如果<xref:System.Net.Sockets.NetworkStream>与关联<xref:System.Net.Sockets.TcpClient>、<xref:System.Net.Sockets.NetworkStream.Close%2A>方法将关闭 TCP 连接，但不是会释放关联的<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="eb846-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-279">
            <paramref name="timeout" /> 参数小于 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-279">The <paramref name="timeout" /> parameter is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-280">获取一个值，该值指示在要读取的 <see cref="T:System.Net.Sockets.NetworkStream" /> 上是否有可用的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-280">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-281">如果可以在流上读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-281">
              <see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-282">使用<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>属性来确定是否已准备好读取数据。</span><span class="sxs-lookup"><span data-stu-id="eb846-282">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="eb846-283">如果<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>是`true`，调用<xref:System.Net.Sockets.NetworkStream.Read%2A>立即返回。</span><span class="sxs-lookup"><span data-stu-id="eb846-283">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="eb846-284">如果远程主机关闭或关闭了连接，<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>可能会引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-284">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-285">下面的代码示例读取从<xref:System.Net.Sockets.NetworkStream>，只要数据是否可用。</span><span class="sxs-lookup"><span data-stu-id="eb846-285">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-286">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-286">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-287">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-287">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb846-288">请使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取特定错误代码，并参考 MSDN 中的 Windows Sockets 版本 2 API 错误代码文档，以获取有关此错误的详细说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-288">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="eb846-289">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-289">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-290">释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-290">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-291">此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-291">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eb846-292">`Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="eb846-292">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="eb846-293"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="eb846-293"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="eb846-294">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Net.Sockets.NetworkStream> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="eb846-294">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="eb846-295">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-295">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eb846-296">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb846-296">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="eb846-297">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb846-297">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="eb846-298">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb846-298">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="eb846-299">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb846-299">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="eb846-300">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-300">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-301">处理异步读取的结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-301">Handles the end of an asynchronous read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-302">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-302">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-303"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法完成异步读取的操作以启动<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-303">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="eb846-304">之前调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>，你需要创建实现一个回调方法<xref:System.AsyncCallback>委托。</span><span class="sxs-lookup"><span data-stu-id="eb846-304">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="eb846-305">此回调方法在一个单独的线程中执行之后, 由系统调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="eb846-305">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="eb846-306">回调方法必须接受<xref:System.IAsyncResult>从返回<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>作为参数的方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-306">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="eb846-307">在回调方法中，调用<xref:System.IAsyncResult.AsyncState%2A>属性<xref:System.IAsyncResult>以获取状态对象传递给<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-307">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="eb846-308">提取接收<xref:System.Net.Sockets.NetworkStream>从此状态对象。</span><span class="sxs-lookup"><span data-stu-id="eb846-308">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="eb846-309">获取之后<xref:System.Net.Sockets.NetworkStream>，调用<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法已成功完成读取的操作，并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="eb846-309">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="eb846-310"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法被阻止，直至数据可用。</span><span class="sxs-lookup"><span data-stu-id="eb846-310">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="eb846-311"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法读取多的数据可用最中指定的字节数多`size`参数<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-311">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="eb846-312">如果远程主机关闭<xref:System.Net.Sockets.Socket>收到连接和所有可用的数据，<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法立即完成并返回零字节。</span><span class="sxs-lookup"><span data-stu-id="eb846-312">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="eb846-313">若要获取已接收的数据，请调用<xref:System.IAsyncResult.AsyncState%2A>属性<xref:System.IAsyncResult>，然后提取生成的状态对象中包含的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="eb846-313">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-314">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-314">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb846-315">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-315">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-316">在下面的代码示例中，`myReadCallback`提供给<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>作为回调方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-316">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="eb846-317"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 在中实现`myReadCallback`完成异步读取调用通过启动<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="eb846-317"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb846-318">
            <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-318">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-319">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-320">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-320">-or-</span>
          </span>
          <span data-ttu-id="eb846-321">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-321">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-322">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-322">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="eb846-323">表示异步调用的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-323">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-324">处理异步写入的结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-324">Handles the end of an asynchronous write.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-325"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 完成异步发送操作以启动<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="eb846-325"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="eb846-326">之前调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>，你需要创建实现一个回调方法<xref:System.AsyncCallback>委托。</span><span class="sxs-lookup"><span data-stu-id="eb846-326">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="eb846-327">此回调方法在一个单独的线程中执行之后, 由系统调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="eb846-327">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="eb846-328">回调方法必须接受<xref:System.IAsyncResult>从返回<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>作为参数的方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-328">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="eb846-329">在回调方法中，调用<xref:System.IAsyncResult.AsyncState%2A>属性`IAsyncResult`参数来获取<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-329">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb846-330">获取之后<xref:System.Net.Sockets.NetworkStream>，可以调用<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法已成功完成发送操作并返回发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="eb846-330">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="eb846-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法阻止，直至发送请求的字节数。</span><span class="sxs-lookup"><span data-stu-id="eb846-331">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-332">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-332">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb846-333">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-333">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-334">在下面的代码示例中，`myWriteCallback`提供给<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>作为回调方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-334">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="eb846-335"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 在中实现`myWriteCallback`以完成由启动异步写入调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="eb846-335"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-336">
            <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-336">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-337">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-337">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-338">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-338">-or-</span>
          </span>
          <span data-ttu-id="eb846-339">写入网络时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-339">An error occurred while writing to the network.</span>
          </span>
          <span data-ttu-id="eb846-340">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-340">-or-</span>
          </span>
          <span data-ttu-id="eb846-341">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-341">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-342">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-342">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb846-343">释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-343">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-344">此方法重写 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="eb846-344">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eb846-345">应用程序代码不应调用此方法。对象的<xref:System.Object.Finalize%2A>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-345">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="eb846-346">有关使用 Finalize 方法的详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="eb846-346">For more information about using the Finalize method, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb846-347">刷新流中的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-347">Flushes data from the stream.</span>
          </span>
          <span data-ttu-id="eb846-348">此方法保留供将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-348">This method is reserved for future use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-349"><xref:System.Net.Sockets.NetworkStream.Flush%2A>方法实现<xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType>方法; 但是，因为<xref:System.Net.Sockets.NetworkStream>是未进行缓冲处理，它没有任何影响网络流。</span><span class="sxs-lookup"><span data-stu-id="eb846-349">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams.</span></span> <span data-ttu-id="eb846-350">调用<xref:System.Net.Sockets.NetworkStream.Flush%2A>方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="eb846-350">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="eb846-351">一个取消标记，用于传播应取消此操作的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-351">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-352">以异步操作形式刷新流中的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-352">Flushes data from the stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-353">返回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-353">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="eb846-354">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-354">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-355">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="eb846-355">This operation will not block.</span></span> <span data-ttu-id="eb846-356">返回<xref:System.Threading.Tasks.Task>对象都完成后已从流中刷新数据<xref:System.Net.Sockets.NetworkStream>实例。</span><span class="sxs-lookup"><span data-stu-id="eb846-356">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-357">获取流上可用数据的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-357">Gets the length of the data available on the stream.</span>
          </span>
          <span data-ttu-id="eb846-358">此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-358">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-359">流上可用数据的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-359">The length of the data available on the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eb846-360">此属性的任何用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-360">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-361">获取或设置流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-361">Gets or sets the current position in the stream.</span>
          </span>
          <span data-ttu-id="eb846-362">此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-362">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-363">流中的当前新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-363">The current position in the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eb846-364">此属性的任何用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-364">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="eb846-365">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-365">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb846-366">
            <c>buffer</c> 中开始将数据存储到的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-366">The location in <c>buffer</c> to begin storing the data to.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="eb846-367">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-367">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-368">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-368">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-369">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的字节数，或者如果已关闭套接字，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-369">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-370">此方法将数据读入`buffer`参数并返回成功读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="eb846-370">This method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="eb846-371">如果已关闭套接字，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法返回 0。</span><span class="sxs-lookup"><span data-stu-id="eb846-371">If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0.</span></span> <span data-ttu-id="eb846-372"><xref:System.Net.Sockets.NetworkStream.Read%2A>操作读取原样可用，直到达到指定的字节数多的数据`size`参数。</span><span class="sxs-lookup"><span data-stu-id="eb846-372">The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="eb846-373">如果远程主机关闭了连接，并已接收所有可用的数据，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法立即完成并返回零字节。</span><span class="sxs-lookup"><span data-stu-id="eb846-373">If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-374">检查以查看<xref:System.Net.Sockets.NetworkStream>通过调用是可读<xref:System.Net.Sockets.NetworkStream.CanRead%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-374">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span> <span data-ttu-id="eb846-375">如果你尝试从读取<xref:System.Net.Sockets.NetworkStream>不可读，你将收到<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-375">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-376">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-376">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb846-377">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-377">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-378">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>以确定数据是否可供读取。</span><span class="sxs-lookup"><span data-stu-id="eb846-378">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="eb846-379">如果数据不可用，它读取从<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="eb846-379">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-380">
            <paramref name="buffer" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-380">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-381">
            <paramref name="offset" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-381">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-382">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-382">-or-</span>
          </span>
          <span data-ttu-id="eb846-383">
            <paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-383">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="eb846-384">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-384">-or-</span>
          </span>
          <span data-ttu-id="eb846-385">
            <paramref name="size" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-385">The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-386">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-386">-or-</span>
          </span>
          <span data-ttu-id="eb846-387">
            <paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-387">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
          <span data-ttu-id="eb846-388">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-388">-or-</span>
          </span>
          <span data-ttu-id="eb846-389">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-389">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-390">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-390">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-391">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-391">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-392">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-392">-or-</span>
          </span>
          <span data-ttu-id="eb846-393">从网络读取时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-393">There is a failure reading from the network.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-394">获取或设置一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可以读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-394">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-395">如果 <see cref="T:System.Net.Sockets.NetworkStream" /> 可以读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-395">
              <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb846-396">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-396">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-397">你必须从中派生<xref:System.Net.Sockets.NetworkStream>类以使用<xref:System.Net.Sockets.NetworkStream.Readable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-397">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="eb846-398">如果<xref:System.Net.Sockets.NetworkStream.Readable%2A>是`true`，<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-398">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="eb846-399">您还可以确定是否<xref:System.Net.Sockets.NetworkStream>是通过检查可公开访问的可读<xref:System.Net.Sockets.NetworkStream.CanRead%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-399">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="eb846-400"><xref:System.Net.Sockets.NetworkStream.Readable%2A>时设置属性<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="eb846-400">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-401">在下面的代码示例中，`CanCommunicate`属性检查<xref:System.Net.Sockets.NetworkStream.Readable%2A>属性来确定如果<xref:System.Net.Sockets.NetworkStream>是可读。</span><span class="sxs-lookup"><span data-stu-id="eb846-401">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-402">获取或设置读取操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-402">Gets or sets the amount of time that a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-403">
            <see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示读取操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-403">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span>
          </span>
          <span data-ttu-id="eb846-404">默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定读取操作未超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-404">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-405">如果此属性指定的时间内未完成读取的操作，该读取的操作将引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-405">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-406">此属性会影响所调用仅同步读取<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-406">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="eb846-407">此属性不会影响通过调用执行的异步读取操作<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-407">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-408">下面的代码示例将网络流读取超时值设置为 10 毫秒。</span><span class="sxs-lookup"><span data-stu-id="eb846-408">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-409">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-409">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="eb846-410">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-410">This parameter is not used.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="eb846-411">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-411">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-412">将流的当前位置设置为给定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-412">Sets the current position of the stream to the given value.</span>
          </span>
          <span data-ttu-id="eb846-413">此方法当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-413">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb846-414">流中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-414">The position in the stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eb846-415">此属性的任何用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-415">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb846-416">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-416">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-417">设置流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-417">Sets the length of the stream.</span>
          </span>
          <span data-ttu-id="eb846-418">此方法始终引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-418">This method always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eb846-419">此属性的任何用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-419">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-420">获取基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-420">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-421">表示基础网络连接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-421">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-422">类派生自<xref:System.Net.Sockets.NetworkStream>可以使用此属性来获取基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="eb846-422">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb846-423">使用基础<xref:System.Net.Sockets.Socket>从返回<xref:System.Net.Sockets.NetworkStream.Socket%2A>以外的属性，如果你需要访问这些<xref:System.Net.Sockets.NetworkStream>提供。</span><span class="sxs-lookup"><span data-stu-id="eb846-423">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-424">此属性是只通过此类或派生的类可访问。</span><span class="sxs-lookup"><span data-stu-id="eb846-424">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-425">下面的代码示例检索基础<xref:System.Net.Sockets.Socket>以验证连接处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="eb846-425">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="eb846-426">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-426">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb846-427">
            <c>buffer</c> 中开始写入数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-427">The location in <c>buffer</c> from which to start writing data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="eb846-428">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-428">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb846-429">将数据写入 <see cref="T:System.Net.Sockets.NetworkStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-429">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-430"><xref:System.Net.Sockets.NetworkStream.Write%2A>方法开始指定`offset`并发送`size`的内容的字节`buffer`到网络。</span><span class="sxs-lookup"><span data-stu-id="eb846-430">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="eb846-431"><xref:System.Net.Sockets.NetworkStream.Write%2A>方法将一直阻塞之前发送请求的字节数或<xref:System.Net.Sockets.SocketException>引发。</span><span class="sxs-lookup"><span data-stu-id="eb846-431">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="eb846-432">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>属性来获取特定错误代码，并请参阅 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="eb846-432">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-433">检查以查看<xref:System.Net.Sockets.NetworkStream>通过访问可写<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-433">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span> <span data-ttu-id="eb846-434">如果你尝试写入<xref:System.Net.Sockets.NetworkStream>不可写，你将收到<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-434">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>.</span></span> <span data-ttu-id="eb846-435">如果你收到<xref:System.IO.IOException>，检查<xref:System.Exception.InnerException%2A>属性来确定是否引起的<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-435">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-436">下面的代码示例将检查以确定是否<xref:System.Net.Sockets.NetworkStream>是可写。</span><span class="sxs-lookup"><span data-stu-id="eb846-436">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="eb846-437">如果是，然后<xref:System.Net.Sockets.NetworkStream.Write%2A>用于写入一个小的消息。</span><span class="sxs-lookup"><span data-stu-id="eb846-437">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb846-438">
            <paramref name="buffer" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-438">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-439">
            <paramref name="offset" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-439">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-440">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-440">-or-</span>
          </span>
          <span data-ttu-id="eb846-441">
            <paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-441">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="eb846-442">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-442">-or-</span>
          </span>
          <span data-ttu-id="eb846-443">
            <paramref name="size" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-443">The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="eb846-444">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-444">-or-</span>
          </span>
          <span data-ttu-id="eb846-445">
            <paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-445">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="eb846-446">写入到网络时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-446">There was a failure while writing to the network.</span>
          </span>
          <span data-ttu-id="eb846-447">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-447">-or-</span>
          </span>
          <span data-ttu-id="eb846-448">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-448">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb846-449">
            <see cref="T:System.Net.Sockets.NetworkStream" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-449">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
          <span data-ttu-id="eb846-450">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-450">-or-</span>
          </span>
          <span data-ttu-id="eb846-451">从网络读取时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-451">There was a failure reading from the network.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-452">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-452">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-453">如果数据可写入该流，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-453">
              <see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb846-454">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-454">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-455">你必须从中派生<xref:System.Net.Sockets.NetworkStream>类以使用<xref:System.Net.Sockets.NetworkStream.Writeable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-455">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="eb846-456">如果<xref:System.Net.Sockets.NetworkStream.Writeable%2A>是`true`，<xref:System.Net.Sockets.NetworkStream>允许调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-456">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="eb846-457">您还可以确定是否<xref:System.Net.Sockets.NetworkStream>通过检查可公开访问可写<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eb846-457">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="eb846-458"><xref:System.Net.Sockets.NetworkStream.Writeable%2A>时设置属性<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="eb846-458">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-459">在下面的代码示例中，`CanCommunicate`属性检查<xref:System.Net.Sockets.NetworkStream.Writeable%2A>属性来确定如果<xref:System.Net.Sockets.NetworkStream>是可写。</span><span class="sxs-lookup"><span data-stu-id="eb846-459">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb846-460">获取或设置写入操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-460">Gets or sets the amount of time that a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb846-461">
            <see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示写入操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-461">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span>
          </span>
          <span data-ttu-id="eb846-462">默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定写入操作未超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-462">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb846-463">如果此属性指定的时间内未完成写入操作，该写入操作将引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="eb846-463">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb846-464">此属性会影响仅同步写入操作通过调用执行<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-464">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="eb846-465">此属性不会影响通过调用执行的异步写入<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb846-465">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb846-466">下面的代码示例将网络流的写入超时值设置为 10 毫秒。</span><span class="sxs-lookup"><span data-stu-id="eb846-466">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb846-467">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb846-467">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>