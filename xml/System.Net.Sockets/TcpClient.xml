<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f771b6b7efaf3bac363c5bc85b2f8e27033f3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="70ecd-101">Provides client connections for TCP network services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70ecd-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-102"><xref:System.Net.Sockets.TcpClient>类提供了简单的方法来连接、 发送，并且接收流数据通过同步阻止模式下的网络。</span><span class="sxs-lookup"><span data-stu-id="70ecd-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="70ecd-103">为了使<xref:System.Net.Sockets.TcpClient>进行连接并与其交换数据，<xref:System.Net.Sockets.TcpListener>或<xref:System.Net.Sockets.Socket>创建与 TCP<xref:System.Net.Sockets.ProtocolType>必须侦听传入连接请求。</span><span class="sxs-lookup"><span data-stu-id="70ecd-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="70ecd-104">你可以连接到此侦听器的以下两种方法之一：</span><span class="sxs-lookup"><span data-stu-id="70ecd-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="70ecd-105">创建<xref:System.Net.Sockets.TcpClient>并调用其中一个可用的三个<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="70ecd-106">创建<xref:System.Net.Sockets.TcpClient>使用主机名和端口号的远程主机。</span><span class="sxs-lookup"><span data-stu-id="70ecd-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="70ecd-107">此构造函数将自动尝试连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-108">如果你想要在同步阻止的模式下发送无连接数据报，使用<xref:System.Net.Sockets.UdpClient>类。</span><span class="sxs-lookup"><span data-stu-id="70ecd-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-109">下面的代码示例建立<xref:System.Net.Sockets.TcpClient>连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="70ecd-110">若要建立一个传出连接或接受传入请求的权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="70ecd-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="70ecd-111">
        <para>若要发送和接收数据，使用<see cref="M:System.Net.Sockets.TcpClient.GetStream" />方法来获取<see cref="T:System.Net.Sockets.NetworkStream" />。调用<see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />和<see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />方法<see cref="T:System.Net.Sockets.NetworkStream" />发送和接收与远程主机的数据。使用<see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />方法来释放与关联的所有资源<see cref="T:System.Net.Sockets.TcpClient" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="70ecd-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-114">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和允许基础服务提供程序分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="70ecd-115">必须先调用<xref:System.Net.Sockets.TcpClient.Connect%2A>之前发送和接收数据的方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-116">此构造函数仅适用于 IPv4 地址类型。</span><span class="sxs-lookup"><span data-stu-id="70ecd-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-117">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-118">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-119">下面的代码示例演示如何使用默认构造函数来创建一个新<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="70ecd-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-122">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和将其绑定到<xref:System.Net.IPEndPoint>指定的`localEP`参数。</span><span class="sxs-lookup"><span data-stu-id="70ecd-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="70ecd-123">在调用此构造函数之前，必须创建<xref:System.Net.IPEndPoint>使用你想要发送和接收数据的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="70ecd-124">不需要连接和通信之前指定本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="70ecd-125">如果你创建<xref:System.Net.Sockets.TcpClient>使用任何其他构造函数，则基础的服务提供程序将分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="70ecd-126">必须调用<xref:System.Net.Sockets.TcpClient.Connect%2A>之前发送和接收数据的方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-127">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-128">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-129">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类使用本地终结点。</span><span class="sxs-lookup"><span data-stu-id="70ecd-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="70ecd-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-133">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-134">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-135">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类。</span><span class="sxs-lookup"><span data-stu-id="70ecd-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="70ecd-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="70ecd-137">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-137">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-138">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-138">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-140">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和同步连接尝试提供的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-140">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="70ecd-141">基础服务提供程序将分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-141">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="70ecd-142"><xref:System.Net.Sockets.TcpClient> 将阻止，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="70ecd-142"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="70ecd-143">此构造函数可以初始化，并解析的 DNS 主机名，连接在一个方便的步骤。</span><span class="sxs-lookup"><span data-stu-id="70ecd-143">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="70ecd-144">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="70ecd-144">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="70ecd-145">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="70ecd-145">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-146">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-146">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-147">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-147">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-148">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-149">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-150">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类使用主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-150">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-153">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-154">Gets or set a value that indicates whether a connection has been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-154">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-155">如果已建立连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-155">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-156">类派生自<xref:System.Net.Sockets.TcpClient>可以使用此属性以确定是否已成功连接尝试。</span><span class="sxs-lookup"><span data-stu-id="70ecd-156">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="70ecd-157">它无法监测的正在进行的连接状态<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-157">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="70ecd-158">如果远程主机关闭的连接，<xref:System.Net.Sockets.TcpClient.Active%2A>将不会更新。</span><span class="sxs-lookup"><span data-stu-id="70ecd-158">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="70ecd-159">如果派生自<xref:System.Net.Sockets.TcpClient>和要求更密切关注连接状态，请使用<xref:System.Net.Sockets.Socket.Connected%2A>属性<xref:System.Net.Sockets.Socket>返回<xref:System.Net.Sockets.TcpClient.Client%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-159">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-161">从网络接收的、可供读取的数据的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-161">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-162"><xref:System.Net.Sockets.TcpClient.Available%2A> 是一种方法，以便确定是否将数据排队以进行读取。</span><span class="sxs-lookup"><span data-stu-id="70ecd-162"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="70ecd-163">如果数据不可用，调用<xref:System.Net.Sockets.NetworkStream.Read%2A>获取数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-163">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="70ecd-164">可用的数据是在读取的网络缓冲区中排队的总数据量。</span><span class="sxs-lookup"><span data-stu-id="70ecd-164">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="70ecd-165">如果无数据排队网络缓冲区中<xref:System.Net.Sockets.TcpClient.Available%2A>返回 0。</span><span class="sxs-lookup"><span data-stu-id="70ecd-165">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="70ecd-166">如果远程主机关闭或关闭了连接，<xref:System.Net.Sockets.TcpClient.Available%2A>可能会引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-166">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="70ecd-167">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-167">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-168">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-168">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-169">下面的代码示例演示了利用<xref:System.Net.Sockets.TcpClient.Available%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-169">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-170">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-170">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-172">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-172">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="70ecd-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-174">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-174">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="70ecd-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="70ecd-176">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-176">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="70ecd-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-178">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-178">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="70ecd-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-181">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-181">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="70ecd-182">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="70ecd-182">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="70ecd-183">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="70ecd-183">This method does not block until the operation completes.</span></span> <span data-ttu-id="70ecd-184">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="70ecd-184">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="70ecd-185">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-185">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-186">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="70ecd-186">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-188">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-188">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="70ecd-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-191">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-191">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="70ecd-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-193">The port number of the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-193">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="70ecd-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="70ecd-195">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-195">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="70ecd-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-197">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-197">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="70ecd-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-200">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-200">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="70ecd-201">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="70ecd-201">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="70ecd-202">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="70ecd-202">This method does not block until the operation completes.</span></span> <span data-ttu-id="70ecd-203">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="70ecd-203">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="70ecd-204">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-204">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="70ecd-205">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="70ecd-205">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-206">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="70ecd-206">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-208">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="70ecd-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-211">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-211">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="70ecd-212">The name of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-212">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-213">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-213">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="70ecd-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="70ecd-215">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-215">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="70ecd-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-217">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-217">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="70ecd-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-220">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-220">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="70ecd-221">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="70ecd-221">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="70ecd-222">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="70ecd-222">This method does not block until the operation completes.</span></span> <span data-ttu-id="70ecd-223">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="70ecd-223">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="70ecd-224">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-224">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-225">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="70ecd-225">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-227">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-227">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="70ecd-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-230">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-230">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-232">基础网络 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-232">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-233"><xref:System.Net.Sockets.TcpClient> 创建<xref:System.Net.Sockets.Socket>发送和通过网络接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-233"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="70ecd-234">类派生自<xref:System.Net.Sockets.TcpClient>可以使用此属性来获取或设置此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-234">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="70ecd-235">使用基础<xref:System.Net.Sockets.Socket>从返回<xref:System.Net.Sockets.TcpClient.Client%2A>如果需要访问之外，这些设备<xref:System.Net.Sockets.TcpClient>提供。</span><span class="sxs-lookup"><span data-stu-id="70ecd-235">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="70ecd-236">你还可以使用<xref:System.Net.Sockets.TcpClient.Client%2A>设置基础<xref:System.Net.Sockets.Socket>到一个现有<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-236">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="70ecd-237">这可能很有用，如果你想要充分利用的简单性<xref:System.Net.Sockets.TcpClient>使用预先存在的<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-237">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-238">下面的代码示例演示如何将<xref:System.Net.Sockets.TcpClient.Client%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-238">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="70ecd-239">在此示例中，接收缓冲区的大小的基础<xref:System.Net.Sockets.Socket>更改。</span><span class="sxs-lookup"><span data-stu-id="70ecd-239">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-241"><xref:System.Net.Sockets.TcpClient.Close%2A>方法将标记为已释放的实例，并请求关联<xref:System.Net.Sockets.Socket>关闭 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-241">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="70ecd-242">基于<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性，TCP 连接可能保持打开状态一段时间后<xref:System.Net.Sockets.TcpClient.Close%2A>仍然要发送数据时，调用方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-242">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="70ecd-243">则不提供基础连接完成后关闭显示通知。</span><span class="sxs-lookup"><span data-stu-id="70ecd-243">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="70ecd-244">调用此方法最终将导致关联的关闭<xref:System.Net.Sockets.Socket>并且还将关闭关联<xref:System.Net.Sockets.NetworkStream>用于发送和接收数据，如果已创建一个。</span><span class="sxs-lookup"><span data-stu-id="70ecd-244">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-245">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-246">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-247">下面的代码示例演示结束<xref:System.Net.Sockets.TcpClient>通过调用<xref:System.Net.Sockets.TcpClient.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-247">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="70ecd-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-251">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-251">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="70ecd-252">在调用之前<xref:System.Net.Sockets.TcpClient.Connect%2A>必须创建的实例<xref:System.Net.IPEndPoint>类使用的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-252">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="70ecd-253">使用此<xref:System.Net.IPEndPoint>作为`remoteEP`参数。</span><span class="sxs-lookup"><span data-stu-id="70ecd-253">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="70ecd-254"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="70ecd-254">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="70ecd-255">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-255">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-256">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-256">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-257">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-257">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-258">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-258">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-259">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-259">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-260">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="70ecd-260">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-261">下面的代码示例使用<xref:System.Net.IPEndPoint>与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-261">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-263">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-263">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="70ecd-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-266">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-266">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-268">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPAddress>和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-268">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="70ecd-269"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="70ecd-269">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="70ecd-270">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-270">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-271">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-271">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-272">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-272">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-273">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-273">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-274">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-274">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-275">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-275">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-276">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-276">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-279">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-279">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-280">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-280">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="70ecd-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-282">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-282">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-284">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="70ecd-284">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="70ecd-285">调用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法来建立与指定的数组的主机的同步远程主机连接<xref:System.Net.IPAddress>元素和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-285">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="70ecd-286"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="70ecd-286">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="70ecd-287">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-287">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-288">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-288">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-289">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-290">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-290">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-291">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-291">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-292">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-293">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-293">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-295">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-295">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-296">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-296">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="70ecd-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="70ecd-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="70ecd-300">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-300">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-301">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-301">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-302">Connects the client to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-302">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-303">调用此方法以建立同步远程主机连接到指定的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-303">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="70ecd-304"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="70ecd-304">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="70ecd-305">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-305">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-306">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-306">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="70ecd-307">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="70ecd-307">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="70ecd-308">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="70ecd-308">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-309">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-309">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-310">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-310">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-311">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-311">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-312">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-312">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-313">下面的代码示例使用要与远程主机连接的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-313">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-316">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-316">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-317">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-317">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="70ecd-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-320">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-320">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-323">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-323">This operation will not block.</span></span> <span data-ttu-id="70ecd-324">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-324">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="70ecd-325">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="70ecd-325">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="70ecd-326">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPAddress>和端口号作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-326">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="70ecd-327">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-327">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-328">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-328">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-329">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-329">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-330">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-330">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-331">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-331">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-332">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-332">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-335">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-336">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-336">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="70ecd-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-338">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-338">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-341">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-341">This operation will not block.</span></span> <span data-ttu-id="70ecd-342">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-342">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="70ecd-343">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="70ecd-343">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="70ecd-344">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="70ecd-344">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="70ecd-345">调用此方法以建立同步远程主机连接到指定的数组的主机<xref:System.Net.IPAddress>元素和作为异步操作的端口号。</span><span class="sxs-lookup"><span data-stu-id="70ecd-345">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="70ecd-346">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-346">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-347">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-347">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-348">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-348">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-349">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-349">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-350">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-351">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-353">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-353">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-354">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-354">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="70ecd-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="70ecd-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="70ecd-358">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-358">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="70ecd-359">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-359">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-362">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-362">This operation will not block.</span></span> <span data-ttu-id="70ecd-363">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-363">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="70ecd-364">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="70ecd-364">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="70ecd-365">调用此方法以建立同步远程主机连接到指定的主机名和端口号作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-365">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="70ecd-366">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-366">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-367">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-367">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="70ecd-368">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="70ecd-368">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="70ecd-369">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="70ecd-369">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-370">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-370">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-371">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-371">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-372">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-373">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-373">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="70ecd-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-376">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-376">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-377">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-377">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-379">如果 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 套接字与截止到最近的操作时的远程资源连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-379">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-380"><xref:System.Net.Sockets.TcpClient.Connected%2A>属性获取的连接状态<xref:System.Net.Sockets.TcpClient.Client%2A>截止到最后一个的 I/O 操作的套接字。</span><span class="sxs-lookup"><span data-stu-id="70ecd-380">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="70ecd-381">如果该属性返回`false`、<xref:System.Net.Sockets.TcpClient.Client%2A>套接字要么从未连接，或已断开连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-381">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="70ecd-382">因为<xref:System.Net.Sockets.TcpClient.Connected%2A>属性仅反映截至最近的操作连接的状态，应尝试发送或接收消息，以确定当前状态。</span><span class="sxs-lookup"><span data-stu-id="70ecd-382">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="70ecd-383">该消息发送失败后，此属性将不再返回`true`。</span><span class="sxs-lookup"><span data-stu-id="70ecd-383">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="70ecd-384">请注意，此行为是设计使然。</span><span class="sxs-lookup"><span data-stu-id="70ecd-384">Note that this behavior is by design.</span></span> <span data-ttu-id="70ecd-385">不能可靠地测试连接的状态，因为在测试和发送/接收之间的时间内，连接可能已丢失。</span><span class="sxs-lookup"><span data-stu-id="70ecd-385">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="70ecd-386">套接字连接，并妥善处理失败传输，应假定你的代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-386">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-387">下面的代码示例连接到远程终结点，并接着验证连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-387">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="70ecd-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-391">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-391">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="70ecd-392">`Dispose()` 调用此方法与`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="70ecd-392">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="70ecd-393"><xref:System.Object.Finalize%2A> 调用此方法与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="70ecd-393"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="70ecd-394">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Net.Sockets.TcpClient> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="70ecd-394">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="70ecd-395">这是通过调用`Dispose()`每个引用对象的方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-395">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-396">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-396">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-397">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-397">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="70ecd-398">
            <para>
              <see langword="Dispose" /> 可以多次调用由其他对象。重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅 [实现释放 Method](~/docs/standard/garbage-collection/implementing-dispose.md)。有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅 [清洗向上非托管 Resources](~/docs/standard/garbage-collection/unmanaged.md) 和 [重写 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-398">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="70ecd-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ecd-400">Ends a pending asynchronous connection attempt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-400">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-401">此方法受到阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="70ecd-401">This method blocks until the operation is complete.</span></span> <span data-ttu-id="70ecd-402">若要以同步方式执行此操作，使用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-402">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-403">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-403">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-404">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-404">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-405">下面的代码示例结束异步连接尝试。</span><span class="sxs-lookup"><span data-stu-id="70ecd-405">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="70ecd-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="70ecd-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70ecd-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-412">如果 <see cref="T:System.Net.Sockets.TcpClient" /> 只允许一个客户端使用特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-412">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="70ecd-413">在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-413">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-414">默认情况下，多个客户端可以使用特定端口，但是，只有一个客户端可以执行网络流量发送到端口的操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-414">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="70ecd-415">你可以使用<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性以防止多个客户端使用特定端口。</span><span class="sxs-lookup"><span data-stu-id="70ecd-415">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="70ecd-416">基础套接字绑定到客户端端口之前，必须设置此属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-416">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="70ecd-417">如果调用<xref:System.Net.Sockets.TcpClient.Connect%2A>， <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>， <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>，或<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>、 客户端端口绑定为方法中，会产生副作用和随后无法设置<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性</span><span class="sxs-lookup"><span data-stu-id="70ecd-417">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-418">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和获取和设置的值<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-418">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-419">An error occurred when attempting to access the underlying socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-419">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-422">此方法将替代<xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-422">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="70ecd-423">应用程序代码不应调用此方法。对象的<xref:System.Object.Finalize%2A>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-423">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="70ecd-424"><xref:System.Net.Sockets.TcpClient>类终结器关闭 TCP 连接并释放与关联的所有托管的资源<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-424">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="70ecd-425">这些资源包括基础<xref:System.Net.Sockets.Socket>用于连接远程主机和<xref:System.Net.Sockets.NetworkStream>用于发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-425">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="70ecd-426">终结器不会释放任何非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="70ecd-426">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="70ecd-427">有关详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-427">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ecd-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 返回<xref:System.Net.Sockets.NetworkStream>可用于发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="70ecd-431"><xref:System.Net.Sockets.NetworkStream>类继承自<xref:System.IO.Stream>类，该类提供丰富的方法和使用，以便简化网络通信的属性集合。</span><span class="sxs-lookup"><span data-stu-id="70ecd-431">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="70ecd-432">必须调用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法第一个，或<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-432">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="70ecd-433">您已获得了后<xref:System.Net.Sockets.NetworkStream>，调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法将数据发送到远程主机。</span><span class="sxs-lookup"><span data-stu-id="70ecd-433">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="70ecd-434">调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法来接收来自远程主机的数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-434">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="70ecd-435">这两种方法阻止，直到执行指定的操作。</span><span class="sxs-lookup"><span data-stu-id="70ecd-435">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="70ecd-436">你可以避免阻塞读取操作通过检查<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-436">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="70ecd-437">A`true`值表示数据已从远程主机到达并且可供读取。</span><span class="sxs-lookup"><span data-stu-id="70ecd-437">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="70ecd-438">在这种情况下，<xref:System.Net.Sockets.NetworkStream.Read%2A>保证立即完成。</span><span class="sxs-lookup"><span data-stu-id="70ecd-438">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="70ecd-439">如果远程主机已关闭连接，<xref:System.Net.Sockets.NetworkStream.Read%2A>将立即返回包含零字节的。</span><span class="sxs-lookup"><span data-stu-id="70ecd-439">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-440">您必须关闭<xref:System.Net.Sockets.NetworkStream>您何时通过发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-440">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="70ecd-441">关闭<xref:System.Net.Sockets.TcpClient>不会释放<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-441">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-442">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="70ecd-442">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="70ecd-443">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="70ecd-443">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ecd-444">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="70ecd-444">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="70ecd-445">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="70ecd-445">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-446">下面的代码示例使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>以获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-446">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="70ecd-447">获取之后<xref:System.Net.Sockets.NetworkStream>，它将发送和接收使用其<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-447">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="70ecd-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="70ecd-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-450">Gets or sets information about the linger state of the associated socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-450">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-451">
            <see cref="T:System.Net.Sockets.LingerOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-451">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="70ecd-452">默认情况下，禁用逗留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-452">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-453"><xref:System.Net.Sockets.TcpClient.LingerState%2A>属性用于更改方式<xref:System.Net.Sockets.Socket.Close%2A>方法的行为。</span><span class="sxs-lookup"><span data-stu-id="70ecd-453">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="70ecd-454">当组修改在其下连接可以重置通过 Winsock 的条件时，此属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-454">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="70ecd-455">连接重置仍会发生根据 IP 协议行为。</span><span class="sxs-lookup"><span data-stu-id="70ecd-455">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="70ecd-456">此属性控制的 TCP 连接到在调用后将保持打开的时间长度<xref:System.Net.Sockets.TcpClient.Close%2A>仍然要发送数据时。</span><span class="sxs-lookup"><span data-stu-id="70ecd-456">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="70ecd-457">当调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，数据位于传出的网络缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="70ecd-457">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="70ecd-458">此属性可以用于确保将此数据发送到远程主机之前<xref:System.Net.Sockets.TcpClient.Close%2A>方法删除连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-458">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="70ecd-459">若要启用延迟，创建<xref:System.Net.Sockets.LingerOption>实例包含所需的值，并设置<xref:System.Net.Sockets.TcpClient.LingerState%2A>指向此实例的属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-459">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="70ecd-460">下表描述的行为<xref:System.Net.Sockets.TcpClient.Close%2A>输入的可能的值的方法<xref:System.Net.Sockets.LingerOption.Enabled%2A>属性和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-460">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="70ecd-461">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="70ecd-461">LingerState.Enabled</span></span>|<span data-ttu-id="70ecd-462">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="70ecd-462">LingerState.LingerTime</span></span>|<span data-ttu-id="70ecd-463">行为</span><span class="sxs-lookup"><span data-stu-id="70ecd-463">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="70ecd-464">`false` （禁用），默认值</span><span class="sxs-lookup"><span data-stu-id="70ecd-464">`false` (disabled), the default value</span></span>|<span data-ttu-id="70ecd-465">超时不适用，（默认值）。</span><span class="sxs-lookup"><span data-stu-id="70ecd-465">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="70ecd-466">尝试发送数据挂起，直到默认 IP 协议超时时间已到。</span><span class="sxs-lookup"><span data-stu-id="70ecd-466">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="70ecd-467">`true` （已启用）</span><span class="sxs-lookup"><span data-stu-id="70ecd-467">`true` (enabled)</span></span>|<span data-ttu-id="70ecd-468">非零的超时</span><span class="sxs-lookup"><span data-stu-id="70ecd-468">A nonzero time-out</span></span>|<span data-ttu-id="70ecd-469">尝试发送挂起的数据，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-469">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="70ecd-470">`true` （已启用）</span><span class="sxs-lookup"><span data-stu-id="70ecd-470">`true` (enabled)</span></span>|<span data-ttu-id="70ecd-471">零超时。</span><span class="sxs-lookup"><span data-stu-id="70ecd-471">A zero timeout.</span></span>|<span data-ttu-id="70ecd-472">丢弃所有挂起的数据和 Winsock 重置连接。</span><span class="sxs-lookup"><span data-stu-id="70ecd-472">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="70ecd-473">IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。</span><span class="sxs-lookup"><span data-stu-id="70ecd-473">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="70ecd-474">在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-474">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="70ecd-475">这是一个套接字的默认行为时<xref:System.Net.Sockets.TcpClient.LingerState%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-475">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="70ecd-476">当<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</span><span class="sxs-lookup"><span data-stu-id="70ecd-476">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-477">下面的代码示例设置并获取套接字逗留时间。</span><span class="sxs-lookup"><span data-stu-id="70ecd-477">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-479">如果禁用延迟，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-479">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="70ecd-480">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-480">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-481">当<xref:System.Net.Sockets.TcpClient.NoDelay%2A>是`false`、<xref:System.Net.Sockets.TcpClient>不通过网络发送数据包，直到它收集占用大量的传出数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-481">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="70ecd-482">由于在 TCP 段的消耗的资源量，发送少量数据的效率低。</span><span class="sxs-lookup"><span data-stu-id="70ecd-482">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="70ecd-483">但是，情况下，还存在需要发送极少量的数据或预期从你发送每个数据包的即时响应。</span><span class="sxs-lookup"><span data-stu-id="70ecd-483">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="70ecd-484">你的决策应权衡网络效率与应用程序要求的相对重要性。</span><span class="sxs-lookup"><span data-stu-id="70ecd-484">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-485">下面的代码示例禁用延迟。</span><span class="sxs-lookup"><span data-stu-id="70ecd-485">The following code example disables the delay.</span></span> <span data-ttu-id="70ecd-486">然后，它检查的值<xref:System.Net.Sockets.TcpClient.NoDelay%2A>若要验证的属性已成功设置。</span><span class="sxs-lookup"><span data-stu-id="70ecd-486">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-487">Gets or sets the size of the receive buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-487">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-488">接收缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-488">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="70ecd-489">默认值为 8192 字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-489">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-490"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>属性获取或设置您希望为每次读操作接收缓冲区中存储的字节数。</span><span class="sxs-lookup"><span data-stu-id="70ecd-490">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="70ecd-491">此属性的实际操作对象分配用于接收传入数据的网络缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="70ecd-491">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="70ecd-492">你的网络缓冲区应至少为你的应用程序缓冲区，以确保在调用时，将导致所需的数据可用一样大<xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-492">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="70ecd-493">使用<xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>属性来设置此大小。</span><span class="sxs-lookup"><span data-stu-id="70ecd-493">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="70ecd-494">如果你的应用程序将接收大容量数据，则应传递<xref:System.Net.Sockets.NetworkStream.Read%2A>方法非常大的应用程序缓冲区。</span><span class="sxs-lookup"><span data-stu-id="70ecd-494">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="70ecd-495">你的网络缓冲区小于数据量是否在中请求<xref:System.Net.Sockets.NetworkStream.Read%2A>方法，你将无法检索所需在一个读取操作中的数据量。</span><span class="sxs-lookup"><span data-stu-id="70ecd-495">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="70ecd-496">这将带来到其他调用的开销<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-496">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-497">下面的代码示例设置，并获取接收缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="70ecd-497">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="70ecd-498">An error occurred when setting the buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-498">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="70ecd-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="70ecd-500">For a workaround, see the Platform Note in Remarks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-500">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-502">连接的超时值（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-502">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="70ecd-503">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-503">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-504"><xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A>属性确定的时间量，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法将阻止，直到它能够接收数据。</span><span class="sxs-lookup"><span data-stu-id="70ecd-504">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="70ecd-505">此时间以毫秒为单位。</span><span class="sxs-lookup"><span data-stu-id="70ecd-505">This time is measured in milliseconds.</span></span> <span data-ttu-id="70ecd-506">如果超时到期之前<xref:System.Net.Sockets.NetworkStream.Read%2A>成功完成，<xref:System.Net.Sockets.TcpClient>引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-506">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="70ecd-507">默认情况下为无超时。</span><span class="sxs-lookup"><span data-stu-id="70ecd-507">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-508">下面的代码示例设置，并获取接收超时值。</span><span class="sxs-lookup"><span data-stu-id="70ecd-508">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-509">Gets or sets the size of the send buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-509">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-510">发送缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-510">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="70ecd-511">默认值为 8192 字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-511">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-512"><xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>属性获取或设置您希望在每次调用中发送的字节数<xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-512">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="70ecd-513">此属性的实际操作对象为发送操作分配的网络缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="70ecd-513">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="70ecd-514">你的网络缓冲区应至少为你的应用程序缓冲区，以确保所需的数据将存储并在一个操作中发送一样大。</span><span class="sxs-lookup"><span data-stu-id="70ecd-514">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="70ecd-515">使用<xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>属性来设置此大小。</span><span class="sxs-lookup"><span data-stu-id="70ecd-515">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="70ecd-516">如果你的应用程序将发送大容量数据，则应传递<xref:System.Net.Sockets.NetworkStream.Write%2A>方法非常大的应用程序缓冲区。</span><span class="sxs-lookup"><span data-stu-id="70ecd-516">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="70ecd-517">如果网络缓冲区小于数据量则提供<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，多个网络将为您对每个调用执行的操作的发送<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="70ecd-517">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="70ecd-518">通过确保你的网络缓冲区至少与你的应用程序缓冲区一样大，可以获得更大的数据吞吐量。</span><span class="sxs-lookup"><span data-stu-id="70ecd-518">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-519">下面的代码示例设置，并获取发送缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="70ecd-519">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ecd-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ecd-521">发送超时值（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-521">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="70ecd-522">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ecd-522">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ecd-523"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>属性确定的时间量，<xref:System.Net.Sockets.Socket.Send%2A>方法将阻塞，直到能够成功返回。</span><span class="sxs-lookup"><span data-stu-id="70ecd-523">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="70ecd-524">此时间以毫秒为单位。</span><span class="sxs-lookup"><span data-stu-id="70ecd-524">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="70ecd-525">调用后<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，基础<xref:System.Net.Sockets.Socket>返回到主机实际发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="70ecd-525">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="70ecd-526"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>属性确定的时间量<xref:System.Net.Sockets.TcpClient>接收的字节数返回之前将等待。</span><span class="sxs-lookup"><span data-stu-id="70ecd-526">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="70ecd-527">如果超时到期之前<xref:System.Net.Sockets.Socket.Send%2A>方法已成功完成时，<xref:System.Net.Sockets.TcpClient>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="70ecd-527">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="70ecd-528">默认情况下为无超时。</span><span class="sxs-lookup"><span data-stu-id="70ecd-528">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ecd-529">下面的代码示例设置和获取<xref:System.Net.Sockets.TcpClient.SendTimeout%2A>值。</span><span class="sxs-lookup"><span data-stu-id="70ecd-529">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>