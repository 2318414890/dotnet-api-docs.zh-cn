<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8f677-101">为 TCP 网络服务提供客户端连接。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f677-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-102"><xref:System.Net.Sockets.TcpClient>类提供了简单的方法来连接、 发送，并且接收流数据通过同步阻止模式下的网络。</span><span class="sxs-lookup"><span data-stu-id="8f677-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="8f677-103">为了使<xref:System.Net.Sockets.TcpClient>进行连接并与其交换数据，<xref:System.Net.Sockets.TcpListener>或<xref:System.Net.Sockets.Socket>创建与 TCP<xref:System.Net.Sockets.ProtocolType>必须侦听传入连接请求。</span><span class="sxs-lookup"><span data-stu-id="8f677-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="8f677-104">你可以连接到此侦听器的以下两种方法之一：</span><span class="sxs-lookup"><span data-stu-id="8f677-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="8f677-105">创建<xref:System.Net.Sockets.TcpClient>并调用其中一个可用的三个<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="8f677-106">创建<xref:System.Net.Sockets.TcpClient>使用主机名和端口号的远程主机。</span><span class="sxs-lookup"><span data-stu-id="8f677-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="8f677-107">此构造函数将自动尝试连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-108">如果你想要在同步阻止的模式下发送无连接数据报，使用<xref:System.Net.Sockets.UdpClient>类。</span><span class="sxs-lookup"><span data-stu-id="8f677-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-109">下面的代码示例建立<xref:System.Net.Sockets.TcpClient>连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="8f677-110">若要建立一个传出连接或接受传入请求的权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f677-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="8f677-111">若要发送和接收数据，使用<see cref="M:System.Net.Sockets.TcpClient.GetStream" />方法来获取<see cref="T:System.Net.Sockets.NetworkStream" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="8f677-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        </span>
        <span data-ttu-id="8f677-112">调用<see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />和<see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />方法<see cref="T:System.Net.Sockets.NetworkStream" />发送和接收与远程主机的数据。</span>
        <span class="sxs-lookup">
          <span data-stu-id="8f677-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span>
        </span>
        <span data-ttu-id="8f677-113">使用<see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />方法来释放与关联的所有资源<see cref="T:System.Net.Sockets.TcpClient" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="8f677-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-114">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-114">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f677-115">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-116">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和允许基础服务提供程序分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-116">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="8f677-117">必须先调用<xref:System.Net.Sockets.TcpClient.Connect%2A>之前发送和接收数据的方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-117">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-118">此构造函数仅适用于 IPv4 地址类型。</span><span class="sxs-lookup"><span data-stu-id="8f677-118">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-119">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-119">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-120">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-120">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-121">下面的代码示例演示如何使用默认构造函数来创建一个新<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="8f677-121">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="8f677-122">要将 TCP <see cref="T:System.Net.Sockets.Socket" /> 绑定到的 <see cref="T:System.Net.IPEndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-122">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-123">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例，并将其绑定到指定的本地终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-123">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-124">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和将其绑定到<xref:System.Net.IPEndPoint>指定的`localEP`参数。</span><span class="sxs-lookup"><span data-stu-id="8f677-124">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="8f677-125">在调用此构造函数之前，必须创建<xref:System.Net.IPEndPoint>使用你想要发送和接收数据的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-125">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="8f677-126">不需要连接和通信之前指定本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-126">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="8f677-127">如果你创建<xref:System.Net.Sockets.TcpClient>使用任何其他构造函数，则基础的服务提供程序将分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-127">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="8f677-128">必须调用<xref:System.Net.Sockets.TcpClient.Connect%2A>之前发送和接收数据的方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-128">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-129">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-129">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-130">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-130">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-131">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类使用本地终结点。</span><span class="sxs-lookup"><span data-stu-id="8f677-131">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-132">
            <paramref name="localEP" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-132">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="8f677-133">IP 协议的 <see cref="P:System.Net.IPAddress.AddressFamily" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-133">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-134">使用指定的族初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-134">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8f677-135">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-135">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-136">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-136">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-137">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类。</span><span class="sxs-lookup"><span data-stu-id="8f677-137">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8f677-138">
            <paramref name="family" /> 参数不等于 AddressFamily.InterNetwork</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-138">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="8f677-139">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-139">-or-</span>
          </span>
          <span data-ttu-id="8f677-140">
            <paramref name="family" /> 参数不等于 AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-140">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8f677-141">要连接到的远程主机的 DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-141">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-142">要连接到的远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-142">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-143">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 类的新实例并连接到指定主机上的指定端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-144">此构造函数创建一个新<xref:System.Net.Sockets.TcpClient>和同步连接尝试提供的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-144">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="8f677-145">基础服务提供程序将分配的最合适的本地 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-145">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="8f677-146"><xref:System.Net.Sockets.TcpClient> 将阻止，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="8f677-146"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="8f677-147">此构造函数可以初始化，并解析的 DNS 主机名，连接在一个方便的步骤。</span><span class="sxs-lookup"><span data-stu-id="8f677-147">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="8f677-148">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="8f677-148">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="8f677-149">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="8f677-149">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-150">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-151">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-151">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-152">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-152">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-153">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-153">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-154">下面的代码示例演示如何创建的实例<xref:System.Net.Sockets.TcpClient>类使用主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-154">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-155">
            <paramref name="hostname" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-155">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-156">
            <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-156">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-157">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-157">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-158">获取或设置一个值，该值指示是否已建立连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-158">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-159">如果已建立连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-159">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-160">类派生自<xref:System.Net.Sockets.TcpClient>可以使用此属性以确定是否已成功连接尝试。</span><span class="sxs-lookup"><span data-stu-id="8f677-160">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="8f677-161">它无法监测的正在进行的连接状态<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="8f677-161">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="8f677-162">如果远程主机关闭的连接，<xref:System.Net.Sockets.TcpClient.Active%2A>将不会更新。</span><span class="sxs-lookup"><span data-stu-id="8f677-162">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="8f677-163">如果派生自<xref:System.Net.Sockets.TcpClient>和要求更密切关注连接状态，请使用<xref:System.Net.Sockets.Socket.Connected%2A>属性<xref:System.Net.Sockets.Socket>返回<xref:System.Net.Sockets.TcpClient.Client%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-163">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-164">获取已经从网络接收且可供读取的数据量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-164">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-165">从网络接收的、可供读取的数据的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-165">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-166"><xref:System.Net.Sockets.TcpClient.Available%2A> 是一种方法，以便确定是否将数据排队以进行读取。</span><span class="sxs-lookup"><span data-stu-id="8f677-166"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="8f677-167">如果数据不可用，调用<xref:System.Net.Sockets.NetworkStream.Read%2A>获取数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-167">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="8f677-168">可用的数据是在读取的网络缓冲区中排队的总数据量。</span><span class="sxs-lookup"><span data-stu-id="8f677-168">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="8f677-169">如果无数据排队网络缓冲区中<xref:System.Net.Sockets.TcpClient.Available%2A>返回 0。</span><span class="sxs-lookup"><span data-stu-id="8f677-169">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="8f677-170">如果远程主机关闭或关闭了连接，<xref:System.Net.Sockets.TcpClient.Available%2A>可能会引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="8f677-170">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8f677-171">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-171">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-172">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-172">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-173">下面的代码示例演示了利用<xref:System.Net.Sockets.TcpClient.Available%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-173">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-174">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-174">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-175">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-175">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-176">开始一个对远程主机连接的异步请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-176">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8f677-177">远程主机的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-177">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-178">远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-178">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8f677-179">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-179">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8f677-180">一个用户定义对象，其中包含连接操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-180">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="8f677-181">操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-181">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-182">开始一个对远程主机连接的异步请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-182">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="8f677-183">远程主机由 <see cref="T:System.Net.IPAddress" /> 和端口号 (<see cref="T:System.Int32" />) 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-183">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-184">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-184">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-185">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-185">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="8f677-186">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="8f677-186">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="8f677-187">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="8f677-187">This method does not block until the operation completes.</span></span> <span data-ttu-id="8f677-188">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8f677-188">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8f677-189">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-189">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-190">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="8f677-190">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-191">
            <paramref name="address" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-191">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-192">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-192">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-193">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-193">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8f677-194">调用堆栈中的较高调用方无权执行所请求的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-194">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-195">端口号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-195">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="8f677-196">至少一个指定远程主机的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-196">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-197">远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-197">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8f677-198">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-198">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8f677-199">一个用户定义对象，其中包含连接操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-199">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="8f677-200">操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-200">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-201">开始一个对远程主机连接的异步请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-201">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="8f677-202">远程主机由 <see cref="T:System.Net.IPAddress" /> 数组和端口号 (<see cref="T:System.Int32" />) 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-202">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-203">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-203">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-204">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-204">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="8f677-205">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="8f677-205">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="8f677-206">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="8f677-206">This method does not block until the operation completes.</span></span> <span data-ttu-id="8f677-207">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8f677-207">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8f677-208">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-208">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="8f677-209">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="8f677-209">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-210">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="8f677-210">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-211">
            <paramref name="addresses" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-211">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-212">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-212">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-213">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-213">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8f677-214">调用堆栈中的较高调用方无权执行所请求的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-214">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-215">端口号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-215">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="8f677-216">远程主机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-216">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-217">远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-217">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8f677-218">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-218">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8f677-219">一个用户定义对象，其中包含连接操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-219">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="8f677-220">操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-220">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-221">开始一个对远程主机连接的异步请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-221">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="8f677-222">远程主机由主机名 (<see cref="T:System.String" />) 和端口号 (<see cref="T:System.Int32" />) 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-222">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-223">一个 <see cref="T:System.IAsyncResult" /> 对象，它引用异步连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-223">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-224">异步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>操作必须通过调用<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-224">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="8f677-225">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="8f677-225">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="8f677-226">此方法不会阻止该操作完成之前。</span><span class="sxs-lookup"><span data-stu-id="8f677-226">This method does not block until the operation completes.</span></span> <span data-ttu-id="8f677-227">若要阻止该操作完成之前，请使用之一<xref:System.Net.Sockets.TcpClient.Connect%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8f677-227">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8f677-228">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-228">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-229">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="8f677-229">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-230">
            <paramref name="host" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-230">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-231">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-231">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-232">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-232">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8f677-233">调用堆栈中的较高调用方无权执行所请求的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-233">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-234">端口号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-234">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-235">获取或设置基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-235">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-236">基础网络 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-236">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-237"><xref:System.Net.Sockets.TcpClient> 创建<xref:System.Net.Sockets.Socket>发送和通过网络接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-237"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="8f677-238">类派生自<xref:System.Net.Sockets.TcpClient>可以使用此属性来获取或设置此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="8f677-238">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8f677-239">使用基础<xref:System.Net.Sockets.Socket>从返回<xref:System.Net.Sockets.TcpClient.Client%2A>如果需要访问之外，这些设备<xref:System.Net.Sockets.TcpClient>提供。</span><span class="sxs-lookup"><span data-stu-id="8f677-239">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="8f677-240">你还可以使用<xref:System.Net.Sockets.TcpClient.Client%2A>设置基础<xref:System.Net.Sockets.Socket>到一个现有<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="8f677-240">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8f677-241">这可能很有用，如果你想要充分利用的简单性<xref:System.Net.Sockets.TcpClient>使用预先存在的<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="8f677-241">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-242">下面的代码示例演示如何将<xref:System.Net.Sockets.TcpClient.Client%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-242">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="8f677-243">在此示例中，接收缓冲区的大小的基础<xref:System.Net.Sockets.Socket>更改。</span><span class="sxs-lookup"><span data-stu-id="8f677-243">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f677-244">释放此 <see cref="T:System.Net.Sockets.TcpClient" /> 实例，并请求关闭基础 TCP 连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-244">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-245"><xref:System.Net.Sockets.TcpClient.Close%2A>方法将标记为已释放的实例，并请求关联<xref:System.Net.Sockets.Socket>关闭 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-245">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="8f677-246">基于<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性，TCP 连接可能保持打开状态一段时间后<xref:System.Net.Sockets.TcpClient.Close%2A>仍然要发送数据时，调用方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-246">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="8f677-247">则不提供基础连接完成后关闭显示通知。</span><span class="sxs-lookup"><span data-stu-id="8f677-247">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="8f677-248">调用此方法最终将导致关联的关闭<xref:System.Net.Sockets.Socket>并且还将关闭关联<xref:System.Net.Sockets.NetworkStream>用于发送和接收数据，如果已创建一个。</span><span class="sxs-lookup"><span data-stu-id="8f677-248">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-249">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-249">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-250">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-250">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-251">下面的代码示例演示结束<xref:System.Net.Sockets.TcpClient>通过调用<xref:System.Net.Sockets.TcpClient.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-251">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-252">使用指定的主机名和端口号将客户端连接到 TCP 主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-252">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="8f677-253">您打算连接到的 <see cref="T:System.Net.IPEndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-253">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-254">使用指定的远程网络终结点将客户端连接到远程 TCP 主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-254">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-255">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="8f677-255">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="8f677-256">在调用之前<xref:System.Net.Sockets.TcpClient.Connect%2A>必须创建的实例<xref:System.Net.IPEndPoint>类使用的 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-256">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="8f677-257">使用此<xref:System.Net.IPEndPoint>作为`remoteEP`参数。</span><span class="sxs-lookup"><span data-stu-id="8f677-257">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="8f677-258"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="8f677-258">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="8f677-259">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-259">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-260">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-260">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-261">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-261">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-262">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-262">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-263">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-263">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-264">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="8f677-264">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-265">下面的代码示例使用<xref:System.Net.IPEndPoint>与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-265">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-266">
            <paramref name="remoteEp" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-266">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-267">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-267">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-268">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-268">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8f677-269">你打算连接到的主机的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-269">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-270">要连接到的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-270">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-271">使用指定的 IP 地址和端口号将客户端连接到 TCP 主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-271">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-272">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPAddress>和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-272">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="8f677-273"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="8f677-273">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="8f677-274">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-274">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-275">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-275">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-276">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-276">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-277">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-277">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-278">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-278">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-279">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-279">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-280">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-280">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-281">
            <paramref name="address" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-281">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-282">
            <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-282">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-283">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-283">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-284">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-284">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="8f677-285">要连接到的主机的 <see cref="T:System.Net.IPAddress" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-285">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-286">要连接到的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-286">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-287">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-287">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-288">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="8f677-288">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="8f677-289">调用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法来建立与指定的数组的主机的同步远程主机连接<xref:System.Net.IPAddress>元素和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-289">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="8f677-290"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="8f677-290">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="8f677-291">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-291">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-292">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-292">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-293">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-293">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-294">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-294">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-295">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-295">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-296">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-296">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-297">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-297">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-298">
            <paramref name="ipAddresses" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-298">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-299">端口号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-299">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-300">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-300">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-301">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-301">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8f677-302">调用堆栈中的较高调用方无权执行所请求的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-302">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8f677-303">此方法对于使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-303">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8f677-304">要连接到的远程主机的 DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-304">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-305">要连接到的远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-305">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-306">将客户端连接到指定主机上的指定端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-306">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-307">调用此方法以建立同步远程主机连接到指定的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-307">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="8f677-308"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法将阻塞，直到连接成功或失败。</span><span class="sxs-lookup"><span data-stu-id="8f677-308">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="8f677-309">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-309">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-310">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-310">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="8f677-311">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="8f677-311">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="8f677-312">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="8f677-312">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-313">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-313">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-314">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-314">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-315">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-315">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-316">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-316">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-317">下面的代码示例使用要与远程主机连接的主机名和端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-317">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-318">
            <paramref name="hostname" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-318">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-319">
            <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-319">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-320">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-320">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-321">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-321">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-322">使用指定的主机名和端口号将客户端连接到远程 TCP 主机以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-322">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="8f677-323">你打算连接到的主机的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-323">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-324">要连接到的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-324">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-325">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-325">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-326">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-326">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8f677-327">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-327">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-328">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-328">This operation will not block.</span></span> <span data-ttu-id="8f677-329">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-329">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="8f677-330">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="8f677-330">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="8f677-331">调用此方法以建立与指定的同步远程主机连接<xref:System.Net.IPAddress>和端口号作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-331">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="8f677-332">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-332">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-333">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-333">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-334">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-334">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-335">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-335">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-336">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-336">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-337">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-337">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-338">
            <paramref name="address" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-338">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-339">
            <paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-339">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-340">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-340">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-341">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-341">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="8f677-342">要连接到的主机的 <see cref="T:System.Net.IPAddress" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-342">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-343">要连接到的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-343">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-344">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-344">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-345">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-345">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8f677-346">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-346">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-347">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-347">This operation will not block.</span></span> <span data-ttu-id="8f677-348">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-348">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="8f677-349">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="8f677-349">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="8f677-350">在调用之后立即通常使用此方法<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可以针对单个主机返回多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="8f677-350">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="8f677-351">调用此方法以建立同步远程主机连接到指定的数组的主机<xref:System.Net.IPAddress>元素和作为异步操作的端口号。</span><span class="sxs-lookup"><span data-stu-id="8f677-351">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="8f677-352">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-352">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-353">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-353">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-354">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-354">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-355">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-355">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-356">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-357">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-358">
            <paramref name="ipAddresses" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-358">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-359">端口号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-359">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-360">尝试访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-360">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-361">
            <see cref="T:System.Net.Sockets.Socket" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-361">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8f677-362">调用堆栈中的较高调用方无权执行所请求的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-362">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8f677-363">此方法对于使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 标志或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 标志的套接字有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-363">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="8f677-364">要连接到的远程主机的 DNS 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-364">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8f677-365">要连接到的远程主机的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-365">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-366">将客户端连接到指定主机上的指定 TCP 端口以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-366">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-367">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-367">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="8f677-368">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-368">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-369">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-369">This operation will not block.</span></span> <span data-ttu-id="8f677-370">返回的返回<xref:System.Threading.Tasks.Task>对象都完成后已建立 TCP 连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-370">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="8f677-371">连接请求时，此方法不会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="8f677-371">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="8f677-372">调用此方法以建立同步远程主机连接到指定的主机名和端口号作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-372">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="8f677-373">以远程主机连接后，使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法来获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-373">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-374">使用此<xref:System.Net.Sockets.NetworkStream>发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-374">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="8f677-375">如果启用了 IPv6 和<xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</span><span class="sxs-lookup"><span data-stu-id="8f677-375">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="8f677-376">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</span><span class="sxs-lookup"><span data-stu-id="8f677-376">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-377">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-377">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-378">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-378">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-379">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-379">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-380">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-380">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-381">
            <paramref name="hostname" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-381">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8f677-382">
            <paramref name="port" /> 参数不介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 与 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-382">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-383">访问套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-383">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-384">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-384">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-385">获取一个值，该值指示 <see cref="T:System.Net.Sockets.TcpClient" /> 的基础 <see cref="T:System.Net.Sockets.Socket" /> 是否已连接到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-385">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-386">如果 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 套接字与截止到最近的操作时的远程资源连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-386">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-387"><xref:System.Net.Sockets.TcpClient.Connected%2A>属性获取的连接状态<xref:System.Net.Sockets.TcpClient.Client%2A>截止到最后一个的 I/O 操作的套接字。</span><span class="sxs-lookup"><span data-stu-id="8f677-387">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="8f677-388">如果该属性返回`false`、<xref:System.Net.Sockets.TcpClient.Client%2A>套接字要么从未连接，或已断开连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-388">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="8f677-389">因为<xref:System.Net.Sockets.TcpClient.Connected%2A>属性仅反映截至最近的操作连接的状态，应尝试发送或接收消息，以确定当前状态。</span><span class="sxs-lookup"><span data-stu-id="8f677-389">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="8f677-390">该消息发送失败后，此属性将不再返回`true`。</span><span class="sxs-lookup"><span data-stu-id="8f677-390">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="8f677-391">请注意，此行为是设计使然。</span><span class="sxs-lookup"><span data-stu-id="8f677-391">Note that this behavior is by design.</span></span> <span data-ttu-id="8f677-392">不能可靠地测试连接的状态，因为在测试和发送/接收之间的时间内，连接可能已丢失。</span><span class="sxs-lookup"><span data-stu-id="8f677-392">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="8f677-393">套接字连接，并妥善处理失败传输，应假定你的代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-393">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-394">下面的代码示例连接到远程终结点，并接着验证连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-394">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f677-395">释放由 <see cref="T:System.Net.Sockets.TcpClient" /> 占用的托管和非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-395">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8f677-396">设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-396">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-397">释放由 <see cref="T:System.Net.Sockets.TcpClient" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-397">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-398">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-398">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8f677-399">`Dispose()` 调用此方法与`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="8f677-399">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8f677-400"><xref:System.Object.Finalize%2A> 调用此方法与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="8f677-400"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8f677-401">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Net.Sockets.TcpClient> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="8f677-401">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="8f677-402">这是通过调用`Dispose()`每个引用对象的方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-402">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-403">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-403">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-404">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-404">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8f677-405">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="8f677-405">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="8f677-406">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="8f677-406">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="8f677-407">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="8f677-407">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="8f677-408">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="8f677-408">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8f677-409">调用 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 后返回的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-409">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f677-410">结束挂起的异步连接尝试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-410">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-411">此方法受到阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="8f677-411">This method blocks until the operation is complete.</span></span> <span data-ttu-id="8f677-412">若要以同步方式执行此操作，使用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-412">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-413">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-413">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-414">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-414">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-415">下面的代码示例结束异步连接尝试。</span><span class="sxs-lookup"><span data-stu-id="8f677-415">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f677-416">
            <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-416">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8f677-417">调用 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 方法后，未返回 <paramref name="asyncResult" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-417">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8f677-418">先前曾为异步连接调用过 <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-418">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-419">尝试访问 <see cref="T:System.Net.Sockets.Socket" /> 时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-419">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-420">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-421">获取或设置 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.TcpClient" /> 是否只允许一个客户端使用端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-421">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-422">如果 <see cref="T:System.Net.Sockets.TcpClient" /> 只允许一个客户端使用特定端口，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-422">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8f677-423">在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <see langword="true" />；在所有其他版本中，默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-423">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-424">默认情况下，多个客户端可以使用特定端口，但是，只有一个客户端可以执行网络流量发送到端口的操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-424">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="8f677-425">你可以使用<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性以防止多个客户端使用特定端口。</span><span class="sxs-lookup"><span data-stu-id="8f677-425">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="8f677-426">基础套接字绑定到客户端端口之前，必须设置此属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-426">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="8f677-427">如果调用<xref:System.Net.Sockets.TcpClient.Connect%2A>， <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>， <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>，或<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>、 客户端端口绑定为方法中，会产生副作用和随后无法设置<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性</span><span class="sxs-lookup"><span data-stu-id="8f677-427">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-428">下面的代码示例创建<xref:System.Net.Sockets.TcpClient>和获取和设置的值<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-428">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-429">尝试访问基础套接字时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-429">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-430">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-430">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f677-431">释放 <see cref="T:System.Net.Sockets.TcpClient" /> 类使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-431">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-432">此方法重写 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8f677-432">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8f677-433">应用程序代码不应调用此方法。对象的<xref:System.Object.Finalize%2A>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-433">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8f677-434"><xref:System.Net.Sockets.TcpClient>类终结器关闭 TCP 连接并释放与关联的所有托管的资源<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="8f677-434">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="8f677-435">这些资源包括基础<xref:System.Net.Sockets.Socket>用于连接远程主机和<xref:System.Net.Sockets.NetworkStream>用于发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-435">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="8f677-436">终结器不会释放任何非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="8f677-436">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="8f677-437">有关详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="8f677-437">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f677-438">返回用于发送和接收数据的 <see cref="T:System.Net.Sockets.NetworkStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-438">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f677-439">基础 <see cref="T:System.Net.Sockets.NetworkStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-439">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 返回<xref:System.Net.Sockets.NetworkStream>可用于发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="8f677-441"><xref:System.Net.Sockets.NetworkStream>类继承自<xref:System.IO.Stream>类，该类提供丰富的方法和使用，以便简化网络通信的属性集合。</span><span class="sxs-lookup"><span data-stu-id="8f677-441">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="8f677-442">必须调用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法第一个，或<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="8f677-442">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8f677-443">您已获得了后<xref:System.Net.Sockets.NetworkStream>，调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法将数据发送到远程主机。</span><span class="sxs-lookup"><span data-stu-id="8f677-443">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="8f677-444">调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法来接收来自远程主机的数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-444">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="8f677-445">这两种方法阻止，直到执行指定的操作。</span><span class="sxs-lookup"><span data-stu-id="8f677-445">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="8f677-446">你可以避免阻塞读取操作通过检查<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-446">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="8f677-447">A`true`值表示数据已从远程主机到达并且可供读取。</span><span class="sxs-lookup"><span data-stu-id="8f677-447">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="8f677-448">在这种情况下，<xref:System.Net.Sockets.NetworkStream.Read%2A>保证立即完成。</span><span class="sxs-lookup"><span data-stu-id="8f677-448">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="8f677-449">如果远程主机已关闭连接，<xref:System.Net.Sockets.NetworkStream.Read%2A>将立即返回包含零字节的。</span><span class="sxs-lookup"><span data-stu-id="8f677-449">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-450">您必须关闭<xref:System.Net.Sockets.NetworkStream>您何时通过发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-450">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="8f677-451">关闭<xref:System.Net.Sockets.TcpClient>不会释放<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-451">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-452">如果你收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>以获得特定错误代码。</span><span class="sxs-lookup"><span data-stu-id="8f677-452">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8f677-453">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="8f677-453">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f677-454">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8f677-454">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="8f677-455">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="8f677-455">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-456">下面的代码示例使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>以获取基础<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="8f677-456">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="8f677-457">获取之后<xref:System.Net.Sockets.NetworkStream>，它将发送和接收使用其<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-457">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8f677-458">
            <see cref="T:System.Net.Sockets.TcpClient" /> 未连接到远程主机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-458">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f677-459">
            <see cref="T:System.Net.Sockets.TcpClient" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-459">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-460">获取或设置有关关联的套接字的延迟状态的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-460">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-461">
            <see cref="T:System.Net.Sockets.LingerOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-461">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="8f677-462">默认情况下，禁用逗留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-462">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-463"><xref:System.Net.Sockets.TcpClient.LingerState%2A>属性用于更改方式<xref:System.Net.Sockets.Socket.Close%2A>方法的行为。</span><span class="sxs-lookup"><span data-stu-id="8f677-463">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="8f677-464">当组修改在其下连接可以重置通过 Winsock 的条件时，此属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-464">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="8f677-465">连接重置仍会发生根据 IP 协议行为。</span><span class="sxs-lookup"><span data-stu-id="8f677-465">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="8f677-466">此属性控制的 TCP 连接到在调用后将保持打开的时间长度<xref:System.Net.Sockets.TcpClient.Close%2A>仍然要发送数据时。</span><span class="sxs-lookup"><span data-stu-id="8f677-466">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="8f677-467">当调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，数据位于传出的网络缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="8f677-467">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="8f677-468">此属性可以用于确保将此数据发送到远程主机之前<xref:System.Net.Sockets.TcpClient.Close%2A>方法删除连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-468">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="8f677-469">若要启用延迟，创建<xref:System.Net.Sockets.LingerOption>实例包含所需的值，并设置<xref:System.Net.Sockets.TcpClient.LingerState%2A>指向此实例的属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-469">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="8f677-470">下表描述的行为<xref:System.Net.Sockets.TcpClient.Close%2A>输入的可能的值的方法<xref:System.Net.Sockets.LingerOption.Enabled%2A>属性和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-470">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="8f677-471">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="8f677-471">LingerState.Enabled</span></span>|<span data-ttu-id="8f677-472">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="8f677-472">LingerState.LingerTime</span></span>|<span data-ttu-id="8f677-473">行为</span><span class="sxs-lookup"><span data-stu-id="8f677-473">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="8f677-474">`false` （禁用），默认值</span><span class="sxs-lookup"><span data-stu-id="8f677-474">`false` (disabled), the default value</span></span>|<span data-ttu-id="8f677-475">超时不适用，（默认值）。</span><span class="sxs-lookup"><span data-stu-id="8f677-475">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="8f677-476">尝试发送数据挂起，直到默认 IP 协议超时时间已到。</span><span class="sxs-lookup"><span data-stu-id="8f677-476">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="8f677-477">`true` （已启用）</span><span class="sxs-lookup"><span data-stu-id="8f677-477">`true` (enabled)</span></span>|<span data-ttu-id="8f677-478">非零的超时</span><span class="sxs-lookup"><span data-stu-id="8f677-478">A nonzero time-out</span></span>|<span data-ttu-id="8f677-479">尝试发送挂起的数据，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-479">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="8f677-480">`true` （已启用）</span><span class="sxs-lookup"><span data-stu-id="8f677-480">`true` (enabled)</span></span>|<span data-ttu-id="8f677-481">零超时。</span><span class="sxs-lookup"><span data-stu-id="8f677-481">A zero timeout.</span></span>|<span data-ttu-id="8f677-482">丢弃所有挂起的数据和 Winsock 重置连接。</span><span class="sxs-lookup"><span data-stu-id="8f677-482">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="8f677-483">IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。</span><span class="sxs-lookup"><span data-stu-id="8f677-483">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="8f677-484">在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。</span><span class="sxs-lookup"><span data-stu-id="8f677-484">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="8f677-485">这是一个套接字的默认行为时<xref:System.Net.Sockets.TcpClient.LingerState%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8f677-485">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="8f677-486">当<xref:System.Net.Sockets.LingerOption.LingerTime%2A>属性存储在<xref:System.Net.Sockets.TcpClient.LingerState%2A>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</span><span class="sxs-lookup"><span data-stu-id="8f677-486">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-487">下面的代码示例设置并获取套接字逗留时间。</span><span class="sxs-lookup"><span data-stu-id="8f677-487">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-488">获取或设置一个值，该值在发送或接收缓冲区未满时禁用延迟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-488">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-489">如果禁用延迟，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-489">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8f677-490">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-490">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-491">当<xref:System.Net.Sockets.TcpClient.NoDelay%2A>是`false`、<xref:System.Net.Sockets.TcpClient>不通过网络发送数据包，直到它收集占用大量的传出数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-491">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="8f677-492">由于在 TCP 段的消耗的资源量，发送少量数据的效率低。</span><span class="sxs-lookup"><span data-stu-id="8f677-492">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="8f677-493">但是，情况下，还存在需要发送极少量的数据或预期从你发送每个数据包的即时响应。</span><span class="sxs-lookup"><span data-stu-id="8f677-493">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="8f677-494">你的决策应权衡网络效率与应用程序要求的相对重要性。</span><span class="sxs-lookup"><span data-stu-id="8f677-494">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-495">下面的代码示例禁用延迟。</span><span class="sxs-lookup"><span data-stu-id="8f677-495">The following code example disables the delay.</span></span> <span data-ttu-id="8f677-496">然后，它检查的值<xref:System.Net.Sockets.TcpClient.NoDelay%2A>若要验证的属性已成功设置。</span><span class="sxs-lookup"><span data-stu-id="8f677-496">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-497">获取或设置接收缓冲区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-497">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-498">接收缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-498">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="8f677-499">默认值为 8192 字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-499">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-500"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>属性获取或设置您希望为每次读操作接收缓冲区中存储的字节数。</span><span class="sxs-lookup"><span data-stu-id="8f677-500">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="8f677-501">此属性的实际操作对象分配用于接收传入数据的网络缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="8f677-501">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="8f677-502">你的网络缓冲区应至少为你的应用程序缓冲区，以确保在调用时，将导致所需的数据可用一样大<xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-502">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8f677-503">使用<xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>属性来设置此大小。</span><span class="sxs-lookup"><span data-stu-id="8f677-503">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="8f677-504">如果你的应用程序将接收大容量数据，则应传递<xref:System.Net.Sockets.NetworkStream.Read%2A>方法非常大的应用程序缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8f677-504">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="8f677-505">你的网络缓冲区小于数据量是否在中请求<xref:System.Net.Sockets.NetworkStream.Read%2A>方法，你将无法检索所需在一个读取操作中的数据量。</span><span class="sxs-lookup"><span data-stu-id="8f677-505">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="8f677-506">这将带来到其他调用的开销<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-506">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-507">下面的代码示例设置，并获取接收缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="8f677-507">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8f677-508">设置缓冲区大小时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-508">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="8f677-509">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-509">-or-</span>
          </span>
          <span data-ttu-id="8f677-510">在 .NET Compact Framework 应用程序中，无法设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-510">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="8f677-511">有关解决方法，请参阅“备注”中的“平台说明”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-511">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-512">获取或设置在初始化一个读取操作以后 <see cref="T:System.Net.Sockets.TcpClient" /> 等待接收数据的时间量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-512">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-513">连接的超时值（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-513">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="8f677-514">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-514">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-515"><xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A>属性确定的时间量，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法将阻止，直到它能够接收数据。</span><span class="sxs-lookup"><span data-stu-id="8f677-515">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="8f677-516">此时间以毫秒为单位。</span><span class="sxs-lookup"><span data-stu-id="8f677-516">This time is measured in milliseconds.</span></span> <span data-ttu-id="8f677-517">如果超时到期之前<xref:System.Net.Sockets.NetworkStream.Read%2A>成功完成，<xref:System.Net.Sockets.TcpClient>引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="8f677-517">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="8f677-518">默认情况下为无超时。</span><span class="sxs-lookup"><span data-stu-id="8f677-518">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-519">下面的代码示例设置，并获取接收超时值。</span><span class="sxs-lookup"><span data-stu-id="8f677-519">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-520">获取或设置发送缓冲区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-520">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-521">发送缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-521">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="8f677-522">默认值为 8192 字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-522">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-523"><xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>属性获取或设置您希望在每次调用中发送的字节数<xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-523">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8f677-524">此属性的实际操作对象为发送操作分配的网络缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="8f677-524">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="8f677-525">你的网络缓冲区应至少为你的应用程序缓冲区，以确保所需的数据将存储并在一个操作中发送一样大。</span><span class="sxs-lookup"><span data-stu-id="8f677-525">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="8f677-526">使用<xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>属性来设置此大小。</span><span class="sxs-lookup"><span data-stu-id="8f677-526">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="8f677-527">如果你的应用程序将发送大容量数据，则应传递<xref:System.Net.Sockets.NetworkStream.Write%2A>方法非常大的应用程序缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8f677-527">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="8f677-528">如果网络缓冲区小于数据量则提供<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，多个网络将为您对每个调用执行的操作的发送<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8f677-528">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="8f677-529">通过确保你的网络缓冲区至少与你的应用程序缓冲区一样大，可以获得更大的数据吞吐量。</span><span class="sxs-lookup"><span data-stu-id="8f677-529">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-530">下面的代码示例设置，并获取发送缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="8f677-530">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f677-531">获取或设置 <see cref="T:System.Net.Sockets.TcpClient" /> 等待发送操作成功完成的时间量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-531">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f677-532">发送超时值（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-532">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="8f677-533">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f677-533">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f677-534"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>属性确定的时间量，<xref:System.Net.Sockets.Socket.Send%2A>方法将阻塞，直到能够成功返回。</span><span class="sxs-lookup"><span data-stu-id="8f677-534">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="8f677-535">此时间以毫秒为单位。</span><span class="sxs-lookup"><span data-stu-id="8f677-535">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="8f677-536">调用后<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，基础<xref:System.Net.Sockets.Socket>返回到主机实际发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="8f677-536">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="8f677-537"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>属性确定的时间量<xref:System.Net.Sockets.TcpClient>接收的字节数返回之前将等待。</span><span class="sxs-lookup"><span data-stu-id="8f677-537">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="8f677-538">如果超时到期之前<xref:System.Net.Sockets.Socket.Send%2A>方法已成功完成时，<xref:System.Net.Sockets.TcpClient>将引发<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="8f677-538">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8f677-539">默认情况下为无超时。</span><span class="sxs-lookup"><span data-stu-id="8f677-539">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f677-540">下面的代码示例设置和获取<xref:System.Net.Sockets.TcpClient.SendTimeout%2A>值。</span><span class="sxs-lookup"><span data-stu-id="8f677-540">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>