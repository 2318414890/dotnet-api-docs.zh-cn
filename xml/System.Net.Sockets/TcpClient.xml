<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpClient.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Provides client connections for TCP network services.</source>
          <target state="translated">为 TCP 网络服务提供客户端连接。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>类提供了简单的方法来连接、 发送，并且接收流数据通过同步阻止模式下的网络。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>In order for <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> to connect and exchange data, a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> created with the TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> must be listening for incoming connection requests.</source>
          <target state="translated">为了使<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>进行连接并与其交换数据，<ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>创建与 TCP<ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph>必须侦听传入连接请求。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>You can connect to this listener in one of the following two ways:</source>
          <target state="translated">你可以连接到此侦听器的以下两种方法之一：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and call one of the three available <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> methods.</source>
          <target state="translated">创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>并调用其中一个可用的三个<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using the host name and port number of the remote host.</source>
          <target state="translated">创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>使用主机名和端口号的远程主机。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>This constructor will automatically attempt a connection.</source>
          <target state="translated">此构造函数将自动尝试连接。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>If you want to send connectionless datagrams in synchronous blocking mode, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">如果你想要在同步阻止的模式下发送无连接数据报，使用<ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The following code example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connection.</source>
          <target state="translated">下面的代码示例建立<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>连接。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Permission to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">若要建立一个传出连接或接受传入请求的权限。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>To send and receive data, use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> method to obtain a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">若要发送和接收数据，使用<ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph>方法来获取<ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> to send and receive data with the remote host.</source>
          <target state="translated">调用<ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>方法<ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>发送和接收与远程主机的数据。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> method to release all resources associated with the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph>方法来释放与关联的所有资源<ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IP address and port number.</source>
          <target state="translated">此构造函数创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和允许基础服务提供程序分配的最合适的本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">必须先调用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>之前发送和接收数据的方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">此构造函数仅适用于 IPv4 地址类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>The following code example demonstrates how to use the default constructor to create a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用默认构造函数来创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you bind the TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">要将 TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 绑定到的 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类的新实例，并将其绑定到指定的本地终结点。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">此构造函数创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和将其绑定到<ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>指定的<ph id="ph3">`localEP`</ph>参数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">在调用此构造函数之前，必须创建<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>使用你想要发送和接收数据的 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number before connecting and communicating.</source>
          <target state="translated">不需要连接和通信之前指定本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">如果你创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>使用任何其他构造函数，则基础的服务提供程序将分配的最合适的本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>之前发送和接收数据的方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">下面的代码示例演示如何创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>类使用本地终结点。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The  <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> of the IP protocol.</source>
          <target state="translated">IP 协议的 <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class with the specified family.</source>
          <target state="translated">使用指定的族初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetwork</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 参数不等于 AddressFamily.InterNetwork</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetworkV6</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 参数不等于 AddressFamily.InterNetworkV6</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的 DNS 名。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and connects to the specified port on the specified host.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类的新实例并连接到指定主机上的指定端口。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and makes a synchronous connection attempt to the provided host name and port number.</source>
          <target state="translated">此构造函数创建一个新<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和同步连接尝试提供的主机名和端口号。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">基础服务提供程序将分配的最合适的本地 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 将阻止，直到连接成功或失败。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</source>
          <target state="translated">此构造函数可以初始化，并解析的 DNS 主机名，连接在一个方便的步骤。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">如果启用了 IPv6 和<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">下面的代码示例演示如何创建的实例<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>类使用主机名和端口号。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 参数不介于 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 与 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Gets or set a value that indicates whether a connection has been made.</source>
          <target state="translated">获取或设置一个值，该值指示是否已建立连接。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection has been made; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已建立连接，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to determine if a connection attempt has succeeded.</source>
          <target state="translated">类派生自<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>可以使用此属性以确定是否已成功连接尝试。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>It does not monitor the ongoing connection state of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">它无法监测的正在进行的连接状态<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If the remote host closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> will not be updated.</source>
          <target state="translated">如果远程主机关闭的连接，<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph>将不会更新。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If you are deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and require closer attention to the connection state, use the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> method.</source>
          <target state="translated">如果派生自<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和要求更密切关注连接状态，请使用<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>返回<ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>Gets the amount of data that has been received from the network and is available to be read.</source>
          <target state="translated">获取已经从网络接收且可供读取的数据量。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The number of bytes of data received from the network and available to be read.</source>
          <target state="translated">从网络接收的、可供读取的数据的字节数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> is a way to determine whether data is queued for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> 是一种方法，以便确定是否将数据排队以进行读取。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">如果数据不可用，调用<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>获取数据。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The available data is the total amount of data queued in the network buffer for reading.</source>
          <target state="translated">可用的数据是在读取的网络缓冲区中排队的总数据量。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If no data is queued in the network buffer, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> returns 0.</source>
          <target state="translated">如果无数据排队网络缓冲区中<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph>返回 0。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If the remote host shuts down or closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> may throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果远程主机关闭或关闭了连接，<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph>可能会引发<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">开始一个对远程主机连接的异步请求。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host.</source>
          <target state="translated">远程主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">一个用户定义对象，其中包含连接操作的相关信息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">开始一个对远程主机连接的异步请求。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">远程主机由 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 和端口号 (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>) 指定。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步连接。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`asyncCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">此方法不会阻止该操作完成之前。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和连接到远程主机。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">调用堆栈中的较高调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">端口号无效。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>At least one <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that designates the remote hosts.</source>
          <target state="translated">至少一个指定远程主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote hosts.</source>
          <target state="translated">远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">一个用户定义对象，其中包含连接操作的相关信息。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">开始一个对远程主机连接的异步请求。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">远程主机由 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 数组和端口号 (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>) 指定。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步连接。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`asyncCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">此方法不会阻止该操作完成之前。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">在调用之后立即通常使用此方法<ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph>方法，可以针对单个主机返回多个 IP 地址。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和连接到远程主机。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">调用堆栈中的较高调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">端口号无效。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The name of the remote host.</source>
          <target state="translated">远程主机的名称。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托，它引用操作完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">一个用户定义对象，其中包含连接操作的相关信息。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">操作完成后，此对象会被传递给 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 委托。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">开始一个对远程主机连接的异步请求。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by a host name (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">远程主机由主机名 (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) 和端口号 (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>) 指定。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象，它引用异步连接。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">异步<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>操作必须通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常情况下，通过调用该方法<ph id="ph1">`asyncCallback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">此方法不会阻止该操作完成之前。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要阻止该操作完成之前，请使用之一<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">有关使用异步编程模型的详细信息，请参阅<bpt id="p1">[</bpt>异步调用同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和连接到远程主机。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">调用堆栈中的较高调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">端口号无效。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Gets or sets the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">获取或设置基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">基础网络 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 创建<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>发送和通过网络接收数据。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">类派生自<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>可以使用此属性来获取或设置此<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides.</source>
          <target state="translated">使用基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>从返回<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>如果需要访问之外，这些设备<ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>设置基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>到一个现有<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>This might be useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">这可能很有用，如果你想要充分利用的简单性<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>使用预先存在的<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>In this example, the receive buffer size of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is changed.</source>
          <target state="translated">在此示例中，接收缓冲区的大小的基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>更改。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> instance and requests that the underlying TCP connection be closed.</source>
          <target state="translated">释放此 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 实例，并请求关闭基础 TCP 连接。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method marks the instance as disposed and requests that the associated <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> close the TCP connection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>方法将标记为已释放的实例，并请求关联<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>关闭 TCP 连接。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Based on the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property, the TCP connection may stay open for some time after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method is called when data remains to be sent.</source>
          <target state="translated">基于<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>属性，TCP 连接可能保持打开状态一段时间后<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>仍然要发送数据时，调用方法。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>There is no notification provided when the underlying connection has completed closing.</source>
          <target state="translated">则不提供基础连接完成后关闭显示通知。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Calling this method will eventually result in the close of the associated <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and will also close the associated <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is used to send and receive data if one was created.</source>
          <target state="translated">调用此方法最终将导致关联的关闭<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>并且还将关闭关联<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>用于发送和接收数据，如果已创建一个。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The following code example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示结束<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>通过调用<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number.</source>
          <target state="translated">使用指定的主机名和端口号将客户端连接到 TCP 主机。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you intend to connect.</source>
          <target state="translated">您打算连接到的 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Connects the client to a remote TCP host using the specified remote network endpoint.</source>
          <target state="translated">使用指定的远程网络终结点将客户端连接到远程 TCP 主机。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">调用此方法以建立与指定的同步远程主机连接<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Before you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> you must create an instance of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> class using an IP address and a port number.</source>
          <target state="translated">在调用之前<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>必须创建的实例<ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>类使用的 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> as the <ph id="ph2">`remoteEP`</ph> parameter.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>作为<ph id="ph2">`remoteEP`</ph>参数。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法将阻塞，直到连接成功或失败。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The following code example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to connect with a remote host.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>与远程主机连接。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">你打算连接到的主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">要连接到的端口号。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number.</source>
          <target state="translated">使用指定的 IP 地址和端口号将客户端连接到 TCP 主机。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number.</source>
          <target state="translated">调用此方法以建立与指定的同步远程主机连接<ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>和端口号。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法将阻塞，直到连接成功或失败。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">要连接到的主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">要连接到的端口号。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number.</source>
          <target state="translated">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">在调用之后立即通常使用此方法<ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph>方法，可以针对单个主机返回多个 IP 地址。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法来建立与指定的数组的主机的同步远程主机连接<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>元素和端口号。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法将阻塞，直到连接成功或失败。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">下面的代码示例使用一个 IP 地址和端口号与远程主机连接。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">端口号无效。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">调用堆栈中的较高调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">此方法对于使用 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 标志或 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> 标志的套接字有效。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的 DNS 名。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Connects the client to the specified port on the specified host.</source>
          <target state="translated">将客户端连接到指定主机上的指定端口。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number.</source>
          <target state="translated">调用此方法以建立同步远程主机连接到指定的主机名和端口号。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法将阻塞，直到连接成功或失败。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">如果启用了 IPv6 和<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The following code example uses the host name and port number to connect with a remote host.</source>
          <target state="translated">下面的代码示例使用要与远程主机连接的主机名和端口号。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 参数不介于 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 与 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">使用指定的主机名和端口号将客户端连接到远程 TCP 主机以作为异步操作。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">你打算连接到的主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">要连接到的端口号。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</source>
          <target state="translated">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">返回的返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>对象都完成后已建立 TCP 连接。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">连接请求时，此方法不会阻止调用线程。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number as an asynchronous operation.</source>
          <target state="translated">调用此方法以建立与指定的同步远程主机连接<ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>和端口号作为异步操作。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">要连接到的主机的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">要连接到的端口号。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</source>
          <target state="translated">使用指定的 IP 地址和端口号将客户端连接到远程 TCP 主机以作为异步操作。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">返回的返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>对象都完成后已建立 TCP 连接。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">连接请求时，此方法不会阻止调用线程。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">在调用之后立即通常使用此方法<ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph>方法，可以针对单个主机返回多个 IP 地址。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number as an asynchronous operation.</source>
          <target state="translated">调用此方法以建立同步远程主机连接到指定的数组的主机<ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>元素和作为异步操作的端口号。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">端口号无效。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">尝试访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">调用堆栈中的较高调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">此方法对于使用 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 标志或 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> 标志的套接字有效。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的 DNS 名。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">要连接到的远程主机的端口号。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</source>
          <target state="translated">将客户端连接到指定主机上的指定 TCP 端口以作为异步操作。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">返回的返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>对象都完成后已建立 TCP 连接。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">连接请求时，此方法不会阻止调用线程。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">调用此方法以建立同步远程主机连接到指定的主机名和端口号作为异步操作。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">以远程主机连接后，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法来获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>发送和接收数据。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">如果启用了 IPv6 和<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph>调用方法来连接到的主机，将解析为这两个 IPv6 和 IPv4 地址、 IPv6 地址将与连接尝试之前的 IPv4 地址的第一个。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">这可能产生的延迟的时间来建立连接，如果主机未侦听 IPv6 地址的效果。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 参数不介于 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> 与 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 之间。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">访问套接字时出错。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Gets a value indicating whether the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is connected to a remote host.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 的基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 是否已连接到远程主机。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> socket was connected to a remote resource as of the most recent operation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> 套接字与截止到最近的操作时的远程资源连接，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property gets the connection state of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket as of the last I/O operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph>属性获取的连接状态<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>截止到最后一个的 I/O 操作的套接字。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>When it returns <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket was either never connected, or is no longer connected.</source>
          <target state="translated">如果该属性返回<ph id="ph1">`false`</ph>、<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>套接字要么从未连接，或已断开连接。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph>属性仅反映截至最近的操作连接的状态，应尝试发送或接收消息，以确定当前状态。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>After the message send fails, this property no longer returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">该消息发送失败后，此属性将不再返回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Note that this behavior is by design.</source>
          <target state="translated">请注意，此行为是设计使然。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</source>
          <target state="translated">不能可靠地测试连接的状态，因为在测试和发送/接收之间的时间内，连接可能已丢失。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Your code should assume the socket is connected, and gracefully handle failed transmissions.</source>
          <target state="translated">套接字连接，并妥善处理失败传输，应假定你的代码。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The following code example connects to a remote endpoint and then verifies the connection.</source>
          <target state="translated">下面的代码示例连接到远程终结点，并接着验证连接。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 占用的托管和非托管资源。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 可释放托管资源和非托管资源；设置为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 只能释放非托管资源。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用此方法与<ph id="ph2">`disposing`</ph>参数设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用此方法与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>It does this by invoking the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">这是通过调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 时，请注意不要引用在以前调用 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 时已释放的对象。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</source>
          <target state="translated">调用 <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> 后返回的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>Ends a pending asynchronous connection attempt.</source>
          <target state="translated">结束挂起的异步连接尝试。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">此方法受到阻止，直到操作完成。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>To perform this operation synchronously, use a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式执行此操作，使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">获取此代码后，可以在 MSDN 库中的 Windows 套接字版本 2 API 错误代码文档引用<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The following code example ends the asynchronous connection attempt.</source>
          <target state="translated">下面的代码示例结束异步连接尝试。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not returned by a call to a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> method.</source>
          <target state="translated">调用 <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> 方法后，未返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> method was previously called for the asynchronous connection.</source>
          <target state="translated">先前曾为异步连接调用过 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An error occurred when attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">尝试访问 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 时出错。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指定 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 是否只允许一个客户端使用端口。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 只允许一个客户端使用特定端口，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">在 Windows Server 2003、Windows XP Service Pack 2 及更高版本中，默认为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；在所有其他版本中，默认为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">默认情况下，多个客户端可以使用特定端口，但是，只有一个客户端可以执行网络流量发送到端口的操作。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph>属性以防止多个客户端使用特定端口。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">基础套接字绑定到客户端端口之前，必须设置此属性。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, the client port is bound as a side effect of the method, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>、 客户端端口绑定为方法中，会产生副作用和随后无法设置<ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph>属性</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and gets and sets the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>和获取和设置的值<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">尝试访问基础套接字时出错。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">已关闭基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 类使用的资源。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此方法重写 <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">应用程序代码不应调用此方法。对象的<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class finalizer closes the TCP connection and releases all managed resources associated with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>类终结器关闭 TCP 连接并释放与关联的所有托管的资源<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>These resources include the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for connecting with the remote host, and the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> used to send and receive data.</source>
          <target state="translated">这些资源包括基础<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>用于连接远程主机和<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>用于发送和接收数据。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The finalizer does not release any unmanaged resources.</source>
          <target state="translated">终结器不会释放任何非托管的资源。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Finalize 方法和析构函数<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清洗向上非托管资源<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>，和<bpt id="p3">[</bpt>重写 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">返回用于发送和接收数据的 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">基础 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 返回<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>可用于发送和接收数据。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides a rich collection of methods and properties used to facilitate network communications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>类继承自<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>类，该类提供丰富的方法和使用，以便简化网络通信的属性集合。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method first, or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method will throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>方法第一个，或<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>方法会引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method to send data to the remote host.</source>
          <target state="translated">您已获得了后<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>，调用<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法将数据发送到远程主机。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method to receive data arriving from the remote host.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法来接收来自远程主机的数据。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Both of these methods block until the specified operation is performed.</source>
          <target state="translated">这两种方法阻止，直到执行指定的操作。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You can avoid blocking on a read operation by checking the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property.</source>
          <target state="translated">你可以避免阻塞读取操作通过检查<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>A <ph id="ph1">`true`</ph> value means that data has arrived from the remote host and is available for reading.</source>
          <target state="translated">A<ph id="ph1">`true`</ph>值表示数据已从远程主机到达并且可供读取。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>In this case, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> is guaranteed to complete immediately.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>保证立即完成。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If the remote host has shutdown its connection, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> will immediately return with zero bytes.</source>
          <target state="translated">如果远程主机已关闭连接，<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>将立即返回包含零字节的。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must close the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> when you are through sending and receiving data.</source>
          <target state="translated">您必须关闭<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>您何时通过发送和接收数据。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Closing <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not release the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">关闭<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>不会释放<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">如果你收到<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph>以获得特定错误代码。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">获取此代码后，你可以参考 Windows 套接字版本 2 API 错误代码文档 MSDN 中有关错误的详细说明。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph>以获取基础<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After obtaining the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, it sends and receives using its <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods.</source>
          <target state="translated">获取之后<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>，它将发送和接收使用其<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is not connected to a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 未连接到远程主机。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Gets or sets information about the linger state of the associated socket.</source>
          <target state="translated">获取或设置有关关联的套接字的延迟状态的信息。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>By default, lingering is disabled.</source>
          <target state="translated">默认情况下，禁用逗留。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property changes the way <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method behaves.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>属性用于更改方式<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph>方法的行为。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property when set modifies the conditions under which the connection can be reset by Winsock.</source>
          <target state="translated">当组修改在其下连接可以重置通过 Winsock 的条件时，此属性。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Connection resets can still occur based on the IP protocol behavior.</source>
          <target state="translated">连接重置仍会发生根据 IP 协议行为。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property controls the length of time that the TCP connection will remain open after a call to <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> when data remains to be sent.</source>
          <target state="translated">此属性控制的 TCP 连接到在调用后将保持打开的时间长度<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>仍然要发送数据时。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, data is placed in the outgoing network buffer.</source>
          <target state="translated">当调用<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法，数据位于传出的网络缓冲区中。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property can be used to ensure that this data is sent to the remote host before the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method drops the connection.</source>
          <target state="translated">此属性可以用于确保将此数据发送到远程主机之前<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>方法删除连接。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>To enable lingering, create a <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> instance containing the desired values, and set the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property to this instance.</source>
          <target state="translated">若要启用延迟，创建<ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph>实例包含所需的值，并设置<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>指向此实例的属性。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following table describes the behavior of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method for the possible values of the <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property.</source>
          <target state="translated">下表描述的行为<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph>输入的可能的值的方法<ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph>属性和<ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph>属性存储在<ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.Enabled</source>
          <target state="translated">LingerState.Enabled</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.LingerTime</source>
          <target state="translated">LingerState.LingerTime</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Behavior</source>
          <target state="translated">行为</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`false`</ph> (disabled), the default value</source>
          <target state="translated"><ph id="ph1">`false`</ph> （禁用），默认值</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The time-out is not applicable, (default).</source>
          <target state="translated">超时不适用，（默认值）。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the default IP protocol time-out expires.</source>
          <target state="translated">尝试发送数据挂起，直到默认 IP 协议超时时间已到。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> （已启用）</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A nonzero time-out</source>
          <target state="translated">非零的超时</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</source>
          <target state="translated">尝试发送挂起的数据，直到指定的超时时间已到，如果尝试失败，然后 Winsock 重置连接。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> （已启用）</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A zero timeout.</source>
          <target state="translated">零超时。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Discards any pending data and Winsock resets the connection.</source>
          <target state="translated">丢弃所有挂起的数据和 Winsock 重置连接。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</source>
          <target state="translated">IP 堆栈计算默认 IP 协议超时期限为使用基于连接的往返时间。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>In most cases, the time-out computed by the stack is more relevant than one defined by an application.</source>
          <target state="translated">在大多数情况下，该堆栈计算的该超时是个应用程序定义更具相关性。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This is the default behavior for a socket when the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is not set.</source>
          <target state="translated">这是一个套接字的默认行为时<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When the <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph>属性存储在<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph>属性设置大于默认 IP 协议超时值，则仍将应用和重写的默认 IP 协议超时时间。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following code example sets and gets the sockets linger time.</source>
          <target state="translated">下面的代码示例设置并获取套接字逗留时间。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Gets or sets a value that disables a delay when send or receive buffers are not full.</source>
          <target state="translated">获取或设置一个值，该值在发送或接收缓冲区未满时禁用延迟。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the delay is disabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果禁用延迟，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>When <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not send a packet over the network until it has collected a significant amount of outgoing data.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph>是<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>不通过网络发送数据包，直到它收集占用大量的传出数据。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</source>
          <target state="translated">由于在 TCP 段的消耗的资源量，发送少量数据的效率低。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</source>
          <target state="translated">但是，情况下，还存在需要发送极少量的数据或预期从你发送每个数据包的即时响应。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Your decision should weigh the relative importance of network efficiency versus application requirements.</source>
          <target state="translated">你的决策应权衡网络效率与应用程序要求的相对重要性。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The following code example disables the delay.</source>
          <target state="translated">下面的代码示例禁用延迟。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>It then checks the value of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> to verify that the property was successfully set.</source>
          <target state="translated">然后，它检查的值<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph>若要验证的属性已成功设置。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Gets or sets the size of the receive buffer.</source>
          <target state="translated">获取或设置接收缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The size of the receive buffer, in bytes.</source>
          <target state="translated">接收缓冲区的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">默认值为 8192 字节。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph>属性获取或设置您希望为每次读操作接收缓冲区中存储的字节数。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This property actually manipulates the network buffer space allocated for receiving incoming data.</source>
          <target state="translated">此属性的实际操作对象分配用于接收传入数据的网络缓冲区空间。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你的网络缓冲区应至少为你的应用程序缓冲区，以确保在调用时，将导致所需的数据可用一样大<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph>属性来设置此大小。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If your application will be receiving bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">如果你的应用程序将接收大容量数据，则应传递<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法非常大的应用程序缓冲区。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If the network buffer is smaller than the amount of data you request in the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method, you will not be able to retrieve the desired amount of data in one read operation.</source>
          <target state="translated">你的网络缓冲区小于数据量是否在中请求<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法，你将无法检索所需在一个读取操作中的数据量。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This incurs the overhead of additional calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">这将带来到其他调用的开销<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The following code example sets and gets the receive buffer size.</source>
          <target state="translated">下面的代码示例设置，并获取接收缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>An error occurred when setting the buffer size.</source>
          <target state="translated">设置缓冲区大小时出错。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>In .NET Compact Framework applications, you cannot set this property.</source>
          <target state="translated">在 .NET Compact Framework 应用程序中，无法设置此属性。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>For a workaround, see the Platform Note in Remarks.</source>
          <target state="translated">有关解决方法，请参阅“备注”中的“平台说明”。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait to receive data once a read operation is initiated.</source>
          <target state="translated">获取或设置在初始化一个读取操作以后 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 等待接收数据的时间量。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The time-out value of the connection in milliseconds.</source>
          <target state="translated">连接的超时值（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The default value is 0.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method will block until it is able to receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph>属性确定的时间量，<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>方法将阻止，直到它能够接收数据。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">此时间以毫秒为单位。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>If the time-out expires before <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throws a <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">如果超时到期之前<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph>成功完成，<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>引发<ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">默认情况下为无超时。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The following code example sets and gets the receive time out.</source>
          <target state="translated">下面的代码示例设置，并获取接收超时值。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Gets or sets the size of the send buffer.</source>
          <target state="translated">获取或设置发送缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The size of the send buffer, in bytes.</source>
          <target state="translated">发送缓冲区的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">默认值为 8192 字节。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to send in each call to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph>属性获取或设置您希望在每次调用中发送的字节数<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>This property actually manipulates the network buffer space allocated for send operation.</source>
          <target state="translated">此属性的实际操作对象为发送操作分配的网络缓冲区空间。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</source>
          <target state="translated">你的网络缓冲区应至少为你的应用程序缓冲区，以确保所需的数据将存储并在一个操作中发送一样大。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph>属性来设置此大小。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If your application will be sending bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">如果你的应用程序将发送大容量数据，则应传递<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法非常大的应用程序缓冲区。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If the network buffer is smaller than the amount of data you provide the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, several network send operations will be performed for every call you make to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">如果网络缓冲区小于数据量则提供<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法，多个网络将为您对每个调用执行的操作的发送<ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</source>
          <target state="translated">通过确保你的网络缓冲区至少与你的应用程序缓冲区一样大，可以获得更大的数据吞吐量。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The following code example sets and gets the send buffer size.</source>
          <target state="translated">下面的代码示例设置，并获取发送缓冲区大小。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait for a send operation to complete successfully.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 等待发送操作成功完成的时间量。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The send time-out value, in milliseconds.</source>
          <target state="translated">发送超时值（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The default is 0.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method will block until it is able to return successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph>属性确定的时间量，<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph>方法将阻塞，直到能够成功返回。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">此时间以毫秒为单位。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>After you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returns the number of bytes actually sent to the host.</source>
          <target state="translated">调用后<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph>方法，基础<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>返回到主机实际发送的字节数。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will wait before receiving the number of bytes returned.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph>属性确定的时间量<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>接收的字节数返回之前将等待。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>If the time-out expires before the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">如果超时到期之前<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph>方法已成功完成时，<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>将引发<ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">默认情况下为无超时。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The following code example sets and gets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> value.</source>
          <target state="translated">下面的代码示例设置和获取<ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph>值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>