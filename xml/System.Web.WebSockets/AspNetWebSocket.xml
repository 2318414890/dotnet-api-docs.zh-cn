<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55b69-101">表示实施全双工连接（在 Web 服务器和 ASP.NET 应用程序中的客户端之间）。</span><span class="sxs-lookup"><span data-stu-id="55b69-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55b69-102">取消 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象中的任何挂起的 I/O 操作，并设置该对象的状态，以便它不能用于启动其他的 I/O 操作。</span><span class="sxs-lookup"><span data-stu-id="55b69-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55b69-103">后<xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A>调用方法，您仍可以访问属性和不涉及 I/O 操作的方法。</span><span class="sxs-lookup"><span data-stu-id="55b69-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-104">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="55b69-105">关闭操作的状态代码。</span><span class="sxs-lookup"><span data-stu-id="55b69-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="55b69-106">关闭操作的状态消息。</span><span class="sxs-lookup"><span data-stu-id="55b69-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55b69-107">取消挂起操作的对象。</span><span class="sxs-lookup"><span data-stu-id="55b69-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="55b69-108">发送异步消息给客户以关闭连接。</span><span class="sxs-lookup"><span data-stu-id="55b69-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="55b69-109">如果服务器初始化关闭连接请求，则该方法在返回前会一直等待客户端的通知。</span><span class="sxs-lookup"><span data-stu-id="55b69-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="55b69-110">操作的引用。</span><span class="sxs-lookup"><span data-stu-id="55b69-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55b69-111">你可以使用<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>和<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法的客户端启动，又由服务器启动请求，以关闭<xref:System.Web.WebSockets.AspNetWebSocket>连接。</span><span class="sxs-lookup"><span data-stu-id="55b69-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="55b69-112">这两种方法在相同的方式中处理客户端发起的请求： 后客户端将消息发送到服务器后，关闭连接，服务器调用这些方法之一，并将确认发送到客户端，并且该方法将返回。</span><span class="sxs-lookup"><span data-stu-id="55b69-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="55b69-113">对于由服务器启动请求，这两种方法以不同的方式工作。</span><span class="sxs-lookup"><span data-stu-id="55b69-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="55b69-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>方法将消息发送到客户端关闭连接，等待响应，然后返回。</span><span class="sxs-lookup"><span data-stu-id="55b69-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="55b69-115">服务器不会等待客户端发送任何额外数据。</span><span class="sxs-lookup"><span data-stu-id="55b69-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="55b69-116">与此相反，<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法将消息发送到客户端关闭连接并返回而不等待响应。</span><span class="sxs-lookup"><span data-stu-id="55b69-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="55b69-117">该方法返回后，你可以调用<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>方法并处理其他数据或客户端发送该确认。</span><span class="sxs-lookup"><span data-stu-id="55b69-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-118"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55b69-119"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象处于中止状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="55b69-120">或</span><span class="sxs-lookup"><span data-stu-id="55b69-120">-or-</span></span>  
  
 <span data-ttu-id="55b69-121">发送操作不可用。</span><span class="sxs-lookup"><span data-stu-id="55b69-121">Sending operations are unavailable.</span></span>  
  
 <span data-ttu-id="55b69-122">或</span><span class="sxs-lookup"><span data-stu-id="55b69-122">-or-</span></span>  
  
 <span data-ttu-id="55b69-123">接收操作不可用。</span><span class="sxs-lookup"><span data-stu-id="55b69-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="55b69-124">关闭操作的状态代码。</span><span class="sxs-lookup"><span data-stu-id="55b69-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="55b69-125">关闭操作的状态消息。</span><span class="sxs-lookup"><span data-stu-id="55b69-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55b69-126">取消挂起操作的对象。</span><span class="sxs-lookup"><span data-stu-id="55b69-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="55b69-127">发送异步消息给客户以关闭连接。</span><span class="sxs-lookup"><span data-stu-id="55b69-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="55b69-128">若服务器初始化了关闭连接请求，则该方法不会等待响应，直接返回。</span><span class="sxs-lookup"><span data-stu-id="55b69-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="55b69-129">操作的引用。</span><span class="sxs-lookup"><span data-stu-id="55b69-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55b69-130">你可以使用<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>和<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法的客户端启动，又由服务器启动请求，以关闭<xref:System.Web.WebSockets.AspNetWebSocket>连接。</span><span class="sxs-lookup"><span data-stu-id="55b69-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="55b69-131">这两种方法在相同的方式中处理客户端发起的请求： 后客户端将消息发送到服务器后，关闭连接，服务器调用这些方法之一，并将确认发送到客户端，并且该方法将返回。</span><span class="sxs-lookup"><span data-stu-id="55b69-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="55b69-132">对于由服务器启动请求，这两种方法以不同的方式工作。</span><span class="sxs-lookup"><span data-stu-id="55b69-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="55b69-133"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>方法将消息发送到客户端关闭连接，等待响应，然后返回。</span><span class="sxs-lookup"><span data-stu-id="55b69-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="55b69-134">服务器不会等待客户端发送任何额外数据。</span><span class="sxs-lookup"><span data-stu-id="55b69-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="55b69-135">与此相反，<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法将消息发送到客户端关闭连接并返回而不等待响应。</span><span class="sxs-lookup"><span data-stu-id="55b69-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="55b69-136">该方法返回后，你可以调用<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>方法并处理其他数据或客户端发送该确认。</span><span class="sxs-lookup"><span data-stu-id="55b69-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-137">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55b69-138"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象处于中止状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="55b69-139">或</span><span class="sxs-lookup"><span data-stu-id="55b69-139">-or-</span></span>  
  
 <span data-ttu-id="55b69-140">发送操作不可用。</span><span class="sxs-lookup"><span data-stu-id="55b69-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55b69-141">获取指示为什么 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象被关闭的状态码。</span><span class="sxs-lookup"><span data-stu-id="55b69-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="55b69-142">状态代码。</span><span class="sxs-lookup"><span data-stu-id="55b69-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-143">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55b69-144">获取解释为什么 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象被关闭的状态消息。</span><span class="sxs-lookup"><span data-stu-id="55b69-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="55b69-145">状态消息。</span><span class="sxs-lookup"><span data-stu-id="55b69-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-146">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55b69-147">释放 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="55b69-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55b69-148">ASP.NET 将自动调用<xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A>方法<xref:System.Web.WebSockets.AspNetWebSocket>对象释放保留在你的代码完成后执行的任何资源。</span><span class="sxs-lookup"><span data-stu-id="55b69-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="55b69-149">包含消息数据的数组。</span><span class="sxs-lookup"><span data-stu-id="55b69-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55b69-150">取消挂起操作的对象。</span><span class="sxs-lookup"><span data-stu-id="55b69-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="55b69-151">从远程客户端接受单个消息片段。</span><span class="sxs-lookup"><span data-stu-id="55b69-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="55b69-152">接收消息任务的引用。</span><span class="sxs-lookup"><span data-stu-id="55b69-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-153"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55b69-154"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象处于中止状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="55b69-155">或</span><span class="sxs-lookup"><span data-stu-id="55b69-155">-or-</span></span>  
  
 <span data-ttu-id="55b69-156">接收操作不可用。</span><span class="sxs-lookup"><span data-stu-id="55b69-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="55b69-157">包含消息数据的数组。</span><span class="sxs-lookup"><span data-stu-id="55b69-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="55b69-158">消息类型。</span><span class="sxs-lookup"><span data-stu-id="55b69-158">The message type.</span></span></param>
        <param name="endOfMessage">
          <span data-ttu-id="55b69-159">如果指示片段是完整消息的结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55b69-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55b69-160">取消挂起操作的对象。</span><span class="sxs-lookup"><span data-stu-id="55b69-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="55b69-161">发送单个消息片段到远程客户端。</span><span class="sxs-lookup"><span data-stu-id="55b69-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="55b69-162">发送消息任务的引用。</span><span class="sxs-lookup"><span data-stu-id="55b69-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-163"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象被释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55b69-164"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象处于中止状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
 <span data-ttu-id="55b69-165">或</span><span class="sxs-lookup"><span data-stu-id="55b69-165">-or-</span></span>  
  
 <span data-ttu-id="55b69-166">发送操作不可用。</span><span class="sxs-lookup"><span data-stu-id="55b69-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55b69-167">获取一个值，该值指示 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 对象的打开或关闭状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="55b69-168">当前状态。</span><span class="sxs-lookup"><span data-stu-id="55b69-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-169">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55b69-170">获取远程客户端和服务器可以用来通过 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 连接交换数据的应用程序特定的协议的名称。</span><span class="sxs-lookup"><span data-stu-id="55b69-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="55b69-171">协议的名称。</span><span class="sxs-lookup"><span data-stu-id="55b69-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55b69-172">对象已释放。</span><span class="sxs-lookup"><span data-stu-id="55b69-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>