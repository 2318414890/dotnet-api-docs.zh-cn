<Type Name="CounterData" FullName="System.Diagnostics.PerformanceData.CounterData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f9a4624888346b0629df568d60f7e864fff57f5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30396871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CounterData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CounterData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceData.CounterData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CounterData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CounterData sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含计数器的原始数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=nameWithType>属性返回一个此类的实例。  
  
 此类提供用于读取和写入计数器数据的线程安全方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public void Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterData.Decrement" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将计数器值减 1。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法安全地递减的计数器值多线程应用程序。  
  
 若要递减特定值的计数器值，调用<xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>方法和组`value`参数为负数。  
  
 若要设置的计数器值，使用<xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public void Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterData.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Sub Increment ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Increment();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将计数器值加 1。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法安全地递增多线程应用程序的计数器值。  
  
 若要设置的计数器值，使用<xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>属性。  
  
 若要增加特定值的计数器值，调用<xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public void IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementBy (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementBy(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">要为计数器值增加的数量。 增量值可以是正数也可以是负数。</param>
        <summary>将计数器值增加指定数量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法安全地递增多线程应用程序的计数器值。  
  
 若要设置的计数器值，使用<xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>属性。  
  
 若要按 1 递增计数器值，调用<xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceData.CounterData.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置或设置原始计数器数据。</summary>
        <value>原始计数器数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性不是线程安全，仅适用于单线程方式访问。 计数器数据的多线程访问，请使用<xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public long Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceData.CounterData.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Value { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置计数器数据。</summary>
        <value>计数器数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供计数器数据的多线程应用程序的安全访问。 如果性能是主要考虑因素，使用<xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>属性; 但是，<xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>属性不是线程安全。  
  
 请注意，<xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>属性不是线程安全的.NET Framework 3.5。  
  
 要递增的计数器值，请考虑使用<xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>或<xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>方法。  
  
   
  
## Examples  
 有关示例，请参见 <xref:System.Diagnostics.PerformanceData>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>