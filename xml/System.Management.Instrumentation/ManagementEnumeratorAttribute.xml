<Type Name="ManagementEnumeratorAttribute" FullName="System.Management.Instrumentation.ManagementEnumeratorAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementEnumeratorAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEnumeratorAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEnumeratorAttribute&#xA;Inherits ManagementNewInstanceAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEnumeratorAttribute sealed : System::Management::Instrumentation::ManagementNewInstanceAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="77304-101">ManagementEnumerator 属性标记用于返回所有 WMI 类实例的方法。</span><span class="sxs-lookup"><span data-stu-id="77304-101">The ManagementEnumerator attribute marks a method that returns all the instances of a WMI class.</span></span>  
  
 <span data-ttu-id="77304-102">注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。</span><span class="sxs-lookup"><span data-stu-id="77304-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="77304-103">[MI API](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) 应用于所有新的开发。</span><span class="sxs-lookup"><span data-stu-id="77304-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77304-104">该方法必须是 static 和 public。</span><span class="sxs-lookup"><span data-stu-id="77304-104">The method must be static and public.</span></span> <span data-ttu-id="77304-105">它必须返回 WMI 类的所有实例的集合。</span><span class="sxs-lookup"><span data-stu-id="77304-105">It must return a collection of all instances of the WMI class.</span></span> <span data-ttu-id="77304-106">集合可以是任何类型转换为<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="77304-106">The collection can be of any type convertible to <xref:System.Collections.IEnumerable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77304-107">下面的示例演示如何使用枚举器属性标记的方法，用于枚举类的实例。</span><span class="sxs-lookup"><span data-stu-id="77304-107">The following example shows how to use the Enumerator attribute to mark a method that is used to enumerate instances of a class.</span></span> <span data-ttu-id="77304-108">在这种情况下，该枚举方法使用<xref:System.Diagnostics.Process>类检索所有计算机上运行的进程。</span><span class="sxs-lookup"><span data-stu-id="77304-108">In this case, the Enumerate method uses the <xref:System.Diagnostics.Process> class to retrieve all of the processes running on the computer.</span></span>  
  
```csharp  
[ManagementEnumerator]  
public static IEnumerable Enumerate()  
{  
   Process[] rgProcesses = Process.GetProcesses();  
   for (int i = 0; i < rgProcesses.Length; i++)  
   {  
      yield return new ProcessProvider(rgProcesses[i]);  
   }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEnumeratorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEnumeratorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77304-109">初始化 <see cref="T:System.Management.ManagementEnumeratorAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="77304-109">Initializes a new instance of the <see cref="T:System.Management.ManagementEnumeratorAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77304-110">获取或设置一个值，该值定义用 ManagementEnumerator 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="77304-110">Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.</span></span></summary>
        <value><span data-ttu-id="77304-111">一个 <see cref="T:System.Type" /> 值，指示用 <see cref="ManagementEnumerator" /> 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="77304-111">A <see cref="T:System.Type" /> value that indicates the type of output that the method marked with the <see cref="ManagementEnumerator" /> attribute will output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77304-112">如果返回的类型为<xref:System.Object?displayProperty=nameWithType>，输出应视为类型的值，然后<xref:System.Object?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="77304-112">If the returned type is <xref:System.Object?displayProperty=nameWithType>, then the output should be treated as a value of type <xref:System.Object?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>