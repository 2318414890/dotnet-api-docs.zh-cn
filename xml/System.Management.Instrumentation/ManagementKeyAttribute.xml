<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c08810548e47987ba849f0c6492dc3cb20527b91" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36554782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementKeyAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementKeyAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementKeyAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0e1f0-101">The ManagementKey attribute identifies the key properties of a WMI class.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e1f0-101">The ManagementKey attribute identifies the key properties of a WMI class.</span>
      </span>
      <span data-ttu-id="0e1f0-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e1f0-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="0e1f0-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e1f0-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e1f0-104">除非 WMI 类是单一实例，它可具有多个相应的实例。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-104">Unless a WMI class is a singleton, it can have multiple corresponding instances.</span></span> <span data-ttu-id="0e1f0-105">类的客户端必须能够唯一地标识他们感兴趣的特定实例。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-105">Clients of the class must be able to uniquely identify the specific instance they are interested in.</span></span> <span data-ttu-id="0e1f0-106">因此，作为提供程序编写器，您必须选择属性或组的唯一标识每个 WMI 类实例的属性。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-106">So, as a provider writer, you must choose a property or set of properties that uniquely identify an instance of each of your WMI classes.</span></span> <span data-ttu-id="0e1f0-107">你使用<xref:System.Management.Instrumentation.ManagementKeyAttribute>属性用于标识这些键属性。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-107">You use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> attribute to identify those key properties.</span></span> <span data-ttu-id="0e1f0-108">标识为项具有只读属性由相同的运行时行为的属性<xref:System.Management.Instrumentation.ManagementProbeAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-108">Properties identified as keys have the same runtime behavior as read-only properties indicated by the <xref:System.Management.Instrumentation.ManagementProbeAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e1f0-109">下面的示例演示如何使用<xref:System.Management.Instrumentation.ManagementKeyAttribute>若要将字段标记为键属性的 WMI 类。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-109">The following example shows how to use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> to mark a field as a key property of a WMI class.</span></span>  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 <span data-ttu-id="0e1f0-110">下面的示例演示如何使用<xref:System.Management.Instrumentation.ManagementKeyAttribute>特性标记的 WMI 类键属性。</span><span class="sxs-lookup"><span data-stu-id="0e1f0-110">The next example shows how to use the <xref:System.Management.Instrumentation.ManagementKeyAttribute> attribute to mark a key property of a WMI class.</span></span>  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementTaskAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementKeyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e1f0-111">Initializes a new instance of the <see cref="T:System.Management.ManagementKeyAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e1f0-111">Initializes a new instance of the <see cref="T:System.Management.ManagementKeyAttribute" /> class.</span>
          </span>
          <span data-ttu-id="0e1f0-112">This is the default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e1f0-112">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>