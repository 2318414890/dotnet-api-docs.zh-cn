<Type Name="ManagementBindAttribute" FullName="System.Management.Instrumentation.ManagementBindAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementBindAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementBindAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementBindAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementBindAttribute&#xA;Inherits ManagementNewInstanceAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementBindAttribute sealed : System::Management::Instrumentation::ManagementNewInstanceAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3de73-101">ManagementBind 属性指示使用了一种方法来返回与特定密钥值相关联的 WMI 类的实例。</span><span class="sxs-lookup"><span data-stu-id="3de73-101">The ManagementBind attribute indicates that a method is used to return the instance of a WMI class associated with a specific key value.</span></span>  
  
 <span data-ttu-id="3de73-102">注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。</span><span class="sxs-lookup"><span data-stu-id="3de73-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="3de73-103">[MI API](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) 应用于所有新的开发。</span><span class="sxs-lookup"><span data-stu-id="3de73-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de73-104">此属性将标记基础结构用于执行 WMI 获取操作的方法。</span><span class="sxs-lookup"><span data-stu-id="3de73-104">This attribute marks the method that the infrastructure uses to perform the WMI get operation.</span></span> <span data-ttu-id="3de73-105">该方法必须采用相应的 WMI 类的键值作为参数并返回关联的 WMI 类实例。</span><span class="sxs-lookup"><span data-stu-id="3de73-105">The method must take the key values of the corresponding WMI class as parameters and return the associated instance of the WMI class.</span></span>  
  
 <span data-ttu-id="3de73-106">**重要**方法参数必须与类的密钥参数具有完全相同的名称和类型。</span><span class="sxs-lookup"><span data-stu-id="3de73-106">**Important** The method parameters must have exactly the same name and type as the key parameters of the class.</span></span> <span data-ttu-id="3de73-107">由标识键参数。<xref:System.Management.Instrumentation.ManagementKeyAttribute></span><span class="sxs-lookup"><span data-stu-id="3de73-107">The key parameters are identified by the .<xref:System.Management.Instrumentation.ManagementKeyAttribute></span></span> <span data-ttu-id="3de73-108">属性</span><span class="sxs-lookup"><span data-stu-id="3de73-108">attribute</span></span>  
  
 <span data-ttu-id="3de73-109">该方法必须将值分配给类的所有已插入检测点的属性。</span><span class="sxs-lookup"><span data-stu-id="3de73-109">The method must assign values to all instrumented properties of the class.</span></span>  
  
 <span data-ttu-id="3de73-110">当 WMI 提供程序扩展基础结构需要此绑定功能时，它将先搜索此特性的构造函数。</span><span class="sxs-lookup"><span data-stu-id="3de73-110">When the WMI Provider Extensions infrastructure requires this binding functionality, it first searches for a constructor with this attribute.</span></span> <span data-ttu-id="3de73-111">如果找不到，它则搜索返回的 WMI 类类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="3de73-111">If none is found, it then searches for a static method that returns the WMI class type.</span></span>  
  
 <span data-ttu-id="3de73-112">此属性的目标必须是一种方法或静态方法。</span><span class="sxs-lookup"><span data-stu-id="3de73-112">The target of this attribute must be either a method or a static method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3de73-113">下面的示例演示如何使用 ManagementBind 属性标记的类构造函数。</span><span class="sxs-lookup"><span data-stu-id="3de73-113">The following example shows how to use the ManagementBind attribute to mark the constructor of a class.</span></span>  
  
```csharp  
// Use the ManagementBind attribute to specify that this constructor  
// is used to attach a class instance to a specific WMI  
// instance. The constructor should set the values of the  
// key properties of the WMI instance.  
[ManagementBind]  
public ClassConstructor(int Id)  
{  
     // Set this class instance to a specific instance  
     // by assigning property values and   
     // giving unique values to the key properties.   
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementBindAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementBindAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3de73-114">初始化 <see cref="T:System.Management.ManagementBindAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3de73-114">Initializes a new instance of the <see cref="T:System.Management.ManagementBindAttribute" /> class.</span></span> <span data-ttu-id="3de73-115">这是默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="3de73-115">This is the default constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3de73-116">获取或设置一个值，该值定义用 ManagementEnumerator 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="3de73-116">Gets or sets a value that defines the type of output that the method that is marked with the ManagementEnumerator attribute will output.</span></span></summary>
        <value><span data-ttu-id="3de73-117">一个 <see cref="T:System.Type" /> 值，指示用 <see cref="ManagementBind" /> 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="3de73-117">A <see cref="T:System.Type" /> value that indicates the type of output that the method marked with the <see cref="ManagementBind" /> attribute will output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3de73-118">如果返回的类型为<xref:System.Object?displayProperty=nameWithType>，输出应视为类型的值，然后<xref:System.Object?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3de73-118">If the returned type is <xref:System.Object?displayProperty=nameWithType>, then the output should be treated as a value of type <xref:System.Object?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>