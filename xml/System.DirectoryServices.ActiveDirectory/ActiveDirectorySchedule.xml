<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cef244adcbb7bf738d85db24f0975488a64b96f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36741163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySchedule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySchedule" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySchedule = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 类表示 Active Directory 域服务复制的每周日程安排。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schedule As ActiveDirectorySchedule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySchedule(System::DirectoryServices::ActiveDirectory::ActiveDirectorySchedule ^ schedule);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule -&gt; System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" Usage="new System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">一个复制到该对象的 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 对象。</param>
        <summary>使用指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 对象初始化 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schedule" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property RawSchedule As Boolean(,,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;bool, 3&gt; ^ RawSchedule { cli::array &lt;bool, 3&gt; ^ get(); void set(cli::array &lt;bool, 3&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RawSchedule : bool[,,] with get, set" Usage="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个三维数组，该数组指示一周中源可用于复制的时间。</summary>
        <value>一个 <see cref="T:System.Boolean" /> 元素的三维数组，如果源在特定的 15 分钟间隔中可用于复制，那么数组中的元素为 <see langword="true" />。 如果源不可用于复制，元素为 <see langword="false" />。  数组是在窗体 RawSchedule [&lt;一天的一周&gt;，&lt;小时&gt;， &lt;15 分钟时间间隔内&gt;]。 所有这些值都从零开始，星期从星期天早上 00:00（协调通用时间）开始。  以下是有效的周日期值。  
  
 <list type="table"><listheader><term> 一天的一周值</term><description>指示日期是星期几。</description></listheader><item><term> 0 </term><description>星期日</description></item><item><term> 1 </term><description>星期一</description></item><item><term> 2 </term><description>星期二</description></item><item><term> 3 </term><description>星期三</description></item><item><term> 4 </term><description>星期四</description></item><item><term> 5 </term><description>星期五</description></item><item><term> 6 </term><description>星期六</description></item></list>小时是从零开始进行，并且采用 24 小时格式指定。 例如，下午 2 将指定为 14。 有效值为 0 到 23。  15 分钟的时间间隔指定一小时内源可用于复制的 15 分钟的时间块。 下表标识了 15 分钟时间间隔的可能值。  
  
 <list type="table"><listheader><term> 15 分钟时间间隔内</term><description>说明</description></listheader><item><term> 0 </term><description>的源是可用于从 0 到 14 分钟在整点后的复制。</description></item><item><term> 1 </term><description>的源是可用于从 15 到在整点后的 29 分钟内的复制。</description></item><item><term> 2 </term><description>的源是可用于从 30 到 44 分钟在整点后的复制。</description></item><item><term> 3 </term><description>的源是可用于从 45 到 59 分钟在整点后的复制。</description></item></list>  下面的 C# 示例演示如何使用此属性来确定源是否可用于复制 15:50 星期二的协调世界时。  '' csharp 布尔 isAvailable = scheduleObject.RawSchedule[2，15，3];' 下面的 C# 示例演示如何使用此属性来计算在运行时的 15 分钟间隔的分钟数除以 15。  '' csharp 布尔 isAvailable = scheduleObject.RawSchedule[2，15，(Int32) 50 月 15 日];```</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSchedule ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSchedule();" />
      <MemberSignature Language="F#" Value="member this.ResetSchedule : unit -&gt; unit" Usage="activeDirectorySchedule.ResetSchedule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将整个日程安排重置为不可用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDailySchedule (fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDailySchedule(System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetDailySchedule : System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetDailySchedule (fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的第一个小时。</param>
        <param name="fromMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的第一个 15 分钟间隔。</param>
        <param name="toHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的最后一个小时。</param>
        <param name="toMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的最后 15 分钟间隔。</param>
        <summary>将一周内每一天中的一定时间范围添加到日程安排中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有在此方法的参数都包含两端。  
  
 此方法是累积的不会删除任何现有的计划信息。 如果现有计划和新的计划重叠，则仍将累积。 若要清除计划，请使用<xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSchedule">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将一个时间范围添加到日程安排中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (day As DayOfWeek, fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(DayOfWeek day, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (day, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">
          <see cref="T:System.DayOfWeek" /> 成员之一，指定一周中源可用于复制的日期。</param>
        <param name="fromHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的第一个小时。</param>
        <param name="fromMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的第一个 15 分钟间隔。</param>
        <param name="toHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的最后一个小时。</param>
        <param name="toMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的最后 15 分钟间隔。</param>
        <summary>将一天中的一定时间范围添加到日程安排中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有在此方法的参数都包含两端。  
  
 此方法是累积的不会删除任何现有的计划信息。 如果现有计划和新的计划重叠，则仍将累积。 若要清除计划，请使用<xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">起始时间在结束时间之后。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">一个或多个参数无效。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedule (days As DayOfWeek(), fromHour As HourOfDay, fromMinute As MinuteOfHour, toHour As HourOfDay, toMinute As MinuteOfHour)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedule(cli::array &lt;DayOfWeek&gt; ^ days, System::DirectoryServices::ActiveDirectory::HourOfDay fromHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour fromMinute, System::DirectoryServices::ActiveDirectory::HourOfDay toHour, System::DirectoryServices::ActiveDirectory::MinuteOfHour toMinute);" />
      <MemberSignature Language="F#" Value="member this.SetSchedule : DayOfWeek[] * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour * System.DirectoryServices.ActiveDirectory.HourOfDay * System.DirectoryServices.ActiveDirectory.MinuteOfHour -&gt; unit" Usage="activeDirectorySchedule.SetSchedule (days, fromHour, fromMinute, toHour, toMinute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">
          <see cref="T:System.DayOfWeek" /> 成员之一，指定一周中源可用于复制的日期。</param>
        <param name="fromHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的第一个小时。</param>
        <param name="fromMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的第一个 15 分钟间隔。</param>
        <param name="toHour">
          <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" /> 成员之一，指定源可用于复制的最后一个小时。</param>
        <param name="toMinute">
          <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" /> 成员之一，指定源将可用于复制的最后 15 分钟间隔。</param>
        <summary>将若干天中的一个时间范围添加到日程安排中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有在此方法的参数都包含两端。  
  
 此方法是累积的不会删除任何现有的计划信息。 如果现有计划和新的计划重叠，则仍将累积。 若要清除计划，请使用<xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">起始时间在结束时间之后。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">一个或多个参数无效。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="days" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
      </Docs>
    </Member>
  </Members>
</Type>