<Type Name="ListControlDesigner" FullName="System.Web.UI.Design.WebControls.ListControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae44ec5fdab62768141a35799c2a4255698c714d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListControlDesigner : System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListControlDesigner extends System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.ListControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ListControlDesigner&#xA;Inherits DataBoundControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListControlDesigner : System::Web::UI::Design::WebControls::DataBoundControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.WebControls.DataBoundControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作设计器的基类，这些设计器在可视 Web 设计器中为 <see cref="T:System.Web.UI.WebControls.ListControl" /> 抽象类派生的控件提供设计时支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Visual Web 设计器中，当从源视图切换到设计视图中，描述控件的标记源代码派生自<xref:System.Web.UI.WebControls.ListControl>类进行分析，并在设计图面上创建控件的设计时版本。 当用户切换回源视图时，设计时控件的标记源代码持久保存，并编辑向网页上的标记。 <xref:System.Web.UI.Design.WebControls.ListControlDesigner>类用作基类的类的设计器为派生自的控件提供设计时支持可视 Web 设计器中的<xref:System.Web.UI.WebControls.ListControl>。  
  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner>类属性提供了以下功能：  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists%2A>属性返回<xref:System.ComponentModel.Design.DesignerActionListCollection>对象，它通常包含一个对象，派生自<xref:System.ComponentModel.Design.DesignerActionList>设计器的继承树中每个级别的对象。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A>和<xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A>属性可用来访问控件派生自的对应属性<xref:System.Web.UI.WebControls.ListControl>类。 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A>和<xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A>指示的字段的数据源提供的文本和分别值列表项的内容。  
  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner>类方法提供以下功能：  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind%2A>方法将关联的控件派生自绑定<xref:System.Web.UI.WebControls.ListControl>到设计时数据源。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>方法返回用于在设计时呈现关联的控件的标记。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A>方法返回设计时<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>组件从关联的控件容器。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource%2A>方法返回<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>控件容器中，从已解析为设计时<xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember%2A>的控件属性。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>方法准备设计器，以查看和设计关联的控件派生自<xref:System.Web.UI.WebControls.ListControl>。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>方法调用时<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>为关联的控件已更改。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties%2A>方法用于删除从其他属性、 添加其他属性，或者隐藏关联控件派生自的属性<xref:System.Web.UI.WebControls.ListControl>。  
  
   
  
## Examples  
 本部分提供两个代码示例。 第一个示例演示如何派生自定义控件设计器。  第二个演示如何与设计器关联的派生的控件。  
  
 下面的代码示例演示如何创建一个名为类`SimpleRadioButtonListDesigner`继承自<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。 `SimpleRadioButtonListDesigner`类重写<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>， <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>，和<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>方法。 `SimpleRadioButtonListDesigner`类显示`SimpleRadioButtonList`设计图面上的控件。  
  
 [!code-csharp[ListControlDesigner_Samples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#1)]
 [!code-vb[ListControlDesigner_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#1)]  
  
 下面的代码示例派生`SimpleRadioButtonList`控件从<xref:System.Web.UI.WebControls.RadioButtonList>控制，并演示如何使用<xref:System.ComponentModel.DesignerAttribute>要关联类`SimpleRadioButtonList`控件与其设计`SimpleRadioButtonListDesigner`类。  
  
 [!code-csharp[ListControlDesigner_Samples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonList.cs#5)]
 [!code-vb[ListControlDesigner_Samples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlist.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListControl" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
    <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
    <altmember cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 内部构造的新实例<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类创建派生自的关联的控件时<xref:System.Web.UI.WebControls.ListControl>设计图面上的类。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此设计器的设计器操作列表集合。</summary>
        <value>与设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected override void DataBind (System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DataBind(class System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DataBind (dataBoundControl As BaseDataBoundControl)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DataBind(System::Web::UI::WebControls::BaseDataBoundControl ^ dataBoundControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBoundControl" Type="System.Web.UI.WebControls.BaseDataBoundControl" />
      </Parameters>
      <Docs>
        <param name="dataBoundControl">
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的关联控件，或该控件的副本。</param>
        <summary>将指定的控件绑定到设计时数据源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关<xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner>基类，<xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind%2A>方法设置<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>和<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>属性<xref:System.Web.UI.WebControls.DataBoundControl>对象引用的设计时数据源，然后调用<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A?displayProperty=nameWithType>方法，然后将还原<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>和<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>为其原始值的属性。  
  
 有关<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类，但是，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind%2A>方法没有任何功能，因为<xref:System.Web.UI.WebControls.ListItem>对象刚刚添加到<xref:System.Web.UI.WebControls.ListControl.Items%2A>集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的数据文本字段。</summary>
        <value>列表控件的 <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A>属性设置或检索用于在运行时的设计时表示形式控件的标记。 这提供了通过设计器来访问<xref:System.Web.UI.WebControls.ListControl.DataTextField%2A>关联的控件，对应于提供文本内容的列表项的数据源字段的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的数据值字段。</summary>
        <value>列表控件的 <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A>属性提供通过设计器来访问<xref:System.Web.UI.WebControls.ListControl.DataValueField%2A>关联的控件，它指示数据源提供的列表项值内容的字段的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取用于在设计时表示控件的 HTML。</summary>
        <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的控件的标记。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果关联的控件派生自<xref:System.Web.UI.WebControls.ListControl>对象是数据绑定<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>方法清除<xref:System.Web.UI.WebControls.ListControl.Items%2A>集合，并将添加<xref:System.String>，该值指示控件数据绑定的消息。 如果关联的控件是未进行数据绑定和<xref:System.Web.UI.WebControls.ListControl.Items%2A>集合为空，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>添加<xref:System.String>，该值指示控件未绑定的消息。 然后，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>调用其基方法来生成标记。  
  
   
  
## Examples  
 下面的代码示例替代<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>方法以自定义显示在设计图面上的关联控件的标记。 如果<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>属性未定义关联的控件，它设置为`Gainsboro`，并且控件将显示与该背景色。 此操作后的的基实现后<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>调用方法。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。  
  
 [!code-csharp[ListControlDesigner_Samples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#2)]
 [!code-vb[ListControlDesigner_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetResolvedSelectedDataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable GetResolvedSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable GetResolvedSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResolvedSelectedDataSource () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ GetResolvedSelectedDataSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从解析到特定数据成员的关联控件容器中获取数据源组件。</summary>
        <returns>一个包含设计时 <see cref="T:System.Collections.IEnumerable" /> 的 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />，将被解析到关联控件的 <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A>方法返回`null`如果<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>找不到属性，或者如果<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>不存在具有相同的名称。  
  
 如果<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>无法将解析为<xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember%2A>属性关联的控件，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource%2A>返回<xref:System.Collections.IEnumerable>接口包含设计时<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" />
        <altmember cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceProvider" />
        <altmember cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedDataSource">
      <MemberSignature Language="C#" Value="public object GetSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedDataSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSelectedDataSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从关联控件容器中获取数据源组件。</summary>
        <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含关联控件设计时 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A>方法返回`null`如果<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>找不到属性，或者如果<xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>不存在具有相同的名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceProvider" />
        <altmember cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的控件实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
        <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在设计器宿主调用<xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>方法准备好使用设计器来呈现派生自该控件时<xref:System.Web.UI.WebControls.ListControl>类。 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>方法和其基方法配置属性，并连接到所需的设计器操作的事件。  
  
 `component`参数是控件，派生自<xref:System.Web.UI.WebControls.ListControl>，与此设计器关联或该控件的副本。  
  
   
  
## Examples  
 下面的代码示例替代<xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>方法在设计器中派生自<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类，以确保只有控件类的实例名为`SimpleRadioButtonList`由自定义设计器。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。  
  
 [!code-csharp[ListControlDesigner_Samples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#3)]
 [!code-vb[ListControlDesigner_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnDataSourceChanged">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>当关联控件的数据源发生更改时调用。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="public virtual void OnDataSourceChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDataSourceChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDataSourceChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDataSourceChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当关联控件的数据源发生更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged%2A>基方法连接关联的控件派生自<xref:System.Web.UI.WebControls.ListControl>到当前的数据源的对象，如果是从连接控件的数据源不同，更新的设计时标记。 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>方法连接到当前的数据源后更新的设计时标记。  
  
   
  
## Examples  
 下面的代码示例替代<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>继承自的类方法<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。 当数据源，它是与关联设计器类更改，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>方法称为，此代码将设置一个名为变量`changedDataSource`到`true`。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。  
  
 [!code-csharp[ListControlDesigner_Samples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#4)]
 [!code-vb[ListControlDesigner_Samples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (bool forceUpdateView);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(bool forceUpdateView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (forceUpdateView As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(bool forceUpdateView);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceUpdateView" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceUpdateView">一个 <see cref="T:System.Boolean" />，指示是否无条件更新设计时标记。 忽略此参数。</param>
        <summary>当关联控件的数据源发生更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged%2A>基方法连接关联的控件派生自<xref:System.Web.UI.WebControls.ListControl>到当前的数据源的类，如果是从连接控件的数据源不同，更新的设计时标记。 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>后连接到当前的数据源设计器的方法无条件更新过的设计时标记。 值`forceUpdateView`将被忽略。  
  
   
  
## Examples  
 下面的代码示例替代<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>继承自的类方法<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。 当数据源，它是与关联设计器类更改，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A>称为和此代码将设置一个名为变量`changedDataSource`到`true`。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.UI.Design.WebControls.ListControlDesigner>类。  
  
 [!code-csharp[ListControlDesigner_Samples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#4)]
 [!code-vb[ListControlDesigner_Samples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>调用方应使用公共<see cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged" />重写。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">实现已添加或隐藏属性 <see cref="T:System.Collections.IDictionary" /> 的集合，在设计时为关联控件公开。</param>
        <summary>供设计器用于在“属性”网格的显示中删除或添加属性，或者隐藏关联控件的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件设计器使用派生自的方法<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=nameWithType>方法隐藏各种控件属性，用相应的设计时属性设计器实现，并将添加到属性或删除属性从**属性**网格。  
  
 派生自的控件<xref:System.Web.UI.WebControls.ListControl>对象，<xref:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties%2A>添加<xref:System.Web.UI.Design.DataFieldConverter>属性设为<xref:System.Web.UI.WebControls.ListControl.DataTextField%2A>和<xref:System.Web.UI.WebControls.ListControl.DataValueField%2A>关联控件的属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写<see cref="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)" />方法可以将属性添加到或更改的设计时属性集合中的属性的属性。 请确保在执行其他处理之前调用基方法。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.Web.UI.Design.DataFieldConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="UseDataSourcePickerActionList">
      <MemberSignature Language="C#" Value="protected override bool UseDataSourcePickerActionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDataSourcePickerActionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property UseDataSourcePickerActionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UseDataSourcePickerActionList { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示关联控件是否应呈现其默认操作列表。</summary>
        <value>始终返回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList%2A>属性返回`false`以便数据源下拉列表中不显示与**选择数据源**中的菜单项**常见任务**上下文菜单。 相反，此菜单项将显示**选择数据源**对话框中，这样用户就可以选择<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>和<xref:System.Web.UI.WebControls.ListControl.DataTextField%2A>和<xref:System.Web.UI.WebControls.ListControl.DataValueField%2A>属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写<see cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList" />属性以返回<see langword="true" />如果想要从派生控件<see cref="T:System.Web.UI.WebControls.ListControl" />类来显示与数据源下拉列表中**选择数据源**中的菜单项**常见任务**在设计时的上下文菜单。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>