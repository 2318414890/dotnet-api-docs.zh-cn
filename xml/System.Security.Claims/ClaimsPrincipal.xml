<Type Name="ClaimsPrincipal" FullName="System.Security.Claims.ClaimsPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a2c844b538e9744cf3dbebf25a6ab8e73142aa5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipal : System::Security::Principal::IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="764fe-101">支持多个基于声明的标识的 <see cref="T:System.Security.Principal.IPrincipal" /> 实现。</span>
      <span class="sxs-lookup">
        <span data-stu-id="764fe-101">An <see cref="T:System.Security.Principal.IPrincipal" /> implementation that supports multiple claims-based identities.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-102">从.NET Framework 4.5 开始，Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="764fe-102">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="764fe-103">这意味着现在表示.NET Framework 中的主体的许多类派生自<xref:System.Security.Claims.ClaimsPrincipal>而不是只需实现<xref:System.Security.Principal.IPrincipal>接口。</span><span class="sxs-lookup"><span data-stu-id="764fe-103">This means that many classes that represent a principal in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsPrincipal> rather than simply implementing the <xref:System.Security.Principal.IPrincipal> interface.</span></span> <span data-ttu-id="764fe-104">除了实现<xref:System.Security.Principal.IPrincipal>接口，<xref:System.Security.Claims.ClaimsPrincipal>公开属性和方法，可用于使用声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-104">In addition to implementing the <xref:System.Security.Principal.IPrincipal> interface, <xref:System.Security.Claims.ClaimsPrincipal> exposes properties and methods that are useful for working with claims.</span></span>  
  
 <span data-ttu-id="764fe-105"><xref:System.Security.Claims.ClaimsPrincipal> 公开的标识，其中每个集合<xref:System.Security.Claims.ClaimsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="764fe-105"><xref:System.Security.Claims.ClaimsPrincipal> exposes a collection of identities, each of which is a <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="764fe-106">通常情况下，此集合中，可通过<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>属性，仅将具有单个元素。</span><span class="sxs-lookup"><span data-stu-id="764fe-106">In the common case, this collection, which is accessed through the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property, will only have a single element.</span></span>  
  
 <span data-ttu-id="764fe-107">引入<xref:System.Security.Claims.ClaimsPrincipal>最主体类从中派生的主体作为.NET 4.5 中不会强制你更改在其中你应对标识的方法的任何内容。</span><span class="sxs-lookup"><span data-stu-id="764fe-107">The introduction of <xref:System.Security.Claims.ClaimsPrincipal> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</span></span> <span data-ttu-id="764fe-108">但是它未打开更多的可能性并提供更多机会进行更精细的访问控制。</span><span class="sxs-lookup"><span data-stu-id="764fe-108">It does, however open up more possibilities and offer more chances to exercise finer access control.</span></span> <span data-ttu-id="764fe-109">例如:</span><span class="sxs-lookup"><span data-stu-id="764fe-109">For example:</span></span>  
  
-   <span data-ttu-id="764fe-110">应用程序代码本身可以直接使用当前的主体中包含的声明，来驱动额外的身份验证、 授权和个性化设置任务。</span><span class="sxs-lookup"><span data-stu-id="764fe-110">The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</span></span>  
  
-   <span data-ttu-id="764fe-111">你可以处理管道，甚至在执行到达你的代码之前可以处理与身份验证请求和授权策略声明与前端你的资源。</span><span class="sxs-lookup"><span data-stu-id="764fe-111">You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</span></span> <span data-ttu-id="764fe-112">例如，可以使用自定义声明身份验证管理器，派生自的类的实例配置的基于 web 的应用程序或服务<xref:System.Security.Claims.ClaimsAuthenticationManager>类。</span><span class="sxs-lookup"><span data-stu-id="764fe-112">For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthenticationManager> class.</span></span> <span data-ttu-id="764fe-113">当这样配置后，请求处理管道时，将调用<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>你声明身份验证管理器中将其传递方法<xref:System.Security.Claims.ClaimsPrincipal>表示传入的请求的上下文。</span><span class="sxs-lookup"><span data-stu-id="764fe-113">When so configured, the request processing pipeline invokes the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method on your claims authentication manager passing it a <xref:System.Security.Claims.ClaimsPrincipal> that represents the context of the incoming request.</span></span> <span data-ttu-id="764fe-114">声明身份验证管理器，可以执行身份验证根据传入声明的值。</span><span class="sxs-lookup"><span data-stu-id="764fe-114">Your claims authentication manager can then perform authentication based on the values of the incoming claims.</span></span> <span data-ttu-id="764fe-115">它还可以筛选、 转换或向传入声明集添加声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-115">It can also filter, transform, or add claims to the incoming claim set.</span></span> <span data-ttu-id="764fe-116">例如，它无法用于丰富的传入声明使用从本地用户配置文件等本地数据源创建的新声明集</span><span class="sxs-lookup"><span data-stu-id="764fe-116">For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</span></span>  
  
-   <span data-ttu-id="764fe-117">你可以使用自定义声明授权管理器，派生自的类的实例配置的基于 web 的应用程序<xref:System.Security.Claims.ClaimsAuthorizationManager>类。</span><span class="sxs-lookup"><span data-stu-id="764fe-117">You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthorizationManager> class.</span></span> <span data-ttu-id="764fe-118">请求处理管道时这样配置，包传入<xref:System.Security.Claims.ClaimsPrincipal>中<xref:System.Security.Claims.AuthorizationContext>并调用<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>声明授权管理器上的方法。</span><span class="sxs-lookup"><span data-stu-id="764fe-118">When so configured, the request processing pipeline packages the incoming <xref:System.Security.Claims.ClaimsPrincipal> in an <xref:System.Security.Claims.AuthorizationContext> and invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method on your claims authorization manager.</span></span> <span data-ttu-id="764fe-119">声明授权管理器随后可以强制执行基于传入声明的授权。</span><span class="sxs-lookup"><span data-stu-id="764fe-119">Your claims authorization manager can then enforce authorization based on the incoming claims.</span></span>  
  
-   <span data-ttu-id="764fe-120">可以通过使用自定义声明授权管理器配置你的应用程序并使用执行内联基于声明的代码访问检查<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>类来执行命令性的访问检查或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>执行声明性访问检查。</span><span class="sxs-lookup"><span data-stu-id="764fe-120">Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class to perform imperative access checks or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> to perform declarative access checks.</span></span> <span data-ttu-id="764fe-121">基于声明的代码访问检查将执行以内联方式，在处理管道中，外部，并因此可供所有应用程序，只要声明授权管理器的配置。</span><span class="sxs-lookup"><span data-stu-id="764fe-121">Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</span></span>  
  
 <span data-ttu-id="764fe-122">你可以获取<xref:System.Security.Claims.ClaimsPrincipal>通过强制转换为与 RP 应用程序 （或正在执行某线程的主体） 中的请求关联的主体实例<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>属性<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="764fe-122">You can obtain a <xref:System.Security.Claims.ClaimsPrincipal> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="764fe-123">与关联的声明<xref:System.Security.Claims.ClaimsPrincipal>对象均可通过其<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-123">The claims associated with an <xref:System.Security.Claims.ClaimsPrincipal> object are available through its <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property.</span></span> <span data-ttu-id="764fe-124"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性返回的所有包含的与主体关联的标识声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-124">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims contained by the identities associated with the principal.</span></span> <span data-ttu-id="764fe-125">在最常见的情况下，在其中<xref:System.Security.Claims.ClaimsPrincipal>包含多个<xref:System.Security.Claims.ClaimsIdentity>实例，可以使用<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>属性也可以通过使用访问主标识<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-125">In the uncommon case in which the <xref:System.Security.Claims.ClaimsPrincipal> contains multiple <xref:System.Security.Claims.ClaimsIdentity> instances, you can use the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property or you can access the primary identity by using the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="764fe-126"><xref:System.Security.Claims.ClaimsPrincipal> 提供几种方法可能会通过该搜索这些声明并完全支持语言集成查询 (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="764fe-126"><xref:System.Security.Claims.ClaimsPrincipal> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</span></span> <span data-ttu-id="764fe-127">标识可通过使用添加到主体<xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A>或<xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="764fe-127">Identities can be added to the principal by using the <xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> or <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="764fe-128">若要添加到的标识<xref:System.Security.Claims.ClaimsPrincipal>，调用方必须具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="764fe-128">To add identities to the <xref:System.Security.Claims.ClaimsPrincipal>, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="764fe-129">默认情况下，WIF 可以优先处理<xref:System.Security.Principal.WindowsIdentity>对象时选择要通过返回的主标识<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-129">By default, WIF prioritizes <xref:System.Security.Principal.WindowsIdentity> objects when selecting the primary identity to return through the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="764fe-130">你可以通过提供委托通过修改此行为<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>属性以执行所选内容。</span><span class="sxs-lookup"><span data-stu-id="764fe-130">You can modify this behavior by supplying a delegate through the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to perform the selection.</span></span> <span data-ttu-id="764fe-131"><xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>属性提供类似功能<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-131">The <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property provides similar functionality for the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 <span data-ttu-id="764fe-132">在基于声明的模型中，通过提供其基础的标识的声明确定主体是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="764fe-132">In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</span></span> <span data-ttu-id="764fe-133"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法实质上是检查每个与确定它是否拥有指定的角色值的声明主体关联的标识。</span><span class="sxs-lookup"><span data-stu-id="764fe-133">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</span></span> <span data-ttu-id="764fe-134">声明的类型 (由其<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>属性) 用于确定应检查哪些声明在角色检查指定已通过的身份其<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-134">The type of the claim (represented by its <xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> property) used to determine which claims should be examined during role checks is specified on an identity through its <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="764fe-135">因此，在角色检查期间检查的声明可以是不同的标识与主体关联的不同类型。</span><span class="sxs-lookup"><span data-stu-id="764fe-135">Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="764fe-136">下面的示例提取由 HTTP 请求中的用户提供的声明，并将其写入到 HTTP 响应。</span><span class="sxs-lookup"><span data-stu-id="764fe-136">The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</span></span> <span data-ttu-id="764fe-137">当前用户读取从<xref:System.Web.HttpContext>作为<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="764fe-137">The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="764fe-138">声明然后从中读取，然后写入到响应。</span><span class="sxs-lookup"><span data-stu-id="764fe-138">The claims are then read from it and then are written to the response.</span></span>  
  
```  
  
ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
if (null != principal)  
{  
   foreach (Claim claim in principal.Claims)  
   {  
      Response.Write("CLAIM TYPE: " + claim.Type + "; CLAIM VALUE: " + claim.Value + "</br>");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsIdentity" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthenticationManager" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-139">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-139">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="764fe-140">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-140">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-141">没有标识与程序关联的新实例。</span><span class="sxs-lookup"><span data-stu-id="764fe-141">No identities are associated with the new instance.</span></span> <span data-ttu-id="764fe-142">(<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合为空)。</span><span class="sxs-lookup"><span data-stu-id="764fe-142">(The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities">
          <span data-ttu-id="764fe-143">从其初始化新声明主体的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-143">The identities from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-144">使用指定的声明标识，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-144">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class using the specified claims identities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-145"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合初始化具有指定的标识。</span><span class="sxs-lookup"><span data-stu-id="764fe-145">The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is initialized with the specified identities.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-146">
            <paramref name="identities" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-146">
              <paramref name="identities" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::IO::BinaryReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="764fe-147">指向 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的 <see cref="T:System.IO.BinaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-147">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-148">用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-148">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsPrincipal" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-149">通常情况下，<xref:System.IO.BinaryReader>使用从字节构造<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>并在相同的方式中初始化<xref:System.IO.BinaryWriter>。</span><span class="sxs-lookup"><span data-stu-id="764fe-149">Normally, the <xref:System.IO.BinaryReader> is constructed using the bytes from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> and initialized in the same way as the <xref:System.IO.BinaryWriter>.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-150">
            <paramref name="reader" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-150">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="764fe-151">从其初始化新的声明主体的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-151">The identity from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-152">从指定的标识初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-152">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-153">如果指定的标识是否可从<xref:System.Security.Claims.ClaimsIdentity>，它用于初始化<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-153">If the specified identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, it is used to initialize the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="764fe-154">否则为<xref:System.Security.Claims.ClaimsIdentity>创建使用指定的标识，用于初始化集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-154">Otherwise, a <xref:System.Security.Claims.ClaimsIdentity> is created using the specified identity and is used to initialize the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-155">
            <paramref name="identity" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-155">
              <paramref name="identity" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="764fe-156">从其初始化新的声明主体的主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-156">The principal from which to initialize the new claims principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-157">从指定的主体初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-157">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-158">如果指定的主体是可从<xref:System.Security.Claims.ClaimsPrincipal>，所有其标识都添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-158">If the specified principal is assignable from <xref:System.Security.Claims.ClaimsPrincipal>, all of its identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="764fe-159">如果指定的主体不是可从<xref:System.Security.Claims.ClaimsPrincipal>，新<xref:System.Security.Claims.ClaimsIdentity>从创建<xref:System.Security.Principal.IIdentity>中其<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType>属性并添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-159">If the specified principal is not assignable from <xref:System.Security.Claims.ClaimsPrincipal>, a new <xref:System.Security.Claims.ClaimsIdentity> is created from the <xref:System.Security.Principal.IIdentity> in its <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property and added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-160">
            <paramref name="principal" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-160">
              <paramref name="principal" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsPrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="764fe-161">序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-161">The serialized data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="764fe-162">序列化的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-162">The context for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-163">初始化从使用 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-163">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-164">
            <paramref name="info" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-164">
              <paramref name="info" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-165">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-165">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-166">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-166">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentities">
      <MemberSignature Language="C#" Value="public virtual void AddIdentities (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentities(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentities (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentities(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities">
          <span data-ttu-id="764fe-167">要添加的声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-167">The claims identities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-168">将指定的声明标识添加到此声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-168">Adds the specified claims identities to this claims principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-169">标识添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-169">The identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-170">
            <paramref name="identities" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-170">
              <paramref name="identities" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-171">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-172">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentity">
      <MemberSignature Language="C#" Value="public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentity(class System.Security.Claims.ClaimsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentity (identity As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentity(System::Security::Claims::ClaimsIdentity ^ identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="764fe-173">要添加的声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-173">The claims identity to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-174">将指定的声明标识添加到此声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-174">Adds the specified claims identity to this claims principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-175">将标识添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-175">The identity is added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-176">
            <paramref name="identity" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-176">
              <paramref name="identity" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-177">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-177">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-178">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-179">获取包含所有声明的集合，这些声明来自于与此声明主体关联的所有声明标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-179">Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-180">与此主体关联的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-180">The claims associated with this principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-181">声明主体所拥有的集合<xref:System.Security.Claims.ClaimsIdentity>可以通过标识属性访问的对象。</span><span class="sxs-lookup"><span data-stu-id="764fe-181">A claims principal has a collection of <xref:System.Security.Claims.ClaimsIdentity> objects that is accessible through the Identities property.</span></span> <span data-ttu-id="764fe-182">每个<xref:System.Security.Claims.ClaimsIdentity>集合中包含一个或多个声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-182">Each <xref:System.Security.Claims.ClaimsIdentity> in the collection contains one or more claims.</span></span> <span data-ttu-id="764fe-183"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>从所有在此集合中的声明标识的属性返回的所有声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-183">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims from all of the claims identities in this collection.</span></span>  
  
 <span data-ttu-id="764fe-184"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性可以检查的自定义实现通过<xref:System.Security.Claims.ClaimsAuthenticationManager>类决定身份验证或将筛选、 转换或扩充传入的声明集; 的自定义实现通过<xref:System.Security.Claims.ClaimsAuthorizationManager>类强制执行授权策略;或由应用程序代码来做出授权决策或自定义用户体验基于集合中存在的声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-184">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property can be examined by custom implementations of the <xref:System.Security.Claims.ClaimsAuthenticationManager> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <xref:System.Security.Claims.ClaimsAuthorizationManager> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipalSelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`1&lt;class System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ ClaimsPrincipalSelector { Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ get(); void set(Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Claims.ClaimsPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-185">获取并设置用于选择由 <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> 属性返回的声明主体的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-185">Gets and sets the delegate used to select the claims principal returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-186">委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-186">The delegate.</span>
          </span>
          <span data-ttu-id="764fe-187">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-187">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-188">你可以设置此属性来重写的默认行为<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-188">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-189">设置操作需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-189">Set operation requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-190">此成员不能通过部分受信任的或透明的代码中设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-190">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Current" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="764fe-191">返回此实例的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-191">Returns a copy of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-192">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 对象的新副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-192">A new copy of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaimsIdentity (reader As BinaryReader) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="764fe-193">二进制读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-193">The binary reader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-194">创建新的声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-194">Creates a new claims identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-195">创建的声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-195">The created claims identity.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Claims.ClaimsPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Claims::ClaimsPrincipal ^ Current { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-196">获取当前声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-196">Gets the current claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-197">当前声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-197">The current claims principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-198">默认情况下，<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>返回。</span><span class="sxs-lookup"><span data-stu-id="764fe-198">By default, <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> is returned.</span></span> <span data-ttu-id="764fe-199">你可以通过设置来更改此行为<xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>属性来指定要调用来确定当前主体的委托。</span><span class="sxs-lookup"><span data-stu-id="764fe-199">You can change this behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property to specify a delegate to be called to determine the current principal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-200">包含派生类型提供的任何其他数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-200">Contains any additional data provided by a derived type.</span>
          </span>
          <span data-ttu-id="764fe-201">通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-201">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-202">A<see cref="T:System.Byte" />数组，表示附加序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-202">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-203">检索与指定条件匹配的所有声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-203">Retrieves all of the claims that match a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="764fe-204">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-204">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-205">检索指定的谓词匹配的所有声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-205">Retrieves all of the claims that are matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-206">匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-206">The matching claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-207">返回与声明主体关联的所有标识声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-207">Returns claims from all identities associated with the claims principal.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-208">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-208">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="764fe-209">要根据其匹配声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-209">The claim type against which to match claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-210">检索所有或具有指定的声明类型的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-210">Retrieves all or the claims that have the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-211">匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-211">The matching claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-212">返回与声明主体关联的所有标识声明。</span><span class="sxs-lookup"><span data-stu-id="764fe-212">Returns claims from all identities associated with the claims principal.</span></span> <span data-ttu-id="764fe-213">使用序号大小写区分上进行比较`type`。</span><span class="sxs-lookup"><span data-stu-id="764fe-213">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-214">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-214">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-215">检索与指定的条件匹配的第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-215">Retrieves the first claim that matches a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="764fe-216">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-216">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-217">检索由指定谓词匹配的第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-217">Retrieves the first claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-218">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-218">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-219">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-219">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="764fe-220">要匹配的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-220">The claim type to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-221">使用指定的声明类型检索第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-221">Retrieves the first claim with the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-222">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-222">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-223">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-223">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="764fe-224">要填充数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-224">The object to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="764fe-225">此序列化的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-225">The destination for this serialization.</span>
          </span>
          <span data-ttu-id="764fe-226">可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-226">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-227">用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-227">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-228">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-228">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-229">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-229">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-230">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-230">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-231">确定与此声明主体相关联的任何声明标识是否包含与指定条件匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-231">Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="764fe-232">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-232">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-233">确定与此声明主体相关联的任何声明标识是否包含由指定的谓词匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-233">Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-234">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-234">
              <see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-235">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-235">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="764fe-236">要匹配的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-236">The type of the claim to match.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="764fe-237">要匹配的声明的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-237">The value of the claim to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-238">确定与此声明主体相关联的任何声明标识是否包含具有指定声明类型和值的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-238">Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-239">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-239">
              <see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-240">不会检查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-240">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="764fe-241">使用序号，区分大小写值; 在进行比较大小写区分类型。</span><span class="sxs-lookup"><span data-stu-id="764fe-241">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-242">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-242">
              <paramref name="type" /> is **null**.</span>
          </span>
          <span data-ttu-id="764fe-243">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-243">-or-</span>
          </span>
          <span data-ttu-id="764fe-244">
            <paramref name="value" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-244">
              <paramref name="value" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Identities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; Identities" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ Identities { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-245">获取一个集合，该集合包含与此声明主体关联的所有声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-245">Gets a collection that contains all of the claims identities associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-246">声明标识的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-246">The collection of claims identities.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-247">通常情况下，集合包含单个元素。</span><span class="sxs-lookup"><span data-stu-id="764fe-247">In the common case, the collection contains only a single element.</span></span>  
  
 <span data-ttu-id="764fe-248">找不到包含的某些元素可以`null`。</span><span class="sxs-lookup"><span data-stu-id="764fe-248">It is possible for the collection to contain some elements which are `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-249">获取与此声明主体相关联的主声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-249">Gets the primary claims identity associated with this claims principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-250">与此声明主体相关联的主声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-250">The primary claims identity associated with this claims principal.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-251">默认情况下，框架可以优先处理的类型标识<xref:System.Security.Principal.WindowsIdentity>时返回标识。</span><span class="sxs-lookup"><span data-stu-id="764fe-251">By default, the framework prioritizes identities of type <xref:System.Security.Principal.WindowsIdentity> when returning the identity.</span></span> <span data-ttu-id="764fe-252">第一个<xref:System.Security.Principal.WindowsIdentity>中找到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>返回集合。</span><span class="sxs-lookup"><span data-stu-id="764fe-252">The first <xref:System.Security.Principal.WindowsIdentity> found in the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is returned.</span></span> <span data-ttu-id="764fe-253">如果没有任何<xref:System.Security.Principal.WindowsIdentity>在集合中，可从第一个标识<xref:System.Security.Claims.ClaimsIdentity>返回。</span><span class="sxs-lookup"><span data-stu-id="764fe-253">If there is no <xref:System.Security.Principal.WindowsIdentity> in the collection, the first identity assignable from <xref:System.Security.Claims.ClaimsIdentity> is returned.</span></span> <span data-ttu-id="764fe-254">如果没有任何<xref:System.Security.Claims.ClaimsIdentity>，`null`返回。</span><span class="sxs-lookup"><span data-stu-id="764fe-254">If there is no <xref:System.Security.Claims.ClaimsIdentity>, `null` is returned.</span></span> <span data-ttu-id="764fe-255">如果<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合为空，<xref:System.ArgumentNullException>引发。</span><span class="sxs-lookup"><span data-stu-id="764fe-255">If the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="764fe-256">你可以通过设置更改默认行为<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>属性来指定要调用来确定标识的委托。</span><span class="sxs-lookup"><span data-stu-id="764fe-256">You can change the default behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to specify a delegate to be called to determine the identity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="764fe-257">要检查的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-257">The role for which to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-258">返回一个值，该值表示此声明主体代表的实体（用户）是否属于指定角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-258">Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="764fe-259">如果声明主体属于指定角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-259">
              <see langword="true" /> if claims principal is in the specified role; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-260"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法检查此声明主体拥有的标识是否包含一个声明的类型<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>声明的值等于指定的值`role`参数。</span><span class="sxs-lookup"><span data-stu-id="764fe-260">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method checks whether an identity that this claims principal possesses contains a claim of type <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> where the value of the claim is equal to the value specified by the `role` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="764fe-261">每个<xref:System.Security.Claims.ClaimsIdentity>具有其自己定义表示的角色声明类型。</span><span class="sxs-lookup"><span data-stu-id="764fe-261">Each <xref:System.Security.Claims.ClaimsIdentity> has its own definition of the claim type that represents a role.</span></span> <span data-ttu-id="764fe-262">此声明类型可以访问，并通过设置<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-262">This claim type can be accessed and set through the <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentitySelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt;, class System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property PrimaryIdentitySelector As Func(Of IEnumerable(Of ClaimsIdentity), ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ PrimaryIdentitySelector { Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); void set(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="764fe-263">获取并设置用于选择由 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> 属性返回的声明标识符的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-263">Gets and sets the delegate used to select the claims identity returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="764fe-264">委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-264">The delegate.</span>
          </span>
          <span data-ttu-id="764fe-265">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-265">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="764fe-266">你可以设置此属性来重写的默认行为<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="764fe-266">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="764fe-267">设置操作需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-267">Set operation requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="764fe-268">此成员不能通过部分受信任的或透明的代码中设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-268">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="764fe-269">数据存储使用的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-269">The writer to use for data storage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-270">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-270">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-271">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-271">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="764fe-272">数据存储使用的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-272">The writer to use for data storage.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="764fe-273">派生类型提供的其他数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-273">Additional data provided by the derived type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="764fe-274">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-274">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="764fe-275">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="764fe-275">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>