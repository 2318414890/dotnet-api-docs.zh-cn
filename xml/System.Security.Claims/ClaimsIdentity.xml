<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e406028690f68a7525afcb487cd6aa41086c0ab" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsIdentity : System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="12fcd-101">表示基于声明的标识。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12fcd-101">Represents a claims-based identity.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-102"><xref:System.Security.Claims.ClaimsIdentity>类是基于声明的标识的具体实现; 一个标识，即描述的声明的集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-102">The <xref:System.Security.Claims.ClaimsIdentity> class is a concrete implementation of a claims-based identity; that is, an identity described by a collection of claims.</span></span> <span data-ttu-id="12fcd-103">声明是有关实体所做的描述的属性，向右、 颁发者或某些其他质量的该实体的声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-103">A claim is a statement about an entity made by an issuer that describes a property, right, or some other quality of that entity.</span></span> <span data-ttu-id="12fcd-104">这样的实体称为使用者的声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-104">Such an entity is said to be the subject of the claim.</span></span> <span data-ttu-id="12fcd-105">声明由<xref:System.Security.Claims.Claim>类。</span><span class="sxs-lookup"><span data-stu-id="12fcd-105">A claim is represented by the <xref:System.Security.Claims.Claim> class.</span></span> <span data-ttu-id="12fcd-106">中包含的声明<xref:System.Security.Claims.ClaimsIdentity>描述实体表示相应的标识，并且可以用于授权和身份验证决定。</span><span class="sxs-lookup"><span data-stu-id="12fcd-106">The claims contained in a <xref:System.Security.Claims.ClaimsIdentity> describe the entity that the corresponding identity represents, and can be used to make authorization and authentication decisions.</span></span> <span data-ttu-id="12fcd-107">基于声明的访问模型相比，具有许多优点更传统以独占方式依赖于角色的访问模型。</span><span class="sxs-lookup"><span data-stu-id="12fcd-107">A claims-based access model has many advantages over more traditional access models that rely exclusively on roles.</span></span> <span data-ttu-id="12fcd-108">例如，声明可以提供有关它们表示，以更特定的方式可以评估的授权或身份验证的标识多更丰富的信息。</span><span class="sxs-lookup"><span data-stu-id="12fcd-108">For example, claims can provide much richer information about the identity they represent and can be evaluated for authorization or authentication in a far more specific manner.</span></span>  
  
 <span data-ttu-id="12fcd-109">从.NET Framework 4.5 开始，Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="12fcd-109">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="12fcd-110">这意味着现在表示.NET Framework 中的标识的许多类派生自<xref:System.Security.Claims.ClaimsIdentity>并描述其属性访问集合的声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-110">This means that many classes that represent an identity in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsIdentity> and describe their properties through a collection of claims.</span></span> <span data-ttu-id="12fcd-111">这是不同于以前版本的.NET Framework 中，在其中，实现这些类<xref:System.Security.Principal.IIdentity>直接接口。</span><span class="sxs-lookup"><span data-stu-id="12fcd-111">This is different from previous versions of the .NET Framework, in which, these classes implemented the <xref:System.Security.Principal.IIdentity> interface directly.</span></span> <span data-ttu-id="12fcd-112">可以通过访问的描述标识的声明集合<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-112">The collection of claims that describe the identity can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> property.</span></span> <span data-ttu-id="12fcd-113"><xref:System.Security.Claims.ClaimsIdentity>类提供了几种方法可查找和修改声明和完全支持语言集成查询 (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="12fcd-113">The <xref:System.Security.Claims.ClaimsIdentity> class provides several methods for finding and modifying claims and fully supports language integrated queries (LINQ).</span></span> <span data-ttu-id="12fcd-114">在应用程序代码中，<xref:System.Security.Claims.ClaimsIdentity>对象通常通过访问<xref:System.Security.Claims.ClaimsPrincipal>对象; 例如，返回的主体<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-114">In application code, <xref:System.Security.Claims.ClaimsIdentity> objects are typically accessed through <xref:System.Security.Claims.ClaimsPrincipal> objects; for example, the principal returned by <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12fcd-115"><xref:System.Security.Claims.ClaimsPrincipal>类具有<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>以及属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-115">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="12fcd-116">在大多数情况下，你应访问通过用户的声明<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不是通过<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-116">In the majority of cases you should access the user’s claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="12fcd-117">你将需要访问个人的声明<xref:System.Security.Claims.ClaimsIdentity>仅在其中主体包含多个情况下<xref:System.Security.Claims.ClaimsIdentity>并且需要进行评估或修改特定标识。</span><span class="sxs-lookup"><span data-stu-id="12fcd-117">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="12fcd-118">若要添加或删除从声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合，调用方必须具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="12fcd-118">To add or remove claims from the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="12fcd-119">在基于声明的模型中，<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性和<xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法实现通过计算包含由标识的声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-119">In the claims-based model, the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method are implemented by evaluating the claims contained by an identity.</span></span> <span data-ttu-id="12fcd-120">基于声明的模型中的基实现提供的<xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType>属性和<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="12fcd-120">The base implementations in the claims-based model are provided by the <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="12fcd-121"><xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>属性使您能够指定应该用于评估在执行这些操作时，包含由标识的声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="12fcd-121">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> properties enable you to specify a claim type that should be used to evaluate the claims contained by the identity when performing these operations.</span></span>  
  
 <span data-ttu-id="12fcd-122">通过支持委派方案<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>和<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-122">Delegation scenarios are supported through the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> and <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsPrincipal" />
    <altmember cref="T:System.Security.Principal.GenericIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Web.Security.FormsIdentity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-123">初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-123">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-124">用空声称集合初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-124">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-125">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-125">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-126">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-126">Property</span></span>|<span data-ttu-id="12fcd-127">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-128">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-128">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-129">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-129">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-130">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-130">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-131">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-131">A empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-132">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-132">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-133">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-133">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-134">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-134">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">
          <span data-ttu-id="12fcd-137">传播声明标识的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-137">The claims with which to populate the claims identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-138">使用枚举集合 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象的初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-138">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using an enumerated collection of <see cref="T:System.Security.Claims.Claim" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-139">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-139">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-140">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-140">Property</span></span>|<span data-ttu-id="12fcd-141">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-141">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-142">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-142">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-143">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-143">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-144">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-144">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-145">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-145">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-146">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-146">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-147">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-147">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-148">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-148">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="12fcd-151">指向 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的 <see cref="T:System.IO.BinaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-151">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsIdentity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-152">用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-152">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsIdentity" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-153">通常情况下，读取器构造从返回的字节数从<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-153">Normally, the reader is constructed from the bytes returned from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-154">
            <paramref name="reader" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-154">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="12fcd-155">序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-155">The serialized data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-156">初始化从使用 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-156">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-157">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-157">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-158">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-158">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Security::Claims::ClaimsIdentity ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="12fcd-159">要复制的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-159">The <see cref="T:System.Security.Claims.ClaimsIdentity" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-160">从现有 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 实例初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-160">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from an existing <see cref="T:System.Security.Claims.ClaimsIdentity" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-161">下表显示的实例的属性值分配<xref:System.Security.Claims.ClaimsIdentity>类<xref:System.Security.Claims.ClaimsIdentity>提供给构造函数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-161">The following table shows the property value assignments for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class from the <xref:System.Security.Claims.ClaimsIdentity> provided to the constructor.</span></span>  
  
| <span data-ttu-id="12fcd-162">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-162">Property</span></span> | <span data-ttu-id="12fcd-163">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-163">Value</span></span> |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-164">如果值`other.Actor`属性无法`null`、 `other.Actor` <xref:System.Security.Claims.ClaimsIdentity>克隆和分配; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-164">If the value of the `other.Actor` property isn't `null`, the `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> is cloned and assigned; otherwise, `null`.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-165">`other.AuthenticationType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-165">The value of the `other.AuthenticationType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-166">`other.BootstrapContext` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-166">The value of the `other.BootstrapContext` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-167">`List<Claim>`的声明，如果有的话，在`other.Claims`属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-167">The `List<Claim>` of claims, if any, in the `other.Claims` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-168">`other.Label` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-168">The value of the `other.Label` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-169">`other.NameClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-169">The value of the `other.NameClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-170">`other.RoleClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-170">The value of the `other.RoleClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|<span data-ttu-id="12fcd-171">如果`other.CustomSerializationData`不`null`，`other.CustomSerializationData`克隆和分配; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-171">If `other.CustomSerializationData` isn't `null`, `other.CustomSerializationData` is cloned and assigned; otherwise, `null`.</span></span>|
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-172">
            <paramref name="other" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-172">
              <paramref name="other" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="12fcd-173">新声明标识所基于的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-173">The identity from which to base the new claims identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-174">初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例，该类表示具有指定的 <see cref="T:System.Security.Principal.IIdentity" /> 用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-174">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the name and authentication type from the specified <see cref="T:System.Security.Principal.IIdentity" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-175">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-175">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-176">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-176">Property</span></span>|<span data-ttu-id="12fcd-177">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-177">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-178">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-178">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-179">值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-179">The value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-180">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-180">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-181">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到新的实例; 否则为空集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-181">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance; otherwise, an empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-182">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-182">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-183">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-183">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-184">如果`identity`不可从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-184">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="12fcd-185">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-185">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-186">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-186">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-187">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-187">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">
          <span data-ttu-id="12fcd-188">所使用的身份验证的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-188">The type of authentication used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-189">用空的声明集合和指定的身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-189">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection and the specified authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-190">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-190">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-191">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-191">Property</span></span>|<span data-ttu-id="12fcd-192">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-193">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-193">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-194">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-194">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-195">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-195">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-196">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-196">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-197">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-197">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-198">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-198">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-199">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-199">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-200">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-200">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-201"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-201"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">
          <span data-ttu-id="12fcd-203">传播声明标识的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-203">The claims with which to populate the claims identity.</span>
          </span>
        </param>
        <param name="authenticationType">
          <span data-ttu-id="12fcd-204">所使用的身份验证的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-204">The type of authentication used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-205">用指定的声称和身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-205">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims and authentication type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-206">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-206">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-207">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-207">Property</span></span>|<span data-ttu-id="12fcd-208">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-208">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-209">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-209">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-210">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-210">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-211">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-211">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-212">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-212">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-213">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-213">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-214">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-214">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-215">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-215">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-216">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-216">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-217"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-217"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="12fcd-219">序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-219">The serialized data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="12fcd-220">序列化的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-220">The context for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-221">初始化从使用 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-221">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-222">
            <paramref name="info" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-222">
              <paramref name="info" /> is **null**.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-223">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-223">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-224">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-224">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="12fcd-225">新声明标识所基于的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-225">The identity from which to base the new claims identity.</span>
          </span>
        </param>
        <param name="claims">
          <span data-ttu-id="12fcd-226">传播声明标识的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-226">The claims with which to populate the claims identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-227">使用指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 和类型提供程序初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-227">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the specified claims and the specified <see cref="T:System.Security.Principal.IIdentity" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-228">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-228">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-229">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-229">Property</span></span>|<span data-ttu-id="12fcd-230">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-230">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-231">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-231">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-232">`authenticationType` 参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-232">The `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-233">如果`authenticationType`参数是`null`或空字符串，值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-233">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-234">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-234">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-235">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-235">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="12fcd-236">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到之前所指定的新实例`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-236">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-237">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-237">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-238">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-238">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-239">如果`identity`不可从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-239">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="12fcd-240">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-240">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-241">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-241">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-242">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-242">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">
          <span data-ttu-id="12fcd-243">所使用的身份验证的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-243">The type of authentication used.</span>
          </span>
        </param>
        <param name="nameType">
          <span data-ttu-id="12fcd-244">要用于名称声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-244">The claim type to use for name claims.</span>
          </span>
        </param>
        <param name="roleType">
          <span data-ttu-id="12fcd-245">要用于角色声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-245">The claim type to use for role claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-246">用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-246">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified authentication type, name claim type, and role claim type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-247">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-247">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-248">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-248">Property</span></span>|<span data-ttu-id="12fcd-249">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-249">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-250">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-250">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-251">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-251">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-252">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-252">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-253">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-253">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-254">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-254">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-255">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-255">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-256">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-256">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-257">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-257">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-258">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-258">The value of the `nameType` parameter.</span></span> <span data-ttu-id="12fcd-259">如果`nameType`参数为 null 或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-259">If the `nameType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-260">`roleType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-260">The value of the `roleType` parameter.</span></span> <span data-ttu-id="12fcd-261">如果`roleType`参数为 null 或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-261">If the `roleType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">
          <span data-ttu-id="12fcd-262">传播声明标识的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-262">The claims with which to populate the claims identity.</span>
          </span>
        </param>
        <param name="authenticationType">
          <span data-ttu-id="12fcd-263">所使用的身份验证的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-263">The type of authentication used.</span>
          </span>
        </param>
        <param name="nameType">
          <span data-ttu-id="12fcd-264">要用于名称声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-264">The claim type to use for name claims.</span>
          </span>
        </param>
        <param name="roleType">
          <span data-ttu-id="12fcd-265">要用于角色声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-265">The claim type to use for role claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-266">用指定的声明、身份验证类型、名称声明类型、角色声明类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-266">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims, authentication type, name claim type, and role claim type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-267">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-267">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-268">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-268">Property</span></span>|<span data-ttu-id="12fcd-269">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-269">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-270">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-270">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-271">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-271">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-272">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-272">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-273">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-273">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-274">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-274">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-275">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-275">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-276">`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-276">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-277">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-277">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-278">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-278">The value of the `nameType` parameter.</span></span> <span data-ttu-id="12fcd-279">但是，如果`nameType`参数是`null`或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-279">However, if the `nameType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-280">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-280">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="12fcd-281">但是，如果`roleClaimType`参数是`null`或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-281">However, if the `roleClaimType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="12fcd-282">新声明标识所基于的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-282">The identity from which to base the new claims identity.</span>
          </span>
        </param>
        <param name="claims">
          <span data-ttu-id="12fcd-283">传播新声明标识的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-283">The claims with which to populate the new claims identity.</span>
          </span>
        </param>
        <param name="authenticationType">
          <span data-ttu-id="12fcd-284">所使用的身份验证的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-284">The type of authentication used.</span>
          </span>
        </param>
        <param name="nameType">
          <span data-ttu-id="12fcd-285">要用于名称声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-285">The claim type to use for name claims.</span>
          </span>
        </param>
        <param name="roleType">
          <span data-ttu-id="12fcd-286">要用于角色声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-286">The claim type to use for role claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-287">从指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-287">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from the specified <see cref="T:System.Security.Principal.IIdentity" /> using the specified claims, authentication type, name claim type, and role claim type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-288">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-288">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="12fcd-289">Property</span><span class="sxs-lookup"><span data-stu-id="12fcd-289">Property</span></span>|<span data-ttu-id="12fcd-290">“值”</span><span class="sxs-lookup"><span data-stu-id="12fcd-290">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="12fcd-291">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-291">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="12fcd-292">`authenticationType` 参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-292">The `authenticationType` parameter.</span></span> <span data-ttu-id="12fcd-293">如果`authenticationType`参数是`null`或空字符串，值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-293">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="12fcd-294">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-294">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="12fcd-295">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-295">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="12fcd-296">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到之前所指定的新实例`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="12fcd-296">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="12fcd-297">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-297">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="12fcd-298">如果`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-298">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="12fcd-299">如果`identity`不可从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-299">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="12fcd-300">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性将返回基于<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-300">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="12fcd-301">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-301">The value of the `nameType` parameter.</span></span> <span data-ttu-id="12fcd-302">但是，如果值`nameType`参数是`null`或空字符串和`identity`是可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-302">However, if the value of the `nameType` parameter is `null` or an empty string and `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="12fcd-303">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="12fcd-303">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="12fcd-304">但是，如果值`roleClaimType`参数是`null`或空字符串，并标识可从<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性; 否则为将使用，<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="12fcd-304">However, if the value of the `roleClaimType` parameter is `null` or an empty string and identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsIdentity ^ Actor { System::Security::Claims::ClaimsIdentity ^ get(); void set(System::Security::Claims::ClaimsIdentity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-305">获取或设置被授予委派权利的调用方的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-305">Gets or sets the identity of the calling party that was granted delegation rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-306">授予委托权利的调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-306">The calling party that was granted delegation rights.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-307">应用程序可以访问当前的调用中，通过以递归方式检查导致委派链<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-307">An application can access the delegation chain that led to the current call, by recursively examining the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> property.</span></span> <span data-ttu-id="12fcd-308">可以通过访问的令牌的名义委托调用<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-308">The token on whose behalf the call is being delegated can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="12fcd-309">尝试设置当前实例的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-309">An attempt to set the property to the current instance occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">
          <span data-ttu-id="12fcd-310">要添加的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-310">The claim to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-311">添加单个声明到此声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-311">Adds a single claim to this claims identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-312">检查声明和使用者是否不同于此声明标识，<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>方法调用与此声明作为参数使用正确的使用者创建新声明的标识。</span><span class="sxs-lookup"><span data-stu-id="12fcd-312">The claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="12fcd-313">此方法具有`SecurityCritical`应用于哪些实体可以添加为标识的声明的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-313">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="12fcd-314">进一步关闭管道，授权决策都是基于在上中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-314">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-315">
            <paramref name="claim" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-315">
              <paramref name="claim" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-316">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-316">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-317">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-317">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddClaims (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaims(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">
          <span data-ttu-id="12fcd-318">要添加的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-318">The claims to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-319">添加声明列表到此声明标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-319">Adds a list of claims to this claims identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-320">检查每个声明和使用者是否不同于此声明标识，<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>方法调用与此声明作为参数使用正确的使用者创建新声明的标识。</span><span class="sxs-lookup"><span data-stu-id="12fcd-320">Each claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="12fcd-321">此方法具有`SecurityCritical`应用于哪些实体可以添加为标识的声明的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-321">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="12fcd-322">进一步关闭管道，授权决策都是基于在上中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-322">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-323">
            <paramref name="claims" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-323">
              <paramref name="claims" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-324">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-324">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-325">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-325">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-326">获取身份验证类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-326">Gets the authentication type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-327">身份验证类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-327">The authentication type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-328">通常定义的值之一<xref:System.Security.Claims.AuthenticationTypes>类。</span><span class="sxs-lookup"><span data-stu-id="12fcd-328">Typically one of the values defined by the <xref:System.Security.Claims.AuthenticationTypes> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberSignature Language="VB.NET" Value="Public Property BootstrapContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BootstrapContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-329">获取或设置用于创建此声明标识的令牌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-329">Gets or sets the token that was used to create this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-330">启动上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-330">The bootstrap context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-331">基础对象是实例<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="12fcd-331">The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="12fcd-332">设置`saveBootstrapContext`属性上的[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)或[ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)要指定的令牌是否用于生成的配置文件中的元素<xref:System.Security.Claims.ClaimsIdentity>应保留在<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-332">Set the `saveBootstrapContext` attribute on either the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) or the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>  
  
 <span data-ttu-id="12fcd-333">如果<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性不是`null`，应用程序可以通过属性和方法访问原始令牌和声明它会生成<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="12fcd-333">If the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-334">设置操作需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-334">Set operation requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-335">此成员不能通过部分受信任的或透明的代码中设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-335">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Actor" />
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-336">获取与此声明标识关联的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-336">Gets the claims associated with this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-337">与此声明标识相关联的声明的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-337">The collection of claims associated with this claims identity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-338">集合可能包含的条目，将`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-338">The collection may contain entries that are `null`.</span></span>  
  
 <span data-ttu-id="12fcd-339">中包含的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合实质上描述的实体，由表示<xref:System.Security.Claims.ClaimsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-339">The claims contained in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection essentially describe the entity that is represented by the <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="12fcd-340">介绍属性和由实体所拥有的权限并可以通过应用程序能够判断身份验证和授权检查这些声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-340">The claims describe the properties and rights possessed by the entity and can be examined by applications to make decisions about authentication and authorization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12fcd-341"><xref:System.Security.Claims.ClaimsPrincipal>类具有<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>以及属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-341">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="12fcd-342">在大多数情况下，你应访问通过用户的声明<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不是通过<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-342">In the majority of cases you should access the user’s claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="12fcd-343">你将需要访问个人的声明<xref:System.Security.Claims.ClaimsIdentity>仅在其中主体包含多个情况下<xref:System.Security.Claims.ClaimsIdentity>并且需要进行评估或修改特定标识。</span><span class="sxs-lookup"><span data-stu-id="12fcd-343">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-344">返回从此声明标识中复制的新 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-344">Returns a new <see cref="T:System.Security.Claims.ClaimsIdentity" /> copied from this claims identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-345">当前实例的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-345">A copy of the current instance.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaim (reader As BinaryReader) As Claim" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::Claim ^ CreateClaim(System::IO::BinaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="12fcd-346">指向声明的 <see cref="T:System.IO.BinaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-346">The <see cref="T:System.IO.BinaryReader" /> that points to the claim.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-347">为派生类型提供扩展点以创建自定义 <see cref="T:System.Security.Claims.Claim" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-347">Provides an extensibility point for derived types to create a custom <see cref="T:System.Security.Claims.Claim" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-348">一个新的 <see cref="T:System.Security.Claims.Claim" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-348">A new <see cref="T:System.Security.Claims.Claim" />.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-349">
            <paramref name="reader" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-349">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-350">包含派生类型提供的任何其他数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-350">Contains any additional data provided by a derived type.</span>
          </span>
          <span data-ttu-id="12fcd-351">通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-351">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-352">A<see cref="T:System.Byte" />数组，表示附加序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-352">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-353">默认颁发者，“地方当局”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-353">The default issuer; "LOCAL AUTHORITY".</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNameClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNameClaimType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-354">默认名称声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Name" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-354">The default name claim type; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultRoleClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultRoleClaimType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-355">默认角色声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Role" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-355">The default role claim type; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-356">检索与指定条件匹配的所有声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-356">Retrieves all of the claims that match a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="12fcd-357">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-357">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-358">检索指定的谓词匹配的所有声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-358">Retrieves all of the claims that are matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-359">匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-359">The matching claims.</span>
          </span>
          <span data-ttu-id="12fcd-360">列表为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-360">The list is read-only.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-361">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-361">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="12fcd-362">要根据其匹配声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-362">The claim type against which to match claims.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-363">检索所有有指定声明类型的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-363">Retrieves all of the claims that have the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-364">匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-364">The matching claims.</span>
          </span>
          <span data-ttu-id="12fcd-365">列表为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-365">The list is read-only.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-366">使用序号大小写区分上进行比较`type`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-366">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-367">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-367">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-368">检索与指定的条件匹配的第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-368">Retrieves the first claim that matches a specified condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="12fcd-369">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-369">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-370">检索由指定谓词匹配的第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-370">Retrieves the first claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-371">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-371">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-372">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-372">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="12fcd-373">要匹配的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-373">The claim type to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-374">使用指定的声明类型检索第一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-374">Retrieves the first claim with the specified claim type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-375">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-375">The first matching claim or <see langword="null" /> if no match is found.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-376">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-376">
              <paramref name="type" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="12fcd-377">要填充数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-377">The object to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="12fcd-378">此序列化的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-378">The destination for this serialization.</span>
          </span>
          <span data-ttu-id="12fcd-379">可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-379">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-380">用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-380">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsIdentity" /> object.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-381">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-381">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-382">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-383">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-384">确定该声明标识是否拥有与指定条件相匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-384">Determines whether the claims identity possesses a claim that matches specified conditions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="12fcd-385">执行匹配逻辑的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-385">The function that performs the matching logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-386">确定该声明标识是否拥有与指定条件相匹配的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-386">Determines whether this claims identity has a claim that is matched by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-387">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-387">
              <see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-388">
            <paramref name="match" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-388">
              <paramref name="match" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="12fcd-389">要匹配的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-389">The type of the claim to match.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="12fcd-390">要匹配的声明的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-390">The value of the claim to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-391">确定该声明标识是否具备指定声明类型和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-391">Determines whether this claims identity has a claim with the specified claim type and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-392">如果找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-392">
              <see langword="true" /> if a match is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-393">不会检查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-393">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="12fcd-394">使用序号，区分大小写值; 在进行比较大小写区分类型。</span><span class="sxs-lookup"><span data-stu-id="12fcd-394">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-395">
            <paramref name="type" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-395">
              <paramref name="type" /> is **null**.</span>
          </span>
          <span data-ttu-id="12fcd-396">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-396">-or-</span>
          </span>
          <span data-ttu-id="12fcd-397">
            <paramref name="value" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-397">
              <paramref name="value" /> is **null**.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-398">获取一个值，该值指示是否验证了标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-398">Gets a value that indicates whether the identity has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-399">
            <see langword="true" /> 如果标识已经过身份验证;否则为**false**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-399">
              <see langword="true" /> if the identity has been authenticated; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-400">`true` 如果<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性不是`null`或空字符串。</span><span class="sxs-lookup"><span data-stu-id="12fcd-400">`true` if the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property is not `null` or an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-401">获取或设置此声明标识的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-401">Gets or sets the label for this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-402">标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-402">The label.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-403">获取此声明标识的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-403">Gets the name of this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-404">姓名或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-404">The name or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-405">返回的值类型的名称相匹配的第一个声明的声明类型在中设置<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-405">Returns the value of the first claim with a type that matches the name claim type set in the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property.</span></span> <span data-ttu-id="12fcd-406">如果没有声明找到匹配的名称声明类型，将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="12fcd-406">If no claim is found that matches the name claim type, returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameClaimType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-407">获取用于确定为此声明标识的 <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> 属性提供值的声明的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-407">Gets the claim type that is used to determine which claims provide the value for the <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> property of this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-408">名称声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-408">The name claim type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-409"><xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>属性指定的声明类型 (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) 用于提供此标识的名称。</span><span class="sxs-lookup"><span data-stu-id="12fcd-409">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property specifies the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used to provide the name for this identity.</span></span> <span data-ttu-id="12fcd-410">通过访问名称<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-410">The name is accessed through the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property.</span></span>  
  
 <span data-ttu-id="12fcd-411">构造函数设置此属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-411">This property is set by the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Name" />
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">
          <span data-ttu-id="12fcd-412">要移除的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-412">The claim to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-413">尝试从声明标识中移除一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-413">Attempts to remove a claim from the claims identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-414">很可能无法删除该声明，因为它不由标识拥有。</span><span class="sxs-lookup"><span data-stu-id="12fcd-414">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="12fcd-415">例如，这会出现此情况的主体拥有的角色声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-415">For example, this would be the case for role claims that are owned by the principal.</span></span> <span data-ttu-id="12fcd-416">与不同<xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>方法，它返回一个布尔值，该值指示是否已移除的声明，<xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A>时无法删除该声明引发异常</span><span class="sxs-lookup"><span data-stu-id="12fcd-416">Unlike the <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> method, which returns a Boolean value that indicates whether the claim has been removed, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> throws an exception if the claim could not be removed</span></span>  
  
 <span data-ttu-id="12fcd-417">指定的声明匹配的对象引用 (<xref:System.Object.ReferenceEquals%2A>)。</span><span class="sxs-lookup"><span data-stu-id="12fcd-417">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="12fcd-418">此方法具有`SecurityCritical`应用于哪些实体，声明可移除标识控件的属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-418">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="12fcd-419">进一步关闭管道，授权决策都是基于在上中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-419">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="12fcd-420">无法移除声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-420">The claim cannot be removed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-421">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-421">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-422">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-422">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RoleClaimType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12fcd-423">获取将解释为此声明标识中声明的 .NET Framework 角色的声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-423">Gets the claim type that will be interpreted as a .NET Framework role among the claims in this claims identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12fcd-424">角色声明类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-424">The role claim type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-425">角色声明类型是声明类型 (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) 计算此标识时，使用<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="12fcd-425">The role claim type is the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used when evaluating this identity for the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="12fcd-426"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>调用方法来确定当前的主体是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="12fcd-426">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method is called to determine whether the current principal is in a specified role.</span></span> <span data-ttu-id="12fcd-427">基于声明的模型将扩展此检查用于提供主体的声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-427">The claims-based model extends this check to use claims presented by the principal.</span></span> <span data-ttu-id="12fcd-428">A<xref:System.Security.Claims.ClaimsPrincipal>对象可以包含一个或多个<xref:System.Security.Claims.ClaimsIdentity>对象和每个标识对象可以包含多个<xref:System.Security.Claims.Claim>对象。</span><span class="sxs-lookup"><span data-stu-id="12fcd-428">A <xref:System.Security.Claims.ClaimsPrincipal> object can contain one or more <xref:System.Security.Claims.ClaimsIdentity> objects and each identity object can contain multiple <xref:System.Security.Claims.Claim> objects.</span></span> <span data-ttu-id="12fcd-429"><xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>属性指定应该用于计算此时为角色提供的值的声明的声明类型<xref:System.Security.Claims.ClaimsIdentity>对象。</span><span class="sxs-lookup"><span data-stu-id="12fcd-429">The <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> property specifies the claim type of the claim that should be used to provide the value for the role when evaluating this <xref:System.Security.Claims.ClaimsIdentity> object.</span></span> <span data-ttu-id="12fcd-430">该属性设置构造函数中。</span><span class="sxs-lookup"><span data-stu-id="12fcd-430">The property is set by the constructor.</span></span> <span data-ttu-id="12fcd-431">常用的值是<xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="12fcd-431">A common value is <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">
          <span data-ttu-id="12fcd-432">要移除的声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-432">The claim to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-433">尝试从声明标识中移除一个声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-433">Attempts to remove a claim from the claims identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12fcd-434">如果已成功移除了声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-434">
              <see langword="true" /> if the claim was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fcd-435">很可能无法删除该声明，因为它不由标识拥有。</span><span class="sxs-lookup"><span data-stu-id="12fcd-435">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="12fcd-436">例如，这会出现此情况的主体拥有的角色声明。</span><span class="sxs-lookup"><span data-stu-id="12fcd-436">For example, this would be the case for role claims that are owned by the principal.</span></span>  
  
 <span data-ttu-id="12fcd-437">指定的声明匹配的对象引用 (<xref:System.Object.ReferenceEquals%2A>)。</span><span class="sxs-lookup"><span data-stu-id="12fcd-437">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="12fcd-438">此方法具有`SecurityCritical`应用于哪些实体，声明可移除标识控件的属性。</span><span class="sxs-lookup"><span data-stu-id="12fcd-438">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="12fcd-439">进一步关闭管道，授权决策都是基于在上中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="12fcd-439">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="12fcd-440">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-440">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="12fcd-441">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-441">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="12fcd-442">数据存储使用的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-442">The writer to use for data storage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-443">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-443">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-444">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-444">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="12fcd-445">数据存储使用的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-445">The writer to use for data storage.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="12fcd-446">派生类型提供的其他数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-446">Additional data provided by the derived type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12fcd-447">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-447">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12fcd-448">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12fcd-448">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>