<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4092446689e553577aad633a82509a7bd8056888" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65155986" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsIdentity : System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClaimsIdentity = class&#xA;    interface IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0981d-101">表示基于声明的标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-101">Represents a claims-based identity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-102"><xref:System.Security.Claims.ClaimsIdentity>类是基于声明的标识的具体实现，即，一个标识描述的声明集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-102">The <xref:System.Security.Claims.ClaimsIdentity> class is a concrete implementation of a claims-based identity; that is, an identity described by a collection of claims.</span></span> <span data-ttu-id="0981d-103">声明是有关实体所做的颁发者的描述的属性，对或该实体的某些其他质量的语句。</span><span class="sxs-lookup"><span data-stu-id="0981d-103">A claim is a statement about an entity made by an issuer that describes a property, right, or some other quality of that entity.</span></span> <span data-ttu-id="0981d-104">这样的实体被认为是主体的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-104">Such an entity is said to be the subject of the claim.</span></span> <span data-ttu-id="0981d-105">声明由<xref:System.Security.Claims.Claim>类。</span><span class="sxs-lookup"><span data-stu-id="0981d-105">A claim is represented by the <xref:System.Security.Claims.Claim> class.</span></span> <span data-ttu-id="0981d-106">中包含的声明<xref:System.Security.Claims.ClaimsIdentity>描述的实体的相应标识表示，并可以在进行授权和身份验证决策。</span><span class="sxs-lookup"><span data-stu-id="0981d-106">The claims contained in a <xref:System.Security.Claims.ClaimsIdentity> describe the entity that the corresponding identity represents, and can be used to make authorization and authentication decisions.</span></span> <span data-ttu-id="0981d-107">基于声明的访问模型具有更传统以独占方式依赖于角色的访问模型相比有众多优势。</span><span class="sxs-lookup"><span data-stu-id="0981d-107">A claims-based access model has many advantages over more traditional access models that rely exclusively on roles.</span></span> <span data-ttu-id="0981d-108">例如，声明可以提供有关标识它们表示，可用于授权或身份验证中更特定的方式计算更加丰富的信息。</span><span class="sxs-lookup"><span data-stu-id="0981d-108">For example, claims can provide much richer information about the identity they represent and can be evaluated for authorization or authentication in a far more specific manner.</span></span>  
  
 <span data-ttu-id="0981d-109">从.NET Framework 4.5 开始，Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="0981d-109">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="0981d-110">这意味着现在表示.NET Framework 中的标识的许多类派生自<xref:System.Security.Claims.ClaimsIdentity>和描述的声明集合通过其属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-110">This means that many classes that represent an identity in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsIdentity> and describe their properties through a collection of claims.</span></span> <span data-ttu-id="0981d-111">这是不同于以前版本的.NET Framework 中，在其中实现这些类<xref:System.Security.Principal.IIdentity>直接接口。</span><span class="sxs-lookup"><span data-stu-id="0981d-111">This is different from previous versions of the .NET Framework, in which, these classes implemented the <xref:System.Security.Principal.IIdentity> interface directly.</span></span> <span data-ttu-id="0981d-112">可以通过访问的描述标识声明的集合<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-112">The collection of claims that describe the identity can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> property.</span></span> <span data-ttu-id="0981d-113"><xref:System.Security.Claims.ClaimsIdentity>类提供了几种方法来查找和修改声明，并完全支持语言集成查询 (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="0981d-113">The <xref:System.Security.Claims.ClaimsIdentity> class provides several methods for finding and modifying claims and fully supports language integrated queries (LINQ).</span></span> <span data-ttu-id="0981d-114">在应用程序代码中，<xref:System.Security.Claims.ClaimsIdentity>对象通常通过访问<xref:System.Security.Claims.ClaimsPrincipal>对象; 例如，通过返回的主体<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-114">In application code, <xref:System.Security.Claims.ClaimsIdentity> objects are typically accessed through <xref:System.Security.Claims.ClaimsPrincipal> objects; for example, the principal returned by <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0981d-115"><xref:System.Security.Claims.ClaimsPrincipal>类具有<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-115">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="0981d-116">在大多数情况下，您应访问通过用户的声明<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不通过<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-116">In the majority of cases you should access the user's claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="0981d-117">将需要访问个人的声明<xref:System.Security.Claims.ClaimsIdentity>仅在当主体包含多个<xref:System.Security.Claims.ClaimsIdentity>并且需要进行评估，或修改特定的标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-117">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0981d-118">若要添加或删除来自声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合，调用方必须具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-118">To add or remove claims from the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="0981d-119">在基于声明的模型中，<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性和<xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法实现通过评估所包含的标识的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-119">In the claims-based model, the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method are implemented by evaluating the claims contained by an identity.</span></span> <span data-ttu-id="0981d-120">提供基于声明的模型中的基实现<xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType>属性和<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0981d-120">The base implementations in the claims-based model are provided by the <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0981d-121"><xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>属性，可以指定应该用于评估时执行这些操作由标识所包含的声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-121">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> properties enable you to specify a claim type that should be used to evaluate the claims contained by the identity when performing these operations.</span></span>  
  
 <span data-ttu-id="0981d-122">通过支持委派方案<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>和<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-122">Delegation scenarios are supported through the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> and <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsPrincipal" />
    <altmember cref="T:System.Security.Principal.GenericIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Web.Security.FormsIdentity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0981d-123">初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-123">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0981d-124">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />类用空声称集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-124">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-125">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-125">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-126">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-126">Property</span></span>|<span data-ttu-id="0981d-127">值</span><span class="sxs-lookup"><span data-stu-id="0981d-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-128">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-128">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-129">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-129">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-130">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-130">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-131">空集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-131">A empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-132">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-132">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-133">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-133">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-134">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-134">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity claims" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="0981d-137">传播声明标识声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-137">The claims with which to populate the claims identity.</span></span></param>
        <summary><span data-ttu-id="0981d-138">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />类使用的枚举的集合<see cref="T:System.Security.Claims.Claim" />对象。</span><span class="sxs-lookup"><span data-stu-id="0981d-138">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using an enumerated collection of <see cref="T:System.Security.Claims.Claim" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-139">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-139">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-140">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-140">Property</span></span>|<span data-ttu-id="0981d-141">值</span><span class="sxs-lookup"><span data-stu-id="0981d-141">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-142">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-142">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-143">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-143">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-144">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-144">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-145">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-145">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-146">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-146">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-147">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-147">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-148">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-148">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0981d-151">指向 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的 <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-151">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="0981d-152">用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-152">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsIdentity" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-153">通常情况下，读取器构造从返回的字节从<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="0981d-153">Normally, the reader is constructed from the bytes returned from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-154"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-154"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity info" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0981d-155">序列化数据。</span><span class="sxs-lookup"><span data-stu-id="0981d-155">The serialized data.</span></span></param>
        <summary><span data-ttu-id="0981d-156">从使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 创建的序列化流初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-156">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-157">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-157">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-158">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-159"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-159"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Security::Claims::ClaimsIdentity ^ other);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Claims.ClaimsIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0981d-160">要复制的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-160">The <see cref="T:System.Security.Claims.ClaimsIdentity" /> to copy.</span></span></param>
        <summary><span data-ttu-id="0981d-161">从现有 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 实例初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-161">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from an existing <see cref="T:System.Security.Claims.ClaimsIdentity" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-162">下表显示的实例的属性值分配<xref:System.Security.Claims.ClaimsIdentity>类从<xref:System.Security.Claims.ClaimsIdentity>提供给构造函数。</span><span class="sxs-lookup"><span data-stu-id="0981d-162">The following table shows the property value assignments for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class from the <xref:System.Security.Claims.ClaimsIdentity> provided to the constructor.</span></span>  
  
| <span data-ttu-id="0981d-163">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-163">Property</span></span> | <span data-ttu-id="0981d-164">值</span><span class="sxs-lookup"><span data-stu-id="0981d-164">Value</span></span> |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-165">如果的值`other.Actor`属性不是`null`，则`other.Actor`<xref:System.Security.Claims.ClaimsIdentity>克隆和分配; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-165">If the value of the `other.Actor` property isn't `null`, the `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> is cloned and assigned; otherwise, `null`.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-166">`other.AuthenticationType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-166">The value of the `other.AuthenticationType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-167">`other.BootstrapContext` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-167">The value of the `other.BootstrapContext` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-168">`List<Claim>`的声明，如果有的话，在`other.Claims`属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-168">The `List<Claim>` of claims, if any, in the `other.Claims` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-169">`other.Label` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-169">The value of the `other.Label` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-170">`other.NameClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-170">The value of the `other.NameClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-171">`other.RoleClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-171">The value of the `other.RoleClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|<span data-ttu-id="0981d-172">如果`other.CustomSerializationData`不是`null`，`other.CustomSerializationData`克隆和分配; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-172">If `other.CustomSerializationData` isn't `null`, `other.CustomSerializationData` is cloned and assigned; otherwise, `null`.</span></span>|
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-173"><paramref name="other" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-173"><paramref name="other" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0981d-174">从建立新的标识声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-174">The identity from which to base the new claims identity.</span></span></param>
        <summary><span data-ttu-id="0981d-175">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />类使用从指定的名称和身份验证类型<see cref="T:System.Security.Principal.IIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-175">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the name and authentication type from the specified <see cref="T:System.Security.Principal.IIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-176">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-176">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-177">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-177">Property</span></span>|<span data-ttu-id="0981d-178">值</span><span class="sxs-lookup"><span data-stu-id="0981d-178">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-179">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-179">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-180">值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 使用属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-180">The value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-181">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-181">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-182">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到新实例; 否则为一个空集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-182">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance; otherwise, an empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-183">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-183">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-184">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-184">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-185">如果`identity`不能从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-185">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0981d-186">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-186">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-187">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-187">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-188">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-188">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity authenticationType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType"><span data-ttu-id="0981d-189">使用的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-189">The type of authentication used.</span></span></param>
        <summary><span data-ttu-id="0981d-190">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />用空类声明集合和指定的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-190">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-191">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-191">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-192">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-192">Property</span></span>|<span data-ttu-id="0981d-193">值</span><span class="sxs-lookup"><span data-stu-id="0981d-193">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-194">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-194">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-195">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-195">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-196">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-196">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-197">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-197">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-198">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-198">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-199">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-199">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-200">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-200">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-201">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-201">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-203"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-203"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="0981d-204">传播声明标识声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-204">The claims with which to populate the claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="0981d-205">使用的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-205">The type of authentication used.</span></span></param>
        <summary><span data-ttu-id="0981d-206">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />使用指定的声明和身份验证类型的类。</span><span class="sxs-lookup"><span data-stu-id="0981d-206">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims and authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-207">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-207">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-208">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-208">Property</span></span>|<span data-ttu-id="0981d-209">值</span><span class="sxs-lookup"><span data-stu-id="0981d-209">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-210">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-210">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-211">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-211">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-212">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-212">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-213">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-213">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-214">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-214">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-215">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-215">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-216">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-216">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-217">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-217">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-219"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-219"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0981d-220">序列化数据。</span><span class="sxs-lookup"><span data-stu-id="0981d-220">The serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="0981d-221">序列化的上下文。</span><span class="sxs-lookup"><span data-stu-id="0981d-221">The context for serialization.</span></span></param>
        <summary><span data-ttu-id="0981d-222">从使用 <see cref="T:System.Runtime.Serialization.ISerializable" /> 创建的序列化流初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-222">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-223"><paramref name="info" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-223"><paramref name="info" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-224">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-224">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-225">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-225">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0981d-226">从建立新的标识声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-226">The identity from which to base the new claims identity.</span></span></param>
        <param name="claims"><span data-ttu-id="0981d-227">传播声明标识声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-227">The claims with which to populate the claims identity.</span></span></param>
        <summary><span data-ttu-id="0981d-228">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />类使用指定的声明和指定<see cref="T:System.Security.Principal.IIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-228">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the specified claims and the specified <see cref="T:System.Security.Principal.IIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-229">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-229">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-230">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-230">Property</span></span>|<span data-ttu-id="0981d-231">值</span><span class="sxs-lookup"><span data-stu-id="0981d-231">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-232">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-232">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-233">`authenticationType`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-233">The `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-234">如果`authenticationType`参数是`null`或空字符串的值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 使用属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-234">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-235">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-235">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-236">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-236">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="0981d-237">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到之前所指定的新实例`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-237">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-238">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-238">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-239">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-239">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-240">如果`identity`不能从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-240">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0981d-241">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-241">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-242">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-242">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-243">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-243">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType"><span data-ttu-id="0981d-244">使用的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-244">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="0981d-245">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-245">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="0981d-246">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-246">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="0981d-247">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />用指定的身份验证类型、 名称声明类型和角色声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-247">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-248">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-248">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-249">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-249">Property</span></span>|<span data-ttu-id="0981d-250">值</span><span class="sxs-lookup"><span data-stu-id="0981d-250">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-251">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-251">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-252">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-252">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-253">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-253">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-254">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-254">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-255">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-255">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-256">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-256">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-257">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-257">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-258">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-258">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-259">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-259">The value of the `nameType` parameter.</span></span> <span data-ttu-id="0981d-260">如果`nameType`参数为 null 或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-260">If the `nameType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-261">`roleType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-261">The value of the `roleType` parameter.</span></span> <span data-ttu-id="0981d-262">如果`roleType`参数为 null 或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-262">If the `roleType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="0981d-263">传播声明标识声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-263">The claims with which to populate the claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="0981d-264">使用的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-264">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="0981d-265">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-265">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="0981d-266">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-266">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="0981d-267">用指定的声明、身份验证类型、名称声明类型、角色声明类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0981d-267">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims, authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-268">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-268">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-269">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-269">Property</span></span>|<span data-ttu-id="0981d-270">值</span><span class="sxs-lookup"><span data-stu-id="0981d-270">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-271">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-271">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-272">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-272">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-273">如果`authenticationType`参数是`null`或空字符串，该属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-273">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-274">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-274">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-275">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-275">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-276">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-276">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-277">`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-277">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-278">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-278">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-279">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-279">The value of the `nameType` parameter.</span></span> <span data-ttu-id="0981d-280">但是，如果`nameType`参数是`null`或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-280">However, if the `nameType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-281">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-281">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="0981d-282">但是，如果`roleClaimType`参数是`null`或空字符串，该属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-282">However, if the `roleClaimType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0981d-283">从建立新的标识声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-283">The identity from which to base the new claims identity.</span></span></param>
        <param name="claims"><span data-ttu-id="0981d-284">用来传播新声明标识声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-284">The claims with which to populate the new claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="0981d-285">使用的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-285">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="0981d-286">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-286">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="0981d-287">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-287">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="0981d-288">初始化的新实例<see cref="T:System.Security.Claims.ClaimsIdentity" />从指定的类<see cref="T:System.Security.Principal.IIdentity" />使用指定的声明、 身份验证类型、 名称声明类型和角色声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-288">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from the specified <see cref="T:System.Security.Principal.IIdentity" /> using the specified claims, authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-289">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0981d-289">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="0981d-290">属性</span><span class="sxs-lookup"><span data-stu-id="0981d-290">Property</span></span>|<span data-ttu-id="0981d-291">值</span><span class="sxs-lookup"><span data-stu-id="0981d-291">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="0981d-292">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Actor`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-292">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="0981d-293">`authenticationType`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-293">The `authenticationType` parameter.</span></span> <span data-ttu-id="0981d-294">如果`authenticationType`参数是`null`或空字符串的值`identity.AuthenticationType`(<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 使用属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-294">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="0981d-295">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.BootStrapContext`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-295">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="0981d-296">初始化从`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-296">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="0981d-297">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>，从声明`identity`添加到之前所指定的新实例`claims`参数。</span><span class="sxs-lookup"><span data-stu-id="0981d-297">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="0981d-298">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>属性基于的值返回<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-298">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="0981d-299">如果`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.Label`属性; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-299">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="0981d-300">如果`identity`不能从<xref:System.Security.Claims.ClaimsIdentity>，不是`null`，并且具有<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性不是`null`; 名称声明添加到使用的值的新实例<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-300">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0981d-301">**注意：** 访问的值时<xref:System.Security.Claims.ClaimsIdentity.Name%2A>，则返回属性根据<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-301">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="0981d-302">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-302">The value of the `nameType` parameter.</span></span> <span data-ttu-id="0981d-303">但是，如果的值`nameType`参数是`null`或空字符串并`identity`是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.NameClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-303">However, if the value of the `nameType` parameter is `null` or an empty string and `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="0981d-304">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-304">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="0981d-305">但是，如果的值`roleClaimType`参数是`null`或空字符串，并标识是从赋值<xref:System.Security.Claims.ClaimsIdentity>的值`identity.RoleClaimType`属性是使用; 否则为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="0981d-305">However, if the value of the `roleClaimType` parameter is `null` or an empty string and identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0981d-306"><paramref name="identity" /> 是<see cref="T:System.Security.Claims.ClaimsIdentity" />并<see cref="P:System.Security.Claims.ClaimsIdentity.Actor" />导致循环引用回<see langword="this" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-306"><paramref name="identity" /> is a <see cref="T:System.Security.Claims.ClaimsIdentity" /> and <see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /> results in a circular reference back to <see langword="this" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsIdentity ^ Actor { System::Security::Claims::ClaimsIdentity ^ get(); void set(System::Security::Claims::ClaimsIdentity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : System.Security.Claims.ClaimsIdentity with get, set" Usage="System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-307">获取或设置被授予委派权利的调用方的标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-307">Gets or sets the identity of the calling party that was granted delegation rights.</span></span></summary>
        <value><span data-ttu-id="0981d-308">被授予委派权利的调用方。</span><span class="sxs-lookup"><span data-stu-id="0981d-308">The calling party that was granted delegation rights.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-309">应用程序可以访问通过以递归方式检查导致当前调用的委派链<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-309">An application can access the delegation chain that led to the current call, by recursively examining the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> property.</span></span> <span data-ttu-id="0981d-310">可以通过访问的令牌以其名义委托调用<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-310">The token on whose behalf the call is being delegated can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0981d-311">将属性设置为当前实例的尝试发生。</span><span class="sxs-lookup"><span data-stu-id="0981d-311">An attempt to set the property to the current instance occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member AddClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.AddClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.AddClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="0981d-312">要添加的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-312">The claim to add.</span></span></param>
        <summary><span data-ttu-id="0981d-313">添加单个声明到此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-313">Adds a single claim to this claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-314">检查声明和使用者是否不同于此声明标识，<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>方法调用使用了此声明标识作为参数，以使用正确的使用者创建新的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-314">The claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="0981d-315">此方法具有`SecurityCritical`属性应用于哪些实体可以添加为标识声明的控件。</span><span class="sxs-lookup"><span data-stu-id="0981d-315">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="0981d-316">进一步向下管道，授权决策对基于中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-316">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-317"><paramref name="claim" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-317"><paramref name="claim" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-318">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-318">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-319">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-319">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddClaims (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaims(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="abstract member AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit&#xA;override this.AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit" Usage="claimsIdentity.AddClaims claims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="0981d-320">要添加的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-320">The claims to add.</span></span></param>
        <summary><span data-ttu-id="0981d-321">添加到此声明的列表声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-321">Adds a list of claims to this claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-322">检查每个声明和使用者是否不同于此声明标识，<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>方法调用使用了此声明标识作为参数，以使用正确的使用者创建新的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-322">Each claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="0981d-323">此方法具有`SecurityCritical`属性应用于哪些实体可以添加为标识声明的控件。</span><span class="sxs-lookup"><span data-stu-id="0981d-323">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="0981d-324">进一步向下管道，授权决策对基于中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-324">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-325"><paramref name="claims" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-325"><paramref name="claims" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-326">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-326">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-327">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-327">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-328">获取身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-328">Gets the authentication type.</span></span></summary>
        <value><span data-ttu-id="0981d-329">身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-329">The authentication type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-330">通常定义的值之一<xref:System.Security.Claims.AuthenticationTypes>类。</span><span class="sxs-lookup"><span data-stu-id="0981d-330">Typically one of the values defined by the <xref:System.Security.Claims.AuthenticationTypes> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberSignature Language="VB.NET" Value="Public Property BootstrapContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BootstrapContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BootstrapContext : obj with get, set" Usage="System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-331">获取或设置令牌，用于创建此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-331">Gets or sets the token that was used to create this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-332">启动上下文。</span><span class="sxs-lookup"><span data-stu-id="0981d-332">The bootstrap context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-333">基础对象是实例<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="0981d-333">The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="0981d-334">设置`saveBootstrapContext`上的特性[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)或[ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)要指定该令牌是否用于生成的配置文件中的元素<xref:System.Security.Claims.ClaimsIdentity>应保留在<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-334">Set the `saveBootstrapContext` attribute on either the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) or the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>  
  
 <span data-ttu-id="0981d-335">如果<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性不是`null`，应用程序可以通过属性和方法访问原始令牌和声明它生成<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="0981d-335">If the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-336">设置操作的直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-336">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-337">此成员不能由部分受信任的或透明代码设置。</span><span class="sxs-lookup"><span data-stu-id="0981d-337">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Actor" />
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-338">获取与关联的声明此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-338">Gets the claims associated with this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-339">与关联的声明集合此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-339">The collection of claims associated with this claims identity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-340">集合中可能包含相关的条目。 `null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-340">The collection may contain entries that are `null`.</span></span>  
  
 <span data-ttu-id="0981d-341">中包含的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合实质上是描述由表示该实体<xref:System.Security.Claims.ClaimsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="0981d-341">The claims contained in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection essentially describe the entity that is represented by the <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="0981d-342">声明描述的属性和权限所拥有的实体，并可以由应用程序做出有关身份验证和授权检查。</span><span class="sxs-lookup"><span data-stu-id="0981d-342">The claims describe the properties and rights possessed by the entity and can be examined by applications to make decisions about authentication and authorization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0981d-343"><xref:System.Security.Claims.ClaimsPrincipal>类具有<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-343">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="0981d-344">在大多数情况下，您应访问通过用户的声明<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不通过<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-344">In the majority of cases you should access the user's claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="0981d-345">将需要访问个人的声明<xref:System.Security.Claims.ClaimsIdentity>仅在当主体包含多个<xref:System.Security.Claims.ClaimsIdentity>并且需要进行评估，或修改特定的标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-345">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0981d-346">返回一个新<see cref="T:System.Security.Claims.ClaimsIdentity" />从复制此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-346">Returns a new <see cref="T:System.Security.Claims.ClaimsIdentity" /> copied from this claims identity.</span></span></summary>
        <returns><span data-ttu-id="0981d-347">当前实例的副本。</span><span class="sxs-lookup"><span data-stu-id="0981d-347">A copy of the current instance.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaim (reader As BinaryReader) As Claim" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::Claim ^ CreateClaim(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim&#xA;override this.CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.CreateClaim reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0981d-348">指向声明的 <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-348">The <see cref="T:System.IO.BinaryReader" /> that points to the claim.</span></span></param>
        <summary><span data-ttu-id="0981d-349">为派生类型提供扩展点以创建自定义 <see cref="T:System.Security.Claims.Claim" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-349">Provides an extensibility point for derived types to create a custom <see cref="T:System.Security.Claims.Claim" />.</span></span></summary>
        <returns><span data-ttu-id="0981d-350">一个新的 <see cref="T:System.Security.Claims.Claim" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-350">A new <see cref="T:System.Security.Claims.Claim" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-351"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-351"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-352">包含派生类型提供的任何其他数据。</span><span class="sxs-lookup"><span data-stu-id="0981d-352">Contains any additional data provided by a derived type.</span></span> <span data-ttu-id="0981d-353">通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</span><span class="sxs-lookup"><span data-stu-id="0981d-353">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span></span></summary>
        <value><span data-ttu-id="0981d-354">一个<see cref="T:System.Byte" />表示其他数组序列化数据。</span><span class="sxs-lookup"><span data-stu-id="0981d-354">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-355">默认颁发者，“地方当局”。</span><span class="sxs-lookup"><span data-stu-id="0981d-355">The default issuer; "LOCAL AUTHORITY".</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNameClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNameClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-356">默认名称声明类型;<see cref="F:System.Security.Claims.ClaimTypes.Name" />.</span><span class="sxs-lookup"><span data-stu-id="0981d-356">The default name claim type; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultRoleClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultRoleClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultRoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-357">默认角色声明类型;<see cref="F:System.Security.Claims.ClaimTypes.Role" />.</span><span class="sxs-lookup"><span data-stu-id="0981d-357">The default role claim type; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0981d-358">检索与指定条件匹配的所有声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-358">Retrieves all of the claims that match a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="0981d-359">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="0981d-359">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="0981d-360">检索指定的谓词匹配的所有声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-360">Retrieves all of the claims that are matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="0981d-361">匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-361">The matching claims.</span></span> <span data-ttu-id="0981d-362">列表是只读的。</span><span class="sxs-lookup"><span data-stu-id="0981d-362">The list is read-only.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-363"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-363"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0981d-364">要根据其匹配声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-364">The claim type against which to match claims.</span></span></param>
        <summary><span data-ttu-id="0981d-365">检索所有具有指定的声明类型的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-365">Retrieves all of the claims that have the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="0981d-366">匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-366">The matching claims.</span></span> <span data-ttu-id="0981d-367">列表是只读的。</span><span class="sxs-lookup"><span data-stu-id="0981d-367">The list is read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-368">使用序号的大小写区分上进行比较`type`。</span><span class="sxs-lookup"><span data-stu-id="0981d-368">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-369"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-369"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0981d-370">检索与指定的条件匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-370">Retrieves the first claim that matches a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="0981d-371">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="0981d-371">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="0981d-372">检索由指定谓词匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-372">Retrieves the first claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="0981d-373">为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-373">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-374"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-374"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0981d-375">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-375">The claim type to match.</span></span></param>
        <summary><span data-ttu-id="0981d-376">使用指定的声明类型检索第一个声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-376">Retrieves the first claim with the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="0981d-377">为第一个匹配声明，或者，如果找不到任何匹配，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-377">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-378"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-378"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsIdentity.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0981d-379">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="0981d-379">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="0981d-380">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="0981d-380">The destination for this serialization.</span></span> <span data-ttu-id="0981d-381">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-381">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="0981d-382">使用序列化当前的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-382">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsIdentity" /> object.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-383"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-383"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-384">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-384">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-385">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-385">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0981d-386">确定声明标识是否拥有与指定的条件匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-386">Determines whether the claims identity possesses a claim that matches specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsIdentity.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="0981d-387">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="0981d-387">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="0981d-388">确定是否该声明标识具有由指定谓词匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-388">Determines whether this claims identity has a claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="0981d-389">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-389"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-390"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-390"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsIdentity.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0981d-391">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-391">The type of the claim to match.</span></span></param>
        <param name="value"><span data-ttu-id="0981d-392">要匹配的声明的值。</span><span class="sxs-lookup"><span data-stu-id="0981d-392">The value of the claim to match.</span></span></param>
        <summary><span data-ttu-id="0981d-393">确定是否该声明标识已具有指定声明类型和值的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-393">Determines whether this claims identity has a claim with the specified claim type and value.</span></span></summary>
        <returns><span data-ttu-id="0981d-394"><see langword="true" /> 如果找到匹配项;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-394"><see langword="true" /> if a match is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-395">不会检查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-395">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="0981d-396">使用序号，区分大小写值; 在进行比较大小写区分类型上。</span><span class="sxs-lookup"><span data-stu-id="0981d-396">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-397"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-397"><paramref name="type" /> is **null**.</span></span>  
  
<span data-ttu-id="0981d-398">或</span><span class="sxs-lookup"><span data-stu-id="0981d-398">-or-</span></span> 
 <span data-ttu-id="0981d-399"><paramref name="value" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="0981d-399"><paramref name="value" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-400">获取一个值，该值指示是否已验证身份。</span><span class="sxs-lookup"><span data-stu-id="0981d-400">Gets a value that indicates whether the identity has been authenticated.</span></span></summary>
        <value><span data-ttu-id="0981d-401"><see langword="true" /> 如果标识已经过身份验证;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-401"><see langword="true" /> if the identity has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-402">`true` 如果<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性不是`null`或空字符串。</span><span class="sxs-lookup"><span data-stu-id="0981d-402">`true` if the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property is not `null` or an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Security.Claims.ClaimsIdentity.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-403">获取或设置标签，此声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-403">Gets or sets the label for this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-404">标签。</span><span class="sxs-lookup"><span data-stu-id="0981d-404">The label.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Claims.ClaimsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-405">获取此名称声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-405">Gets the name of this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-406">名称或<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-406">The name or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-407">返回具有匹配名称的类型的第一个声明的值声明类型中设置<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-407">Returns the value of the first claim with a type that matches the name claim type set in the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property.</span></span> <span data-ttu-id="0981d-408">如果不找到匹配名称声明类型的任何索赔，将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="0981d-408">If no claim is found that matches the name claim type, returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-409">获取用于确定哪些声明提供的值的声明类型<see cref="P:System.Security.Claims.ClaimsIdentity.Name" />属性的声明标识。</span><span class="sxs-lookup"><span data-stu-id="0981d-409">Gets the claim type that is used to determine which claims provide the value for the <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> property of this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-410">名称声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-410">The name claim type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-411"><xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>属性指定的声明类型 (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>)，用于提供此标识的名称。</span><span class="sxs-lookup"><span data-stu-id="0981d-411">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property specifies the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used to provide the name for this identity.</span></span> <span data-ttu-id="0981d-412">通过访问名称<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-412">The name is accessed through the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property.</span></span>  
  
 <span data-ttu-id="0981d-413">由构造函数设置此属性。</span><span class="sxs-lookup"><span data-stu-id="0981d-413">This property is set by the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Name" />
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member RemoveClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.RemoveClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.RemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="0981d-414">要移除的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-414">The claim to remove.</span></span></param>
        <summary><span data-ttu-id="0981d-415">尝试从声明标识中删除声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-415">Attempts to remove a claim from the claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-416">可能无法删除该声明，因为它不归标识它。</span><span class="sxs-lookup"><span data-stu-id="0981d-416">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="0981d-417">例如，这将是角色声明的主体拥有的这种情况。</span><span class="sxs-lookup"><span data-stu-id="0981d-417">For example, this would be the case for role claims that are owned by the principal.</span></span> <span data-ttu-id="0981d-418">与不同<xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>方法，它将返回一个布尔值，该值指示是否已移除的声明，<xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A>将引发异常，如果无法删除该声明</span><span class="sxs-lookup"><span data-stu-id="0981d-418">Unlike the <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> method, which returns a Boolean value that indicates whether the claim has been removed, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> throws an exception if the claim could not be removed</span></span>  
  
 <span data-ttu-id="0981d-419">指定的声明所匹配的对象引用 (<xref:System.Object.ReferenceEquals%2A>)。</span><span class="sxs-lookup"><span data-stu-id="0981d-419">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="0981d-420">此方法具有`SecurityCritical`属性应用于哪些实体可以删除声明的标识中的控件。</span><span class="sxs-lookup"><span data-stu-id="0981d-420">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="0981d-421">进一步向下管道，授权决策对基于中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-421">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0981d-422">无法移除声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-422">The claim cannot be removed.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-423">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-423">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-424">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-424">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RoleClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0981d-425">获取将解释为在此声明的.NET Framework 角色声明标识的声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-425">Gets the claim type that will be interpreted as a .NET Framework role among the claims in this claims identity.</span></span></summary>
        <value><span data-ttu-id="0981d-426">角色声明类型。</span><span class="sxs-lookup"><span data-stu-id="0981d-426">The role claim type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-427">角色声明类型是声明类型 (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) 时评估此标识使用<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0981d-427">The role claim type is the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used when evaluating this identity for the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0981d-428"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法调用以确定当前主体是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="0981d-428">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method is called to determine whether the current principal is in a specified role.</span></span> <span data-ttu-id="0981d-429">基于声明的模型扩展了此检查用于提供主体的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-429">The claims-based model extends this check to use claims presented by the principal.</span></span> <span data-ttu-id="0981d-430">一个<xref:System.Security.Claims.ClaimsPrincipal>对象可包含一个或多个<xref:System.Security.Claims.ClaimsIdentity>对象和标识的每个对象可以包含多个<xref:System.Security.Claims.Claim>对象。</span><span class="sxs-lookup"><span data-stu-id="0981d-430">A <xref:System.Security.Claims.ClaimsPrincipal> object can contain one or more <xref:System.Security.Claims.ClaimsIdentity> objects and each identity object can contain multiple <xref:System.Security.Claims.Claim> objects.</span></span> <span data-ttu-id="0981d-431"><xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>属性指定应该用于为角色提供的值时评估此声明的声明类型<xref:System.Security.Claims.ClaimsIdentity>对象。</span><span class="sxs-lookup"><span data-stu-id="0981d-431">The <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> property specifies the claim type of the claim that should be used to provide the value for the role when evaluating this <xref:System.Security.Claims.ClaimsIdentity> object.</span></span> <span data-ttu-id="0981d-432">该属性设置由构造函数。</span><span class="sxs-lookup"><span data-stu-id="0981d-432">The property is set by the constructor.</span></span> <span data-ttu-id="0981d-433">常用的值是<xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0981d-433">A common value is <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member TryRemoveClaim : System.Security.Claims.Claim -&gt; bool&#xA;override this.TryRemoveClaim : System.Security.Claims.Claim -&gt; bool" Usage="claimsIdentity.TryRemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="0981d-434">要移除的声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-434">The claim to remove.</span></span></param>
        <summary><span data-ttu-id="0981d-435">尝试从声明标识中删除声明。</span><span class="sxs-lookup"><span data-stu-id="0981d-435">Attempts to remove a claim from the claims identity.</span></span></summary>
        <returns><span data-ttu-id="0981d-436"><see langword="true" /> 如果成功移除了声明;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-436"><see langword="true" /> if the claim was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0981d-437">可能无法删除该声明，因为它不归标识它。</span><span class="sxs-lookup"><span data-stu-id="0981d-437">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="0981d-438">例如，这将是角色声明的主体拥有的这种情况。</span><span class="sxs-lookup"><span data-stu-id="0981d-438">For example, this would be the case for role claims that are owned by the principal.</span></span>  
  
 <span data-ttu-id="0981d-439">指定的声明所匹配的对象引用 (<xref:System.Object.ReferenceEquals%2A>)。</span><span class="sxs-lookup"><span data-stu-id="0981d-439">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="0981d-440">此方法具有`SecurityCritical`属性应用于哪些实体可以删除声明的标识中的控件。</span><span class="sxs-lookup"><span data-stu-id="0981d-440">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="0981d-441">进一步向下管道，授权决策对基于中存在的声明<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0981d-441">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0981d-442">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="0981d-442">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0981d-443">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="0981d-443">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsIdentity.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0981d-444">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="0981d-444">The writer to use for data storage.</span></span></param>
        <summary><span data-ttu-id="0981d-445">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="0981d-445">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-446"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-446"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsIdentity.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0981d-447">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="0981d-447">The writer to use for data storage.</span></span></param>
        <param name="userData"><span data-ttu-id="0981d-448">派生类型提供的其他数据。</span><span class="sxs-lookup"><span data-stu-id="0981d-448">Additional data provided by the derived type.</span></span></param>
        <summary><span data-ttu-id="0981d-449">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="0981d-449">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0981d-450"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0981d-450"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>