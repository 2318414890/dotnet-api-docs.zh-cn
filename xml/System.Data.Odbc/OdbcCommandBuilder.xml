<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OdbcCommandBuilder.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5754ba74c3af6b88ffda378f845dd52a3dc15dff0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">754ba74c3af6b88ffda378f845dd52a3dc15dff0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated data source.</source>
          <target state="translated">自动生成用于协调对 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的更改与关联的数据源的单表命令。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> associated with the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>不会自动生成所需进行对帐对所做更改的 SQL 语句<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>与数据源关联。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>However, you can create an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> object that generates SQL statements for single-table updates by setting the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>对象，它通过设置生成 SQL 语句的单表更新<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> then generates any additional SQL statements that you do not set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>然后生成未设置任何其他 SQL 语句。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The relationship between an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> and its corresponding <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> is always one-to-one.</source>
          <target state="translated">之间的关系<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>和其对应<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>始终是一对一。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>To create this correspondence, you set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> object.</source>
          <target state="translated">若要创建这种对应关系，你可以设置<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>This causes the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> to register itself as a listener, which produces the output of <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph> events that affect the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">这将导致<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>将自身注册为侦听器，它将生成的输出<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph>影响事件<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata.</source>
          <target state="translated">若要生成 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>属性，以检索所需的元数据集。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>If you change the value of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should then call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">如果你更改的值<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>元数据进行检索，如第一次更新，然后，你应调用后<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>方法来更新元数据。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>If the SELECT statement assigned to the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property uses aliased column names, the resulting INSERT, UPDATE, and DELETE statements may be inaccurate or fail.</source>
          <target state="translated">如果 SELECT 语句分配给<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>属性使用别名列名称，生成的 INSERT、 UPDATE 和 DELETE 语句可能不准确或失败。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>If the underlying ODBC driver cannot provide the appropriate base column name for the alias column name (using the SQL_DESC_BASE_COLUMN_NAME value of <ph id="ph1">`SQLColAttribute`</ph>), the alias name could be used in the generated INSERT, UPDATE, and DELETE statements.</source>
          <target state="translated">如果基础的 ODBC 驱动程序无法提供别名列名称的相应的基列名称 (使用 SQL_DESC_BASE_COLUMN_NAME 值<ph id="ph1">`SQLColAttribute`</ph>)，无法生成 INSERT、 UPDATE 和 DELETE 语句中使用的别名。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>For example, the Microsoft ODBC Driver for Oracle returns the alias name as the base column name.</source>
          <target state="translated">例如，Microsoft ODBC Driver for Oracle 返回的别名名称作为基列名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Therefore, the generated INSERT, UPDATE, and DELETE statements would cause errors.</source>
          <target state="translated">因此，生成的 INSERT、 UPDATE 和 DELETE 语句可能会导致错误。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>还使用<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph>属性引用的<ph id="ph5">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the value of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property itself is changed.</source>
          <target state="translated">用户应调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果修改一个或多个这些属性，或如果的值<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>更改属性本身。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph>属性保留其以前的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>与解除关联<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>，并且不再使用所生成的命令。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, together with <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>以及<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph>，来从数据源选择的行。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The example is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</source>
          <target state="translated">该示例传递一个已初始化<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，连接字符串、 是一个 SQL SELECT 语句，查询字符串和是数据源表的名称的字符串。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>.</source>
          <target state="translated">然后，示例创建<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">基构造函数初始化为其默认值的所有字段。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> object to associate with this <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">使用关联的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 对象初始化 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>将自己注册为侦听器<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph>由生成的事件<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>此属性中指定。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> is released.</source>
          <target state="translated">当你创建的新实例<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>，任何现有<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>与此关联<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>释放。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> object for which this <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> object will generate SQL statements.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> 对象将为其生成 SQL 语句的 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> object that is associated with this <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataAdapter" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommandBuilder" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>将自己注册为侦听器<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating&gt;</ph>由生成的事件<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>此属性中指定。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> is released.</source>
          <target state="translated">当你创建的新实例<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>，任何现有<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>与此关联<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>释放。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated">引用将从其中导出参数信息的存储过程的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>.</source>
          <target state="translated">将派生参数添加到 <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 集合中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object.</source>
          <target state="translated">从在 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 中指定的存储过程中检索参数信息并填充指定的 <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> overwrites any existing parameter information for the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> 将覆盖任何现有参数信息<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> requires an additional call to the data source to obtain the information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> 需要更多调用数据源以获取信息。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>You can only use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> with stored procedures.</source>
          <target state="translated">你只能使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph>的存储过程。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph> to populate the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">不能使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A&gt;</ph>来填充<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)">
          <source>The underlying ODBC driver does not support returning stored procedure parameter information, or the command text is not a valid stored procedure name, or the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> specified was not <ph id="ph2">&lt;see langword="CommandType.StoredProcedure" /&gt;</ph>.</source>
          <target state="translated">基础 ODBC 驱动程序不支持返回存储过程参数信息，或者命令文本不是有效的存储过程名称，或者指定的 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="CommandType.StoredProcedure" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">获取在数据源中执行删除操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> still will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">获取在数据源中执行删除操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">自动生成的、执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则如有可能，将生成与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">获取在数据源中执行删除操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">自动生成的、执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph> will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified, and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>已指定，并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正则表达式。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>指定。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">获取在数据源中执行插入操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">获取在数据源中执行插入操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">自动生成的、执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> still will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则如有可能，将生成与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">获取在数据源中执行插入操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">自动生成的、执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph> will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified, and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>已指定，并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正则表达式。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>指定。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">获取在数据源中执行更新操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">获取在数据源中执行更新操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">自动生成的、执行更新所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> still will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则如有可能，将生成与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">获取在数据源中执行更新操作所需的自动生成的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">自动生成的、执行更新所需的 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object to be executed.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, you must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，你必须明确地调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph> still will be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified, and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>已指定，并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正则表达式。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>指定。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确地转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">不带引号的原始标识符。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确地转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">带引号的标识符版本。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">标识符内的嵌入引号被正确地转义。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The original unquoted identifier.</source>
          <target state="translated">不带引号的原始标识符。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>When a connection is passed, causes the managed wrapper to get the quote character from the ODBC driver, calling SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR).</source>
          <target state="translated">当连接是通过时，会导致托管包装从获取 ODBC 驱动程序的引号字符，调用 SQLGetInfo （SQL_IDENTIFIER_QUOTE_CHAR）。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>When no connection is passed, the string is quoted using values from <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" /&gt;</ph>.</source>
          <target state="translated">如果连接未通过时，使用从 <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" /&gt;</ph>的值中引用该字符串。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确地转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">带引号的标识符版本。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">标识符内的嵌入引号被正确地转义。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommandBuilder">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">给定了带引号的标识符时，返回该标识符的正确的不带引号形式，包括正确地非转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">其嵌入引号将被移除的标识符。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">给定了带引号的标识符时，返回该标识符的正确的不带引号形式，包括正确地非转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes correctly unescaped.</source>
          <target state="translated">不带引号的标识符，带有已正确进行非转义的嵌入引号。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">其嵌入引号将被移除的标识符。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">给定了带引号的标识符时，返回该标识符的正确的不带引号形式，包括正确地非转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The unquoted identifier, with embedded quotes correctly unescaped.</source>
          <target state="translated">不带引号的标识符，带有已正确进行非转义的嵌入引号。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>