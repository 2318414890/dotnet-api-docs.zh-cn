<Type Name="OdbcDataReader" FullName="System.Data.Odbc.OdbcDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d1d338c17a93f6b1bb1658c59b1f03f6b99df92" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39776114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OdbcDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b4e09-101">提供从数据源读取数据行的只进流的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4e09-101">Provides a way of reading a forward-only stream of data rows from a data source.</span>
      </span>
      <span data-ttu-id="b4e09-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4e09-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-103">若要创建<xref:System.Data.Odbc.OdbcDataReader>，必须调用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>方法的<xref:System.Data.Odbc.OdbcCommand>对象，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="b4e09-103">To create an <xref:System.Data.Odbc.OdbcDataReader>, you must call the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method of the <xref:System.Data.Odbc.OdbcCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="b4e09-104">虽然<xref:System.Data.Odbc.OdbcDataReader>正在使用中，关联<xref:System.Data.Odbc.OdbcConnection>是繁忙的服务<xref:System.Data.Odbc.OdbcDataReader>，并可以在执行任何其他操作<xref:System.Data.Odbc.OdbcConnection>而不关闭它。</span><span class="sxs-lookup"><span data-stu-id="b4e09-104">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>, and no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="b4e09-105">这是种情况一直<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法的<xref:System.Data.Odbc.OdbcDataReader>调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-105">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span> <span data-ttu-id="b4e09-106">例如，不能检索输出参数，直到调用后<xref:System.Data.Odbc.OdbcDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="b4e09-107">对结果集由另一个进程或线程读取数据时所做的更改可能会对用户可见<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="b4e09-108">但是，确切的行为是驱动程序和取决于执行时间。</span><span class="sxs-lookup"><span data-stu-id="b4e09-108">However, the precise behavior is both driver and timing dependent.</span></span>  
  
 <span data-ttu-id="b4e09-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 并<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.Odbc.OdbcDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="b4e09-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span> <span data-ttu-id="b4e09-110">有时，您必须调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A>调用之前<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-110">Sometimes, you must call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> before you can call <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e09-111">下面的示例创建<xref:System.Data.Odbc.OdbcConnection>、 一个<xref:System.Data.Odbc.OdbcCommand>，和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-111">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="b4e09-112">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="b4e09-112">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="b4e09-113">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>，然后<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-113">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="odbcDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-114">关闭 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-114">Closes the <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-115">必须显式调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法完成后使用<xref:System.Data.Odbc.OdbcDataReader>使用关联<xref:System.Data.Odbc.OdbcConnection>用于任何其他用途。</span><span class="sxs-lookup"><span data-stu-id="b4e09-115">You must explicitly call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method when you are finished using the <xref:System.Data.Odbc.OdbcDataReader> to use the associated <xref:System.Data.Odbc.OdbcConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b4e09-116">不要调用`Close`或`Dispose`连接、 DataReader 或在任何其他托管的对象上`Finalize`类的方法。</span><span class="sxs-lookup"><span data-stu-id="b4e09-116">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="b4e09-117">在终结器中，您应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="b4e09-117">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="b4e09-118">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="b4e09-118">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="b4e09-119">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="b4e09-119">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e09-120">下面的示例创建<xref:System.Data.Odbc.OdbcConnection>、 一个<xref:System.Data.Odbc.OdbcCommand>，和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-120">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="b4e09-121">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="b4e09-121">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="b4e09-122">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>，然后<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-122">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-123">获取一个值，用于指示当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-123">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-124">当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-124">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-125">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="b4e09-125">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="odbcDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-126">获取当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-126">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-127">如果不是位于有效的记录集中，则为 0；否则为当前记录的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-127">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span>
          </span>
          <span data-ttu-id="b4e09-128">默认值为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-128">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-129">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="b4e09-129">Includes hidden fields.</span></span> <span data-ttu-id="b4e09-130">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="b4e09-130">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="b4e09-131">执行不返回行，一个查询后<xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A>返回 0。</span><span class="sxs-lookup"><span data-stu-id="b4e09-131">After you execute a query that does not return rows, <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b4e09-132">没有到数据源的当前连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-132">There is no current connection to a data source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OdbcDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OdbcDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="odbcDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="odbcDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-133">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-133">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-134">以布尔值的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-134">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-135">一个表示列值的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-135">A Boolean that is the value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-136">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-136">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-137">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-137">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="b4e09-138">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-138">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-139">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-139">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="odbcDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-140">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-140">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-141">以字节的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-141">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-142">指定列的字节形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-142">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-143">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-143">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-144">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-144">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-145">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-145">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-146">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-146">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="odbcDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-147">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-147">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="b4e09-148">字段中读取操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-148">The index within the field where the read operation is to start.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="b4e09-149">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-149">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="b4e09-150">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-150">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="b4e09-151">要读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-151">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-152">从指定的列偏移量将字节流作为数组从特定的缓冲区偏移量开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-152">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-153">读取的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-153">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-154"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> 返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="b4e09-154"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="b4e09-155">大多数情况下，这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-155">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="b4e09-156">但是，返回的数字可能小于字段的真实长度如果<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>具有用于从字段中获取字节。</span><span class="sxs-lookup"><span data-stu-id="b4e09-156">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="b4e09-157">这可能情况下，例如，如果<xref:System.Data.Odbc.OdbcDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="b4e09-157">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="b4e09-158">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-158">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="b4e09-159">如果传递的缓冲区，则 null 值，<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>返回的字段长度以字节为单位。</span><span class="sxs-lookup"><span data-stu-id="b4e09-159">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="b4e09-160">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-160">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-161">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-161">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e09-162">如果引发任何异常的值`bufferIndex`超出数组范围。</span><span class="sxs-lookup"><span data-stu-id="b4e09-162">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="b4e09-163">将读取任何数据，该方法将返回 0。</span><span class="sxs-lookup"><span data-stu-id="b4e09-163">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="odbcDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-164">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-164">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-165">获取指定列的字符形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-165">Gets the value of the specified column as a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-166">指定列的字符形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-166">The value of the specified column as a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-167">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-167">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-168">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-168">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-169">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-169">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-170">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-170">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="odbcDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-171">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="b4e09-172">行中读取操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-172">The index within the row where the read operation is to start.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="b4e09-173">要向其中复制数据的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-173">The buffer into which to copy data.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="b4e09-174">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-174">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="b4e09-175">要读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-175">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-176">从指定的列偏移量将字符流作为数组从特定的缓冲区偏移量开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-176">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-177">读取的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-177">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-178"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> 返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="b4e09-178"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="b4e09-179">大多数情况下，这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-179">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="b4e09-180">但是，返回的数字可能小于字段的真实长度如果<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>具有用于从字段获取字符。</span><span class="sxs-lookup"><span data-stu-id="b4e09-180">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> has already been used to obtain characters from the field.</span></span> <span data-ttu-id="b4e09-181">这可能情况下，例如，如果<xref:System.Data.Odbc.OdbcDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="b4e09-181">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="b4e09-182">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-182">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="b4e09-183">如果传递的缓冲区，则 null 值，<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>以字符为单位返回字段的长度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-183">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="b4e09-184">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-184">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-185">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-185">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e09-186">如果引发任何异常的值`bufferIndex`超出数组范围。</span><span class="sxs-lookup"><span data-stu-id="b4e09-186">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="b4e09-187">将读取任何数据，该方法将返回 0。</span><span class="sxs-lookup"><span data-stu-id="b4e09-187">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="odbcDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="odbcDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-188">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-188">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-189">获取源数据类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-189">Gets the name of the source data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-190">源数据类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-190">The name of the source data type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public DateTime GetDate (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDate(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDate (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDate(int i);" />
      <MemberSignature Language="F#" Value="member this.GetDate : int -&gt; DateTime" Usage="odbcDataReader.GetDate i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-191">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-191">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-192">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-192">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-193">指定列的 <see cref="T:System.DateTime" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-193">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="odbcDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-194">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-194">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-195">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-195">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-196">指定列的 <see cref="T:System.DateTime" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-196">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-197">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-197">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-198">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-198">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="b4e09-199">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-199">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-200">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-200">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="odbcDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-201">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-201">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-202">以 <see cref="T:System.Decimal" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-202">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-203">指定列的 <see cref="T:System.Decimal" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-203">The value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-204">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-204">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-205">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-205">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="b4e09-206">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-206">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 <span data-ttu-id="b4e09-207"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> 具有最大精度为 28 位。</span><span class="sxs-lookup"><span data-stu-id="b4e09-207"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> has a maximum precision of 28.</span></span> <span data-ttu-id="b4e09-208">尝试检索具有更大的精度的十进制数据将会导致异常。</span><span class="sxs-lookup"><span data-stu-id="b4e09-208">Attempting to retrieve decimal data with a larger precision will cause an exception.</span></span> <span data-ttu-id="b4e09-209">一种解决方案是更改较小的数据类型的强制转换为十进制类型的查询或将转换为字符串或二进制文件。</span><span class="sxs-lookup"><span data-stu-id="b4e09-209">One solution would be to change the query to cast the decimal type to either a smaller datatype or convert to string or binary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-210">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="odbcDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-211">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-212">获取指定列的双精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-212">Gets the value of the specified column as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-213">指定列的双精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-213">The value of the specified column as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-214">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-214">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-215">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-215">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-216">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-216">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-217">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-217">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="odbcDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-218">返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-218">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-219">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-219">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-220">尽管此方法可用于检索显式枚举器，但在语言的支持`foreach`构造，它是直接以循环访问数据读取器中的行中使用循环构造简单得多。</span><span class="sxs-lookup"><span data-stu-id="b4e09-220">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="odbcDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-221">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-221">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-222">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-222">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-223">作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-223">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="odbcDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-224">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-224">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-225">获取指定列的单精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-225">Gets the value of the specified column as a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-226">指定列的单精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-226">The value of the specified column as a single-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-227">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-227">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-228">如果不支持该转换将失败的方法调用。</span><span class="sxs-lookup"><span data-stu-id="b4e09-228">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="b4e09-229">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-229">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-230">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-230">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="odbcDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-231">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-231">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-232">获取指定列的值作为全局唯一标识符 (GUID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-232">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-233">指定列的 GUID 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-233">The value of the specified column as a GUID.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-234">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-234">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-235">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-235">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-236">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-236">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-237">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-237">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="odbcDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-238">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-238">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-239">获取指定列的 16 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-239">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-240">指定列的 16 位有符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-240">The value of the specified column as a 16-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-241">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-241">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-242">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-242">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-243">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-243">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-244">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-244">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="odbcDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-245">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-245">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-246">获取指定列的 32 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-246">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-247">指定列的 32 位有符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-247">The value of the specified column as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-248">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-248">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-249">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-249">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-250">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-250">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-251">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-251">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="odbcDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-252">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-252">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-253">以 64 位有符号整数的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-253">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-254">指定列的 64 位有符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-254">The value of the specified column as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-255">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-255">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-256">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-256">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-257">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-257">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-258">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-258">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="odbcDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-259">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-259">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-260">获取指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-260">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-261">指定列的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-261">A string that is the name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="odbcDataReader.GetOrdinal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b4e09-262">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-262">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-263">在给定列名时获取相应的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-263">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-264">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-264">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-265"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 第一次执行区分大小写查找。</span><span class="sxs-lookup"><span data-stu-id="b4e09-265"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="b4e09-266">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="b4e09-266">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="b4e09-267">该方法将引发`IndexOutOfRange`异常，如果找不到从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b4e09-267">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="b4e09-268"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-268"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="b4e09-269">因为基于序号的查找比命名查找更有效，它是效率低下调用<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>在循环内。</span><span class="sxs-lookup"><span data-stu-id="b4e09-269">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="b4e09-270">改为调用<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>一次，然后将分配给整数变量的结果，请使用在循环中。</span><span class="sxs-lookup"><span data-stu-id="b4e09-270">Instead, call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> one time and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e09-271">下面的示例演示如何使用 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b4e09-271">The following example demonstrates how to use the <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="odbcDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-272">返回一个描述 <see cref="T:System.Data.DataTable" /> 的列元数据的 <see cref="T:System.Data.Odbc.OdbcDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-272">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-273">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-273">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-274"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A>方法按以下顺序返回有关每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="b4e09-274">The <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="b4e09-275">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="b4e09-275">DataReader column</span></span>|<span data-ttu-id="b4e09-276">描述</span><span class="sxs-lookup"><span data-stu-id="b4e09-276">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="b4e09-277">列名</span><span class="sxs-lookup"><span data-stu-id="b4e09-277">ColumnName</span></span>|<span data-ttu-id="b4e09-278">列; 的名称这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="b4e09-278">The name of the column; this might not be unique.</span></span> <span data-ttu-id="b4e09-279">如果无法确定列名称，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-279">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="b4e09-280">此名称始终反映当前视图或命令文本中的列的最新的命名。</span><span class="sxs-lookup"><span data-stu-id="b4e09-280">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="b4e09-281">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="b4e09-281">ColumnOrdinal</span></span>|<span data-ttu-id="b4e09-282">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b4e09-282">The zero-based ordinal of the column.</span></span> <span data-ttu-id="b4e09-283">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-283">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="b4e09-284">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="b4e09-284">ColumnSize</span></span>|<span data-ttu-id="b4e09-285">列中值的最大可取长度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-285">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="b4e09-286">对于使用固定长度的数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="b4e09-286">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="b4e09-287">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="b4e09-287">NumericPrecision</span></span>|<span data-ttu-id="b4e09-288">如果<xref:System.Data.DbType>是数值数据类型，这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-288">If <xref:System.Data.DbType> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="b4e09-289">精度取决于列的定义。</span><span class="sxs-lookup"><span data-stu-id="b4e09-289">The precision depends on the definition of the column.</span></span> <span data-ttu-id="b4e09-290">如果<xref:System.Data.DbType>不是数值数据类型，不在本专栏中使用的数据。</span><span class="sxs-lookup"><span data-stu-id="b4e09-290">If <xref:System.Data.DbType> is not a numeric data type, do not use the data in this column.</span></span> <span data-ttu-id="b4e09-291">如果基础 ODBC 驱动程序返回非数字数据类型的精度值，则架构表中使用此值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-291">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="b4e09-292">NumericScale</span><span class="sxs-lookup"><span data-stu-id="b4e09-292">NumericScale</span></span>|<span data-ttu-id="b4e09-293">如果<xref:System.Data.DbType>是<xref:System.Data.DbType.Decimal>，小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="b4e09-293">If <xref:System.Data.DbType> is <xref:System.Data.DbType.Decimal>, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="b4e09-294">否则，这是一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-294">Otherwise, this is a null value.</span></span> <span data-ttu-id="b4e09-295">如果基础 ODBC 驱动程序返回非数字数据类型的精度值，则架构表中使用此值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-295">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="b4e09-296">数据类型</span><span class="sxs-lookup"><span data-stu-id="b4e09-296">DataType</span></span>|<span data-ttu-id="b4e09-297">映射到公共语言运行时类型的<xref:System.Data.DbType>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-297">Maps to the common language runtime type of <xref:System.Data.DbType>.</span></span>|  
|<span data-ttu-id="b4e09-298">提供程序类型</span><span class="sxs-lookup"><span data-stu-id="b4e09-298">ProviderType</span></span>|<span data-ttu-id="b4e09-299">基础的驱动程序类型。</span><span class="sxs-lookup"><span data-stu-id="b4e09-299">The underlying driver type.</span></span>|  
|<span data-ttu-id="b4e09-300">IsLong</span><span class="sxs-lookup"><span data-stu-id="b4e09-300">IsLong</span></span>|<span data-ttu-id="b4e09-301">`true` 如果列包含二进制长对象 (BLOB)，包含非常长的数据。</span><span class="sxs-lookup"><span data-stu-id="b4e09-301">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="b4e09-302">很长数据的定义是特定于驱动程序。</span><span class="sxs-lookup"><span data-stu-id="b4e09-302">The definition of very long data is driver-specific.</span></span>|  
|<span data-ttu-id="b4e09-303">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="b4e09-303">AllowDBNull</span></span>|<span data-ttu-id="b4e09-304">`true` 如果使用者可以将列设置为 null 值，或驱动程序无法确定使用者是否可以将列设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-304">`true` if the consumer can set the column to a null value or if the driver cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="b4e09-305">否则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="b4e09-305">Otherwise, `false`.</span></span> <span data-ttu-id="b4e09-306">列可能包含 null 值，即使它不能设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-306">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="b4e09-307">为只读</span><span class="sxs-lookup"><span data-stu-id="b4e09-307">IsReadOnly</span></span>|<span data-ttu-id="b4e09-308">`true` 如果不能修改的列;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="b4e09-308">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="b4e09-309">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="b4e09-309">IsRowVersion</span></span>|<span data-ttu-id="b4e09-310">如果列包含无法写入到的永久行标识符，但除了标识行没有有意义的值，设置。</span><span class="sxs-lookup"><span data-stu-id="b4e09-310">Set if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="b4e09-311">是唯一的</span><span class="sxs-lookup"><span data-stu-id="b4e09-311">IsUnique</span></span>|<span data-ttu-id="b4e09-312">`true`： 两行的基表 （BaseTableName 中返回的表） 可以具有相同的值在本专栏中。</span><span class="sxs-lookup"><span data-stu-id="b4e09-312">`true`: No two rows in the base table (the table returned in BaseTableName) can have the same value in this column.</span></span> <span data-ttu-id="b4e09-313">保证是唯一的是`true`如果列本身表示一个键或仅适用于此列的 UNIQUE 类型的约束。</span><span class="sxs-lookup"><span data-stu-id="b4e09-313">IsUnique is guaranteed to be `true` if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="b4e09-314">`false`: 列可以包含基础表中的重复值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-314">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="b4e09-315">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="b4e09-315">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="b4e09-316">IsKey</span><span class="sxs-lookup"><span data-stu-id="b4e09-316">IsKey</span></span>|<span data-ttu-id="b4e09-317">`true`： 此列是一组的行集中的列，合起来看，唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="b4e09-317">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="b4e09-318">IsKey 具有的列集设置为`true`必须唯一地标识行集中的行。</span><span class="sxs-lookup"><span data-stu-id="b4e09-318">The set of columns with IsKey set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="b4e09-319">没有任何要求这组列是列的最小集。</span><span class="sxs-lookup"><span data-stu-id="b4e09-319">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="b4e09-320">这组列可能会生成从基表主键、 唯一约束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="b4e09-320">This set of columns may be generated from a base table primary key, a unique constraint, or a unique index.</span></span><br /><br /> <span data-ttu-id="b4e09-321">`false`: 列不需要唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="b4e09-321">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="b4e09-322">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="b4e09-322">IsAutoIncrement</span></span>|<span data-ttu-id="b4e09-323">`true` 如果列将值分配给固定增量; 中的新行否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="b4e09-323">`true` if the column assigns values to new rows in fixed increments; otherwise `false`.</span></span> <span data-ttu-id="b4e09-324">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="b4e09-324">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="b4e09-325">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="b4e09-325">BaseSchemaName</span></span>|<span data-ttu-id="b4e09-326">中包含的列的数据源的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="b4e09-326">The name of the schema in the data source that contains the column.</span></span> <span data-ttu-id="b4e09-327">如果无法确定基本目录名称为 NULL。</span><span class="sxs-lookup"><span data-stu-id="b4e09-327">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="b4e09-328">此列的默认值为空值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-328">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="b4e09-329">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="b4e09-329">BaseCatalogName</span></span>|<span data-ttu-id="b4e09-330">包含的列的数据存储区中的目录的名称。</span><span class="sxs-lookup"><span data-stu-id="b4e09-330">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="b4e09-331">如果无法确定基本目录名称为 NULL。</span><span class="sxs-lookup"><span data-stu-id="b4e09-331">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="b4e09-332">此列的默认值为空值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-332">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="b4e09-333">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="b4e09-333">BaseTableName</span></span>|<span data-ttu-id="b4e09-334">表或视图中包含的列的数据存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="b4e09-334">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="b4e09-335">如果无法确定基表名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-335">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="b4e09-336">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-336">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="b4e09-337">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="b4e09-337">BaseColumnName</span></span>|<span data-ttu-id="b4e09-338">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="b4e09-338">The name of the column in the data store.</span></span> <span data-ttu-id="b4e09-339">这可能是不同的列名称列中返回，如果使用别名的列名称。</span><span class="sxs-lookup"><span data-stu-id="b4e09-339">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="b4e09-340">如果无法确定基本列名或列数据中的行集列是派生的但并不完全相同，如果存储一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-340">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="b4e09-341">此列的默认值为空值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-341">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="b4e09-342">在结果集中的每个列返回一行。</span><span class="sxs-lookup"><span data-stu-id="b4e09-342">A row is returned for every column in the results set.</span></span>  
  
 <span data-ttu-id="b4e09-343">用于 ODBC 的.NET Framework 数据提供程序假定元数据信息后之一是可从 ODBC 驱动程序**SQLPrepare**， **SQLExecute**，或**SQLExecuteDirect**调用的函数。</span><span class="sxs-lookup"><span data-stu-id="b4e09-343">The .NET Framework Data Provider for ODBC assumes that metadata information is available from an ODBC driver after one of **SQLPrepare**, **SQLExecute**, or **SQLExecuteDirect** functions are called.</span></span> <span data-ttu-id="b4e09-344">对于"SchemaOnly"命令时要正常工作，行为**SQLPrepare**必须返回所需的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="b4e09-344">For "SchemaOnly" command behavior to work correctly, **SQLPrepare** must return the required metadata information.</span></span> <span data-ttu-id="b4e09-345">并非所有 ODBC 驱动程序支持此函数或返回元数据信息。</span><span class="sxs-lookup"><span data-stu-id="b4e09-345">Not all ODBC drivers support this function or return metadata information.</span></span> <span data-ttu-id="b4e09-346">在这些情况下，部分或全部 SchemaTable 中的信息将会丢失。</span><span class="sxs-lookup"><span data-stu-id="b4e09-346">In these cases, part or all of the information in the SchemaTable will be missing.</span></span> <span data-ttu-id="b4e09-347">在调用**SQLPrepare**，数据提供程序调用 ODBC **SQLColAttribute**函数，以便查找相关 （例如，IsLong，是唯一的在查询结果中每个列的元数据信息AllowDBNull，BaseTableName，BaseColumnName)。</span><span class="sxs-lookup"><span data-stu-id="b4e09-347">After calling **SQLPrepare**, The data provider calls the ODBC **SQLColAttribute** function to find the metadata information related to each column in the query results (for example, IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName).</span></span> <span data-ttu-id="b4e09-348">如果基础驱动程序不返回其中一些信息，不会正确设置 SchemaTable 中的相应值。</span><span class="sxs-lookup"><span data-stu-id="b4e09-348">If the underlying driver does not return some of this information, the corresponding values in the SchemaTable will not be set correctly.</span></span>  
  
 <span data-ttu-id="b4e09-349">用于 ODBC 的.NET Framework 数据提供程序还会调用**SQLPrimaryKeys**检索每个表的密钥信息。</span><span class="sxs-lookup"><span data-stu-id="b4e09-349">The .NET Framework Data Provider for ODBC also calls **SQLPrimaryKeys** to retrieve the key information for every table.</span></span> <span data-ttu-id="b4e09-350">如果基础 ODBC 驱动程序不支持此函数，数据提供程序调用**SQLStatistics**并选择一个唯一索引作为表的主键。</span><span class="sxs-lookup"><span data-stu-id="b4e09-350">If the underlying ODBC driver does not support this function, the data provider calls **SQLStatistics** and chooses one of the unique indexes as the primary key for the table.</span></span> <span data-ttu-id="b4e09-351">这通常不会产生所需的结果。</span><span class="sxs-lookup"><span data-stu-id="b4e09-351">This may not always give the results that you want.</span></span>  
  
 <span data-ttu-id="b4e09-352"><xref:System.Data.Odbc.OdbcCommandBuilder> 需要正确标识的表的主键，才能正常工作。</span><span class="sxs-lookup"><span data-stu-id="b4e09-352"><xref:System.Data.Odbc.OdbcCommandBuilder> needs the correct identification of the primary keys of the table in order to work correctly.</span></span> <span data-ttu-id="b4e09-353">如果查询结果中每一列未返回 BaseTableName，用于 ODBC 的.NET Framework 数据提供程序会尝试分析要查找的表名称在查询中所涉及的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="b4e09-353">If the BaseTableName is not returned for every column in the query results, the .NET Framework Data Provider for ODBC tries to parse the SQL statement to find the table names involved in the query.</span></span> <span data-ttu-id="b4e09-354">这适用于 UPDATE、 INSERT、 DELETE 和简单的 SELECT 语句，但不是与存储的过程或基于联接的 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="b4e09-354">This works with UPDATE, INSERT, DELETE and simple SELECT statements, but not with stored procedures or SELECT statements based on joins.</span></span> <span data-ttu-id="b4e09-355">如果缺少此表中的部分或全部架构信息<xref:System.Data.Odbc.OdbcCommandBuilder>将无法正常工作，因为它具有足够的架构信息来自动生成正确的 INSERT、 UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="b4e09-355">If some or all the schema information is missing from this table, the <xref:System.Data.Odbc.OdbcCommandBuilder> will not work correctly, because it has insufficient schema information to automatically generate the correct INSERT, UPDATE, or DELETE statements.</span></span>  
  
 <span data-ttu-id="b4e09-356">若要确保元数据列返回正确的信息，必须调用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>行为参数设置为 KeyInfo。</span><span class="sxs-lookup"><span data-stu-id="b4e09-356">To make sure that metadata columns return the correct information, you must call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> with the behavior parameter set to KeyInfo.</span></span> <span data-ttu-id="b4e09-357">否则，一些架构表中的列可能返回默认情况下，为 null，或不正确数据。</span><span class="sxs-lookup"><span data-stu-id="b4e09-357">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 <span data-ttu-id="b4e09-358">当使用 ODBC.NET 到 Oracle 的 ODBC 驱动程序通过时，别名键列不会识别为键。</span><span class="sxs-lookup"><span data-stu-id="b4e09-358">When you use ODBC.NET to Oracle via the ODBC driver, aliased key columns are not recognized as keys.</span></span> <span data-ttu-id="b4e09-359">这会影响 OdbcDataReader 的架构表中的 IsKey 和是唯一的列。</span><span class="sxs-lookup"><span data-stu-id="b4e09-359">This affects the IsKey and IsUnique columns in the schema table of the OdbcDataReader.</span></span> <span data-ttu-id="b4e09-360">它还会影响生成更新逻辑 OdbcCommandBuilder 的功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-360">It also affects the OdbcCommandBuilder's ability to generate updating logic.</span></span> <span data-ttu-id="b4e09-361">请考虑不针对主键列使用别名。</span><span class="sxs-lookup"><span data-stu-id="b4e09-361">Consider not using an alias for a primary key column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e09-362">Microsoft Jet ODBC 驱动程序始终返回唯一索引和主键列作为而不考虑它们是否可以为 null 或不可以为 null。</span><span class="sxs-lookup"><span data-stu-id="b4e09-362">The Microsoft Jet ODBC driver always returns unique index and primary key columns as nullable regardless of whether they are nullable or not.</span></span> <span data-ttu-id="b4e09-363">该驱动程序也不返回主键信息;它只返回唯一索引和它们的列，包括但不区分在它们之间的主键列的列表。</span><span class="sxs-lookup"><span data-stu-id="b4e09-363">The driver also does not return primary key information; it only returns a list of unique indexes and their columns, including primary key columns, without differentiating among them.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b4e09-364">
            <see cref="T:System.Data.Odbc.OdbcDataReader" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-364">The <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="odbcDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-365">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-365">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-366">获取指定列的 <see cref="T:System.String" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-366">Gets the value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-367">以 <see cref="T:System.String" /> 的形式指定的列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-367">The value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-368">转换被执行基于 ODBC 驱动程序的基础功能。</span><span class="sxs-lookup"><span data-stu-id="b4e09-368">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="b4e09-369">如果不支持转换，则方法调用失败。</span><span class="sxs-lookup"><span data-stu-id="b4e09-369">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="b4e09-370">调用<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="b4e09-370">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b4e09-371">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-371">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTime (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTime : int -&gt; TimeSpan" Usage="odbcDataReader.GetTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-372">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-372">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-373">以 <see cref="T:System.TimeSpan" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-373">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-374">指定列的 <see cref="T:System.TimeSpan" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-374">The value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="odbcDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-375">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-375">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-376">获取以本机格式表示的指定序号处的列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-376">Gets the value of the column at the specified ordinal in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-377">要返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-377">The value to return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-378">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-378">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="odbcDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="b4e09-379">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-379">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-380">使用当前行的列值来填充对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-380">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-381">数组中的 <see cref="T:System.Object" /> 实例数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-381">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-382">对于大多数应用程序，<xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>方法提供了一种有效方式检索所有列，而不是逐个都检索每个列。</span><span class="sxs-lookup"><span data-stu-id="b4e09-382">For most applications, the <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="b4e09-383">可以将传递<xref:System.Object>数组，其中包含的结果行中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="b4e09-383">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="b4e09-384">数据量<xref:System.Object>数组保存复制到数组。</span><span class="sxs-lookup"><span data-stu-id="b4e09-384">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="b4e09-385">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="b4e09-385">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="b4e09-386">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-386">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OdbcDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/odbcdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OdbcDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/odbcdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-387">获取一个值，该值指示 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否包含一行还是多行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-387">Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-388">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-388">
              <see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-389">指示 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-389">Indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-390">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-390">
              <see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-391"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 并<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.Odbc.OdbcDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="b4e09-391"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="odbcDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-392">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-392">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-393">获取一个值，该值指示列中是否包含不存在或丢失的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-393">Gets a value that indicates whether the column contains nonexistent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-394">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-394">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-395">若要避免的错误，调用此方法来查找前调用的类型化的 null 列值 get 方法 (例如， <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>， <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>，依此类推)。</span><span class="sxs-lookup"><span data-stu-id="b4e09-395">To avoid raising an error, call this method to look for null column values before calling the typed Get methods (for example, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-396">获取以本机格式表示的列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-396">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b4e09-397">列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-397">The column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-398">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-398">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-399">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-399">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b4e09-400">传递的索引超出了 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-400">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b4e09-401">列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-401">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e09-402">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-402">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-403">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-403">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-404">第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="b4e09-404">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="b4e09-405">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="b4e09-405">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="b4e09-406">此方法是不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="b4e09-406">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="b4e09-407">未找到具有指定名称的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-407">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="odbcDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-408">读取批处理 SQL 语句的结果时，使 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 前进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-408">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next result when reading the results of batch SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-409">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-409">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-410">用于处理多个可以通过执行批处理 SQL 语句生成的结果。</span><span class="sxs-lookup"><span data-stu-id="b4e09-410">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="b4e09-411">默认情况下，<xref:System.Data.Odbc.OdbcDataReader>定位在第一个结果。</span><span class="sxs-lookup"><span data-stu-id="b4e09-411">By default, the <xref:System.Data.Odbc.OdbcDataReader> is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="odbcDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-412">让 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 前进到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-412">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e09-413">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-413">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-414">默认位置的<xref:System.Data.Odbc.OdbcDataReader>之前第一条记录。</span><span class="sxs-lookup"><span data-stu-id="b4e09-414">The default position of the <xref:System.Data.Odbc.OdbcDataReader> is before the first record.</span></span> <span data-ttu-id="b4e09-415">因此，您必须调用<xref:System.Data.Odbc.OdbcDataReader.Read%2A>，开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="b4e09-415">Therefore, you must call <xref:System.Data.Odbc.OdbcDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="b4e09-416">虽然<xref:System.Data.Odbc.OdbcDataReader>正在使用中，关联<xref:System.Data.Odbc.OdbcConnection>正忙于为服务它直到您调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-416">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving it until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e09-417">下面的示例创建<xref:System.Data.Odbc.OdbcConnection>、 一个<xref:System.Data.Odbc.OdbcCommand>，和一个<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-417">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="b4e09-418">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="b4e09-418">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="b4e09-419">最后，该示例关闭<xref:System.Data.Odbc.OdbcDataReader>，然后<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-419">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e09-420">获取通过执行 SQL 语句更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-420">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e09-421">更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-421">The number of rows changed, inserted, or deleted.</span>
          </span>
          <span data-ttu-id="b4e09-422">对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e09-422">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e09-423"><xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>读取所有行并在关闭之前未设置属性<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b4e09-423">The <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 <span data-ttu-id="b4e09-424">此属性的值是累积的。</span><span class="sxs-lookup"><span data-stu-id="b4e09-424">The value of this property is cumulative.</span></span> <span data-ttu-id="b4e09-425">例如，如果在批处理模式下的值插入两个记录<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>为 2。</span><span class="sxs-lookup"><span data-stu-id="b4e09-425">For example, if two records are inserted in batch mode, the value of <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> will be 2.</span></span>  
  
 <span data-ttu-id="b4e09-426"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 并<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.Odbc.OdbcDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="b4e09-426"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>