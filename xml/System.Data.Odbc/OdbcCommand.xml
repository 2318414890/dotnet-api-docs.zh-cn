<Type Name="OdbcCommand" FullName="System.Data.Odbc.OdbcCommand">
  <TypeSignature Language="C#" Value="public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="affb7-101">表示要对数据源执行的 SQL 语句或存储过程。</span><span class="sxs-lookup"><span data-stu-id="affb7-101">Represents an SQL statement or stored procedure to execute against a data source.</span></span> <span data-ttu-id="affb7-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="affb7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-103"><xref:System.Data.Odbc.OdbcCommand>类提供对数据源执行命令的以下方法：</span><span class="sxs-lookup"><span data-stu-id="affb7-103">The <xref:System.Data.Odbc.OdbcCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="affb7-104">项</span><span class="sxs-lookup"><span data-stu-id="affb7-104">Item</span></span>|<span data-ttu-id="affb7-105">描述</span><span class="sxs-lookup"><span data-stu-id="affb7-105">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|<span data-ttu-id="affb7-106">执行返回行的命令。</span><span class="sxs-lookup"><span data-stu-id="affb7-106">Executes commands that return rows.</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|<span data-ttu-id="affb7-107">执行命令，例如 SQL INSERT、 DELETE、 更新和一组语句。</span><span class="sxs-lookup"><span data-stu-id="affb7-107">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|<span data-ttu-id="affb7-108">从数据库中检索单个值，例如，一个聚合值。</span><span class="sxs-lookup"><span data-stu-id="affb7-108">Retrieves a single value, for example, an aggregate value, from a database.</span></span>|  
  
 <span data-ttu-id="affb7-109">你可以重置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性和重复使用<xref:System.Data.Odbc.OdbcCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-109">You can reset the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property and reuse the <xref:System.Data.Odbc.OdbcCommand> object.</span></span> <span data-ttu-id="affb7-110">但是，你必须关闭<xref:System.Data.Odbc.OdbcDataReader>便可以执行新的或以前的命令之前。</span><span class="sxs-lookup"><span data-stu-id="affb7-110">However, you must close the <xref:System.Data.Odbc.OdbcDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="affb7-111">如果执行此命令会导致严重<xref:System.Data.Odbc.OdbcException>SQL Server 严重级别为 20 或更多，例如<xref:System.Data.Odbc.OdbcConnection>可能会关闭。</span><span class="sxs-lookup"><span data-stu-id="affb7-111">If execution of the command causes a fatal <xref:System.Data.Odbc.OdbcException> such as a SQL Server severity level of 20 or more, <xref:System.Data.Odbc.OdbcConnection> may close.</span></span> <span data-ttu-id="affb7-112">但是，用户可以重新打开连接并继续操作。</span><span class="sxs-lookup"><span data-stu-id="affb7-112">However, the user can reopen the connection and continue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="affb7-113">下面的示例使用<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>。</span><span class="sxs-lookup"><span data-stu-id="affb7-113">The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="affb7-114">初始化 <see cref="T:System.Data.Odbc.OdbcCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-114">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-115">初始化 <see cref="T:System.Data.Odbc.OdbcCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-115">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-116">基构造函数初始化为其默认值的所有字段。</span><span class="sxs-lookup"><span data-stu-id="affb7-116">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="affb7-117">下表显示的实例的初始属性值<xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="affb7-117">The following table shows initial property values for an instance of <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
|<span data-ttu-id="affb7-118">属性</span><span class="sxs-lookup"><span data-stu-id="affb7-118">Properties</span></span>|<span data-ttu-id="affb7-119">初始值</span><span class="sxs-lookup"><span data-stu-id="affb7-119">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|<span data-ttu-id="affb7-120">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="affb7-120">empty string ("")</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|<span data-ttu-id="affb7-121">30</span><span class="sxs-lookup"><span data-stu-id="affb7-121">30</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|<span data-ttu-id="affb7-122">null</span><span class="sxs-lookup"><span data-stu-id="affb7-122">null</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
        <altmember cref="T:System.Data.Odbc.OdbcConnection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="affb7-123">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="affb7-123">The text of the query.</span></span></param>
        <summary><span data-ttu-id="affb7-124">使用查询的文本初始化 <see cref="T:System.Data.Odbc.OdbcCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-124">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="affb7-125">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="affb7-125">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="affb7-126">表示数据源连接的 <see cref="T:System.Data.Odbc.OdbcConnection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-126">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source.</span></span></param>
        <summary><span data-ttu-id="affb7-127">用查询文本和 <see cref="T:System.Data.Odbc.OdbcCommand" /> 对象初始化 <see cref="T:System.Data.Odbc.OdbcConnection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-127">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query and an <see cref="T:System.Data.Odbc.OdbcConnection" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection, class System.Data.Odbc.OdbcTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection, transaction As OdbcTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection, System::Data::Odbc::OdbcTransaction ^ transaction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
        <Parameter Name="transaction" Type="System.Data.Odbc.OdbcTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="affb7-128">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="affb7-128">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="affb7-129">表示数据源连接的 <see cref="T:System.Data.Odbc.OdbcConnection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-129">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source.</span></span></param>
        <param name="transaction"><span data-ttu-id="affb7-130"><see cref="T:System.Data.Odbc.OdbcCommand" /> 在其中执行的事务。</span><span class="sxs-lookup"><span data-stu-id="affb7-130">The transaction in which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="affb7-131">使用查询文本、<see cref="T:System.Data.Odbc.OdbcConnection" /> 对象以及 <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" /> 初始化 <see cref="T:System.Data.Odbc.OdbcCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-131">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query, an <see cref="T:System.Data.Odbc.OdbcConnection" /> object, and the <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-132">下表显示的此实现的实例的初始属性值<xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="affb7-132">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
|<span data-ttu-id="affb7-133">属性</span><span class="sxs-lookup"><span data-stu-id="affb7-133">Properties</span></span>|<span data-ttu-id="affb7-134">初始值</span><span class="sxs-lookup"><span data-stu-id="affb7-134">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|<span data-ttu-id="affb7-135">30</span><span class="sxs-lookup"><span data-stu-id="affb7-135">30</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|<span data-ttu-id="affb7-136">一个新<xref:System.Data.Odbc.OdbcConnection>即的值`connection`参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-136">A new <xref:System.Data.Odbc.OdbcConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="affb7-137">可以通过设置相关的属性来更改这些参数中的任何一个的值。</span><span class="sxs-lookup"><span data-stu-id="affb7-137">You can change the value for any one of these parameters by setting the related property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-138">尝试取消执行 <see cref="T:System.Data.Odbc.OdbcCommand" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-138">Tries to cancel the execution of an <see cref="T:System.Data.Odbc.OdbcCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-139">如果没有要取消的命令，则不会有任何反应。</span><span class="sxs-lookup"><span data-stu-id="affb7-139">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="affb7-140">但是，如果在过程中，命令，并且取消尝试失败，不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="affb7-140">However, if there is a command in process, and the cancellation try fails, no exception is generated.</span></span>  
  
 <span data-ttu-id="affb7-141">若要取消的查询，一个线程，<xref:System.Data.Odbc.OdbcCommand.Cancel%2A>必须从另一个线程调用。</span><span class="sxs-lookup"><span data-stu-id="affb7-141">To cancel a query on one thread, <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> must be called from another thread.</span></span> <span data-ttu-id="affb7-142">因为你无法使用执行命令，以异步方式<xref:System.Data.Odbc.OdbcCommand>; 要取消，从另一个线程，命令必须以同步方式运行一个线程。</span><span class="sxs-lookup"><span data-stu-id="affb7-142">Because you cannot execute commands asynchronously with <xref:System.Data.Odbc.OdbcCommand>, to cancel a command from another thread, one thread must be running synchronously.</span></span> <span data-ttu-id="affb7-143">这意味着，<xref:System.Data.Odbc.OdbcCommand>对象必须可从两个线程访问。</span><span class="sxs-lookup"><span data-stu-id="affb7-143">This means that the <xref:System.Data.Odbc.OdbcCommand> object must be accessible from both threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-144">获取或设置要对数据源执行的 SQL 语句或存储过程。</span><span class="sxs-lookup"><span data-stu-id="affb7-144">Gets or sets the SQL statement or stored procedure to execute against the data source.</span></span></summary>
        <value><span data-ttu-id="affb7-145">要执行的 SQL 语句或存储过程。</span><span class="sxs-lookup"><span data-stu-id="affb7-145">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="affb7-146">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="affb7-146">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-147">当<xref:System.Data.IDbCommand.CommandType%2A>属性设置为`StoredProcedure`、<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性应设置使用标准 ODBC 存储过程转义序列。</span><span class="sxs-lookup"><span data-stu-id="affb7-147">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property should be set using standard ODBC stored procedure escape sequences.</span></span> <span data-ttu-id="affb7-148">设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>到存储过程的名称不起作用的其他.NET Framework 数据提供程序一样。</span><span class="sxs-lookup"><span data-stu-id="affb7-148">Setting the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> to the name of the stored procedure does not function as it does for other .NET Framework data providers.</span></span>  
  
 <span data-ttu-id="affb7-149">通常由数据源实现许多语言功能，如外部联接和标量函数调用。</span><span class="sxs-lookup"><span data-stu-id="affb7-149">Many language features, such as outer joins and scalar function calls, are generally implemented by data sources.</span></span> <span data-ttu-id="affb7-150">即使这些功能的语法通常是数据源特定。</span><span class="sxs-lookup"><span data-stu-id="affb7-150">Even the syntax for these features is generally data source-specific.</span></span> <span data-ttu-id="affb7-151">因此，ODBC 定义包含以下语言功能的标准语法的转义序列：</span><span class="sxs-lookup"><span data-stu-id="affb7-151">Therefore, ODBC defines escape sequences that contain standard syntax for the following language features:</span></span>  
  
-   <span data-ttu-id="affb7-152">日期、 时间、 时间戳，和日期时间间隔文本</span><span class="sxs-lookup"><span data-stu-id="affb7-152">Date, time, timestamp, and datetime interval literals</span></span>  
  
-   <span data-ttu-id="affb7-153">标量函数，例如数字、 字符串和数据类型转换函数</span><span class="sxs-lookup"><span data-stu-id="affb7-153">Scalar functions such as numeric, string, and data type conversion functions</span></span>  
  
-   <span data-ttu-id="affb7-154">如谓词转义字符</span><span class="sxs-lookup"><span data-stu-id="affb7-154">LIKE predicate escape character</span></span>  
  
-   <span data-ttu-id="affb7-155">外部联接</span><span class="sxs-lookup"><span data-stu-id="affb7-155">Outer joins</span></span>  
  
-   <span data-ttu-id="affb7-156">过程调用</span><span class="sxs-lookup"><span data-stu-id="affb7-156">Procedure calls</span></span>  
  
 <span data-ttu-id="affb7-157">使用 ODBC 的转义序列如下所示：</span><span class="sxs-lookup"><span data-stu-id="affb7-157">The escape sequence used by ODBC is as follows:</span></span>  
  
```  
{extension}  
```  
  
 <span data-ttu-id="affb7-158">此转义序列是识别，并且由 ODBC 驱动程序进行分析。</span><span class="sxs-lookup"><span data-stu-id="affb7-158">This escape sequence is recognized and parsed by ODBC drivers.</span></span> <span data-ttu-id="affb7-159">它们则将任何转义序列替换数据源特定的语法。</span><span class="sxs-lookup"><span data-stu-id="affb7-159">They then replace any escape sequences with data source-specific grammar.</span></span>  
  
 <span data-ttu-id="affb7-160">一个过程是在数据源中存储的可执行对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-160">A procedure is an executable object stored at the data source.</span></span> <span data-ttu-id="affb7-161">通常，它是一个或多个具有预编译的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="affb7-161">Generally, it is one or more SQL statements that have been precompiled.</span></span> <span data-ttu-id="affb7-162">调用过程的转义序列是</span><span class="sxs-lookup"><span data-stu-id="affb7-162">The escape sequence for calling a procedure is</span></span>  
  
```  
{[?=]call procedure-name[([parameter][,[parameter]]...)]}  
```  
  
 <span data-ttu-id="affb7-163">其中`procedure-name`指定过程的名称和`parameter`指定过程参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-163">where `procedure-name` specifies the name of a procedure and `parameter` specifies a procedure parameter.</span></span>  
  
 <span data-ttu-id="affb7-164">在调用 Execute 方法之一时，该命令执行此存储的过程 (例如，<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>或<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>)。</span><span class="sxs-lookup"><span data-stu-id="affb7-164">The command executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="affb7-165">无法设置<xref:System.Data.Odbc.OdbcCommand.Connection%2A>，<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>如果当前的连接执行的 execute 或提取操作的属性。</span><span class="sxs-lookup"><span data-stu-id="affb7-165">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="affb7-166">ODBC.NET 提供程序不支持命名的参数，将参数传递给 SQL 语句或存储的过程由调用<xref:System.Data.Odbc.OdbcCommand>时<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>设置为`Text`。</span><span class="sxs-lookup"><span data-stu-id="affb7-166">The ODBC.NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand> when <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="affb7-167">在这种情况下，必须使用问号 （？） 占位符。</span><span class="sxs-lookup"><span data-stu-id="affb7-167">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="affb7-168">例如:</span><span class="sxs-lookup"><span data-stu-id="affb7-168">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="affb7-169">因此，在其中的顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接与对应参数的问号占位符的位置。</span><span class="sxs-lookup"><span data-stu-id="affb7-169">Therefore, the order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
 <span data-ttu-id="affb7-170">如果参数包含一个 null 值，适用于 ODBC 的.NET Framework 数据提供程序仍将绑定该参数，但使用的默认参数，如果其中一个定义了使用 SQL_DEFAULT_PARAM，而不是 null 值。</span><span class="sxs-lookup"><span data-stu-id="affb7-170">If a parameter contains a null value, the .NET Framework Data Provider for ODBC still binds that parameter, but uses a default parameter, if one has been defined by using SQL_DEFAULT_PARAM, instead of the null value.</span></span> <span data-ttu-id="affb7-171">例如， <xref:System.Data.Odbc.OdbcParameterCollection>:</span><span class="sxs-lookup"><span data-stu-id="affb7-171">For example, the <xref:System.Data.Odbc.OdbcParameterCollection>:</span></span>  
  
```  
{1, null, 2}  
```  
  
 <span data-ttu-id="affb7-172">传递到<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="affb7-172">passed into the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property:</span></span>  
  
```  
{call sp(?, ?, ?)}  
```  
  
 <span data-ttu-id="affb7-173">适用于 ODBC 的绑定的第一个参数为值 1，第三个参数与值 2 和 SQL_DEFAULT_PARAM 作为第二个参数将导致.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="affb7-173">causes the .NET Framework Data Provider for ODBC binding the first parameter to the value 1, the third parameter to the value 2, and the second parameter as SQL_DEFAULT_PARAM.</span></span> <span data-ttu-id="affb7-174">但是，此行为与驱动程序相关。</span><span class="sxs-lookup"><span data-stu-id="affb7-174">However, this behavior is driver-dependent.</span></span> <span data-ttu-id="affb7-175">如果该驱动程序不支持此功能，只需不传递值的参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-175">If the driver does not support this functionality, just do not pass in a value for the parameter.</span></span> <span data-ttu-id="affb7-176">例如，使用<xref:System.Data.Odbc.OdbcParameterCollection>:</span><span class="sxs-lookup"><span data-stu-id="affb7-176">For example, use the <xref:System.Data.Odbc.OdbcParameterCollection>:</span></span>  
  
```  
{1, 2}  
```  
  
 <span data-ttu-id="affb7-177">设置和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为以下：</span><span class="sxs-lookup"><span data-stu-id="affb7-177">and set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the following:</span></span>  
  
```  
{call sp(?, null, ?)}  
```  
  
> [!NOTE]
>  <span data-ttu-id="affb7-178">如果省略一个参数，必须仍会显示的逗号分隔该参数与其他参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-178">If a parameter is omitted, the comma delimiting it from other parameters must still appear.</span></span> <span data-ttu-id="affb7-179">如果省略参数为输入或输入/输出，该过程将使用参数的默认值。</span><span class="sxs-lookup"><span data-stu-id="affb7-179">If an input or input/output parameter is omitted, the procedure uses the default value of the parameter.</span></span> <span data-ttu-id="affb7-180">另一种方法指定的输入或输入/输出参数的默认值是设置的长度/指示器缓冲区值绑定到 SQL_DEFAULT_PARAM 的参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-180">Another way to specify the default value of an input or input/output parameter is to set the value of the length/indicator buffer bound to the parameter to SQL_DEFAULT_PARAM.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.Connection" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-181">获取或设置在终止对执行命令的尝试并生成错误之前的等待时间。</span><span class="sxs-lookup"><span data-stu-id="affb7-181">Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="affb7-182">等待命令执行所需的时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="affb7-182">The time in seconds to wait for the command to execute.</span></span> <span data-ttu-id="affb7-183">默认值为 30 秒。</span><span class="sxs-lookup"><span data-stu-id="affb7-183">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-184">值为零 (0) 指定的等待时间，而不是没有等待时间，没有限制，因此应当避免。</span><span class="sxs-lookup"><span data-stu-id="affb7-184">A value of zero (0) specifies no limit to the wait time, instead of no wait time, and therefore should be avoided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-185">获取或设置一个值，该值指示如何解释 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="affb7-185">Gets or sets a value that indicates how the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="affb7-186"><see cref="T:System.Data.CommandType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="affb7-186">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="affb7-187">默认值为 <see langword="Text" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-187">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-188">当<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>属性设置为`StoredProcedure`，应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为完整的 ODBC 调用语法。</span><span class="sxs-lookup"><span data-stu-id="affb7-188">When the <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax.</span></span> <span data-ttu-id="affb7-189">该命令然后执行此存储的过程，在调用 Execute 方法之一时 (例如，<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>或<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>)。</span><span class="sxs-lookup"><span data-stu-id="affb7-189">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="affb7-190"><xref:System.Data.Odbc.OdbcCommand.Connection%2A>，<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>无法设置属性，如果当前的连接执行的 execute 或提取操作。</span><span class="sxs-lookup"><span data-stu-id="affb7-190">The <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="affb7-191">适用于 ODBC 的.NET Framework 数据提供程序不支持传递命名参数到 SQL 语句或由调用的存储过程<xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="affb7-191">The .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="affb7-192">无论在哪种情况下，使用问号 （？） 占位符。</span><span class="sxs-lookup"><span data-stu-id="affb7-192">In either of these cases, use the question mark (?) placeholder.</span></span> <span data-ttu-id="affb7-193">例如:</span><span class="sxs-lookup"><span data-stu-id="affb7-193">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="affb7-194">顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接与对应参数的问号占位符的位置。</span><span class="sxs-lookup"><span data-stu-id="affb7-194">The order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="affb7-195">适用于 ODBC 的.NET Framework 数据提供程序不支持<xref:System.Data.CommandType>设置`TableDirect`。</span><span class="sxs-lookup"><span data-stu-id="affb7-195">The .NET Framework Data Provider for ODBC does not support the <xref:System.Data.CommandType> setting of `TableDirect`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="affb7-196">该值不是有效的 <see cref="T:System.Data.CommandType" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-196">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OdbcConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcConnection ^ Connection { System::Data::Odbc::OdbcConnection ^ get(); void set(System::Data::Odbc::OdbcConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-197">获取或设置 <see cref="T:System.Data.Odbc.OdbcCommand" /> 的此实例使用的 <see cref="T:System.Data.Odbc.OdbcConnection" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-197">Gets or sets the <see cref="T:System.Data.Odbc.OdbcConnection" /> used by this instance of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</span></span></summary>
        <value><span data-ttu-id="affb7-198">到数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="affb7-198">The connection to a data source.</span></span> <span data-ttu-id="affb7-199">默认值为 null 。</span><span class="sxs-lookup"><span data-stu-id="affb7-199">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-200">无法设置<xref:System.Data.Odbc.OdbcCommand.Connection%2A>， <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>，和<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>如果当前的连接执行的 execute 或提取操作的属性。</span><span class="sxs-lookup"><span data-stu-id="affb7-200">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="affb7-201">如果在事务执行过程中设置了 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>，并且 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 属性不为 null，则会生成 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="affb7-201">If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="affb7-202">如果你设置<xref:System.Data.Odbc.OdbcCommand.Connection%2A>后提交或回滚，事务和<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性不为 null，<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>属性设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="affb7-202">If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="affb7-203"><see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 属性在事务执行过程中发生了更改。</span><span class="sxs-lookup"><span data-stu-id="affb7-203">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OdbcParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-204">创建 <see cref="T:System.Data.Odbc.OdbcParameter" /> 对象的新实例。</span><span class="sxs-lookup"><span data-stu-id="affb7-204">Creates a new instance of an <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="affb7-205">一个 <see cref="T:System.Data.Odbc.OdbcParameter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-205">An <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-206"><xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A>方法是强类型版本<xref:System.Data.IDbCommand.CreateParameter%2A>。</span><span class="sxs-lookup"><span data-stu-id="affb7-206">The <xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-207">获取或设置一个值，指示该命令对象在自定义界面控件中是否应可见。</span><span class="sxs-lookup"><span data-stu-id="affb7-207">Gets or sets a value that indicates whether the command object should be visible in a customized interface control.</span></span></summary>
        <value><span data-ttu-id="affb7-208">**true**，如果命令对象应在控件中可见; 否则为**false**。</span><span class="sxs-lookup"><span data-stu-id="affb7-208">**true**, if the command object should be visible in a control; otherwise **false**.</span></span> <span data-ttu-id="affb7-209">默认值是**true**。</span><span class="sxs-lookup"><span data-stu-id="affb7-209">The default is **true**.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-210">针对 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 执行 SQL 语句并返回受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="affb7-210">Executes an SQL statement against the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="affb7-211">对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。</span><span class="sxs-lookup"><span data-stu-id="affb7-211">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="affb7-212">对于其他所有类型的语句，返回值为 -1。</span><span class="sxs-lookup"><span data-stu-id="affb7-212">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-213">你可以使用<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>执行目录操作 （例如，查询数据库的结构或创建数据库对象，如表）; 或更改数据库中的数据，而无需使用<xref:System.Data.DataSet>、 通过执行插入、 更新或删除语句。</span><span class="sxs-lookup"><span data-stu-id="affb7-213">You can use <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="affb7-214">你还可以使用<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>可执行多个 SQL 语句，前提是基础的 ODBC 驱动程序支持此功能。</span><span class="sxs-lookup"><span data-stu-id="affb7-214">You can also use <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> to execute multiple SQL statements if the underlying ODBC driver supports this functionality.</span></span> <span data-ttu-id="affb7-215">在这种情况下，返回值是通过在命令中的所有语句影响的行数。</span><span class="sxs-lookup"><span data-stu-id="affb7-215">In this case, the return value is the number of rows affected by all statements in the command.</span></span>  
  
 <span data-ttu-id="affb7-216">尽管<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>返回任何行，任何输出参数或返回值映射到参数填充了数据。</span><span class="sxs-lookup"><span data-stu-id="affb7-216">Although <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="affb7-217">对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。</span><span class="sxs-lookup"><span data-stu-id="affb7-217">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="affb7-218">对于其他所有类型的语句，返回值为 -1。</span><span class="sxs-lookup"><span data-stu-id="affb7-218">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="affb7-219">如果发生回滚，则返回值也为-1。</span><span class="sxs-lookup"><span data-stu-id="affb7-219">If a rollback occurs, the return value is also -1.</span></span>  
  
 <span data-ttu-id="affb7-220">存在触发器表和数据是正在添加或更改表中，返回的值包括通过插入或更新操作并受或多个触发器的行数受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="affb7-220">When a trigger exists on a table and data is being added or changed in the table, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="affb7-221">连接不存在。</span><span class="sxs-lookup"><span data-stu-id="affb7-221">The connection does not exist.</span></span>  
  
 <span data-ttu-id="affb7-222">或</span><span class="sxs-lookup"><span data-stu-id="affb7-222">-or-</span></span>  
  
 <span data-ttu-id="affb7-223">连接未打开。</span><span class="sxs-lookup"><span data-stu-id="affb7-223">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="affb7-224">将 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> 发送到 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 并生成一个 <see cref="T:System.Data.Odbc.OdbcDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-224">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-225">将 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> 发送到 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 并生成一个 <see cref="T:System.Data.Odbc.OdbcDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-225">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="affb7-226">一个 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-226">An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-227">应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为存储过程的完整 ODBC 调用语法。</span><span class="sxs-lookup"><span data-stu-id="affb7-227">You should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax for stored procedures.</span></span> <span data-ttu-id="affb7-228">在调用时，该命令将执行此存储的过程<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="affb7-228">The command executes this stored procedure when you call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="affb7-229">虽然<xref:System.Data.Odbc.OdbcDataReader>使用时，关联<xref:System.Data.Odbc.OdbcConnection>是忙服务<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="affb7-229">While the <xref:System.Data.Odbc.OdbcDataReader> is used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="affb7-230">当处于此状态时，任何其他操作可以执行上<xref:System.Data.Odbc.OdbcConnection>以外关闭它。</span><span class="sxs-lookup"><span data-stu-id="affb7-230">While in this state, no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="affb7-231">这是这种情况，直到<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法<xref:System.Data.Odbc.OdbcDataReader>调用。</span><span class="sxs-lookup"><span data-stu-id="affb7-231">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="affb7-232"><see langword="System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="affb7-232">One of the <see langword="System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="affb7-233">将 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> 发送到 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />，并使用 <see langword="CommandBehavior" /> 值之一构造 <see cref="T:System.Data.Odbc.OdbcDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-233">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />, and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" /> using one of the <see langword="CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="affb7-234">一个 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="affb7-234">An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-235">如果希望 SQL 语句以返回单个行，指定`SingleRow`作为<xref:System.Data.CommandBehavior>值可能会提高应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="affb7-235">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="affb7-236">应设置<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>属性设置为存储过程的完整 ODBC 调用语法。</span><span class="sxs-lookup"><span data-stu-id="affb7-236">You should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax for stored procedures.</span></span> <span data-ttu-id="affb7-237">在调用时，该命令将执行此存储的过程<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="affb7-237">The command executes this stored procedure when you call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="affb7-238"><xref:System.Data.Odbc.OdbcDataReader>支持使大型二进制值，以高效读取以特殊模式。</span><span class="sxs-lookup"><span data-stu-id="affb7-238">The <xref:System.Data.Odbc.OdbcDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="affb7-239">有关详细信息，请参阅`SequentialAccess`设置<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="affb7-239">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="affb7-240">`SequentialAccess`值<xref:System.Data.CommandBehavior>是，不限制设置; 它只意味着可以将至少顺序访问<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="affb7-240">The `SequentialAccess` value of <xref:System.Data.CommandBehavior> is not a limiting setting; it just means that you will have at least sequential access to the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="affb7-241">例如，当使用中的 SQL Server ODBC 驱动程序`SequentialAccess`模式下，你仍然可以将移到的第一列<xref:System.Data.Odbc.OdbcDataReader>后具有读取按顺序处理所有其他列的行。</span><span class="sxs-lookup"><span data-stu-id="affb7-241">For example, when you use the SQL Server ODBC Driver in `SequentialAccess` mode, you can still move to the first column of an <xref:System.Data.Odbc.OdbcDataReader> row after having read through all the other columns sequentially.</span></span>  
  
 <span data-ttu-id="affb7-242">虽然<xref:System.Data.Odbc.OdbcDataReader>使用时，关联<xref:System.Data.Odbc.OdbcConnection>是忙服务<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="affb7-242">While the <xref:System.Data.Odbc.OdbcDataReader> is used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="affb7-243">当处于此状态时，任何其他操作可以执行上<xref:System.Data.Odbc.OdbcConnection>以外关闭它。</span><span class="sxs-lookup"><span data-stu-id="affb7-243">While in this state, no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="affb7-244">这是这种情况，直到你调用<xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="affb7-244">This is the case until you call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="affb7-245">如果<xref:System.Data.Odbc.OdbcDataReader>使用创建<xref:System.Data.CommandBehavior>设置为`CloseConnection`，正在关闭<xref:System.Data.Odbc.OdbcDataReader>自动关闭的连接。</span><span class="sxs-lookup"><span data-stu-id="affb7-245">If the <xref:System.Data.Odbc.OdbcDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.Odbc.OdbcDataReader> closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-246">执行查询，并返回由查询返回的结果集中的第一行的第一列。</span><span class="sxs-lookup"><span data-stu-id="affb7-246">Executes the query, and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="affb7-247">其他列或行将被忽略。</span><span class="sxs-lookup"><span data-stu-id="affb7-247">Additional columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="affb7-248">结果集中第一行的第一列或 null 引用（如果结果集为空）。</span><span class="sxs-lookup"><span data-stu-id="affb7-248">The first column of the first row in the result set, or a null reference if the result set is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-249">使用<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>方法来从数据源中检索单个值 （例如，一个聚合值）。</span><span class="sxs-lookup"><span data-stu-id="affb7-249">Use the <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a data source.</span></span> <span data-ttu-id="affb7-250">这要求更少的代码比使用<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>方法，，然后执行所需从返回的数据生成单个值的操作<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="affb7-250">This requires less code than using the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method, and then performing the operations required to generate the single value from the data returned by an <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OdbcParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcParameterCollection ^ Parameters { System::Data::Odbc::OdbcParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-251">获取 <see cref="T:System.Data.Odbc.OdbcParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-251">Gets the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="affb7-252">SQL 语句或存储过程的参数。</span><span class="sxs-lookup"><span data-stu-id="affb7-252">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="affb7-253">默认值为空集合。</span><span class="sxs-lookup"><span data-stu-id="affb7-253">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-254">当<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>设置为`Text`，适用于 ODBC 的.NET Framework 数据提供程序不支持传递命名参数到 SQL 语句或由调用的存储过程<xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="affb7-254">When <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> is set to `Text`, the .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="affb7-255">无论在哪种情况下，使用问号 （？） 占位符。</span><span class="sxs-lookup"><span data-stu-id="affb7-255">In either of these cases, use the question mark (?) placeholder.</span></span> <span data-ttu-id="affb7-256">例如:</span><span class="sxs-lookup"><span data-stu-id="affb7-256">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="affb7-257">顺序<xref:System.Data.Odbc.OdbcParameter>对象添加到<xref:System.Data.Odbc.OdbcParameterCollection>必须直接对应于命令文本中参数的问号占位符的位置。</span><span class="sxs-lookup"><span data-stu-id="affb7-257">The order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="affb7-258">如果集合中的参数不匹配的查询执行的要求，可能会产生错误。</span><span class="sxs-lookup"><span data-stu-id="affb7-258">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-259">在数据源上创建准备就绪（或已编译）的命令版本。</span><span class="sxs-lookup"><span data-stu-id="affb7-259">Creates a prepared or compiled version of the command at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-260"><xref:System.Data.Odbc.OdbcCommand.Prepare%2A>方法调用 ODBC`SQLPrepare`函数。</span><span class="sxs-lookup"><span data-stu-id="affb7-260">The <xref:System.Data.Odbc.OdbcCommand.Prepare%2A> method calls the ODBC `SQLPrepare` function.</span></span> <span data-ttu-id="affb7-261">具体取决于基础 ODBC 驱动程序和数据源的功能，准备该语句，如果所有参数都具有已都绑定，或者执行它，如果不是所有参数都具有已都都绑定时，可能会检查参数信息，如数据类型。</span><span class="sxs-lookup"><span data-stu-id="affb7-261">Depending on the capabilities of the underlying ODBC driver and data source, parameter information such as data types may be checked when the statement is prepared, if all parameters have been bound, or when it is executed if not all parameters have been bound.</span></span> <span data-ttu-id="affb7-262">应用程序应取消所有应用于以前的 SQL 语句之前准备新的 SQL 语句在相同的参数绑定的最大互操作性， <xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="affb7-262">For maximum interoperability, an application should unbind all parameters that applied to a previous SQL statement before preparing a new SQL statement on the same <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="affb7-263">这可以防止错误而引起以前被应用于新的 SQL 语句的参数信息。</span><span class="sxs-lookup"><span data-stu-id="affb7-263">This prevents errors that are caused by previous parameter information being applied to the new SQL statement.</span></span>  
  
 <span data-ttu-id="affb7-264">如果你调用后调用 Execute 方法<xref:System.Data.Odbc.OdbcCommand.Prepare%2A>，任何大于指定的值的参数值<xref:System.Data.Odbc.OdbcParameter.Size%2A>属性自动截断至原始指定的大小的参数，并且会返回任何截断错误.</span><span class="sxs-lookup"><span data-stu-id="affb7-264">If you call an Execute method after you call <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.Odbc.OdbcParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="affb7-265">输出参数 （无论是否已准备） 必须具有用户指定的数据类型。</span><span class="sxs-lookup"><span data-stu-id="affb7-265">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="affb7-266">如果指定可变长度数据类型，你还必须指定最大值<xref:System.Data.Odbc.OdbcParameter.Size%2A>。</span><span class="sxs-lookup"><span data-stu-id="affb7-266">If you specify a variable length data type, you must also specify the maximum <xref:System.Data.Odbc.OdbcParameter.Size%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="affb7-267">未设置 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-267">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="affb7-268">或</span><span class="sxs-lookup"><span data-stu-id="affb7-268">-or-</span></span>  
  
 <span data-ttu-id="affb7-269"><see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 不为 <see cref="M:System.Data.Odbc.OdbcConnection.Open" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-269">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not <see cref="M:System.Data.Odbc.OdbcConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-270">将 <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> 属性重置为默认值。</span><span class="sxs-lookup"><span data-stu-id="affb7-270">Resets the <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-271">默认值<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>为 30 秒。</span><span class="sxs-lookup"><span data-stu-id="affb7-271">The default value of the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="affb7-272">有关此成员的说明，请参阅 <see cref="M:System.ICloneable.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-272">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="affb7-273">作为此实例副本的新 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-273">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-274">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="affb7-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="affb7-275">它只能在 <xref:System.Data.Odbc.OdbcCommand> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="affb7-275">It can be used only when the <xref:System.Data.Odbc.OdbcCommand> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcTransaction ^ Transaction { System::Data::Odbc::OdbcTransaction ^ get(); void set(System::Data::Odbc::OdbcTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-276">获取或设置要在其中执行 <see cref="T:System.Data.Odbc.OdbcTransaction" /> 的 <see cref="T:System.Data.Odbc.OdbcCommand" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-276">Gets or sets the <see cref="T:System.Data.Odbc.OdbcTransaction" /> within which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="affb7-277">一个 <see cref="T:System.Data.Odbc.OdbcTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="affb7-277">An <see cref="T:System.Data.Odbc.OdbcTransaction" />.</span></span> <span data-ttu-id="affb7-278">默认值为 null 。</span><span class="sxs-lookup"><span data-stu-id="affb7-278">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-279">无法设置<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>如果它已被设置为特定值，并且该命令正在执行的属性。</span><span class="sxs-lookup"><span data-stu-id="affb7-279">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="affb7-280">如果事务属性设置为<xref:System.Data.Odbc.OdbcTransaction>未连接到相同的对象<xref:System.Data.Odbc.OdbcConnection>作为<xref:System.Data.Odbc.OdbcCommand>对象，你尝试执行语句，则下一步时将会引发异常。</span><span class="sxs-lookup"><span data-stu-id="affb7-280">If you set the transaction property to an <xref:System.Data.Odbc.OdbcTransaction> object that is not connected to the same <xref:System.Data.Odbc.OdbcConnection> as the <xref:System.Data.Odbc.OdbcCommand> object, an exception will be thrown the next time that you try to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="affb7-281">获取或设置一个值，该值指定 “Update” 方法应如何将命令结果应用于“DataRow”。</span><span class="sxs-lookup"><span data-stu-id="affb7-281">Gets or sets a value that specifies how the **Update** method should apply command results to the **DataRow**.</span></span></summary>
        <value><span data-ttu-id="affb7-282"><see cref="T:System.Data.UpdateRowSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="affb7-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="affb7-283">默认值<xref:System.Data.UpdateRowSource>值是**同时**自动生成命令，除非与<xref:System.Data.Odbc.OdbcCommandBuilder>，默认值是在这种情况下**无**。</span><span class="sxs-lookup"><span data-stu-id="affb7-283">The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated, as with the <xref:System.Data.Odbc.OdbcCommandBuilder>, in which case the default is **None**.</span></span>  
  
 <span data-ttu-id="affb7-284">有关如何使用<xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>属性，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)。</span><span class="sxs-lookup"><span data-stu-id="affb7-284">For more information about how to use the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>