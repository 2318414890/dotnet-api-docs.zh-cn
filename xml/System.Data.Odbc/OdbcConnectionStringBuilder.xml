<Type Name="OdbcConnectionStringBuilder" FullName="System.Data.Odbc.OdbcConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c062a863f6868f814d393c5af0df7c33339dc06" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OdbcConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Driver")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcConnectionStringBuilder/OdbcConnectionStringBuilderConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为创建和管理由 <see cref="T:System.Data.Odbc.OdbcConnection" /> 类使用的连接字符串的内容提供了一种简单方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 连接字符串生成器，开发人员可以以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串使用的类属性和方法。 连接字符串生成器提供了与已知的键/值对相对应的属性允许的 ODBC 连接和开发人员可以添加的任何其他连接字符串值的任意键/值对强类型化。  
  
 需要在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 类生成和修改连接字符串。 使用该类还可以轻松管理存储在应用程序配置文件中的连接字符串。 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 仅对有限的一组已知的键/值对执行检查。 因此，此类可以用于创建无效的连接字符串。 下表列出了和中其相应属性的特定已知的键<xref:System.Data.Odbc.OdbcConnectionStringBuilder>类，并且其默认值。 除了这些特定的值，开发人员可以将任何键/值对添加到集合中包含<xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例。  
  
|键|Property|注释|默认值|  
|---------|--------------|-------------|-------------------|  
|驱动程序|<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>|开发人员不应包含大括号周围的驱动程序名称时它们设置<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>属性。 <xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例根据需要添加大括号。|空字符串|  
|DSN|<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A>||空字符串|  
  
 如果任何值 (以外<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>值) 的连接字符串包含分号 （;），<xref:System.Data.Odbc.OdbcConnectionStringBuilder>环绕使用引号将连接字符串中的值。 为了避免此问题<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>经常包含分号，值<xref:System.Data.Odbc.OdbcConnectionStringBuilder>类一律会用括号此值。 ODBC 规范表示必须用大括号，括起来驱动程序的值包含分号，此类为你处理此。  
  
 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A>属性处理将恶意代码的尝试。 例如，下面的代码使用默认<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A>属性 （C# 中的索引器） 正确转义嵌套的键/值对。  
  
```vb
Dim builder As _  
 New System.Data.Odbc.OdbcConnectionStringBuilder  
' Take advantage of the Driver property.   
builder.Driver = "SQL Server"  
builder("Server") = "MyServer;NewValue=Bad"  
Console.WriteLine(builder.ConnectionString)  
```  
  
```csharp
System.Data.Odbc.OdbcConnectionStringBuilder builder =   
  new System.Data.Odbc.OdbcConnectionStringBuilder();  
// Take advantage of the Driver property.   
builder.Driver = "SQL Server";  
builder["Server"] = "MyServer;NewValue=Bad";  
Console.WriteLine(builder.ConnectionString);  
```  
  
 结果为以下连接字符串，该字符串以安全方式处理无效值：  
  
```  
Driver={SQL Server};Server="MyServer;NewValue=Bad"  
```  
  
   
  
## Examples  
 以下控制台应用程序生成为几个 ODBC 数据库连接字符串。 首先，该示例创建 Microsoft Access 数据库的连接字符串。 然后，它创建的 IBM DB2 数据库的连接字符串。 该示例还分析现有的连接字符串，并演示操作的连接字符串的内容的各种方法。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">对象内部连接信息的基础。 分析为键/值对。</param>
        <summary>初始化 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 类的新实例。 所提供的连接字符串为实例的内部连接信息提供数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以传入的连接字符串的构造函数中，也可以设置<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>属性显式。 行为是相同的两种方式。  
  
   
  
## Examples  
 下面的示例创建多个<xref:System.Data.Odbc.OdbcConnectionStringBuilder>情况下，将不同的连接字符串传递给每个用例中的构造函数。 请注意当你检索时，是否可以修改连接字符串内的元素的顺序<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>属性。 另请注意，将预定义的"Dsn"和"驱动程序"键以外的键转换为小写形式的<xref:System.Data.Odbc.OdbcConnectionStringBuilder>类。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Multiple/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Multiple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 实例的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A>方法中移除所有键/值对，从<xref:System.Data.Odbc.OdbcConnectionStringBuilder>并重置<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>和<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A>为其默认值的属性。 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A>方法还将设置<xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>属性设为 0 和<xref:System.Data.Odbc.OdbcConnection.ConnectionString*>属性为空字符串。  
  
   
  
## Examples  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Clear/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Clear/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 中定位的键。</param>
        <summary>确定 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 是否包含特定键。</summary>
        <returns>
          如果 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 包含具有指定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建<xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例，设置它的一些属性，并尝试以确定是否存在各种键在该对象通过调用<xref:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey%2A>方法。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.ContainsKey/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.ContainsKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Driver">
      <MemberSignature Language="C#" Value="public string Driver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Driver" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" />
      <MemberSignature Language="VB.NET" Value="Public Property Driver As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Driver { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Driver")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与连接关联的 ODBC 驱动程序的名称。</summary>
        <value>为 <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> 属性。 如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。 此属性与连接字符串内的"驱动程序"键相对应。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dsn">
      <MemberSignature Language="C#" Value="public string Dsn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Dsn" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" />
      <MemberSignature Language="VB.NET" Value="Public Property Dsn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Dsn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Dsn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与连接关联的数据源名称 (DSN) 的名称。</summary>
        <value>为 <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A> 属性。 如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。 此属性与连接字符串内的"Dsn"键相对应。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要获取或设置的项的键。</param>
        <summary>获取或设置与指定的键关联的值。 在 C# 中，此属性为索引器。</summary>
        <value>与指定的键相关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当设置此属性，如果在字典中已存在指定的键时，值将替换为;否则，创建一个新的元素。  
  
   
  
## Examples  
 以下代码在控制台应用程序中新建一个 <xref:System.Data.Odbc.OdbcConnectionStringBuilder>，并使用 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A> 属性将键/值对添加到其连接字符串中。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Item/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 中的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的值的顺序<xref:System.Collections.ICollection>是中的关联值顺序相同<xref:System.Collections.ICollection>返回<xref:System.Data.Common.DbConnectionStringBuilder.Values%2A>属性。  
  
   
  
## Examples  
 以下控制台应用程序示例新建一个 <xref:System.Data.Odbc.OdbcConnectionStringBuilder>。 该代码循环访问显示键/值对的 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Keys%2A>。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Keys/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Keys/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要从此 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</param>
        <summary>从 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 实例中移除具有指定的键的项。</summary>
        <returns>
          如果该键存在于连接字符串中并已被移除，则为 <see langword="true" />；如果该键不存在，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A>方法返回一个值，指示其是否成功，它不需要查找的键是否存在之前尝试删除的键/值对从<xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.Odbc.OdbcConnectionStringBuilder>实例，并演示的行为<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A>方法。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Remove/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.Remove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">要检索的项的键。</param>
        <param name="value">与 <c>keyword</c> 相对应的值。</param>
        <summary>从此 <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> 中检索与提供的键相对应的值。</summary>
        <returns>
          如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A> 方法允许开发人员安全地从 <xref:System.Data.Odbc.OdbcConnectionStringBuilder> 中检索值，而无需验证提供的键名是否为有效的键名。 因为<xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A>不会引发异常时你传入的不存在的键，则不需要查找键检索其值之前。 调用<xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A>不存在的键将放置值为 null (`Nothing`在 Visual Basic 中) 中`value`参数。  
  
   
  
## Examples  
 下面的示例演示的行为<xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A>方法。  
  
 [!code-csharp[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.TryGetValue/CS/source.cs#1)]
 [!code-vb[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OdbcConnectionStringBuilder.TryGetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>