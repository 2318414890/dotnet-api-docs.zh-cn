<Type Name="StreamReader" FullName="System.IO.StreamReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e4fb97cfedc14b19bab1fc8407b8aef65f70b3c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StreamReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f7e6e-101">实现一个 <see cref="T:System.IO.TextReader" />，使其以一种特定的编码从字节流中读取字符。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7e6e-101">Implements a <see cref="T:System.IO.TextReader" /> that reads characters from a byte stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-102"><xref:System.IO.StreamReader> 设计用于特定编码，字符输入而<xref:System.IO.Stream>类设计用于字节的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-102"><xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output.</span></span> <span data-ttu-id="f7e6e-103">使用<xref:System.IO.StreamReader>从标准的文本文件中读取的多行信息。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-103">Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7e6e-104">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f7e6e-105">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f7e6e-106">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f7e6e-107">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f7e6e-108">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="f7e6e-109"><xref:System.IO.StreamReader> 默认值为 utf-8 编码，除非另有指定，而不是默认为当前系统 ANSI 代码页。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-109"><xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system.</span></span> <span data-ttu-id="f7e6e-110">Utf-8 正确处理 Unicode 字符，并在本地化版本的操作系统上提供一致的结果。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-110">UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system.</span></span> <span data-ttu-id="f7e6e-111">如果您收到的当前字符编码使用<xref:System.IO.StreamReader.CurrentEncoding%2A>属性的值不是可靠直到后第一个<xref:System.IO.StreamReader.Read%2A>方法，因为直到第一个调用不进行编码自动检测<xref:System.IO.StreamReader.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-111">If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.</span></span>  
  
 <span data-ttu-id="f7e6e-112">默认情况下，<xref:System.IO.StreamReader>不是线程安全。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-112">By default, a <xref:System.IO.StreamReader> is not thread safe.</span></span> <span data-ttu-id="f7e6e-113">请参阅<xref:System.IO.TextReader.Synchronized%2A?displayProperty=nameWithType>为线程安全包装。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-113">See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="f7e6e-114"><xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>并<xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法重载读取和写入指定的字符数`count`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-114">The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter.</span></span> <span data-ttu-id="f7e6e-115">这些是从可区分<xref:System.IO.BufferedStream.Read%2A?displayProperty=nameWithType>并<xref:System.IO.BufferedStream.Write%2A?displayProperty=nameWithType>，其中读取和写入指定的字节数`count`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-115">These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=nameWithType> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=nameWithType>, which read and write the number of bytes specified by the `count` parameter.</span></span> <span data-ttu-id="f7e6e-116">使用<xref:System.IO.BufferedStream>仅用于读取和写入字节的一个整数数组元素的方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-116">Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7e6e-117">从读取时<xref:System.IO.Stream>，更高效，若要使用的缓冲区，则该流的内部缓冲区的大小相同。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-117">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
 <span data-ttu-id="f7e6e-118">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-118">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-119">下面的示例使用的实例<xref:System.IO.StreamReader>从文件读取文本。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-119">The following example uses an instance of <xref:System.IO.StreamReader> to read text from a file.</span></span> <span data-ttu-id="f7e6e-120">在此示例中使用的构造函数不支持在中使用[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-120">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-cpp[readtextfile#1](~/samples/snippets/cpp/VS_Snippets_CLR/ReadTextFile/CPP/readtextfile.cpp#1)]
 [!code-csharp[readtextfile#1](~/samples/snippets/csharp/VS_Snippets_CLR/ReadTextFile/CS/readtextfile.cs#1)]
 [!code-vb[readtextfile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ReadTextFile/VB/readtextfile.vb#1)]  
  
 <span data-ttu-id="f7e6e-121">下面的示例实例化<xref:System.IO.StreamReader>对象并调用其<xref:System.IO.StreamReader.ReadAsync%2A>方法以异步方式读取文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-121">The following example instantiates a <xref:System.IO.StreamReader> object and calls its <xref:System.IO.StreamReader.ReadAsync%2A> method to read a file asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/asyncex1.cs#51)]
 [!code-vb[System.IO.StreamReader#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/asyncex1.vb#51)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-122">为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-122">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-123">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-123">The stream to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-124">为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-124">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-125">此构造函数初始化到编码<xref:System.Text.UTF8Encoding>，则<xref:System.IO.StreamReader.BaseStream%2A>属性使用`stream`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-125">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-126"><xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-126">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-127">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-128">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-129">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-129">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[strmreader ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor1/CPP/strmreader ctor1.cpp#1)]
 [!code-csharp[strmreader ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor1/CS/strmreader ctor1.cs#1)]
 [!code-vb[strmreader ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor1/VB/strmreader ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-130">
            <paramref name="stream" /> 不支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-130">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-131">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-131">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : string -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f7e6e-132">要读取的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-132">The complete file path to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-133">为指定的文件名初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-133">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-134">通过指定的完整文件路径`path`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-134">The complete file path is specified by the `path` parameter.</span></span> <span data-ttu-id="f7e6e-135">此构造函数初始化到编码<xref:System.Text.UTF8Encoding>和缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-135">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-136">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-136">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="f7e6e-137">`path`参数不需要将存储在磁盘上的文件; 它可以是支持使用流访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-137">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-138">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-138">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-139">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-140">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-140">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[strmreader ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor2/CPP/strmreader ctor2.cpp#1)]
 [!code-csharp[strmreader ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor2/CS/strmreader ctor2.cs#1)]
 [!code-vb[strmreader ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor2/VB/strmreader ctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-141">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-141">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-142">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-142">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f7e6e-143">无法找到该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-143">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f7e6e-144">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-144">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-145">
            <paramref name="path" /> 包括不正确或无效的文件名、目录名或卷标的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-145">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream * bool -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (stream, detectEncodingFromByteOrderMarks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-146">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-146">The stream to be read.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-147">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-147">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-148">用指定的字节顺序标记检测选项，为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-148">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-149">此构造函数初始化到编码<xref:System.Text.UTF8Encoding>，则<xref:System.IO.StreamReader.BaseStream%2A>属性使用`stream`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-149">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-150">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-150">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-151">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-151">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-152">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-152">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-153"><xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-153">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="f7e6e-154">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-154">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-155">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-155">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-156">
            <paramref name="stream" /> 不支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-156">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-157">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-157">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream * System.Text.Encoding -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (stream, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-158">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-158">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-159">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-159">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-160">用指定的字符编码为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-160">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-161">字符编码将由`encoding`参数和缓冲区大小设置为 1024 字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-161">The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes.</span></span> <span data-ttu-id="f7e6e-162"><xref:System.IO.StreamReader>对象将尝试检测编码，方法是查看流的第三个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-162">The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-163">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-163">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-164">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-164">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-165">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-165">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-166"><xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-166">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-167">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-167">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-168">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-168">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-169">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-169">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-170">
            <paramref name="stream" /> 不支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-170">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-171">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-171">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, detectEncodingFromByteOrderMarks As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : string * bool -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (path, detectEncodingFromByteOrderMarks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f7e6e-172">要读取的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-172">The complete file path to be read.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-173">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-173">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-174">为指定的文件名初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定的字节顺序标记检测选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-174">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-175">此构造函数初始化到编码<xref:System.Text.UTF8Encoding>，则<xref:System.IO.StreamReader.BaseStream%2A>属性使用`stream`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-175">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-176">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-176">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="f7e6e-177">`path`参数不需要将存储在磁盘上的文件; 它可以是支持使用流访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-177">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
 <span data-ttu-id="f7e6e-178">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-178">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-179">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-179">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-180">否则为<xref:System.Text.UTF8Encoding>使用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-180">Otherwise, the <xref:System.Text.UTF8Encoding> is used.</span></span> <span data-ttu-id="f7e6e-181">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-181">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-182">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-182">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-183">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-183">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-184">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-184">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-185">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-185">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f7e6e-186">无法找到该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-186">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f7e6e-187">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-187">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-188">
            <paramref name="path" /> 包括不正确或无效的文件名、目录名或卷标的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-188">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : string * System.Text.Encoding -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (path, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f7e6e-189">要读取的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-189">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-190">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-190">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-191">用指定的字符编码，为指定的文件名初始化 <see cref="T:System.IO.StreamReader" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-191">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-192">此构造函数初始化为指定的编码`encoding`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-192">This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.</span></span> <span data-ttu-id="f7e6e-193"><xref:System.IO.StreamReader>对象将尝试检测编码，方法是查看流的第三个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-193">The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-194">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-194">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-195">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-195">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-196">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-196">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-197">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-197">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="f7e6e-198">`path`参数不需要将存储在磁盘上的文件; 它可以是支持使用流访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-198">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-199">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-199">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-200">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-200">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-201">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-201">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-202">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-202">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-203">
            <paramref name="path" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-203">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f7e6e-204">无法找到该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-204">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f7e6e-205">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-205">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f7e6e-206">
            <paramref name="path" /> 包括不正确或无效的文件名、目录名或卷标的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-206">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream * System.Text.Encoding * bool -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (stream, encoding, detectEncodingFromByteOrderMarks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-207">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-207">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-208">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-208">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-209">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-209">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-210">为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定的字符编码和字节顺序标记检测选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-210">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding and byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-211">此构造函数初始化为指定的编码`encoding`参数，<xref:System.IO.StreamReader.BaseStream%2A>属性使用`stream`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-211">This constructor initializes the encoding as specified by the `encoding` parameter, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-212">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-212">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-213">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-213">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-214">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-214">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-215">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-215">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-216"><xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-216">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-217">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-217">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-218">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-218">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-219">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-219">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-220">
            <paramref name="stream" /> 不支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-220">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-221">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-221">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : string * System.Text.Encoding * bool -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (path, encoding, detectEncodingFromByteOrderMarks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f7e6e-222">要读取的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-222">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-223">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-223">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-224">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-224">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-225">为指定的文件名初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定的字符编码和字节顺序标记检测选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-225">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding and byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-226">此构造函数初始化为指定的编码`encoding`参数，并且内部缓冲区大小为 1024 个字节。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-226">This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="f7e6e-227">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-227">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-228">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-228">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-229">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-229">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-230">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-230">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-231">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-231">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="f7e6e-232">`path`参数不需要将存储在磁盘上的文件; 它可以是支持使用流访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-232">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-233">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-233">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-234">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-234">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-235">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-235">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-236">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-236">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-237">
            <paramref name="path" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-237">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f7e6e-238">无法找到该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-238">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f7e6e-239">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-239">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f7e6e-240">
            <paramref name="path" /> 包括不正确或无效的文件名、目录名或卷标的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-240">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream * System.Text.Encoding * bool * int -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (stream, encoding, detectEncodingFromByteOrderMarks, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-241">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-241">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-242">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-242">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-243">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-243">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="f7e6e-244">最小缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-244">The minimum buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-245">为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定的字符编码、字节顺序标记检测选项和缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-245">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-246">设置缓冲区大小，以 16 位字符数`bufferSize`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-246">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="f7e6e-247">如果`bufferSize`小于最小允许大小 （128 个字符），使用允许的最小大小。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-247">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="f7e6e-248">此构造函数允许您更改编码第一次读取从<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-248">This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="f7e6e-249">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-249">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-250">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-250">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-251">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-251">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-252">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-252">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-253"><xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-253">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7e6e-254">从读取时<xref:System.IO.Stream>，更高效，若要使用的缓冲区，则该流的内部缓冲区的大小相同。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-254">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-255">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-255">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-256">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-256">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-257">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-257">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-258">流不支持读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-258">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-259">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-259">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-260">
            <paramref name="bufferSize" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-260">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : string * System.Text.Encoding * bool * int -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (path, encoding, detectEncodingFromByteOrderMarks, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f7e6e-261">要读取的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-261">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-262">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-262">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-263">指示是否在文件头查找字节顺序标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-263">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="f7e6e-264">最小缓冲区大小（以 16 位字符的数目为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-264">The minimum buffer size, in number of 16-bit characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-265">为指定的文件名初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定字符编码、字节顺序标记检测选项和缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-265">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-266">此构造函数初始化为指定的编码`encoding`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-266">This constructor initializes the encoding as specified by the `encoding` parameter.</span></span>  
  
 <span data-ttu-id="f7e6e-267">此构造函数允许您更改编码第一次读取从<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-267">This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="f7e6e-268">`detectEncodingFromByteOrderMarks`参数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-268">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-269">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-269">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-270">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-270">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-271">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-271">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="f7e6e-272">设置缓冲区大小，以 16 位字符数`bufferSize`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-272">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="f7e6e-273">如果`bufferSize`小于最小允许大小 （128 个字符），使用允许的最小大小。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-273">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="f7e6e-274">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-274">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="f7e6e-275">`path`参数不需要将存储在磁盘上的文件; 它可以是支持使用流访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-275">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-276">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-276">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f7e6e-277">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-277">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-278">下面的代码示例演示此<xref:System.IO.StreamReader>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-278">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-279">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-279">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-280">
            <paramref name="path" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-280">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f7e6e-281">无法找到该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-281">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="f7e6e-282">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-282">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f7e6e-283">
            <paramref name="path" /> 包括不正确或无效的文件名、目录名或卷标的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-283">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-284">
            <paramref name="buffersize" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-284">
              <paramref name="buffersize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.StreamReader : System.IO.Stream * System.Text.Encoding * bool * int * bool -&gt; System.IO.StreamReader" Usage="new System.IO.StreamReader (stream, encoding, detectEncodingFromByteOrderMarks, bufferSize, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f7e6e-285">要读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-285">The stream to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f7e6e-286">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-286">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="f7e6e-287">如果要在文件开头查找字节顺序标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-287">
              <see langword="true" /> to look for byte order marks at the beginning of the file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="f7e6e-288">最小缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-288">The minimum buffer size.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="f7e6e-289">如果在释放 <see cref="T:System.IO.StreamReader" /> 对象后保持流处于打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-289">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamReader" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-290">为指定的流初始化 <see cref="T:System.IO.StreamReader" /> 类的新实例，带有指定的字符编码、字节顺序标记检测选项和缓冲区大小，有选择性的打开流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-290">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-291">除非您设置`leaveOpen`参数`true`，则<xref:System.IO.StreamReader>对象调用<xref:System.IO.Stream.Dispose>上提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-291">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="f7e6e-292">设置缓冲区大小，以 16 位字符数`bufferSize`参数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-292">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="f7e6e-293">如果`bufferSize`小于最小允许大小 （128 个字符），使用允许的最小大小。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-293">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="f7e6e-294">此构造函数，可更改编码第一次读取从<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-294">This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="f7e6e-295">如果`detectEncodingFromByteOrderMarks`参数是`true`，构造函数检测到通过查看流的前三个字节编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-295">If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="f7e6e-296">它会自动识别 UTF-8、 小 endian Unicode 和 big endian Unicode 文本，如果在文件开头的相应字节顺序标记。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-296">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="f7e6e-297">否则，使用的用户提供的编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-297">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="f7e6e-298">有关更多信息，请参阅 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-298">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7e6e-299">从读取时<xref:System.IO.Stream>，更高效，若要使用的缓冲区，则该流的内部缓冲区的大小相同。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-299">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7e6e-300">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能不正确，解释和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-300">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.StreamReader.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-301">返回基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-301">Returns the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7e6e-302">基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-302">The underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-303">此属性用于访问基础流。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-303">You use this property to access the underlying stream.</span></span> <span data-ttu-id="f7e6e-304"><xref:System.IO.StreamReader>时调用的一个类从基础流的缓冲区输入<xref:System.IO.StreamReader.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-304">The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods.</span></span> <span data-ttu-id="f7e6e-305">如果缓冲区中读取数据后执行操作的基础流的位置，基础流的位置可能与内部缓冲区的位置不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-305">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="f7e6e-306">若要重置内部缓冲区，请调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法; 但是，此方法会降低性能，应仅在绝对必要时调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-306">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span> <span data-ttu-id="f7e6e-307"><xref:System.IO.StreamReader>构造函数具有`detectEncodingFromByteOrderMarks`参数可更改编码第一次读取从<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-307">The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span>  
  
 <span data-ttu-id="f7e6e-308">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-308">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="streamReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-309">关闭 <see cref="T:System.IO.StreamReader" /> 对象和基础流，并释放与读取器关联的所有系统资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-309">Closes the <see cref="T:System.IO.StreamReader" /> object and the underlying stream, and releases any system resources associated with the reader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-310">此方法重写<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-310">This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f7e6e-311">此实现<xref:System.IO.StreamReader.Close%2A>调用<xref:System.IO.StreamReader.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-311">This implementation of <xref:System.IO.StreamReader.Close%2A> calls the <xref:System.IO.StreamReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="f7e6e-312">除非显式调用，刷新该流不会刷新其基础编码器<xref:System.IO.StreamReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-312">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>.</span></span> <span data-ttu-id="f7e6e-313">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但编码器状态不会进行刷新。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-313">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f7e6e-314">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-314">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f7e6e-315">这种情况下会影响 UTF8，UTF7，其中某些字符可以仅后在编码器收到的相邻字符编码。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-315">This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="f7e6e-316">在调用<xref:System.IO.StreamReader.Close%2A>，读取器上的任何操作都可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-316">Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding CurrentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding CurrentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.CurrentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ CurrentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEncoding : System.Text.Encoding" Usage="System.IO.StreamReader.CurrentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-317">获取当前 <see cref="T:System.IO.StreamReader" /> 对象正在使用的当前字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-317">Gets the current character encoding that the current <see cref="T:System.IO.StreamReader" /> object is using.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7e6e-318">当前读取器所使用的当前字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-318">The current character encoding used by the current reader.</span>
          </span>
          <span data-ttu-id="f7e6e-319">第一次调用 <see cref="T:System.IO.StreamReader" /> 的任何 <see cref="Overload:System.IO.StreamReader.Read" /> 方法后，该值可能会不同，因为直到第一次调用 <see cref="Overload:System.IO.StreamReader.Read" /> 方法时，才会进行编码的自动检测。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-319">The value can be different after the first call to any <see cref="Overload:System.IO.StreamReader.Read" /> method of <see cref="T:System.IO.StreamReader" />, since encoding autodetection is not done until the first call to a <see cref="Overload:System.IO.StreamReader.Read" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-320">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-320">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-321">下面的代码示例获取指定的编码<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-321">The following code example gets the encoding of the specified <xref:System.IO.StreamReader> object.</span></span>  
  
 [!code-cpp[strmreader currentencoding#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader CurrentEncoding/CPP/strmreader currentencoding.cpp#1)]
 [!code-csharp[strmreader currentencoding#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader CurrentEncoding/CS/strmreader currentencoding.cs#1)]
 [!code-vb[strmreader currentencoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader CurrentEncoding/VB/strmreader currentencoding.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardBufferedData">
      <MemberSignature Language="C#" Value="public void DiscardBufferedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardBufferedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.DiscardBufferedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardBufferedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardBufferedData();" />
      <MemberSignature Language="F#" Value="member this.DiscardBufferedData : unit -&gt; unit" Usage="streamReader.DiscardBufferedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-322">清除内部缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-322">Clears the internal buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-323">使用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法来重置的内部缓冲区<xref:System.IO.StreamReader>对象。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-323">Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="f7e6e-324">您需要调用此方法时，才内部缓冲区的位置和<xref:System.IO.StreamReader.BaseStream%2A>不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-324">You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match.</span></span> <span data-ttu-id="f7e6e-325">当数据读取到缓冲区，然后寻求基础流中的新位置时，这些位置可以是不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-325">These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream.</span></span> <span data-ttu-id="f7e6e-326">此方法会降低性能，仅当绝对必要，例如当你想要读取的内容的一部分时才应使用<xref:System.IO.StreamReader>对象超过一次。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-326">This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.</span></span>  
  
 <span data-ttu-id="f7e6e-327">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-327">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-328">下面的示例演示一个方案其中<xref:System.IO.StreamReader.DiscardBufferedData%2A>必须调用方法来同步内部缓冲区和基础流。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-328">The following example shows a scenario where the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method must be called to synchronize the internal buffer and the underlying stream.</span></span> <span data-ttu-id="f7e6e-329">在示例中的文件用于说明位置和包含文本`abcdefghijklmnopqrstuvwxyz`。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-329">The file in the example is used to illustrate position and consists of the text `abcdefghijklmnopqrstuvwxyz`.</span></span> <span data-ttu-id="f7e6e-330">通过调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>示例读取数据之后，可按预期方式工作。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-330">By calling <xref:System.IO.StreamReader.DiscardBufferedData%2A> after the data is read, the example works as expected.</span></span> <span data-ttu-id="f7e6e-331">读取前 15 个字符后，位置重置为 2 的偏移量值，则读取所有剩余的字符。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-331">After the first 15 characters are read, the position is reset to the offset value of 2 and all the remaining characters are read.</span></span> <span data-ttu-id="f7e6e-332">如果您删除对调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>，该示例未按预期运行。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-332">If you remove the call to <xref:System.IO.StreamReader.DiscardBufferedData%2A>, the example does not work as expected.</span></span> <span data-ttu-id="f7e6e-333">读取前 15 个字符，但仅基础流的当前位置重置。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-333">The first 15 characters are read, but only the position of the underlying stream is reset.</span></span> <span data-ttu-id="f7e6e-334">内部缓冲区的<xref:System.IO.StreamReader>对象仍位于第 16 个字符。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-334">The internal buffer of the <xref:System.IO.StreamReader> object is still on the 16th character.</span></span> <span data-ttu-id="f7e6e-335">因此，<xref:System.IO.StreamReader.ReadToEnd%2A>缓冲区以及从重置位置开始的基础流中的字符返回的所有字符。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-335">Therefore, <xref:System.IO.StreamReader.ReadToEnd%2A> returns all the characters in the buffer plus the characters in the underlying stream starting from the reset position.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/program.cs#30)]
 [!code-vb[System.IO.StreamReader#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/module1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f7e6e-336">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-336">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-337">关闭基础流，释放 <see cref="T:System.IO.StreamReader" /> 使用的未托管资源，同时还可以根据需要释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-337">Closes the underlying stream, releases the unmanaged resources used by the <see cref="T:System.IO.StreamReader" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-338">调用此方法由公共<xref:System.IDisposable.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-338">This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f7e6e-339"><xref:System.IDisposable.Dispose%2A> 调用受保护<xref:System.IO.StreamReader.Dispose%2A>方法替换`disposing`参数设置为 true。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-339"><xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true.</span></span> <span data-ttu-id="f7e6e-340"><xref:System.Object.Finalize%2A> 调用<xref:System.IO.StreamReader.Dispose%2A>与`disposing`设置为 false。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-340"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false.</span></span>  
  
 <span data-ttu-id="f7e6e-341">当`disposing`参数是`true`，则此方法将释放所有资源都持有的任何托管对象的<xref:System.IO.StreamReader>对象引用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-341">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references.</span></span> <span data-ttu-id="f7e6e-342">此方法调用每个引用对象的 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-342">This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.</span></span>  
  
 <span data-ttu-id="f7e6e-343">.</span><span class="sxs-lookup"><span data-stu-id="f7e6e-343">.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f7e6e-344">
            <para>Dispose 可以由其他对象调用多次。重写时<see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" />，请小心不要引用已经释放的到 Dispose [cref，...] 的早期调用中的对象。详细了解如何实现<see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" />，请参见 [实现 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。有关详细信息<see cref="M:System.IDisposable.Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅 [清理了非托管 Resources](~/docs/standard/garbage-collection/unmanaged.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-344">
              <para>Dispose can be called multiple times by other objects. When overriding <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to Dispose[cref,...]. For more information about how to implement <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" /> see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndOfStream">
      <MemberSignature Language="C#" Value="public bool EndOfStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.EndOfStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfStream As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfStream { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfStream : bool" Usage="System.IO.StreamReader.EndOfStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-345">获取一个值，该值指示当前的流位置是否在流结尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-345">Gets a value that indicates whether the current stream position is at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7e6e-346">如果当前流位置位于流的末尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-346">
              <see langword="true" /> if the current stream position is at the end of the stream; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-347">已释放基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-347">The underlying stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.StreamReader" Usage="System.IO.StreamReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-348">空流周围的 <see cref="T:System.IO.StreamReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-348">A <see cref="T:System.IO.StreamReader" /> object around an empty stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-349">读取上调用方法时<xref:System.IO.StreamReader.Null>，始终返回零。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-349">When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned.</span></span> <span data-ttu-id="f7e6e-350">当<xref:System.IO.StreamReader.ReadLine%2A>上调用<xref:System.IO.StreamReader.Null>，`null`返回。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-350">When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned.</span></span>  
  
 <span data-ttu-id="f7e6e-351">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-351">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="streamReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-352">返回下一个可用字符，但不使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-352">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-353">为表示下一个要读取的字符的整数，或者，如果没有要读取的字符或该流不支持查找，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-353">An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-354"><xref:System.IO.StreamReader.Peek%2A>方法返回一个整数值，以确定是否发生了该文件或另一种错误的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-354">The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="f7e6e-355">这样，用户首先检查是否返回的值为-1 之前它强制转换为<xref:System.Char>类型。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-355">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="f7e6e-356">此方法重写 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-356">This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7e6e-357">当前位置<xref:System.IO.StreamReader>对象不会更改<xref:System.IO.StreamReader.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-357">The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-358">下面的代码示例从文件读取行，直到到达文件末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-358">The following code example reads lines from a file until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader peek#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Peek/CPP/strmreader peek.cpp#1)]
 [!code-csharp[strmreader peek#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Peek/CS/strmreader peek.cs#1)]
 [!code-vb[strmreader peek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Peek/VB/strmreader peek.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-359">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-359">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-360">读取输入流中的下一个字符或下一组字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-360">Reads the next character or next set of characters from the input stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="streamReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-361">读取输入流中的下一个字符并使该字符位置提升一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-361">Reads the next character from the input stream and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-362">输入流中表示为 <see cref="T:System.Int32" /> 对象的下一个字符。如果不再有可用的字符，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-362">The next character from the input stream represented as an <see cref="T:System.Int32" /> object, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-363">此方法重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-363">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7e6e-364">此方法返回一个整数，以便它可以返回-1，如果已到达流的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-364">This method returns an integer so that it can return -1 if the end of the stream has been reached.</span></span> <span data-ttu-id="f7e6e-365">如果缓冲区中读取数据后执行操作的基础流的位置，基础流的位置可能与内部缓冲区的位置不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-365">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="f7e6e-366">若要重置内部缓冲区，请调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法; 但是，此方法会降低性能，应仅在绝对必要时调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-366">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="f7e6e-367">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-367">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-368">下面的代码示例演示的简单用法<xref:System.IO.StreamReader.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-368">The following code example demonstrates a simple use of the <xref:System.IO.StreamReader.Read%2A> method.</span></span>  
  
 [!code-cpp[strmreader read1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read1/CPP/strmreader read1.cpp#1)]
 [!code-csharp[strmreader read1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read1/CS/strmreader read1.cs#1)]
 [!code-vb[strmreader read1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read1/VB/strmreader read1.vb#1)]  
  
 <span data-ttu-id="f7e6e-369">下面的代码示例演示读取单个字符使用<xref:System.IO.StreamReader.Read>方法重载中，格式设置为十进制和十六进制输出的 ASCII 整数。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-369">The following code example demonstrates reading a single character using the <xref:System.IO.StreamReader.Read> method overload, formatting the ASCII integer output as decimal and hexadecimal.</span></span>  
  
 [!code-cpp[StrmRdrRead#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmRdrRead/CPP/strmrdrread.cpp#1)]
 [!code-csharp[StrmRdrRead#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmRdrRead/CS/strmrdrread.cs#1)]
 [!code-vb[StrmRdrRead#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmRdrRead/VB/strmrdrread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-370">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-370">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="streamReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="streamReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f7e6e-371">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和(<c>index + count - 1</c>) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-371">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index + count - 1</c>) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f7e6e-372">开始写入的 <c>buffer</c> 的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-372">The index of <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f7e6e-373">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-373">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-374">从指定的索引位置开始将来自当前流的指定的最多字符读到缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-374">Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-375">已读取的字符数，或者如果已到达流结尾并且未读取任何数据，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-375">The number of characters that have been read, or 0 if at the end of the stream and no data was read.</span>
          </span>
          <span data-ttu-id="f7e6e-376">该数小于或等于 <paramref name="count" /> 参数，具体取决于流中是否有可用的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-376">The number will be less than or equal to the <paramref name="count" /> parameter, depending on whether the data is available within the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-377">此方法重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-377">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7e6e-378">此方法返回一个整数，以便它可以返回 0，如果已到达流的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-378">This method returns an integer so that it can return 0 if the end of the stream has been reached.</span></span>  
  
 <span data-ttu-id="f7e6e-379">当使用<xref:System.IO.StreamReader.Read%2A>方法，它是将使用缓冲区的大小相同的内部缓冲区的流，其中内部缓冲区设置为你想要的块的大小，并始终读取块大小小于效率更高。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-379">When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size.</span></span> <span data-ttu-id="f7e6e-380">如果构造流时，内部缓冲区的大小为未指定，其默认大小为 4 千字节 （4096 个字节）。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-380">If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).</span></span> <span data-ttu-id="f7e6e-381">如果缓冲区中读取数据后执行操作的基础流的位置，基础流的位置可能与内部缓冲区的位置不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-381">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="f7e6e-382">若要重置内部缓冲区，请调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法; 但是，此方法会降低性能，应仅在绝对必要时调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-382">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="f7e6e-383">此方法返回后指定的字符数`count`读取参数，或到达文件末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-383">This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached.</span></span> <span data-ttu-id="f7e6e-384"><xref:System.IO.TextReader.ReadBlock%2A> 是阻止版本<xref:System.IO.StreamReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-384"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>.</span></span>  
  
 <span data-ttu-id="f7e6e-385">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-385">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-386">下面的代码示例读取一次到达文件末尾的五个字符。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-386">The following code example reads five characters at a time until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader read2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read2/CPP/strmreader read2.cpp#1)]
 [!code-csharp[strmreader read2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read2/CS/strmreader read2.cs#1)]
 [!code-vb[strmreader read2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read2/VB/strmreader read2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-387">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-387">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-388">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-388">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-389">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-389">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-390">发生 I/O 错误，例如流关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-390">An I/O error occurs, such as the stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="streamReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="streamReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f7e6e-391">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和 (<c>index</c> + <c>count</c> - 1) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-391">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f7e6e-392">在 <c>buffer</c> 中开始写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-392">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f7e6e-393">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-393">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="f7e6e-394">如果在将指定的字符数写入缓冲区之前已到达流结尾，则将返回当前方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-394">If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-395">从当前流中异步读取指定的最大字符，并且从指定的索引位置开始将该数据写入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-395">Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-396">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-396">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f7e6e-397">
            <paramref name="TResult" /> 参数的值包含读入缓冲区的总字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-397">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="f7e6e-398">如果当前可用字符数少于所请求的字符数，则该结果值可小于所请求的字符数；如果已到达流结尾时，则为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-398">The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-399">在任务完成后指定的字符数`count`读取参数或到达流的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-399">The task completes after either the number of characters specified by the `count` parameter are read or the end of the stream is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-400">下面的示例演示如何通过使用读取的文件中的所有字符<xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-400">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="f7e6e-401">它检查每个字符再将该字符添加到的实例中是否为字母、 数字或空格<xref:System.Text.StringBuilder>类。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-401">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-402">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-402">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-403">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-403">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-404">
            <paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-404">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-405">已释放流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-405">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f7e6e-406">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-406">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="streamReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : char[] * int * int -&gt; int" Usage="streamReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f7e6e-407">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和(<c>index + count - 1</c>) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-407">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index + count - 1</c>) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f7e6e-408">在 <c>buffer</c> 中开始写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-408">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f7e6e-409">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-409">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-410">从当前流中读取指定的最大字符数并从指定的索引位置开始将该数据写入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-410">Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-411">已读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-411">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="f7e6e-412">该数字将小于或等于 <paramref name="count" />，取决于是否所有的输入字符都已读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-412">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-413">已读取到的字符数的高级基础流的当前位置`buffer`。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-413">The position of the underlying stream is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="f7e6e-414">方法进行阻止，直到任一`count`中读取字符时，或者已到达流的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-414">The method blocks until either `count` characters are read, or the end of the stream has been reached.</span></span> <span data-ttu-id="f7e6e-415">这是阻止版本<xref:System.IO.StreamReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-415">This is a blocking version of <xref:System.IO.StreamReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-416">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-416">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-417">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-417">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-418">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-418">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-419">
            <see cref="T:System.IO.StreamReader" /> 是关闭的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-419">The <see cref="T:System.IO.StreamReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-420">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-420">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="streamReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="streamReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f7e6e-421">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和 (<c>index</c> + <c>count</c> - 1) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-421">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f7e6e-422">在 <c>buffer</c> 中开始写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-422">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f7e6e-423">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-423">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="f7e6e-424">如果在将指定的字符数写入到缓冲区之前就已经达到流结尾，则将返回此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-424">If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7e6e-425">从当前流中异步读取指定的最大字符，并且从指定的索引位置开始将该数据写入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-425">Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-426">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-426">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f7e6e-427">
            <paramref name="TResult" /> 参数的值包含读入缓冲区的总字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-427">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="f7e6e-428">如果当前可用字符数少于所请求的字符数，则该结果值可小于所请求的字符数；如果已到达流结尾时，则为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-428">The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-429">任务未完成之前指定的字符数`count`读取参数，或者已到达流的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-429">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the stream has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7e6e-430">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-430">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-431">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-431">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7e6e-432">
            <paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-432">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-433">已释放流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-433">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f7e6e-434">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-434">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="streamReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-435">从当前流中读取一行字符并将数据作为字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-435">Reads a line of characters from the current stream and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-436">输入流中的下一行；如果到达了输入流的末尾，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-436">The next line from the input stream, or <see langword="null" /> if the end of the input stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-437">将行定义为一系列字符后跟一行换行符 ("\n")、 回车符 ("\r") 或一行后面紧跟一个回车换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-437">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f7e6e-438">返回的字符串不包含终止回车或换行。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-438">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="f7e6e-439">返回的值是`null`如果已到达输入流的结尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-439">The returned value is `null` if the end of the input stream is reached.</span></span>  
  
 <span data-ttu-id="f7e6e-440">此方法重写 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-440">This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7e6e-441">如果当前方法将引发<xref:System.OutOfMemoryException>，在基础读取器的位置<xref:System.IO.Stream>对象的字符的方法是可以读取，但到内部已读取的字符数高级<xref:System.IO.StreamReader.ReadLine%2A>缓冲区将被丢弃.</span><span class="sxs-lookup"><span data-stu-id="f7e6e-441">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="f7e6e-442">如果缓冲区中读取数据后执行操作的基础流的位置，基础流的位置可能与内部缓冲区的位置不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-442">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="f7e6e-443">若要重置内部缓冲区，请调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法; 但是，此方法会降低性能，应仅在绝对必要时调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-443">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="f7e6e-444">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-444">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-445">下面的代码示例从文件读取行，直到到达文件末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-445">The following code example reads lines from a file until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader readline#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadLine/CPP/strmreader readline.cpp#1)]
 [!code-csharp[strmreader readline#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadLine/CS/strmreader readline.cs#1)]
 [!code-vb[strmreader readline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadLine/VB/strmreader readline.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f7e6e-446">没有足够的内存来为返回的字符串分配缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-446">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-447">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-447">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="streamReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-448">从当前流中异步读取一行字符并将数据作为字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-448">Reads a line of characters asynchronously from the current stream and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-449">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-449">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f7e6e-450">
            <paramref name="TResult" /> 参数的值包含来自流的下一行；如果读取了所有字符，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-450">The value of the <paramref name="TResult" /> parameter contains the next line from the stream, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7e6e-451">下面的示例演示如何通过使用读取的文件的第一行<xref:System.IO.StreamReader.ReadLineAsync>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-451">The following example shows how to read the first line of a file by using the <xref:System.IO.StreamReader.ReadLineAsync> method.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example41.cs#41)]
 [!code-vb[System.IO.StreamReader#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example41.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-452">下一行中的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-452">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-453">已释放流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-453">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f7e6e-454">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-454">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="streamReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-455">读取来自流的当前位置到结尾的所有字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-455">Reads all characters from the current position to the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-456">字符串形式的流的其余部分（从当前位置到结尾）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-456">The rest of the stream as a string, from the current position to the end.</span>
          </span>
          <span data-ttu-id="f7e6e-457">如果当前位置位于流结尾，则返回空字符串 (“”)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-457">If the current position is at the end of the stream, returns an empty string ("").</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7e6e-458">此方法重写 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-458">This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7e6e-459"><xref:System.IO.StreamReader.ReadToEnd%2A> 当您需要读取从当前位置到流的末尾的所有输入时效果最佳。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-459"><xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream.</span></span> <span data-ttu-id="f7e6e-460">如果通过从流中读取多少个字符需要更多的控制，则使用<xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法重载，它通常会导致更好的性能。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-460">If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.</span></span>  
  
 <span data-ttu-id="f7e6e-461"><xref:System.IO.StreamReader.ReadToEnd%2A> 假定该流，知道当它达到结束。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-461"><xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end.</span></span> <span data-ttu-id="f7e6e-462">仅当请求它并不会关闭连接，服务器发送数据的交互式协议<xref:System.IO.StreamReader.ReadToEnd%2A>可能会无限期阻止，因为它不会达到结束，并且应避免使用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-462">For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.</span></span>  
  
 <span data-ttu-id="f7e6e-463">请注意，当使用<xref:System.IO.StreamReader.Read%2A>方法，它是使用流的内部缓冲区的大小相同的缓冲区更高效。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-463">Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span> <span data-ttu-id="f7e6e-464">如果构造流时，未使用的缓冲区的大小，其默认大小为 4 千字节 （4096 个字节）。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-464">If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).</span></span>  
  
 <span data-ttu-id="f7e6e-465">如果当前方法将引发<xref:System.OutOfMemoryException>，在基础读取器的位置<xref:System.IO.Stream>对象的字符的方法是可以读取，但到内部已读取的字符数高级<xref:System.IO.StreamReader.ReadLine%2A>缓冲区将被丢弃.</span><span class="sxs-lookup"><span data-stu-id="f7e6e-465">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="f7e6e-466">如果缓冲区中读取数据后执行操作的基础流的位置，基础流的位置可能与内部缓冲区的位置不匹配。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-466">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="f7e6e-467">若要重置内部缓冲区，请调用<xref:System.IO.StreamReader.DiscardBufferedData%2A>方法; 但是，此方法会降低性能，应仅在绝对必要时调用。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-467">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="f7e6e-468">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-468">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7e6e-469">下面的代码示例读取到一个操作中的文件的末尾。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-469">The following code example reads all the way to the end of a file in one operation.</span></span>  
  
 [!code-cpp[strmreader readtoend#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadToEnd/CPP/strmreader readtoend.cpp#1)]
 [!code-csharp[strmreader readtoend#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadToEnd/CS/strmreader readtoend.cs#1)]
 [!code-vb[strmreader readtoend#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadToEnd/VB/strmreader readtoend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f7e6e-470">没有足够的内存来为返回的字符串分配缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-470">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f7e6e-471">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-471">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="streamReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7e6e-472">异步读取来自流的当前位置到结尾的所有字符并将它们作为一个字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-472">Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7e6e-473">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-473">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="f7e6e-474">
            <paramref name="TResult" /> 参数值包括带有从流的当前位置到结尾的字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-474">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7e6e-475">下面的示例演示如何通过使用读取文件的内容<xref:System.IO.StreamReader.ReadToEndAsync>方法。</span><span class="sxs-lookup"><span data-stu-id="f7e6e-475">The following example shows how to read the contents of a file by using the <xref:System.IO.StreamReader.ReadToEndAsync> method.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example40.cs#40)]
 [!code-vb[System.IO.StreamReader#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example40.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7e6e-476">字符数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-476">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f7e6e-477">已释放流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-477">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f7e6e-478">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7e6e-478">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>