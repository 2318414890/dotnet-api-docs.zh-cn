<Type Name="ErrorEventHandler" FullName="System.IO.ErrorEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38c7a6083c6f160c139a3d3f8cd366ba2081886a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37652368" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ErrorEventHandler(object sender, ErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.IO.ErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ErrorEventHandler(sender As Object, e As ErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ErrorEventHandler(System::Object ^ sender, ErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ErrorEventHandler = delegate of obj * ErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="7aced-101">事件源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aced-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="7aced-102">包含事件数据的 <see cref="T:System.IO.ErrorEventArgs" /> 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aced-102">An <see cref="T:System.IO.ErrorEventArgs" /> object that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="7aced-103">表示将处理 <see cref="T:System.IO.FileSystemWatcher" /> 对象的 <see cref="E:System.IO.FileSystemWatcher.Error" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aced-103">Represents the method that will handle the <see cref="E:System.IO.FileSystemWatcher.Error" /> event of a <see cref="T:System.IO.FileSystemWatcher" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aced-104">创建 <xref:System.IO.ErrorEventHandler> 委托时，需要标识将要处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="7aced-104">When you create an <xref:System.IO.ErrorEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="7aced-105">若要将事件与事件处理方法关联，添加到事件的委托的实例。</span><span class="sxs-lookup"><span data-stu-id="7aced-105">To associate the event with your event-handling method, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7aced-106">除非移除了该委托，称为每当事件发生时，事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="7aced-106">The event-handling method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="7aced-107">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="7aced-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aced-108">下面的代码示例演示如何创建`FileSystemWatcher`对象来监视文件更改 （创建、 删除、 重命名、 更改） 发生的磁盘驱动器上。</span><span class="sxs-lookup"><span data-stu-id="7aced-108">The following code example shows how to create a `FileSystemWatcher` object to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive.</span></span> <span data-ttu-id="7aced-109">该示例还演示如何正确接收错误通知。</span><span class="sxs-lookup"><span data-stu-id="7aced-109">The example also shows how to properly receive error notifications.</span></span>  
  
 [!code-csharp[FileSystemWatcher#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemWatcher/cs/filesystemwatcher.cs#1)]
 [!code-vb[FileSystemWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemWatcher/VB/FileSystemWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.ErrorEventArgs" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
  </Docs>
</Type>