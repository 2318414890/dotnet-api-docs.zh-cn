<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InternalBufferOverflowException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d302fb9fa155b4a2a1109ae7ee326321d6b25975.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d302fb9fa155b4a2a1109ae7ee326321d6b25975</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.InternalBufferOverflowException">
          <source>The exception thrown when the internal buffer overflows.</source>
          <target state="translated">内部缓冲区溢出时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>In a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs).</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>，当被通知文件更改时，这些更改缓冲区组件中的创建并传递给应用程序编程接口 (Api) 的系统存储。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes.</source>
          <target state="translated">如果在短时间内有很多更改，则缓冲区可以轻松地溢出，从而引发，则引发异常，从而实质上是丢失全部更改。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>To keep the buffer from overflowing, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out your unwanted change notifications.</source>
          <target state="translated">若要阻止缓冲区溢出，使用<ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph>属性筛选掉不需要的更改通知。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">也可以通过 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 属性增加内部缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive.</source>
          <target state="translated">下面的示例演示如何创建 FileSystemWatcher 来监视文件的更改 （创建、 删除、 重命名、 更改） 磁盘驱动器上发生。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>The example also shows how to properly receive error notifications.</source>
          <target state="translated">该示例还演示如何正确接收错误通知。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.IO.InternalBufferOverflowException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 类的新默认实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">该组件使用这些构造函数来表示有错误。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">如果只能使用它们扩展的类或.NET Framework。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">若要解决此问题，请使用<ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph>属性筛选掉不需要的更改通知。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">也可以通过 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 属性增加内部缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>The message to be given for the exception.</source>
          <target state="translated">要为异常提供的消息。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class with the error message to be displayed specified.</source>
          <target state="translated">通过指定要显示的错误信息来初始化 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">该组件使用这些构造函数来表示有错误。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">如果只能使用它们扩展的类或.NET Framework。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">若要解决此问题，请使用<ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph>属性筛选掉不需要的更改通知。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">也可以通过 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 属性增加内部缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The information required to serialize the T:System.IO.InternalBufferOverflowException object.</source>
          <target state="translated">要序列化的 T:System.IO.InternalBufferOverflowException 对象所需的信息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of the serialized stream associated with the T:System.IO.InternalBufferOverflowException object.</source>
          <target state="translated">相关序列化流的源和目标与 T:System.IO.InternalBufferOverflowException 对象关联。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new, empty instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class that is serializable using the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> objects.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 类的新的空实例，该实例可序列化且使用指定的 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The message to be given for the exception.</source>
          <target state="translated">要为异常提供的消息。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The inner exception.</source>
          <target state="translated">内部异常。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class with the message to be displayed and the generated inner exception specified.</source>
          <target state="translated">通过指定要显示的消息和生成的内部异常来初始化 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">该组件使用这些构造函数来表示有错误。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">如果只能使用它们扩展的类或.NET Framework。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">此异常指示已溢出内部缓冲区，用户应在自己的代码以确保它正确恢复采取适当的措施。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">溢出的原因，通常更改过多在短时间内，会导致内部通知缓冲区溢出。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">若要解决此问题，请使用<ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph>属性筛选掉不需要的更改通知。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">也可以通过 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 属性增加内部缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">但是，增加缓冲区的大小将占用大量资源，因此保持缓冲区尽可能小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>