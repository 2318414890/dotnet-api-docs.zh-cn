<Type Name="StreamWriter" FullName="System.IO.StreamWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f31bd789fd27cfb5dec1f299d1b5fc770e9fc32" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8d50-101">实现一个 <see cref="T:System.IO.TextWriter" />，使其以一种特定的编码向流中写入字符。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8d50-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing characters to a stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-102"><xref:System.IO.StreamWriter> 专为在特定编码，字符输出而类派生自<xref:System.IO.Stream>用于字节输入和输出。</span><span class="sxs-lookup"><span data-stu-id="e8d50-102"><xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e8d50-103">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="e8d50-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e8d50-104">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="e8d50-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e8d50-105">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="e8d50-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="e8d50-106">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="e8d50-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e8d50-107">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="e8d50-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="e8d50-108"><xref:System.IO.StreamWriter> 默认情况下使用的实例<xref:System.Text.UTF8Encoding>除非另有指定。</span><span class="sxs-lookup"><span data-stu-id="e8d50-108"><xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise.</span></span> <span data-ttu-id="e8d50-109">此实例`UTF8Encoding`构建时没有字节顺序标记 (BOM)，因此其<xref:System.Text.Encoding.GetPreamble%2A>方法返回一个空的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e8d50-109">This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="e8d50-110">此构造函数的默认 utf-8 编码的无效字节上引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-110">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="e8d50-111">此行为是不同于提供中的编码对象的行为<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-111">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e8d50-112">若要指定 BOM，并且确定是否引发异常的无效字节上，使用作为参数，如接受的编码对象的构造函数<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>或<xref:System.IO.StreamWriter.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-112">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="e8d50-113">默认情况下，<xref:System.IO.StreamWriter>不是线程安全。</span><span class="sxs-lookup"><span data-stu-id="e8d50-113">By default, a <xref:System.IO.StreamWriter> is not thread safe.</span></span> <span data-ttu-id="e8d50-114">请参阅<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>有关线程安全包装。</span><span class="sxs-lookup"><span data-stu-id="e8d50-114">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="e8d50-115">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-115">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-116">下面的示例演示如何使用<xref:System.IO.StreamWriter>要写入的文件列出 C 驱动器上的目录，然后使用对象<xref:System.IO.StreamReader>对象将读取并显示每个目录名称。</span><span class="sxs-lookup"><span data-stu-id="e8d50-116">The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name.</span></span> <span data-ttu-id="e8d50-117">很好的做法是使用中的这些对象`using`语句，以便正确释放的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="e8d50-117">A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed.</span></span> <span data-ttu-id="e8d50-118">`using`语句自动调用<xref:System.IDisposable.Dispose%2A>上正在使用它的代码已完成的对象。</span><span class="sxs-lookup"><span data-stu-id="e8d50-118">The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed.</span></span> <span data-ttu-id="e8d50-119">此示例中使用的构造函数不支持在中使用[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-119">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]
 [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamReader" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-120">初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-120">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="e8d50-121">要写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-121">The stream to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-122">使用 UTF-8 编码及默认的缓冲区大小，为指定的流初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-122">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using UTF-8 encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-123">此构造函数创建<xref:System.IO.StreamWriter>采用 utf-8 编码而不字节顺序标记 (BOM)，因此其<xref:System.Text.Encoding.GetPreamble%2A>方法返回一个空的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e8d50-123">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="e8d50-124">此构造函数的默认 utf-8 编码的无效字节上引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-124">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="e8d50-125">此行为是不同于提供中的编码对象的行为<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-125">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e8d50-126">若要指定是否引发异常的无效字节上，使用作为参数，如接受的编码对象的构造函数<xref:System.IO.StreamWriter.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-126">To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span> <span data-ttu-id="e8d50-127"><xref:System.IO.StreamWriter.BaseStream%2A>属性初始化使用`stream`参数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-127">The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter.</span></span> <span data-ttu-id="e8d50-128">不会重置流的当前位置。</span><span class="sxs-lookup"><span data-stu-id="e8d50-128">The position of the stream is not reset.</span></span>  
  
 <span data-ttu-id="e8d50-129"><xref:System.IO.StreamWriter>对象调用<xref:System.IO.Stream.Dispose>所提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-129">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-130">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-130">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-131">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-131">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-132">下面的代码示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-132">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]
 [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-133">
            <paramref name="stream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-133">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-134">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-134">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8d50-135">要写入的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-135">The complete file path to write to.</span>
          </span>
          <span data-ttu-id="e8d50-136">
            <c>path</c> 可以是一个文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-136">
              <c>path</c> can be a file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-137">用默认编码和缓冲区大小，为指定的文件初始化 <see cref="T:System.IO.StreamWriter" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-137">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-138">此构造函数创建<xref:System.IO.StreamWriter>采用 utf-8 编码而不字节顺序标记 (BOM)，因此其<xref:System.Text.Encoding.GetPreamble%2A>方法返回一个空的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e8d50-138">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="e8d50-139">此构造函数的默认 utf-8 编码的无效字节上引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-139">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="e8d50-140">此行为是不同于提供中的编码对象的行为<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-140">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e8d50-141">若要指定 BOM，并且确定是否引发异常的无效字节上，使用作为参数，如接受的编码对象的构造函数<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-141">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="e8d50-142">`path`参数可以为文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="e8d50-142">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span> <span data-ttu-id="e8d50-143">如果该文件存在，则覆盖;否则，创建一个新的文件。</span><span class="sxs-lookup"><span data-stu-id="e8d50-143">If the file exists, it is overwritten; otherwise, a new file is created.</span></span>  
  
 <span data-ttu-id="e8d50-144">`path`参数不需要存储在磁盘上的文件; 它可以是支持使用流的访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="e8d50-144">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-145">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-145">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-146">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-147">下面的代码示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-147">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]
 [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8d50-148">拒绝访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-148">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-149">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-149">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="e8d50-150">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-150">-or-</span>
          </span>
          <span data-ttu-id="e8d50-151">
            <paramref name="path" /> 包含系统设备的名称（com1、com2 等等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-151">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-152">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="e8d50-153">指定的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-153">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="e8d50-154">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-154">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="e8d50-155">例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，文件名长度不得超过 260 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-155">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-156">
            <paramref name="path" /> 包含不正确或无效的文件名、目录名或卷标签的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-156">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e8d50-157">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-157">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="e8d50-158">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-158">for reading and writing files.</span>
          </span>
          <span data-ttu-id="e8d50-159">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-159">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="e8d50-160">要写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-160">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e8d50-161">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-161">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-162">使用指定的编码及默认的缓冲区大小，为指定的流初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-162">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-163">此构造函数初始化<xref:System.IO.StreamWriter.Encoding%2A>属性使用编码的参数，与<xref:System.IO.StreamWriter.BaseStream%2A>使用 stream 参数的属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-163">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter.</span></span> <span data-ttu-id="e8d50-164">不会重置流的当前位置。</span><span class="sxs-lookup"><span data-stu-id="e8d50-164">The position of the stream is not reset.</span></span> <span data-ttu-id="e8d50-165">有关附加信息，请参见 <xref:System.IO.TextWriter.Encoding%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-165">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="e8d50-166"><xref:System.IO.StreamWriter>对象调用<xref:System.IO.Stream.Dispose>所提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-166">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-167">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-167">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-168">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-168">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-169">下面的示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-169">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]
 [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-170">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-170">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-171">
            <paramref name="stream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-171">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8d50-172">要写入的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-172">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="e8d50-173">若要追加数据到该文件中，则为 <see langword="true" />；若要覆盖该文件，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-173">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="e8d50-174">如果指定的文件不存在，该参数无效，且构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-174">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-175">用默认编码和缓冲区大小，为指定的文件初始化 <see cref="T:System.IO.StreamWriter" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-175">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
          <span data-ttu-id="e8d50-176">如果该文件存在，则可以将其覆盖或向其追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-176">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="e8d50-177">如果该文件不存在，此构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-177">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-178">此构造函数创建<xref:System.IO.StreamWriter>采用 utf-8 编码而不字节顺序标记 (BOM)，因此其<xref:System.Text.Encoding.GetPreamble%2A>方法返回一个空的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e8d50-178">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="e8d50-179">此构造函数的默认 utf-8 编码的无效字节上引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-179">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="e8d50-180">此行为是不同于提供中的编码对象的行为<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-180">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e8d50-181">若要指定 BOM，并且确定是否引发异常的无效字节上，使用作为参数，如接受的编码对象的构造函数<xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-181">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="e8d50-182">`path`参数可以为文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="e8d50-182">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="e8d50-183">`path`参数不需要存储在磁盘上的文件; 它可以是支持使用流的访问的系统的任何部分。</span><span class="sxs-lookup"><span data-stu-id="e8d50-183">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-184">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-184">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-185">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-185">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-186">下面的代码示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-186">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]
 [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8d50-187">拒绝访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-187">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-188">
            <paramref name="path" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-188">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="e8d50-189">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-189">-or-</span>
          </span>
          <span data-ttu-id="e8d50-190">
            <paramref name="path" /> 包含系统设备的名称（com1、com2 等等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-190">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-191">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-191">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="e8d50-192">指定的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-192">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-193">
            <paramref name="path" /> 包含不正确或无效的文件名、目录名或卷标签的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-193">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="e8d50-194">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-194">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="e8d50-195">例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，文件名长度不得超过 260 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-195">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e8d50-196">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-196">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="e8d50-197">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-197">for reading and writing files.</span>
          </span>
          <span data-ttu-id="e8d50-198">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-198">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="e8d50-199">要写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-199">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e8d50-200">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-200">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="e8d50-201">缓冲区大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-201">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-202">使用指定的编码及缓冲区大小，为指定的流初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-202">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-203">此构造函数初始化<xref:System.IO.StreamWriter.Encoding%2A>属性使用`encoding`参数，与<xref:System.IO.StreamWriter.BaseStream%2A>属性使用`stream`参数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-203">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter.</span></span> <span data-ttu-id="e8d50-204">不会重置流的当前位置。</span><span class="sxs-lookup"><span data-stu-id="e8d50-204">The position of the stream is not reset.</span></span> <span data-ttu-id="e8d50-205">有关附加信息，请参见 <xref:System.IO.TextWriter.Encoding%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-205">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="e8d50-206"><xref:System.IO.StreamWriter>对象调用<xref:System.IO.Stream.Dispose>所提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-206">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-207">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-207">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-208">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-208">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-209">下面的示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-209">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]
 [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-210">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-210">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-211">
            <paramref name="bufferSize" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-211">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-212">
            <paramref name="stream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-212">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8d50-213">要写入的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-213">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="e8d50-214">若要追加数据到该文件中，则为 <see langword="true" />；若要覆盖该文件，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-214">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="e8d50-215">如果指定的文件不存在，该参数无效，且构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-215">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e8d50-216">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-216">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-217">使用指定的编码和默认的缓冲区大小，为指定的文件初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-217">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the specified encoding and default buffer size.</span>
          </span>
          <span data-ttu-id="e8d50-218">如果该文件存在，则可以将其覆盖或向其追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-218">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="e8d50-219">如果该文件不存在，此构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-219">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-220">此构造函数初始化<xref:System.IO.StreamWriter.Encoding%2A>使用编码的参数的属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-220">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="e8d50-221">有关附加信息，请参见 <xref:System.IO.TextWriter.Encoding%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-221">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="e8d50-222">`path` 可以是文件名称，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="e8d50-222">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="e8d50-223">`path` 不需要是存储在磁盘; 上的文件它可以是系统的支持通过流访问的任何部分。</span><span class="sxs-lookup"><span data-stu-id="e8d50-223">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-224">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-224">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-225">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-226">下面的示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-226">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]
 [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8d50-227">拒绝访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-227">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-228">
            <paramref name="path" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-228">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="e8d50-229">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-229">-or-</span>
          </span>
          <span data-ttu-id="e8d50-230">
            <paramref name="path" /> 包含系统设备的名称（com1、com2 等等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-230">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-231">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-231">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="e8d50-232">指定的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-232">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-233">
            <paramref name="path" /> 包含不正确或无效的文件名、目录名或卷标签的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-233">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="e8d50-234">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-234">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="e8d50-235">例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，文件名长度不得超过 260 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-235">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e8d50-236">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-236">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="e8d50-237">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-237">for reading and writing files.</span>
          </span>
          <span data-ttu-id="e8d50-238">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="e8d50-239">要写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-239">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e8d50-240">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-240">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="e8d50-241">缓冲区大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-241">The buffer size, in bytes.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="e8d50-242">如果在释放 <see cref="T:System.IO.StreamWriter" /> 对象后保持流处于打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-242">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-243">使用指定的编码和缓冲区大小，为指定的流初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例，并可以选择保持流处于打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-243">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-244">除非你设置`leaveOpen`参数`true`、<xref:System.IO.StreamWriter>对象调用<xref:System.IO.Stream.Dispose>所提供<xref:System.IO.Stream>对象时<xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType>调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-244">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="e8d50-245">此构造函数初始化<xref:System.IO.StreamWriter.Encoding%2A>属性使用`encoding`参数，并初始化<xref:System.IO.StreamWriter.BaseStream%2A>属性使用`stream`参数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-245">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter.</span></span> <span data-ttu-id="e8d50-246">不会重置流的当前位置。</span><span class="sxs-lookup"><span data-stu-id="e8d50-246">The position of the stream is not reset.</span></span> <span data-ttu-id="e8d50-247">有关其他信息，请参阅<xref:System.IO.TextWriter.Encoding%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-247">For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-248">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-248">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-249">下面的示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-249">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]
 [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-250">
            <paramref name="stream" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-250">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-251">
            <paramref name="bufferSize" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-251">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-252">
            <paramref name="stream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-252">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8d50-253">要写入的完整文件路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-253">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="e8d50-254">若要追加数据到该文件中，则为 <see langword="true" />；若要覆盖该文件，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-254">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="e8d50-255">如果指定的文件不存在，该参数无效，且构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-255">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e8d50-256">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-256">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="e8d50-257">缓冲区大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-257">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-258">使用指定编码和缓冲区大小，为指定路径上的指定文件初始化 <see cref="T:System.IO.StreamWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-258">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file on the specified path, using the specified encoding and buffer size.</span>
          </span>
          <span data-ttu-id="e8d50-259">如果该文件存在，则可以将其覆盖或向其追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-259">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="e8d50-260">如果该文件不存在，此构造函数将创建一个新文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-260">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-261">此构造函数初始化<xref:System.IO.StreamWriter.Encoding%2A>使用编码的参数的属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-261">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="e8d50-262">有关附加信息，请参见 <xref:System.IO.TextWriter.Encoding%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-262">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="e8d50-263">`path` 可以是文件名称，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="e8d50-263">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="e8d50-264">`path` 不需要是存储在磁盘; 上的文件它可以是系统的支持通过流访问的任何部分。</span><span class="sxs-lookup"><span data-stu-id="e8d50-264">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e8d50-265">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-265">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="e8d50-266">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-266">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-267">下面的示例演示此构造函数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-267">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]
 [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-268">
            <paramref name="path" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-268">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="e8d50-269">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-269">-or-</span>
          </span>
          <span data-ttu-id="e8d50-270">
            <paramref name="path" /> 包含系统设备的名称（com1、com2 等等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-270">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-271">
            <paramref name="path" /> 或 <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-271">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-272">
            <paramref name="bufferSize" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-272">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-273">
            <paramref name="path" /> 包含不正确或无效的文件名、目录名或卷标签的语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-273">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e8d50-274">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-274">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8d50-275">拒绝访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-275">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="e8d50-276">指定的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-276">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="e8d50-277">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-277">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="e8d50-278">例如，在基于 Windows 的平台上，路径长度不得超过 248 个字符，文件名长度不得超过 260 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-278">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="e8d50-279">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-279">for reading and writing files.</span>
          </span>
          <span data-ttu-id="e8d50-280">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-280">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public virtual bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-281">获取或设置一个值，该值指示 <see cref="T:System.IO.StreamWriter" /> 在每次调用 <see cref="M:System.IO.StreamWriter.Write(System.Char)" /> 之后是否都将其缓冲区刷新到基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-281">Gets or sets a value indicating whether the <see cref="T:System.IO.StreamWriter" /> will flush its buffer to the underlying stream after every call to <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d50-282">强制 <see cref="T:System.IO.StreamWriter" /> 刷新其缓冲区时，为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-282">
              <see langword="true" /> to force <see cref="T:System.IO.StreamWriter" /> to flush its buffer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-283">刷新流将不会刷新其基础的编码器，除非你明确地调用<xref:System.IO.StreamWriter.Flush%2A>或<xref:System.IO.StreamWriter.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-283">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="e8d50-284">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据将刷新从缓冲区到流后每个写入操作，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="e8d50-284">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e8d50-285">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="e8d50-285">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e8d50-286">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="e8d50-286">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="e8d50-287">当`AutoFlush`设置为`false`，`StreamWriter`将执行有限的缓冲，同时内部且可能位于中传递的编码的编码器。</span><span class="sxs-lookup"><span data-stu-id="e8d50-287">When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</span></span> <span data-ttu-id="e8d50-288">你可以通过设置来获取更好的性能`AutoFlush`到`false`、 假定始终调用`Close`(或至少`Flush`) 完成后写入`StreamWriter`。</span><span class="sxs-lookup"><span data-stu-id="e8d50-288">You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.</span></span>  
  
 <span data-ttu-id="e8d50-289">例如，设置`AutoFlush`到`true`时要写入用户期望的即时反馈的地方的设备。</span><span class="sxs-lookup"><span data-stu-id="e8d50-289">For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback.</span></span> <span data-ttu-id="e8d50-290">`Console.Out` 是这种情况下之一：`StreamWriter`内部使用，用于写入`Console`会在每次调用后刷新所有其内部状态编码器状态除外<xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-290">`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-291">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-291">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-292">下面的示例演示使用的语法`AutoFlush`属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-292">The following example shows the syntax for using the `AutoFlush` property.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]
 [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]
 [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-293">获取同后备存储连接的基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-293">Gets the underlying stream that interfaces with a backing store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d50-294">此 <see langword="StreamWriter" /> 正在写入的基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-294">The stream this <see langword="StreamWriter" /> is writing to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-295">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-295">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-296">关闭当前 <see langword="StreamWriter" /> 对象和基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-296">Closes the current <see langword="StreamWriter" /> object and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-297">此方法重写 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-297">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-298">此实现的<xref:System.IO.StreamWriter.Close%2A>调用<xref:System.IO.StreamWriter.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="e8d50-298">This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="e8d50-299">必须调用<xref:System.IO.StreamWriter.Close%2A>以确保所有数据正确都写出到基础流。</span><span class="sxs-lookup"><span data-stu-id="e8d50-299">You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream.</span></span> <span data-ttu-id="e8d50-300">在调用<xref:System.IO.StreamWriter.Close%2A>，任何操作<xref:System.IO.StreamWriter>都可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-300">Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions.</span></span> <span data-ttu-id="e8d50-301">如果磁盘上没有足够的空间，则调用<xref:System.IO.StreamWriter.Close%2A>将引发的异常。</span><span class="sxs-lookup"><span data-stu-id="e8d50-301">If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.</span></span>  
  
 <span data-ttu-id="e8d50-302">刷新流将不会刷新其基础的编码器，除非你明确地调用<xref:System.IO.StreamWriter.Flush%2A>或<xref:System.IO.StreamWriter.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-302">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="e8d50-303">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="e8d50-303">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e8d50-304">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="e8d50-304">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e8d50-305">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="e8d50-305">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-306">下面的代码示例演示`Close`方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-306">The following code example demonstrates the `Close` method.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]
 [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]
 [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="e8d50-307">当前编码不支持显示半个 Unicode 代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-307">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e8d50-308">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-308">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-309">释放由 <see cref="T:System.IO.StreamWriter" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-309">Releases the unmanaged resources used by the <see cref="T:System.IO.StreamWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-310">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StreamWriter> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="e8d50-310">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references.</span></span> <span data-ttu-id="e8d50-311">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-311">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="e8d50-312">当前编码不支持显示半个 Unicode 代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-312">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e8d50-313">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8d50-313">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="e8d50-314">在重写<see langword="Dispose" />，请注意不要引用在以前调用之前释放对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8d50-314">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="e8d50-315">此方法调用基类的 dispose 方法<see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e8d50-315">This method calls the dispose method of the base class, <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-316">获取在其中写入输出的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-316">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d50-317">在当前实例的构造函数中指定的 <see cref="T:System.Text.Encoding" />；或者如果未指定编码，则为 <see cref="T:System.Text.UTF8Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-317">The <see cref="T:System.Text.Encoding" /> specified in the constructor for the current instance, or <see cref="T:System.Text.UTF8Encoding" /> if an encoding was not specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-318">此属性是必需的标头必须在其中写入包含的编码使用的某些 XML 方案<xref:System.IO.StreamWriter>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-318">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>.</span></span> <span data-ttu-id="e8d50-319">这允许使用任意 XML 代码<xref:System.IO.StreamWriter>并生成正确的 XML 标头。</span><span class="sxs-lookup"><span data-stu-id="e8d50-319">This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="e8d50-320">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-320">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-321">下面的示例检索指定的编码<xref:System.IO.StreamWriter>实例。</span><span class="sxs-lookup"><span data-stu-id="e8d50-321">The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]
 [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]
 [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-322">清理当前写入器的所有缓冲区，并使所有缓冲数据写入基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-322">Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-323">此方法重写 <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-323">This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-324">刷新流将不会刷新其基础的编码器，除非你明确地调用`Flush`或<xref:System.IO.StreamWriter.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-324">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="e8d50-325">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据将刷新从缓冲区到流后每个写入操作，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="e8d50-325">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e8d50-326">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="e8d50-326">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e8d50-327">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="e8d50-327">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="e8d50-328">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-328">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-329">当前编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-329">The current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-330">发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-330">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="e8d50-331">当前编码不支持显示半个 Unicode 代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-331">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.Close" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-332">异步清除此流的所有缓冲区并导致所有缓冲数据都写入基础设备中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-332">Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-333">表示异步刷新操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-333">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-334">已释放流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-334">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamWriter ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-335">提供 <see langword="StreamWriter" />，它不带任何可写入但无法从中读取的后备存储。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-335">Provides a <see langword="StreamWriter" /> with no backing store that can be written to, but not read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-336">使用`Null`重定向到输出`StreamWriter`，将不占用任何操作系统资源。</span><span class="sxs-lookup"><span data-stu-id="e8d50-336">Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="e8d50-337">当`StreamWriter.Write`会对调用方法`Null`，只是返回调用，并且没有数据实际写入到任何后备存储。</span><span class="sxs-lookup"><span data-stu-id="e8d50-337">When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="e8d50-338">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-338">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-339">下面的示例演示使用`Null`字段。</span><span class="sxs-lookup"><span data-stu-id="e8d50-339">The following example demonstrates a use of the `Null` field.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]
 [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]
 [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-340">将数据写入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-340">Writes data to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-341">要写入流中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-341">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-342">将字符写入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-342">Writes a character to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-343">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-343">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-344">指定的字符写入基础流，除非提前达到流结尾。</span><span class="sxs-lookup"><span data-stu-id="e8d50-344">The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="e8d50-345">如果<xref:System.IO.StreamWriter.AutoFlush%2A>是`true`，<xref:System.IO.StreamWriter.Flush%2A>自动调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-345">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="e8d50-346">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-346">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-347">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-347">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-348">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且当前编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-348">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d50-349">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且由于 <see cref="T:System.IO.StreamWriter" /> 位于基础固定大小流的结尾，缓冲区的内容无法写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-349">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e8d50-350">包含要写入的数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-350">A character array containing the data to write.</span>
          </span>
          <span data-ttu-id="e8d50-351">如果 <c>buffer</c> 为 <see langword="null" />，则不写入任何内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-351">If <c>buffer</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-352">将字符数组写入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-352">Writes a character array to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-353">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-353">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-354">指定的字符写入到基础流中，除非提前达到流结尾。</span><span class="sxs-lookup"><span data-stu-id="e8d50-354">The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="e8d50-355">如果<xref:System.IO.StreamWriter.AutoFlush%2A>是`true`，<xref:System.IO.StreamWriter.Flush%2A>自动调用。</span><span class="sxs-lookup"><span data-stu-id="e8d50-355">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="e8d50-356">此方法可能会提供更快的性能比`Write`(`char[],``int,``int`) 因为它具有较少要检查的参数。</span><span class="sxs-lookup"><span data-stu-id="e8d50-356">This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.</span></span>  
  
 <span data-ttu-id="e8d50-357">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-357">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-358">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-358">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-359">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且当前编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-359">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d50-360">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且由于 <see cref="T:System.IO.StreamWriter" /> 位于基础固定大小流的结尾，缓冲区的内容无法写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-360">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-361">要写入流的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-361">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="e8d50-362">如果 <c>value</c> 为 null，则不写入任何内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-362">If <c>value</c> is null, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-363">将字符串写入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-363">Writes a string to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-364">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-364">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-365">指定<xref:System.String>除非过早地到达流的末尾写入基础流。</span><span class="sxs-lookup"><span data-stu-id="e8d50-365">The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.</span></span>  
  
 <span data-ttu-id="e8d50-366"><xref:System.IO.StreamWriter.Flush%2A> 如果自动调用<xref:System.IO.StreamWriter.AutoFlush%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="e8d50-366"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span> <span data-ttu-id="e8d50-367">如果`value`是`null`，不写入任何项。</span><span class="sxs-lookup"><span data-stu-id="e8d50-367">If `value` is `null`, no entries are written.</span></span>  
  
 <span data-ttu-id="e8d50-368">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-369">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且当前编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-369">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d50-370">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且由于 <see cref="T:System.IO.StreamWriter" /> 位于基础固定大小流的结尾，缓冲区的内容无法写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-370">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-371">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-371">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e8d50-372">包含要写入的数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-372">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e8d50-373">在开始读取数据时缓冲区中的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-373">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e8d50-374">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-375">将字符的子数组写入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-375">Writes a subarray of characters to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-376">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e8d50-376">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e8d50-377">从读取字符`buffer`开始`index`，一直到`index`+ (`count` -1)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-377">The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1).</span></span> <span data-ttu-id="e8d50-378">所有字符都写入基础流，除非过早地到达基础流的末尾。</span><span class="sxs-lookup"><span data-stu-id="e8d50-378">All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</span></span> <span data-ttu-id="e8d50-379"><xref:System.IO.StreamWriter.Flush%2A> 如果自动调用<xref:System.IO.StreamWriter.AutoFlush%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="e8d50-379"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span>  
  
 <span data-ttu-id="e8d50-380">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="e8d50-380">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-381">此示例将八个字符中一个 13 元素的数组写入到文件，该数组的第三个元素处开始。</span><span class="sxs-lookup"><span data-stu-id="e8d50-381">This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</span></span>  
  
 [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-382">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-382">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-383">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-384">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-384">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8d50-385">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-385">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-386">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且当前编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-386">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d50-387">
            <see cref="P:System.IO.StreamWriter.AutoFlush" /> 为 true 或 <see cref="T:System.IO.StreamWriter" /> 缓冲区已满，并且由于 <see cref="T:System.IO.StreamWriter" /> 位于基础固定大小流的结尾，缓冲区的内容无法写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-387">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-388">将数据异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-388">Writes data to the stream asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-389">要写入流中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-389">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-390">将字符异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-390">Writes a character to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-391">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-391">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d50-392">下面的示例演示如何编写单个字符 (字母"a") 到使用文本文件<xref:System.IO.StreamWriter.WriteAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-392">The following example shows how to write a single character (the letter "a") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]
 [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-393">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-393">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-394">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-394">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-395">要写入流的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-395">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="e8d50-396">如果 <c>value</c> 为 <see langword="null" />，则不写入任何内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-396">If <c>value</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-397">将字符串异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-397">Writes a string to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-398">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-398">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d50-399">下面的示例演示如何将字符串写入到文本文件中，通过使用<xref:System.IO.StreamWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-399">The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]
 [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-400">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-400">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-401">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-401">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e8d50-402">包含要写入的数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-402">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e8d50-403">在开始读取数据时缓冲区中的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-403">The character position in the buffer at which to begin reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e8d50-404">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-404">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-405">将字符的子数组异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-405">Writes a subarray of characters to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-406">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-406">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d50-407">下面的示例演示如何将多个字符写入到文本文件中，通过使用<xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-407">The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]
 [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-408">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-408">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-409">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-409">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-410">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-410">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-411">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-411">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-412">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-412">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-413">将后跟行终止符的数据异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-413">Writes data followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d50-414">将行终止符异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-414">Writes a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-415">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-415">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-416">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-416">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-417">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-417">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-418">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-418">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-419">要写入流中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-419">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-420">将后跟行终止符的字符异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-420">Writes a character followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-421">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-421">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-422">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-422">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-423">下面的示例演示如何编写单个字符 (字母"a") 到文本文件中的行后, 跟使用包含单个字符 （字母"b"），另一行<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-423">The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]
 [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-424">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-424">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-425">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-425">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d50-426">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-426">The string to write.</span>
          </span>
          <span data-ttu-id="e8d50-427">如果值为 <see langword="null" />，则只写入行终止符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-427">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-428">将后跟行终止符的字符串异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-428">Writes a string followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-429">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-429">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-430">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-430">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-431">下面的示例演示如何编写通过使用包含到文本文件的字符串值的两行<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-431">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-432">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-432">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-433">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-433">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="e8d50-434">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-434">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e8d50-435">在开始读取数据时缓冲区中的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-435">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e8d50-436">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-436">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d50-437">将后跟行终止符的字符的子数组异步写入该流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-437">Writes a subarray of characters followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d50-438">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-438">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d50-439">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e8d50-439">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d50-440">下面的示例演示如何将字符写入到文本文件中的两个单独的行，通过使用<xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e8d50-440">The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="e8d50-441">第一行包含字符串 （"首行"跟一个空格的字母） 的第一次 11 个字符。</span><span class="sxs-lookup"><span data-stu-id="e8d50-441">The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</span></span> <span data-ttu-id="e8d50-442">第二行包含从字符串的剩余字符 (字母"和第二个行")。</span><span class="sxs-lookup"><span data-stu-id="e8d50-442">The second line contains the remaining characters from the string (the letters "and second line").</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]
 [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d50-443">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-443">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d50-444">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-444">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8d50-445">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-445">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8d50-446">流编写器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-446">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8d50-447">流编写器正在由其前一次写入操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d50-447">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>