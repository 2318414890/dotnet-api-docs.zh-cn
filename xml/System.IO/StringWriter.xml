<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bd9f475d97a2588289faff36fbe341407d05b69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36483909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a0b3e-101">实现一个用于将信息写入字符串的 <see cref="T:System.IO.TextWriter" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0b3e-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="a0b3e-102">该信息存储在基础 <see cref="T:System.Text.StringBuilder" /> 中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0b3e-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-103"><xref:System.IO.StringWriter> 使用此选项可同步或异步写入字符串。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="a0b3e-104">你可以使用的一次写入字符<xref:System.IO.StringWriter.Write%28System.Char%29>或<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法，在时使用的字符串<xref:System.IO.StringWriter.Write%28System.String%29>或<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="a0b3e-105">此外，你可以在其中编写字符、 字符的数组或跟以异步方式与之一的行终止符的字符串<xref:System.IO.StringWriter.WriteLineAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="a0b3e-106">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-107">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-107">To do this...</span></span>|<span data-ttu-id="a0b3e-108">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-109">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-109">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-110">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-111">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-111">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-112">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-113">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-113">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-114">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-115">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-115">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-116">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-117">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-118">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-119">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-120">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-121">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-121">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-122">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-123">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-123">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-124">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-125">下面的代码示例演示一个连续的段落创建从一组双倍的句子，然后段落的转换回原始文本。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-126">初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-127">初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-128">一个新<xref:System.Text.StringBuilder>对象是自动创建并与新的实例关联<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="a0b3e-129">由于没有为此构造函数指定的格式控件，用于初始化新实例<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-130">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-131">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-131">To do this...</span></span>|<span data-ttu-id="a0b3e-132">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-133">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-133">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-134">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-135">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-135">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-136">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-137">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-137">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-138">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-139">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-139">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-140">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-141">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-142">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-143">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-144">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-145">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-145">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-146">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-147">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-147">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-148">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-149">下面的代码示例演示如何构造字符串使用`StringWriter`类。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="a0b3e-150">控制格式设置的 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-151">使用指定的格式控制初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-152">一个新<xref:System.Text.StringBuilder>对象是自动创建并与新的实例关联<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="a0b3e-153">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-154">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-154">To do this...</span></span>|<span data-ttu-id="a0b3e-155">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-156">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-156">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-157">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-158">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-158">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-159">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-160">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-160">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-161">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-162">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-162">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-163">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-164">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-165">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-166">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-167">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-168">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-168">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-169">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-170">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-170">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-171">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-172">下面的代码示例演示如何构造中特定区域性的字符串。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="a0b3e-173">要写入的 <see cref="T:System.Text.StringBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-174">初始化写入指定 <see cref="T:System.IO.StringWriter" /> 的 <see cref="T:System.Text.StringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-175">由于没有为此构造函数指定的格式控件，用于初始化新实例<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-176">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-177">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-177">To do this...</span></span>|<span data-ttu-id="a0b3e-178">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-179">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-179">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-180">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-181">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-181">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-182">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-183">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-183">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-184">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-185">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-185">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-186">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-187">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-188">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-189">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-190">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-191">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-191">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-192">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-193">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-193">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-194">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-195">下面的代码示例演示如何使用<xref:System.Text.StringBuilder>类来修改中关闭的基础字符串`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0b3e-196">
            <paramref name="sb" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-196">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="a0b3e-197">要写入的 <see cref="T:System.Text.StringBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="a0b3e-198">控制格式设置的 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-199">初始化写入指定 <see cref="T:System.IO.StringWriter" /> 并具有指定格式提供程序的 <see cref="T:System.Text.StringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-200">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-201">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-201">To do this...</span></span>|<span data-ttu-id="a0b3e-202">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-203">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-203">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-204">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-205">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-205">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-206">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-207">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-207">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-208">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-209">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-209">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-210">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-211">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-212">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-213">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-214">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-215">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-215">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-216">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-217">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-217">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-218">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0b3e-219">
            <paramref name="sb" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-219">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-220">关闭当前的 <see cref="T:System.IO.StringWriter" /> 和基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-221">创建一个文件并将文本写入文件的示例，请参阅[如何： 将文本写入到文件](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="a0b3e-222">从文件读取文本的示例，请参阅[如何： 从文件读取文本](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="a0b3e-223">读取和写入二进制文件的示例，请参阅[如何： 读取和写入到新创建数据文件](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="a0b3e-224">此方法重写 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-225">此实现的`Close`调用<xref:System.IO.StringWriter.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="a0b3e-226">刷新流将不会刷新其基础的编码器，除非你明确地调用`Close`。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="a0b3e-227">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="a0b3e-228">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="a0b3e-229">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-230">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a0b3e-231">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-232">释放由 <see cref="T:System.IO.StringWriter" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-233">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StringWriter> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="a0b3e-234">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a0b3e-235">
            <para>
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> 可以多次调用由其他对象。在重写<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />，请注意不要引用在以前调用之前释放对象<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-235">
              <para>
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-236">获取在其中写入输出的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-236">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0b3e-237">在其中写入输出的 <see langword="Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-237">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-238">此属性是必需的标头必须在其中写入包含的编码使用的某些 XML 方案`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-238">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="a0b3e-239">这允许使用任意 XML 代码`StringWriter`并生成正确的 XML 标头。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-239">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="a0b3e-240">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-240">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-241">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-241">To do this...</span></span>|<span data-ttu-id="a0b3e-242">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-242">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-243">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-243">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-244">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-244">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-245">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-245">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-246">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-246">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-247">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-247">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-248">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-248">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-249">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-249">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-250">异步清理当前编写器的所有缓冲区，使所有缓冲数据写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-250">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-251">表示异步刷新操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-251">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-252">返回基础 <see cref="T:System.Text.StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-252">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-253">基础 <see langword="StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-253">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-254">这可以是`StringBuilder`，传递到构造函数中，或`StringBuilder`自动创建。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-254">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="a0b3e-255">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-255">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-256">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-256">To do this...</span></span>|<span data-ttu-id="a0b3e-257">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-257">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-258">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-258">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-259">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-259">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-260">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-260">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-261">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-261">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-262">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-262">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-263">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-263">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-264">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-264">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-265">返回包含迄今为止写入到当前 <see langword="StringWriter" /> 中的字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-265">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-266">包含写入到当前 <see langword="StringWriter" /> 中的字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-266">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-267">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-267">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-268">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-268">To do this...</span></span>|<span data-ttu-id="a0b3e-269">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-269">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-270">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-270">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-271">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-271">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-272">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-272">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-273">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-273">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-274">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-274">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-275">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-275">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-276">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-276">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-277">将数据写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-277">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-278">要写入的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-278">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-279">将字符写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-279">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-280">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-280">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-281">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-281">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-282">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-282">To do this...</span></span>|<span data-ttu-id="a0b3e-283">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-283">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-284">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-284">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-285">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-285">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-286">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-286">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-287">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-287">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-288">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-288">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-289">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-289">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-290">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-290">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-291">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-291">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-292">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-292">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-293">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-293">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-294">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-294">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-295">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-295">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-296">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-296">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-297">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-297">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-298">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-298">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-299">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-299">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-300">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-300">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-301">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-301">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-302">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-302">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-303">将字符串写入当前字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-303">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-304">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-304">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-305">如果指定的字符串是`null`，则写入任何内容。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-305">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="a0b3e-306">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-306">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-307">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-307">To do this...</span></span>|<span data-ttu-id="a0b3e-308">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-308">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-309">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-309">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-310">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-310">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-311">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-311">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-312">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-312">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-313">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-313">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-314">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-314">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-315">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-315">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-316">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-316">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-317">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-317">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-318">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-318">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-319">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-319">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-320">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-320">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-321">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-321">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-322">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-322">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-323">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-323">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-324">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-324">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-325">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-325">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-326">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-326">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a0b3e-327">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-327">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a0b3e-328">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-328">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a0b3e-329">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-329">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-330">将字符的子数组写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-330">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-331">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-331">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a0b3e-332">此方法将写入`count`字符的数据的这`StringWriter`从`buffer`位置处开始， `index`。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-332">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="a0b3e-333">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-333">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="a0b3e-334">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-334">To do this...</span></span>|<span data-ttu-id="a0b3e-335">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="a0b3e-335">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="a0b3e-336">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-336">Create a text file.</span></span>|[<span data-ttu-id="a0b3e-337">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-337">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-338">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-338">Write to a text file.</span></span>|[<span data-ttu-id="a0b3e-339">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-339">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="a0b3e-340">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-340">Read from a text file.</span></span>|[<span data-ttu-id="a0b3e-341">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="a0b3e-341">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="a0b3e-342">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-342">Append text to a file.</span></span>|[<span data-ttu-id="a0b3e-343">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="a0b3e-343">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-344">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-344">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-345">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-345">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-346">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-346">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-347">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-347">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="a0b3e-348">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-348">Read from a binary file.</span></span>|[<span data-ttu-id="a0b3e-349">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-349">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="a0b3e-350">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-350">Write to a binary file.</span></span>|[<span data-ttu-id="a0b3e-351">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="a0b3e-351">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-352">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-352">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0b3e-353">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-353">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a0b3e-354">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-354">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0b3e-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="a0b3e-356">
            <see langword="Length" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-356">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-357">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-357">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-358">以异步方式将数据写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-358">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-359">要写入字符串中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-359">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-360">将字符异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-360">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-361">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-361">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0b3e-362">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-362">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-363">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-363">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-364">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-364">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-365">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-365">The string to write.</span>
          </span>
          <span data-ttu-id="a0b3e-366">如果 <c>value</c> 为 <see langword="null" />，则不会将任何内容写入文本流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-366">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-367">以异步方式将字符串写入当前流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-367">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-368">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-368">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0b3e-369">下面的示例演示如何通过编写的字符串<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-369">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-370">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-370">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-371">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-371">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a0b3e-372">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-372">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a0b3e-373">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-373">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a0b3e-374">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-375">将字符的子数组异步写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-375">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-376">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-376">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0b3e-377">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-377">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0b3e-378">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-378">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0b3e-379">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-379">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a0b3e-380">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-380">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-381">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-381">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-382">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-382">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0b3e-383">将后跟行结束符的数据异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-383">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-384">要写入字符串中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-384">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-385">将后跟行终止符的字符异步写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-385">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-386">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-386">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-387">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-387">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-388">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-388">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-389">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-389">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-390">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-390">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a0b3e-391">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-391">The string to write.</span>
          </span>
          <span data-ttu-id="a0b3e-392">如果值为 <see langword="null" />，则只写入行终止符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-392">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-393">将后跟行终止符的字符串异步写入当前字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-393">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-394">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-394">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-395">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-395">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-396">下面的示例演示如何通过编写的字符串<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-396">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-397">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-397">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-398">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-398">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a0b3e-399">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-399">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a0b3e-400">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-400">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a0b3e-401">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-401">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0b3e-402">将后跟行结束符的字符子数组异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-402">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0b3e-403">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-403">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b3e-404">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-404">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b3e-405">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a0b3e-405">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0b3e-406">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-406">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0b3e-407">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-407">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a0b3e-408">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-408">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a0b3e-409">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-409">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0b3e-410">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0b3e-410">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>