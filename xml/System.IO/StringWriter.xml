<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98325d93594eee11417b62c61f46fafb85d20ebf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07f77-101">实现一个用于将信息写入字符串的 <see cref="T:System.IO.TextWriter" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="07f77-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="07f77-102">该信息存储在基础 <see cref="T:System.Text.StringBuilder" /> 中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="07f77-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-103"><xref:System.IO.StringWriter> 使用此选项可同步或异步写入字符串。</span><span class="sxs-lookup"><span data-stu-id="07f77-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="07f77-104">你可以使用的一次写入字符<xref:System.IO.StringWriter.Write%28System.Char%29>或<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法，在时使用的字符串<xref:System.IO.StringWriter.Write%28System.String%29>或<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="07f77-105">此外，你可以在其中编写字符、 字符的数组或跟以异步方式与之一的行终止符的字符串<xref:System.IO.StringWriter.WriteLineAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="07f77-106">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-107">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-107">To do this...</span></span>|<span data-ttu-id="07f77-108">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-109">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-109">Create a text file.</span></span>|[<span data-ttu-id="07f77-110">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-111">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-111">Write to a text file.</span></span>|[<span data-ttu-id="07f77-112">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-113">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-113">Read from a text file.</span></span>|[<span data-ttu-id="07f77-114">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-115">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-115">Append text to a file.</span></span>|[<span data-ttu-id="07f77-116">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-117">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-118">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-119">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-120">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-121">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-121">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-122">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-123">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-123">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-124">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-125">下面的代码示例演示一个连续的段落创建从一组双倍的句子，然后段落的转换回原始文本。</span><span class="sxs-lookup"><span data-stu-id="07f77-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07f77-126">初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07f77-127">初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-128">一个新<xref:System.Text.StringBuilder>对象是自动创建并与新的实例关联<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="07f77-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="07f77-129">由于没有为此构造函数指定的格式控件，用于初始化新实例<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-130">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-131">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-131">To do this...</span></span>|<span data-ttu-id="07f77-132">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-133">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-133">Create a text file.</span></span>|[<span data-ttu-id="07f77-134">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-135">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-135">Write to a text file.</span></span>|[<span data-ttu-id="07f77-136">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-137">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-137">Read from a text file.</span></span>|[<span data-ttu-id="07f77-138">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-139">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-139">Append text to a file.</span></span>|[<span data-ttu-id="07f77-140">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-141">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-142">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-143">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-144">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-145">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-145">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-146">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-147">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-147">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-148">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-149">下面的代码示例演示如何构造字符串使用`StringWriter`类。</span><span class="sxs-lookup"><span data-stu-id="07f77-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="07f77-150">控制格式设置的 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-151">使用指定的格式控制初始化 <see cref="T:System.IO.StringWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-152">一个新<xref:System.Text.StringBuilder>对象是自动创建并与新的实例关联<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="07f77-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="07f77-153">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-154">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-154">To do this...</span></span>|<span data-ttu-id="07f77-155">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-156">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-156">Create a text file.</span></span>|[<span data-ttu-id="07f77-157">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-158">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-158">Write to a text file.</span></span>|[<span data-ttu-id="07f77-159">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-160">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-160">Read from a text file.</span></span>|[<span data-ttu-id="07f77-161">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-162">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-162">Append text to a file.</span></span>|[<span data-ttu-id="07f77-163">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-164">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-165">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-166">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-167">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-168">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-168">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-169">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-170">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-170">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-171">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-172">下面的代码示例演示如何构造中特定区域性的字符串。</span><span class="sxs-lookup"><span data-stu-id="07f77-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="07f77-173">要写入的 <see cref="T:System.Text.StringBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-174">初始化写入指定 <see cref="T:System.IO.StringWriter" /> 的 <see cref="T:System.Text.StringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-175">由于没有为此构造函数指定的格式控件，用于初始化新实例<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-176">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-177">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-177">To do this...</span></span>|<span data-ttu-id="07f77-178">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-179">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-179">Create a text file.</span></span>|[<span data-ttu-id="07f77-180">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-181">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-181">Write to a text file.</span></span>|[<span data-ttu-id="07f77-182">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-183">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-183">Read from a text file.</span></span>|[<span data-ttu-id="07f77-184">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-185">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-185">Append text to a file.</span></span>|[<span data-ttu-id="07f77-186">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-187">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-188">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-189">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-190">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-191">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-191">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-192">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-193">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-193">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-194">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-195">下面的代码示例演示如何使用<xref:System.Text.StringBuilder>类来修改中关闭的基础字符串`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="07f77-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07f77-196">
            <paramref name="sb" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-196">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="07f77-197">要写入的 <see cref="T:System.Text.StringBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="07f77-198">控制格式设置的 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-199">初始化写入指定 <see cref="T:System.IO.StringWriter" /> 并具有指定格式提供程序的 <see cref="T:System.Text.StringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-200">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-201">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-201">To do this...</span></span>|<span data-ttu-id="07f77-202">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-203">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-203">Create a text file.</span></span>|[<span data-ttu-id="07f77-204">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-205">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-205">Write to a text file.</span></span>|[<span data-ttu-id="07f77-206">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-207">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-207">Read from a text file.</span></span>|[<span data-ttu-id="07f77-208">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-209">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-209">Append text to a file.</span></span>|[<span data-ttu-id="07f77-210">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-211">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-212">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-213">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-214">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-215">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-215">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-216">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-217">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-217">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-218">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07f77-219">
            <paramref name="sb" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-219">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07f77-220">关闭当前的 <see cref="T:System.IO.StringWriter" /> 和基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-221">创建一个文件并将文本写入文件的示例，请参阅[如何： 将文本写入到文件](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="07f77-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="07f77-222">从文件读取文本的示例，请参阅[如何： 从文件读取文本](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="07f77-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="07f77-223">读取和写入二进制文件的示例，请参阅[如何： 读取和写入到新创建数据文件](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="07f77-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="07f77-224">此方法重写 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-225">此实现的`Close`调用<xref:System.IO.StringWriter.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="07f77-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="07f77-226">刷新流将不会刷新其基础的编码器，除非你明确地调用`Close`。</span><span class="sxs-lookup"><span data-stu-id="07f77-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="07f77-227">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="07f77-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="07f77-228">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="07f77-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="07f77-229">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="07f77-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f77-230">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="07f77-231">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-232">释放由 <see cref="T:System.IO.StringWriter" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-233">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StringWriter> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="07f77-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="07f77-234">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="07f77-235">
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="07f77-235">
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="07f77-236">在重写<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />，请注意不要引用在以前调用之前释放对象<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="07f77-236">When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f77-237">获取在其中写入输出的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-237">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f77-238">在其中写入输出的 <see langword="Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-238">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-239">此属性是必需的标头必须在其中写入包含的编码使用的某些 XML 方案`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="07f77-239">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="07f77-240">这允许使用任意 XML 代码`StringWriter`并生成正确的 XML 标头。</span><span class="sxs-lookup"><span data-stu-id="07f77-240">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="07f77-241">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-241">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-242">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-242">To do this...</span></span>|<span data-ttu-id="07f77-243">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-243">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-244">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-244">Create a text file.</span></span>|[<span data-ttu-id="07f77-245">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-245">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-246">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-246">Write to a text file.</span></span>|[<span data-ttu-id="07f77-247">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-247">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-248">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-248">Read from a text file.</span></span>|[<span data-ttu-id="07f77-249">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-249">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-250">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-250">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07f77-251">异步清理当前编写器的所有缓冲区，使所有缓冲数据写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-251">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-252">表示异步刷新操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-252">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07f77-253">返回基础 <see cref="T:System.Text.StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-253">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-254">基础 <see langword="StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-254">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-255">这可以是`StringBuilder`，传递到构造函数中，或`StringBuilder`自动创建。</span><span class="sxs-lookup"><span data-stu-id="07f77-255">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="07f77-256">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-256">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-257">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-257">To do this...</span></span>|<span data-ttu-id="07f77-258">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-258">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-259">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-259">Create a text file.</span></span>|[<span data-ttu-id="07f77-260">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-260">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-261">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-261">Write to a text file.</span></span>|[<span data-ttu-id="07f77-262">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-262">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-263">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-263">Read from a text file.</span></span>|[<span data-ttu-id="07f77-264">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-264">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-265">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-265">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07f77-266">返回包含迄今为止写入到当前 <see langword="StringWriter" /> 中的字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-266">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-267">包含写入到当前 <see langword="StringWriter" /> 中的字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-267">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-268">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-268">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-269">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-269">To do this...</span></span>|<span data-ttu-id="07f77-270">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-270">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-271">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-271">Create a text file.</span></span>|[<span data-ttu-id="07f77-272">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-272">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-273">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-273">Write to a text file.</span></span>|[<span data-ttu-id="07f77-274">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-274">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-275">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-275">Read from a text file.</span></span>|[<span data-ttu-id="07f77-276">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-276">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-277">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-277">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07f77-278">将数据写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-278">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-279">要写入的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-279">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-280">将字符写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-280">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-281">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-281">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-282">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-282">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-283">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-283">To do this...</span></span>|<span data-ttu-id="07f77-284">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-284">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-285">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-285">Create a text file.</span></span>|[<span data-ttu-id="07f77-286">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-286">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-287">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-287">Write to a text file.</span></span>|[<span data-ttu-id="07f77-288">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-288">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-289">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-289">Read from a text file.</span></span>|[<span data-ttu-id="07f77-290">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-290">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-291">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-291">Append text to a file.</span></span>|[<span data-ttu-id="07f77-292">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-292">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-293">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-293">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-294">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-294">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-295">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-295">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-296">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-296">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-297">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-297">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-298">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-298">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-299">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-299">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-300">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-300">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-301">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-301">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-302">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-302">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-303">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-303">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-304">将字符串写入当前字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-304">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-305">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-305">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-306">如果指定的字符串是`null`，则写入任何内容。</span><span class="sxs-lookup"><span data-stu-id="07f77-306">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="07f77-307">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-307">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-308">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-308">To do this...</span></span>|<span data-ttu-id="07f77-309">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-309">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-310">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-310">Create a text file.</span></span>|[<span data-ttu-id="07f77-311">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-311">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-312">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-312">Write to a text file.</span></span>|[<span data-ttu-id="07f77-313">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-313">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-314">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-314">Read from a text file.</span></span>|[<span data-ttu-id="07f77-315">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-315">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-316">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-316">Append text to a file.</span></span>|[<span data-ttu-id="07f77-317">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-317">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-318">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-318">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-319">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-319">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-320">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-320">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-321">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-321">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-322">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-322">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-323">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-323">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-324">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-324">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-325">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-325">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-326">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter>类。</span><span class="sxs-lookup"><span data-stu-id="07f77-326">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-327">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-327">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07f77-328">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-328">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="07f77-329">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-329">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="07f77-330">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-330">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-331">将字符的子数组写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-331">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-332">此方法重写 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07f77-332">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07f77-333">此方法将写入`count`字符的数据的这`StringWriter`从`buffer`位置处开始， `index`。</span><span class="sxs-lookup"><span data-stu-id="07f77-333">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="07f77-334">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="07f77-334">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="07f77-335">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="07f77-335">To do this...</span></span>|<span data-ttu-id="07f77-336">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="07f77-336">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="07f77-337">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-337">Create a text file.</span></span>|[<span data-ttu-id="07f77-338">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-338">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-339">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-339">Write to a text file.</span></span>|[<span data-ttu-id="07f77-340">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="07f77-340">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="07f77-341">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-341">Read from a text file.</span></span>|[<span data-ttu-id="07f77-342">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="07f77-342">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="07f77-343">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-343">Append text to a file.</span></span>|[<span data-ttu-id="07f77-344">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="07f77-344">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-345">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="07f77-345">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-346">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="07f77-346">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-347">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-347">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-348">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="07f77-348">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="07f77-349">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="07f77-349">Read from a binary file.</span></span>|[<span data-ttu-id="07f77-350">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-350">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="07f77-351">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="07f77-351">Write to a binary file.</span></span>|[<span data-ttu-id="07f77-352">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="07f77-352">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="07f77-353">此代码示例摘自更大的示例为提供<xref:System.IO.StringWriter.%23ctor>构造函数。</span><span class="sxs-lookup"><span data-stu-id="07f77-353">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07f77-354">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-354">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="07f77-355">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-355">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="07f77-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="07f77-357">
            <see langword="Length" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-357">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-358">编写器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-358">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07f77-359">以异步方式将数据写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-359">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-360">要写入字符串中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-360">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-361">将字符异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-361">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-362">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-362">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f77-363">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-363">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-364">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-364">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-365">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-365">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-366">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-366">The string to write.</span>
          </span>
          <span data-ttu-id="07f77-367">如果 <c>value</c> 为 <see langword="null" />，则不会将任何内容写入文本流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-367">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-368">以异步方式将字符串写入当前流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-368">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-369">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-369">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f77-370">下面的示例演示如何通过编写的字符串<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-370">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-371">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-371">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-372">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-372">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07f77-373">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-373">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="07f77-374">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-374">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="07f77-375">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-375">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-376">将字符的子数组异步写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-376">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-377">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-377">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f77-378">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-378">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07f77-379">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-379">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="07f77-380">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-380">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="07f77-381">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-381">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-382">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-382">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-383">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-383">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07f77-384">将后跟行结束符的数据异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-384">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-385">要写入字符串中的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-385">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-386">将后跟行终止符的字符异步写入字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-386">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-387">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-387">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-388">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-388">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f77-389">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-389">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-390">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-390">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-391">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-391">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f77-392">要写入的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-392">The string to write.</span>
          </span>
          <span data-ttu-id="07f77-393">如果值为 <see langword="null" />，则只写入行终止符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-393">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-394">将后跟行终止符的字符串异步写入当前字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-394">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-395">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-395">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-396">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-396">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f77-397">下面的示例演示如何通过编写的字符串<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-397">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-398">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-398">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-399">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-399">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07f77-400">要从中写出数据的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-400">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="07f77-401">缓冲区中开始读取数据的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-401">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="07f77-402">要写入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-402">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f77-403">将后跟行结束符的字符子数组异步写入该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-403">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07f77-404">表示异步写入操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-404">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f77-405">由定义的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="07f77-405">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f77-406">下面的示例演示如何通过使用编写字符<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="07f77-406">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07f77-407">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-407">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="07f77-408">
            <paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-408">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="07f77-409">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-409">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="07f77-410">已释放字符串编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-410">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07f77-411">字符串编写器正在由前一个写操作使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f77-411">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>