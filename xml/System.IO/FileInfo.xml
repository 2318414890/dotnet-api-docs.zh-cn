<Type Name="FileInfo" FullName="System.IO.FileInfo">
  <TypeSignature Language="C#" Value="public sealed class FileInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileInfo sealed : System::IO::FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="351e0-101">提供用于创建、复制、删除、移动和打开文件的属性和实例方法，并且帮助创建 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-101">Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <see cref="T:System.IO.FileStream" /> objects.</span></span> <span data-ttu-id="351e0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="351e0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-103">使用<xref:System.IO.FileInfo>类用于典型操作，如复制、 移动、 重命名、 创建、 打开、 删除和追加到文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-103">Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.</span></span>  
  
 <span data-ttu-id="351e0-104">如果您正在执行同一个文件上的多个操作，它可以是使用更加高效<xref:System.IO.FileInfo>实例而不是静态方法的相应方法<xref:System.IO.File>类，因为安全检查不会总是有必要。</span><span class="sxs-lookup"><span data-stu-id="351e0-104">If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.</span></span>  
  
 <span data-ttu-id="351e0-105">许多<xref:System.IO.FileInfo>方法返回其他 I/O 类型，创建或打开文件时。</span><span class="sxs-lookup"><span data-stu-id="351e0-105">Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files.</span></span> <span data-ttu-id="351e0-106">你可以使用这些其他类型来进一步处理文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-106">You can use these other types to further manipulate a file.</span></span> <span data-ttu-id="351e0-107">有关详细信息，请参阅特定<xref:System.IO.FileInfo>成员，如<xref:System.IO.FileInfo.Open%2A>， <xref:System.IO.FileInfo.OpenRead%2A>， <xref:System.IO.FileInfo.OpenText%2A>， <xref:System.IO.FileInfo.CreateText%2A>，或<xref:System.IO.FileInfo.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="351e0-107">For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.</span></span>  
  
 <span data-ttu-id="351e0-108">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="351e0-108">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="351e0-109">下表描述了用于自定义的各种行为的枚举<xref:System.IO.FileInfo>方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-109">The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.</span></span>  
  
|<span data-ttu-id="351e0-110">枚举</span><span class="sxs-lookup"><span data-stu-id="351e0-110">Enumeration</span></span>|<span data-ttu-id="351e0-111">描述</span><span class="sxs-lookup"><span data-stu-id="351e0-111">Description</span></span>|  
|-----------------|-----------------|  
|<xref:System.IO.FileAccess>|<span data-ttu-id="351e0-112">指定读取和写入到文件的访问。</span><span class="sxs-lookup"><span data-stu-id="351e0-112">Specifies read and write access to a file.</span></span>|  
|<xref:System.IO.FileShare>|<span data-ttu-id="351e0-113">指定允许已在使用的文件的访问级别。</span><span class="sxs-lookup"><span data-stu-id="351e0-113">Specifies the level of access permitted for a file that is already in use.</span></span>|  
|<xref:System.IO.FileMode>|<span data-ttu-id="351e0-114">指定现有文件的内容是保留还是覆盖，以及请求创建现有文件是否会导致异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-114">Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="351e0-115">在接受将路径作为输入字符串的成员，该路径必须是格式正确，或引发异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-115">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="351e0-116">例如，如果路径是完全限定的但以空格开始，在类的方法不修整路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-116">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="351e0-117">因此，该路径格式不正确并且引发异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-117">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="351e0-118">同样，路径或组合的路径不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="351e0-118">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="351e0-119">例如，"c:\temp c:\windows"也会引发异常在大多数情况下。</span><span class="sxs-lookup"><span data-stu-id="351e0-119">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="351e0-120">确保使用接受将路径字符串的方法时，你的路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="351e0-120">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="351e0-121">在接受路径的成员，路径可以引用一个文件或仅是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-121">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="351e0-122">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-122">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="351e0-123">例如，以下所有条件都可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="351e0-123">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="351e0-124">"c:\\\MyDir\\\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="351e0-124">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="351e0-125">"c:\\\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="351e0-125">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="351e0-126">"MyDir\\\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="351e0-126">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="351e0-127">"\\\\\\\MyServer\\\MyShare"在 C# 中，或"\\\MyServer\MyShare"在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="351e0-127">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="351e0-128"><xref:System.IO.FileInfo>类提供的以下属性，使你能够检索有关文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-128">The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file.</span></span> <span data-ttu-id="351e0-129">有关如何使用每个属性的示例，请参阅属性页。</span><span class="sxs-lookup"><span data-stu-id="351e0-129">For an example of how to use each property, see the property pages.</span></span>  
  
-   <span data-ttu-id="351e0-130"><xref:System.IO.FileInfo.Directory%2A>属性检索一个对象，表示文件的父目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-130">The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="351e0-131"><xref:System.IO.FileInfo.DirectoryName%2A>属性检索文件的父目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-131">The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="351e0-132"><xref:System.IO.FileInfo.Exists%2A>属性在其上操作之前检查文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-132">The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.</span></span>  
  
-   <span data-ttu-id="351e0-133"><xref:System.IO.FileInfo.IsReadOnly%2A>属性检索或设置一个值，指定是否可以修改一个文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-133">The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.</span></span>  
  
-   <span data-ttu-id="351e0-134"><xref:System.IO.FileInfo.Length%2A>检索文件的大小。</span><span class="sxs-lookup"><span data-stu-id="351e0-134">The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.</span></span>  
  
-   <span data-ttu-id="351e0-135"><xref:System.IO.FileInfo.Name%2A>检索文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-135">The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-136">下面的示例演示的一些主要成员`FileInfo`类。</span><span class="sxs-lookup"><span data-stu-id="351e0-136">The following example demonstrates some of the main members of the `FileInfo` class.</span></span>  
  
 <span data-ttu-id="351e0-137">当第一次检索属性时，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>文件的方法和缓存信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-137">When the properties are first retrieved, <xref:System.IO.FileInfo> calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file.</span></span> <span data-ttu-id="351e0-138">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="351e0-138">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 [!code-cpp[FInfo Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Class/CPP/finfo class.cpp#1)]
 [!code-csharp[FInfo Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Class/CS/finfo class.cs#1)]
 [!code-vb[FInfo Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Class/VB/finfo class.vb#1)]  
  
 <span data-ttu-id="351e0-139">此示例生成类似于下面的输出。</span><span class="sxs-lookup"><span data-stu-id="351e0-139">This example produces output similar to the following.</span></span>  
  
```  
Hello  
And  
Welcome  
C:\Users\userName\AppData\Local\Temp\tmp70AB.tmp was copied to C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp.  
C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp was successfully deleted.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.DriveInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileInfo(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="351e0-140">新文件的完全限定名或相对文件名。</span><span class="sxs-lookup"><span data-stu-id="351e0-140">The fully qualified name of the new file, or the relative file name.</span></span> <span data-ttu-id="351e0-141">路径不要以目录分隔符结尾。</span><span class="sxs-lookup"><span data-stu-id="351e0-141">Do not end the path with the directory separator character.</span></span></param>
        <summary><span data-ttu-id="351e0-142">初始化作为文件路径的包装的 <see cref="T:System.IO.FileInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="351e0-142">Initializes a new instance of the <see cref="T:System.IO.FileInfo" /> class, which acts as a wrapper for a file path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-143">您可以指定完全限定或相对文件名，但安全检查获取完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-143">You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-144">下面的示例使用此构造函数来创建两个文件，然后再写入、 读取、 复制，并删除。</span><span class="sxs-lookup"><span data-stu-id="351e0-144">The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.</span></span>  
  
 [!code-cpp[finfo ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Ctor/CPP/finfo ctor.cpp#1)]
 [!code-csharp[finfo ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Ctor/CS/finfo ctor.cs#1)]
 [!code-vb[finfo ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Ctor/VB/finfo ctor.vb#1)]  
  
 <span data-ttu-id="351e0-145">下面的示例打开一个现有文件或创建一个文件，将文本追加到文件，并显示结果。</span><span class="sxs-lookup"><span data-stu-id="351e0-145">The following example opens an existing file or creates a file, appends text to the file, and displays the results.</span></span>  
  
 [!code-cpp[fileinfomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfomain/CPP/fileinfomain.cpp#1)]
 [!code-csharp[fileinfomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfomain/CS/fileinfomain.cs#1)]
 [!code-vb[fileinfomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfomain/VB/fileinfomain.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="351e0-146"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-146"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-147">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-147">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="351e0-148">文件名为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-148">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-149">拒绝访问 <paramref name="fileName" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-149">Access to <paramref name="fileName" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="351e0-150">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="351e0-150">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="351e0-151">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-151">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="351e0-152"><paramref name="fileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="351e0-152"><paramref name="fileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-153">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-153">for reading files.</span></span> <span data-ttu-id="351e0-154">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-154">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter AppendText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter AppendText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.AppendText" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ AppendText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-155">创建一个 <see cref="T:System.IO.StreamWriter" />，它向 <see cref="T:System.IO.FileInfo" /> 的此实例表示的文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="351e0-155">Creates a <see cref="T:System.IO.StreamWriter" /> that appends text to the file represented by this instance of the <see cref="T:System.IO.FileInfo" />.</span></span></summary>
        <returns><span data-ttu-id="351e0-156">一个新的 <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-156">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="351e0-157">下面的示例将文本追加到文件，并从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-157">The following example appends text to a file and reads from the file.</span></span>  
  
 [!code-cpp[finfo appendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo AppendText/CPP/finfo appendtext.cpp#1)]
 [!code-csharp[finfo appendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo AppendText/CS/finfo appendtext.cs#1)]
 [!code-vb[finfo appendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo AppendText/VB/finfo appendtext.vb#1)]  
  
 <span data-ttu-id="351e0-158">以下示例演示如何将文本追加到文件末尾，并还向控制台显示的结果追加操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-158">The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console.</span></span> <span data-ttu-id="351e0-159">第一次调用此例程时，如果它不存在，则创建该文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-159">The first time this routine is called, the file is created if it does not exist.</span></span> <span data-ttu-id="351e0-160">之后，指定的文本追加到文件中。</span><span class="sxs-lookup"><span data-stu-id="351e0-160">After that, the specified text is appended to the file.</span></span>  
  
 [!code-cpp[fileinfoappendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoappendtext/CPP/fileinfoappendtext.cpp#1)]
 [!code-csharp[fileinfoappendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoappendtext/CS/fileinfoappendtext.cs#1)]
 [!code-vb[fileinfoappendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoappendtext/VB/fileinfoappendtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-161">用于读取和追加到文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-161">for reading and appending to files.</span></span> <span data-ttu-id="351e0-162">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /></span><span class="sxs-lookup"><span data-stu-id="351e0-162">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /></span></span></permission>
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="351e0-163">将现有文件复制到新文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-163">Copies an existing file to a new file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="351e0-164">要复制到的新文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-164">The name of the new file to copy to.</span></span></param>
        <summary><span data-ttu-id="351e0-165">将现有文件复制到新文件，不允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-165">Copies an existing file to a new file, disallowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="351e0-166">带有完全限定路径的新文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-166">A new file with a fully qualified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-167">使用<xref:System.IO.FileInfo.CopyTo%2A>方法，以便允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-167">Use the <xref:System.IO.FileInfo.CopyTo%2A> method to allow overwriting of an existing file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="351e0-168">只要有可能，避免在使用此方法 （如 XXXXXX~1.XXX) 的短文件名。</span><span class="sxs-lookup"><span data-stu-id="351e0-168">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="351e0-169">如果两个文件都有等效项短文件名，则此方法可能失败并引发异常和/或导致意外行为</span><span class="sxs-lookup"><span data-stu-id="351e0-169">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-170">下面的示例演示这两个重载`CopyTo`方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-170">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="351e0-171">下面的示例演示如何将一个文件复制到另一个文件，如果目标文件已存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-171">The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.</span></span>  
  
 [!code-cpp[FileInfoCopyTo1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileInfoCopyTo1/CPP/fileinfocopyto1.cpp#1)]
 [!code-csharp[FileInfoCopyTo1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileInfoCopyTo1/CS/fileinfocopyto1.cs#1)]
 [!code-vb[FileInfoCopyTo1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileInfoCopyTo1/VB/fileinfocopyto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="351e0-172"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-172"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-173">出现错误，或目标文件已存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-173">An error occurs, or the destination file already exists.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-174">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-174">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="351e0-175"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-175"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-176">传入一个目录路径或此文件将被移至其他驱动器。</span><span class="sxs-lookup"><span data-stu-id="351e0-176">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-177">在 <paramref name="destFileName" /> 中指定的此目录不存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-177">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="351e0-178">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="351e0-178">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="351e0-179">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-179">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="351e0-180"><paramref name="destFileName" /> 在其字符串中包含冒号 (:) ，但并未指定卷。</span><span class="sxs-lookup"><span data-stu-id="351e0-180"><paramref name="destFileName" /> contains a colon (:) within the string but does not specify the volume.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-181">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-181">for reading and writing files.</span></span> <span data-ttu-id="351e0-182">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-182">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String, overwrite As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName, bool overwrite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="351e0-183">要复制到的新文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-183">The name of the new file to copy to.</span></span></param>
        <param name="overwrite">
          <span data-ttu-id="351e0-184">若为 <see langword="true" />，则允许覆盖现有文件；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-184"><see langword="true" /> to allow an existing file to be overwritten; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="351e0-185">将现有文件复制到新文件，允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-185">Copies an existing file to a new file, allowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="351e0-186">为新文件；如果 <paramref name="overwrite" /> 是 <see langword="true" />，则为现有文件的覆盖。</span><span class="sxs-lookup"><span data-stu-id="351e0-186">A new file, or an overwrite of an existing file if <paramref name="overwrite" /> is <see langword="true" />.</span></span> <span data-ttu-id="351e0-187">如果文件存在且 <paramref name="overwrite" /> 为 <see langword="false" />，则引发 <see cref="T:System.IO.IOException" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-187">If the file exists and <paramref name="overwrite" /> is <see langword="false" />, an <see cref="T:System.IO.IOException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-188">使用此方法允许或阻止覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-188">Use this method to allow or prevent overwriting of an existing file.</span></span> <span data-ttu-id="351e0-189">使用<xref:System.IO.FileInfo.CopyTo%2A>方法，以防止覆盖现有文件的默认情况下。</span><span class="sxs-lookup"><span data-stu-id="351e0-189">Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="351e0-190">只要有可能，避免在使用此方法 （如 XXXXXX~1.XXX) 的短文件名。</span><span class="sxs-lookup"><span data-stu-id="351e0-190">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="351e0-191">如果两个文件都有等效项短文件名，则此方法可能失败并引发异常和/或导致意外行为</span><span class="sxs-lookup"><span data-stu-id="351e0-191">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-192">下面的示例演示这两个重载`CopyTo`方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-192">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="351e0-193">下面的示例演示如何将一个文件复制到另一个文件，指定是否覆盖已存在的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-193">The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.</span></span>  
  
 [!code-cpp[fileinfocopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfocopyto/CPP/fileinfocopyto.cpp#1)]
 [!code-csharp[fileinfocopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfocopyto/CS/fileinfocopyto.cs#1)]
 [!code-vb[fileinfocopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfocopyto/VB/fileinfocopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="351e0-194"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-194"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-195">出现错误，或目标文件已存在，且 <paramref name="overwrite" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-195">An error occurs, or the destination file already exists and <paramref name="overwrite" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-196">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-196">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="351e0-197"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-197"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-198">在 <paramref name="destFileName" /> 中指定的此目录不存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-198">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-199">传入一个目录路径或此文件将被移至其他驱动器。</span><span class="sxs-lookup"><span data-stu-id="351e0-199">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="351e0-200">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="351e0-200">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="351e0-201">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-201">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="351e0-202"><paramref name="destFileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="351e0-202"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-203">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-203">for reading and writing files.</span></span> <span data-ttu-id="351e0-204">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-204">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-205">创建文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-205">Creates a file.</span></span></summary>
        <returns><span data-ttu-id="351e0-206">新文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-206">A new file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-207">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="351e0-207">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="351e0-208">此方法是提供的功能的包装器<xref:System.IO.File.Create%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="351e0-208">This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-209">下面的示例创建对文件的引用，然后创建使用磁盘上的文件`FileInfo.Create()`。</span><span class="sxs-lookup"><span data-stu-id="351e0-209">The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 <span data-ttu-id="351e0-210">下面的示例创建一个文件、 将一些文本添加到其中，和从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-210">The following example creates a file, adds some text to it, and reads from the file.</span></span>  
  
 [!code-cpp[finfo create#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Create/CPP/finfo create.cpp#1)]
 [!code-csharp[finfo create#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Create/CS/finfo create.cs#1)]
 [!code-vb[finfo create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Create/VB/finfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-211">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-211">for reading and writing files.</span></span> <span data-ttu-id="351e0-212">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-212">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter CreateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter CreateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CreateText" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ CreateText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-213">创建写入新文本文件的 <see cref="T:System.IO.StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-213">Creates a <see cref="T:System.IO.StreamWriter" /> that writes a new text file.</span></span></summary>
        <returns><span data-ttu-id="351e0-214">一个新的 <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-214">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-215">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="351e0-215">By default, full read/write access to new files is granted to all users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-216">下面的示例演示`CreateText`方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-216">The following example demonstrates the `CreateText` method.</span></span>  
  
 [!code-cpp[finfo createtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CreateText/CPP/finfo createtext.cpp#1)]
 [!code-csharp[finfo createtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CreateText/CS/finfo createtext.cs#1)]
 [!code-vb[finfo createtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CreateText/VB/finfo createtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-217">文件名是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-217">The file name is a directory.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-218">此盘为只读。</span><span class="sxs-lookup"><span data-stu-id="351e0-218">The disk is read-only.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-219">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-219">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-220">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-220">for reading and writing files.</span></span> <span data-ttu-id="351e0-221">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-221">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Decrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-222">使用 <see cref="M:System.IO.FileInfo.Encrypt" /> 方法解密由当前帐户加密的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-222">Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.FileInfo.Encrypt" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-223"><xref:System.IO.FileInfo.Decrypt%2A>方法允许你使用加密文件进行解密<xref:System.IO.FileInfo.Encrypt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-223">The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  <span data-ttu-id="351e0-224"><xref:System.IO.FileInfo.Decrypt%2A>方法可以解密使用当前用户帐户加密的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-224">The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.</span></span>  
  
 <span data-ttu-id="351e0-225">这两个<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="351e0-225">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="351e0-226">当前的文件系统必须格式化为 NTFS 和当前的操作系统必须是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-226">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-227">下面的代码示例使用<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法加密，然后将解密文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-227">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt and then decrypt a file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="351e0-228">指定了无效的驱动器。</span><span class="sxs-lookup"><span data-stu-id="351e0-228">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-229">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-229">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-230">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-230">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="351e0-231">文件系统不是 NTFS。</span><span class="sxs-lookup"><span data-stu-id="351e0-231">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-232">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-232">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-233">当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件为只读文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-233">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
 <span data-ttu-id="351e0-234">或</span><span class="sxs-lookup"><span data-stu-id="351e0-234">-or-</span></span>  
  
 <span data-ttu-id="351e0-235">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-235">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="351e0-236">或</span><span class="sxs-lookup"><span data-stu-id="351e0-236">-or-</span></span>  
  
 <span data-ttu-id="351e0-237">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-238">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-238">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
 <span data-ttu-id="351e0-239">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-239">Security action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-240">权限读取和写入当前所描述的文件<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-240">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-241">永久删除文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-241">Permanently deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-242">如果文件不存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="351e0-242">If the file does not exist, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-243">下面的示例演示`Delete`方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-243">The following example demonstrates the `Delete` method.</span></span>  
  
 [!code-cpp[finfo delete#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Delete/CPP/finfo delete.cpp#1)]
 [!code-csharp[finfo delete#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Delete/CS/finfo delete.cs#1)]
 [!code-vb[finfo delete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Delete/VB/finfo delete.vb#1)]  
  
 <span data-ttu-id="351e0-244">下面的示例创建、 将关闭，并删除的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-244">The following example creates, closes, and deletes a file.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-245">目标文件打开或在运行 Microsoft Windows NT 的计算机上进行内存映射。</span><span class="sxs-lookup"><span data-stu-id="351e0-245">The target file is open or memory-mapped on a computer running Microsoft Windows NT.</span></span>  
  
 <span data-ttu-id="351e0-246">或</span><span class="sxs-lookup"><span data-stu-id="351e0-246">-or-</span></span>  
  
 <span data-ttu-id="351e0-247">在文件中存在开放句柄，并且操作系统是 Windows XP 或更早的版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-247">There is an open handle on the file, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="351e0-248">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="351e0-248">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="351e0-249">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="351e0-249">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-250">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-250">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-251">路径是一个目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-251">The path is a directory.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-252">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-252">for reading and writing files.</span></span> <span data-ttu-id="351e0-253">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-253">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Directory" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Directory { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-254">获取父目录的实例。</span><span class="sxs-lookup"><span data-stu-id="351e0-254">Gets an instance of the parent directory.</span></span></summary>
        <value><span data-ttu-id="351e0-255">表示此文件父目录的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-255">A <see cref="T:System.IO.DirectoryInfo" /> object representing the parent directory of this file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-256">若要获取字符串形式的父目录，请使用<xref:System.IO.FileInfo.DirectoryName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="351e0-256">To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-257">下面的示例打开或创建一个文件，确定其完整路径，并确定并显示目录的完整内容。</span><span class="sxs-lookup"><span data-stu-id="351e0-257">The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.</span></span>  
  
 [!code-cpp[fileinfodirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodirectory/CPP/fileinfodirectory.cpp#1)]
 [!code-csharp[fileinfodirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodirectory/CS/fileinfodirectory.cs#1)]
 [!code-vb[fileinfodirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodirectory/VB/fileinfodirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-258">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-258">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-259">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-259">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-260">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-260">for reading files.</span></span> <span data-ttu-id="351e0-261">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-261">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-262">获取表示目录的完整路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="351e0-262">Gets a string representing the directory's full path.</span></span></summary>
        <value><span data-ttu-id="351e0-263">表示目录的完整路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="351e0-263">A string representing the directory's full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-264">若要获取形式的父目录<xref:System.IO.DirectoryInfo>对象，请使用<xref:System.IO.FileInfo.Directory%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="351e0-264">To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.</span></span>  
  
 <span data-ttu-id="351e0-265">当第一次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>和缓存文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-265">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="351e0-266">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="351e0-266">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-267">下面的示例检索指定的文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-267">The following example retrieves the full path of the specified file.</span></span>  
  
 [!code-cpp[System.IO.FileInfo members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileInfo members/CPP/fileinfomembers.cpp#3)]
 [!code-csharp[System.IO.FileInfo members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileInfo members/CS/fileinfomembers.cs#3)]
 [!code-vb[System.IO.FileInfo members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileInfo members/VB/fileinfomembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="351e0-268">为目录名传入 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-268"><see langword="null" /> was passed in for the directory name.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="351e0-269">完全限定路径为 260 或更多字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-269">The fully qualified path is 260 or more characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-270">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-270">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-271">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-271">for reading files.</span></span> <span data-ttu-id="351e0-272">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="351e0-272">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Encrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Encrypt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-273">将某个文件加密，使得只有加密该文件的帐户才能将其解密。</span><span class="sxs-lookup"><span data-stu-id="351e0-273">Encrypts a file so that only the account used to encrypt the file can decrypt it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-274"><xref:System.IO.FileInfo.Encrypt%2A>方法可用于加密文件，以便仅用来调用此方法的帐户可以对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="351e0-274">The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.</span></span>  <span data-ttu-id="351e0-275">使用<xref:System.IO.FileInfo.Decrypt%2A>方法以解密加密的文件<xref:System.IO.FileInfo.Encrypt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-275">Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  
  
 <span data-ttu-id="351e0-276">这两个<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="351e0-276">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="351e0-277">当前的文件系统必须格式化为 NTFS 和当前的操作系统必须是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-277">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-278">下面的代码示例使用<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法加密文件，然后将其解密。</span><span class="sxs-lookup"><span data-stu-id="351e0-278">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="351e0-279">指定了无效的驱动器。</span><span class="sxs-lookup"><span data-stu-id="351e0-279">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-280">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-280">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-281">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-281">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="351e0-282">文件系统不是 NTFS。</span><span class="sxs-lookup"><span data-stu-id="351e0-282">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-283">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-283">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-284">当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件为只读文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-284">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
 <span data-ttu-id="351e0-285">或</span><span class="sxs-lookup"><span data-stu-id="351e0-285">-or-</span></span>  
  
 <span data-ttu-id="351e0-286">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-286">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="351e0-287">或</span><span class="sxs-lookup"><span data-stu-id="351e0-287">-or-</span></span>  
  
 <span data-ttu-id="351e0-288">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-288">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-289">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-289">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
 <span data-ttu-id="351e0-290">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-290">Security action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-291">权限读取和写入当前所描述的文件<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-291">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-292">获取指示文件是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="351e0-292">Gets a value indicating whether a file exists.</span></span></summary>
        <value>
          <span data-ttu-id="351e0-293">如果该文件存在，则为 <see langword="true" />；如果文件不存在或文件即是目录，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-293"><see langword="true" /> if the file exists; <see langword="false" /> if the file does not exist or if the file is a directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-294">当第一次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>和缓存文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-294">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="351e0-295">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="351e0-295">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="351e0-296"><xref:System.IO.FileInfo.Exists%2A>属性返回`false`如果在尝试确定指定的文件是否存在任何错误时发生。</span><span class="sxs-lookup"><span data-stu-id="351e0-296">The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="351e0-297">在引发异常，例如传递具有无效的字符或太多字符，磁盘失效或缺失的文件名的情况下可能发生这或如果调用方没有权限读取此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-297">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-298">下面的代码示例使用<xref:System.IO.FileInfo.Exists%2A>属性确保在打开之前存在的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-298">The following code example uses the <xref:System.IO.FileInfo.Exists%2A> property ensure a file exists before opening it.</span></span>  <span data-ttu-id="351e0-299">此方法可用于引发自定义异常，找不到文件时。</span><span class="sxs-lookup"><span data-stu-id="351e0-299">You can use this technique to throw a custom exception when the file is not found.</span></span>  
  
 [!code-cpp[IO.FileInfo.Exists#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Exists/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Exists/cs/sample.cs#1)]
 [!code-vb[IO.FileInfo.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Exists/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="351e0-300">获取 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-300">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-301">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索访问控制的当前文件的列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-301">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-302">获取 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-302">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="351e0-303">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="351e0-303">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-304">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-304">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="351e0-305">ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-305">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="351e0-306">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="351e0-306">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-307">下面的代码示例使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法和<xref:System.IO.FileInfo.SetAccessControl%2A>方法添加，然后从文件中删除的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-307">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.</span></span>  <span data-ttu-id="351e0-308">你必须提供有效的用户或组帐户以运行此示例。</span><span class="sxs-lookup"><span data-stu-id="351e0-308">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-309">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-309">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-310">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-310">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="351e0-311">当前的系统帐户没有管理权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-311">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="351e0-312">找不到文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-312">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-313">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-313">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="351e0-314">或</span><span class="sxs-lookup"><span data-stu-id="351e0-314">-or-</span></span>  
  
 <span data-ttu-id="351e0-315">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-315">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-316">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="351e0-316">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span>  
  
 <span data-ttu-id="351e0-317">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-317">Security action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-318">若要读取的访问控制列表的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-318">For permission to read the access control list.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="351e0-319"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，该值指定要检索的访问控制项组。</span><span class="sxs-lookup"><span data-stu-id="351e0-319">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies which group of access control entries to retrieve.</span></span></param>
        <summary><span data-ttu-id="351e0-320">获取一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-320">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="351e0-321">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="351e0-321">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-322">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-322">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="351e0-323">ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-323">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="351e0-324">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="351e0-324">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-325">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-325">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-326">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-326">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="351e0-327">当前的系统帐户没有管理权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-327">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="351e0-328">找不到文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-328">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-329">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-329">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="351e0-330">或</span><span class="sxs-lookup"><span data-stu-id="351e0-330">-or-</span></span>  
  
 <span data-ttu-id="351e0-331">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-331">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-332">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="351e0-332">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span>  
  
 <span data-ttu-id="351e0-333">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-333">Security action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-334">若要读取的访问控制列表的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-334">For permission to read the access control list.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-335">获取或设置确定当前文件是否为只读的值。</span><span class="sxs-lookup"><span data-stu-id="351e0-335">Gets or sets a value that determines if the current file is read only.</span></span></summary>
        <value>
          <span data-ttu-id="351e0-336">如果当前文件为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-336"><see langword="true" /> if the current file is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-337">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性来快速确定或更改是否当前文件为只读。</span><span class="sxs-lookup"><span data-stu-id="351e0-337">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.</span></span>  
  
 <span data-ttu-id="351e0-338">当第一次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>和缓存文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-338">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="351e0-339">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="351e0-339">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-340">下面的示例使用<xref:System.IO.FileInfo.IsReadOnly%2A>要将文件标记为只读并且然后将其标记为读写属性。</span><span class="sxs-lookup"><span data-stu-id="351e0-340">The following example uses the <xref:System.IO.FileInfo.IsReadOnly%2A> property to mark a file as read only and then mark it as read-write.</span></span>  
  
 [!code-cpp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.isReadOnly/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-341">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-341">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-342">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-342">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-343">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="351e0-343">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="351e0-344">或</span><span class="sxs-lookup"><span data-stu-id="351e0-344">-or-</span></span>  
  
 <span data-ttu-id="351e0-345">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-345">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="351e0-346">此用户没有写入权限，但尝试将此属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-346">The user does not have write permission, but attempted to set this property to <see langword="false" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-347">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-347">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
 <span data-ttu-id="351e0-348">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-348">Security action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-349">权限读取和写入当前所描述的文件<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-349">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-350">获取当前文件的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="351e0-350">Gets the size, in bytes, of the current file.</span></span></summary>
        <value><span data-ttu-id="351e0-351">当前文件的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="351e0-351">The size of the current file in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-352">值<xref:System.IO.FileInfo.Length%2A>属性会预先缓存，如果当前实例的<xref:System.IO.FileInfo>从以下任一返回了对象<xref:System.IO.DirectoryInfo>方法：</span><span class="sxs-lookup"><span data-stu-id="351e0-352">The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>  
  
 <span data-ttu-id="351e0-353">若要获取最新值，请调用<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-353">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-354">下面的示例显示指定的文件的大小。</span><span class="sxs-lookup"><span data-stu-id="351e0-354">The following example displays the size of the specified files.</span></span>  
  
 [!code-cpp[FileLength#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileLength/CPP/filelength.cpp#1)]
 [!code-csharp[FileLength#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileLength/CS/filelength.cs#1)]
 [!code-vb[FileLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileLength/VB/filelength.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="351e0-355"><see cref="M:System.IO.FileSystemInfo.Refresh" /> 无法更新文件或目录的状态。</span><span class="sxs-lookup"><span data-stu-id="351e0-355"><see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot update the state of the file or directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-356">文件不存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-356">The file does not exist.</span></span>  
  
 <span data-ttu-id="351e0-357">或</span><span class="sxs-lookup"><span data-stu-id="351e0-357">-or-</span></span>  
  
 <span data-ttu-id="351e0-358">针对某个目录调用了 <see langword="Length" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="351e0-358">The <see langword="Length" /> property is called for a directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="351e0-359">要将文件移动到的路径，可以指定另一个文件名。</span><span class="sxs-lookup"><span data-stu-id="351e0-359">The path to move the file to, which can specify a different file name.</span></span></param>
        <summary><span data-ttu-id="351e0-360">将指定文件移到新位置，提供要指定新文件名的选项。</span><span class="sxs-lookup"><span data-stu-id="351e0-360">Moves a specified file to a new location, providing the option to specify a new file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-361">此方法适用于整个磁盘卷。</span><span class="sxs-lookup"><span data-stu-id="351e0-361">This method works across disk volumes.</span></span> <span data-ttu-id="351e0-362">例如，文件 c:\MyFile.txt 可以移到 d:\public，重命名 NewFile.txt。</span><span class="sxs-lookup"><span data-stu-id="351e0-362">For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-363">下面的示例演示将文件移动到不同的位置和重命名该文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-363">The following example demonstrates moving a file to a different location and renaming the file.</span></span>  
  
 [!code-csharp[IO.FileInfo.MoveTo#1](~/samples/snippets/csharp/VS_Snippets_Misc/IO.FileInfo.MoveTo/CS/Program.cs#1)]
 [!code-vb[IO.FileInfo.MoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/IO.FileInfo.MoveTo/VB/Program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-364">发生 I/O 错误，例如目标文件已存在或目标设备未就绪。</span><span class="sxs-lookup"><span data-stu-id="351e0-364">An I/O error occurs, such as the destination file already exists or the destination device is not ready.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="351e0-365"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-365"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="351e0-366"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-366"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-367">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-367">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="351e0-368"><paramref name="destFileName" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-368"><paramref name="destFileName" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-369">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-369">The file is not found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-370">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-370">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="351e0-371">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="351e0-371">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="351e0-372">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-372">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="351e0-373"><paramref name="destFileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="351e0-373"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-374">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-374">for reading and writing files.</span></span> <span data-ttu-id="351e0-375">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-375">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="351e0-376">获取文件名。</span><span class="sxs-lookup"><span data-stu-id="351e0-376">Gets the name of the file.</span></span></summary>
        <value><span data-ttu-id="351e0-377">文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-377">The name of the file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-378">当第一次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>和缓存文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-378">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="351e0-379">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="351e0-379">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="351e0-380">文件的名称包括文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="351e0-380">The name of the file includes the file extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-381">下面的示例使用`Name`属性在当前目录中显示的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-381">The following example uses the `Name` property to display the names of files in the current directory.</span></span>  
  
 [!code-cpp[fileinfoname#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoname/CPP/fileinfoname.cpp#1)]
 [!code-csharp[fileinfoname#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoname/CS/fileinfoname.cs#1)]
 [!code-vb[fileinfoname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoname/VB/fileinfoname.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="351e0-382">用各种读/写访问权限和共享特权打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-382">Opens a file with various read/write and sharing privileges.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="351e0-383">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="351e0-383">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <summary><span data-ttu-id="351e0-384">在指定的模式中打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-384">Opens a file in the specified mode.</span></span></summary>
        <returns><span data-ttu-id="351e0-385">在指定模式中打开、具有读/写访问权限且不共享的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-385">A file opened in the specified mode, with read/write access and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="351e0-386">下面的示例打开文件、 将某些信息添加到该文件，并读取文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-386">The following example opens a file, adds some information to the file, and reads the file.</span></span>  
  
 [!code-cpp[finfo open1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open1/CPP/finfo open1.cpp#1)]
 [!code-csharp[finfo open1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open1/CS/finfo open1.cs#1)]
 [!code-vb[finfo open1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open1/VB/finfo open1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-387">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-387">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-388">文件为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-388">The file is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-389">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-389">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-390">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="351e0-390">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-391">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-391">for writing to and reading from files.</span></span> <span data-ttu-id="351e0-392">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-392">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="351e0-393">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="351e0-393">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="351e0-394">一个 <see cref="T:System.IO.FileAccess" /> 常数，它指定是使用 <see langword="Read" />、<see langword="Write" /> 还是 <see langword="ReadWrite" /> 文件访问来打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-394">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <summary><span data-ttu-id="351e0-395">用读、写或读/写访问权限在指定模式下打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-395">Opens a file in the specified mode with read, write, or read/write access.</span></span></summary>
        <returns><span data-ttu-id="351e0-396">用指定模式和访问权限打开的且不共享的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-396">A <see cref="T:System.IO.FileStream" /> object opened in the specified mode and access, and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="351e0-397">下面的示例打开一个文件作为只读的并从文件读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-397">The following example opens a file as read-only and reads from the file.</span></span>  
  
 [!code-cpp[finfo open2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open2/CPP/finfo open2.cpp#1)]
 [!code-csharp[finfo open2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open2/CS/finfo open2.cs#1)]
 [!code-vb[finfo open2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open2/VB/finfo open2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-398">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-398">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-399">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-399">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="351e0-400"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-400"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-401">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-401">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-402">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="351e0-402">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-403">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-403">for writing to and reading from files.</span></span> <span data-ttu-id="351e0-404">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-404">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess, share As FileShare) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="351e0-405">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="351e0-405">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="351e0-406">一个 <see cref="T:System.IO.FileAccess" /> 常数，它指定是使用 <see langword="Read" />、<see langword="Write" /> 还是 <see langword="ReadWrite" /> 文件访问来打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-406">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <param name="share"><span data-ttu-id="351e0-407">一个 <see cref="T:System.IO.FileShare" /> 常数，它指定其他 <see langword="FileStream" /> 对象对此文件拥有的访问类型。</span><span class="sxs-lookup"><span data-stu-id="351e0-407">A <see cref="T:System.IO.FileShare" /> constant specifying the type of access other <see langword="FileStream" /> objects have to this file.</span></span></param>
        <summary><span data-ttu-id="351e0-408">用读、写或读/写访问权限和指定的共享选项在指定的模式中打开文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-408">Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</span></span></summary>
        <returns><span data-ttu-id="351e0-409">用指定的模式、访问权限和共享选项打开的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-409">A <see cref="T:System.IO.FileStream" /> object opened with the specified mode, access, and sharing options.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="351e0-410">下面的示例演示了如何打开用于读取和写入操作，但不允许其他用户或进程访问权限的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-410">The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.</span></span>  
  
 [!code-cpp[fileinfoopen#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoopen/CPP/fileinfoopen.cpp#1)]
 [!code-csharp[fileinfoopen#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoopen/CS/fileinfoopen.cs#1)]
 [!code-vb[fileinfoopen#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoopen/VB/fileinfoopen.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-411">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-411">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-412">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-412">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="351e0-413"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-413"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-414">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-414">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-415">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="351e0-415">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-416">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-416">for writing to and reading from files.</span></span> <span data-ttu-id="351e0-417">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-417">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenRead" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenRead();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-418">创建一个只读的 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-418">Creates a read-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="351e0-419">一个新的只读的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-419">A new read-only <see cref="T:System.IO.FileStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-420">此方法返回的只读<xref:System.IO.FileStream>对象<xref:System.IO.FileShare>模式设置为<xref:System.IO.FileShare.Read>。</span><span class="sxs-lookup"><span data-stu-id="351e0-420">This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-421">下面的示例打开一个文件作为只读的并读取它。</span><span class="sxs-lookup"><span data-stu-id="351e0-421">The following example opens a file as read-only and reads from it.</span></span>  
  
 [!code-cpp[finfo openread#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenRead/CPP/finfo openread.cpp#1)]
 [!code-csharp[finfo openread#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenRead/CS/finfo openread.cs#1)]
 [!code-vb[finfo openread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenRead/VB/finfo openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="351e0-422"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-422"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-423">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-423">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="351e0-424">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="351e0-424">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-425">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-425">for reading files.</span></span> <span data-ttu-id="351e0-426">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="351e0-426">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader OpenText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamReader OpenText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenText" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenText () As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamReader ^ OpenText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-427">创建使用从现有文本文件中读取的 UTF8 编码的 <see cref="T:System.IO.StreamReader" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-427">Creates a <see cref="T:System.IO.StreamReader" /> with UTF8 encoding that reads from an existing text file.</span></span></summary>
        <returns><span data-ttu-id="351e0-428">使用 UTF8 编码的新的 <see langword="StreamReader" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-428">A new <see langword="StreamReader" /> with UTF8 encoding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="351e0-429">下面的示例读取文件中的文本。</span><span class="sxs-lookup"><span data-stu-id="351e0-429">The following example reads text from a file.</span></span>  
  
 [!code-cpp[finfo opentext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenText/CPP/file opentext.cpp#1)]
 [!code-csharp[finfo opentext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenText/CS/file opentext.cs#1)]
 [!code-vb[finfo opentext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenText/VB/file opentext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="351e0-430">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-430">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-431">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-431">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="351e0-432"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-432"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-433">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="351e0-433">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-434">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-434">for reading and writing files.</span></span> <span data-ttu-id="351e0-435">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-435">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenWrite" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenWrite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-436">创建一个只写的 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-436">Creates a write-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="351e0-437">新的或现有文件的只写非共享的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-437">A write-only unshared <see cref="T:System.IO.FileStream" /> object for a new or existing file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-438"><xref:System.IO.FileInfo.OpenWrite%2A>方法打开一个文件，如果一个已存在的文件路径，或创建一个新文件，如果不存在。</span><span class="sxs-lookup"><span data-stu-id="351e0-438">The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist.</span></span> <span data-ttu-id="351e0-439">对于现有的文件，它不会不新将文本追加到现有的文本。</span><span class="sxs-lookup"><span data-stu-id="351e0-439">For an existing file, it does not append the new text to the existing text.</span></span> <span data-ttu-id="351e0-440">相反，它将用新的字符覆盖现有的字符。</span><span class="sxs-lookup"><span data-stu-id="351e0-440">Instead, it overwrites the existing characters with the new characters.</span></span> <span data-ttu-id="351e0-441">如果使用较短字符串 （如"第二次运行"） （例如"This is OpenWrite 方法的测试)"覆盖较长的字符串，则文件将包含多种字符串 ("第二个 runtest OpenWrite 方法的")。</span><span class="sxs-lookup"><span data-stu-id="351e0-441">If you overwrite a longer string (such as "This is a test of the OpenWrite method") with a shorter string (like "Second run"), the file will contain a mix of the strings ("Second runtest of the OpenWrite method").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-442">下面的示例打开用于写入文件，然后从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="351e0-442">The following example opens a file for writing and then reads from the file.</span></span>  
  
 [!code-cpp[finfo openwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenWrite/CPP/file openwrite.cpp#1)]
 [!code-csharp[finfo openwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenWrite/CS/file openwrite.cs#1)]
 [!code-vb[finfo openwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenWrite/VB/file openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-443">创建 <see cref="T:System.IO.FileInfo" /> 对象的实例时指定的路径为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="351e0-443">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="351e0-444">创建 <see cref="T:System.IO.FileInfo" /> 对象的实例时指定的路径无效，例如此路径位于未映射的驱动器。</span><span class="sxs-lookup"><span data-stu-id="351e0-444">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-445">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-445">for reading and writing files.</span></span> <span data-ttu-id="351e0-446">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-446">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="351e0-447">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-447">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-448">使用<xref:System.IO.FileInfo.Replace%2A>方法需要进行快速替换当前所描述的文件的内容文件时<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-448">Use the <xref:System.IO.FileInfo.Replace%2A> methods when you need to quickly replace a file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="destinationBackupFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="351e0-449">要替换为当前文件的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-449">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="351e0-450">文件的名称，该文件用于创建 <c>destFileName</c> 参数所描述的文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-450">The name of a file with which to create a backup of the file described by the <c>destFileName</c> parameter.</span></span></param>
        <summary><span data-ttu-id="351e0-451">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-451">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <returns><span data-ttu-id="351e0-452">一个 <see cref="T:System.IO.FileInfo" /> 对象，该对象封装有关 <paramref name="destFileName" /> 参数所描述的文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-452">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-453"><xref:System.IO.FileInfo.Replace%2A>方法会指定文件的内容替换为当前所描述的文件的内容<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-453">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="351e0-454">它还将创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-454">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="351e0-455">最后，它返回一个新<xref:System.IO.FileInfo>对象，描述被覆盖的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-455">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="351e0-456">如果此方法将在 Windows 2000 环境中成功`destFileName`是只读的并且不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-456">This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception.</span></span> <span data-ttu-id="351e0-457">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性检查目标文件然后再尝试将其替换中是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="351e0-457">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.</span></span>  
  
 <span data-ttu-id="351e0-458">传递`null`到`destBackupFileName`参数，如果你不想要创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-458">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-459">下面的示例使用<xref:System.IO.File.Replace%2A>方法将替换为另一个文件的文件并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-459">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="351e0-460"><paramref name="destFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="351e0-460">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
 <span data-ttu-id="351e0-461">或</span><span class="sxs-lookup"><span data-stu-id="351e0-461">-or-</span></span>  
  
 <span data-ttu-id="351e0-462"><paramref name="destBackupFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="351e0-462">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="351e0-463"><paramref name="destFileName" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-463">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-464">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-464">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
 <span data-ttu-id="351e0-465">或</span><span class="sxs-lookup"><span data-stu-id="351e0-465">-or-</span></span>  
  
 <span data-ttu-id="351e0-466">找不到 <paramref name="destinationFileName" /> 参数描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-466">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-467">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-467">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-468">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-468">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span>  
  
 <span data-ttu-id="351e0-469">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-469">Security Action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-470">要写入的权限所描述的文件<paramref name="destBackupFileName" />如果指定的参数。</span><span class="sxs-lookup"><span data-stu-id="351e0-470">For permission to write to file described by the <paramref name="destBackupFileName" /> parameter if one is specified.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String, ignoreMetadataErrors As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="destinationBackupFileName" Type="System.String" />
        <Parameter Name="ignoreMetadataErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="351e0-471">要替换为当前文件的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="351e0-471">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="351e0-472">文件的名称，该文件用于创建 <c>destFileName</c> 参数所描述的文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-472">The name of a file with which to create a backup of the file described by the <c>destFileName</c> parameter.</span></span></param>
        <param name="ignoreMetadataErrors">
          <span data-ttu-id="351e0-473">若要忽略从被替换文件到替换文件的合并错误（例如属性和 ACL），请设置为 <see langword="true" />；否则设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-473"><see langword="true" /> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="351e0-474">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-474">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span>  <span data-ttu-id="351e0-475">还指定是否忽略合并错误。</span><span class="sxs-lookup"><span data-stu-id="351e0-475">Also specifies whether to ignore merge errors.</span></span></summary>
        <returns><span data-ttu-id="351e0-476">一个 <see cref="T:System.IO.FileInfo" /> 对象，该对象封装有关 <paramref name="destFileName" /> 参数所描述的文件的信息。</span><span class="sxs-lookup"><span data-stu-id="351e0-476">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-477"><xref:System.IO.FileInfo.Replace%2A>方法会指定文件的内容替换为当前所描述的文件的内容<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-477">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="351e0-478">它还将创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-478">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="351e0-479">最后，它返回一个新<xref:System.IO.FileInfo>对象，描述被覆盖的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-479">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="351e0-480">如果此方法将在 Windows 2000 环境中成功`destFileName`是只读的并且不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="351e0-480">This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception.</span></span> <span data-ttu-id="351e0-481">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性检查目标文件然后再尝试将其替换中是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="351e0-481">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.</span></span>  
  
 <span data-ttu-id="351e0-482">传递`null`到`destBackupFileName`参数，如果你不想要创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-482">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-483">下面的示例使用<xref:System.IO.File.Replace%2A>方法将替换为另一个文件的文件并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="351e0-483">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="351e0-484"><paramref name="destFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="351e0-484">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
 <span data-ttu-id="351e0-485">或</span><span class="sxs-lookup"><span data-stu-id="351e0-485">-or-</span></span>  
  
 <span data-ttu-id="351e0-486"><paramref name="destBackupFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="351e0-486">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="351e0-487"><paramref name="destFileName" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-487">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="351e0-488">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-488">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
 <span data-ttu-id="351e0-489">或</span><span class="sxs-lookup"><span data-stu-id="351e0-489">-or-</span></span>  
  
 <span data-ttu-id="351e0-490">找不到 <paramref name="destinationFileName" /> 参数描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-490">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-491">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-491">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-492">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="351e0-492">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span>  
  
 <span data-ttu-id="351e0-493">安全操作： 需。</span><span class="sxs-lookup"><span data-stu-id="351e0-493">Security Action: Demand.</span></span>  
  
 <span data-ttu-id="351e0-494">要写入的权限所描述的文件<paramref name="destBackupFileName" />如果指定的参数。</span><span class="sxs-lookup"><span data-stu-id="351e0-494">For permission to write to file described by the <paramref name="destBackupFileName" /> parameter if one is specified.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileSecurity"><span data-ttu-id="351e0-495">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象描述要应用于当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-495">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that describes an access control list (ACL) entry to apply to the current file.</span></span></param>
        <summary><span data-ttu-id="351e0-496">将 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-496">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity" /> object to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-497"><xref:System.IO.FileInfo.SetAccessControl%2A>方法适用于表示非继承的 ACL 列表的当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-497">The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.</span></span>  
  
 <span data-ttu-id="351e0-498">使用<xref:System.IO.FileInfo.SetAccessControl%2A>方法，无论何时需要添加或删除文件的 ACL 条目。</span><span class="sxs-lookup"><span data-stu-id="351e0-498">Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="351e0-499">为 ACL 指定`fileSecurity`参数替换现有文件 ACL。</span><span class="sxs-lookup"><span data-stu-id="351e0-499">The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file.</span></span> <span data-ttu-id="351e0-500">若要添加的新用户的权限，请使用<xref:System.IO.Directory.GetAccessControl%2A>方法来获取现有的 ACL，对其进行修改，然后使用<xref:System.IO.FileInfo.SetAccessControl%2A>以将其应用回的文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-500">To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.</span></span>  
  
 <span data-ttu-id="351e0-501">ACL 描述个人和/或组具有或没有执行到给定的文件上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-501">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="351e0-502">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="351e0-502">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="351e0-503"><xref:System.IO.FileInfo.SetAccessControl%2A>方法仍然仅存在<xref:System.Security.AccessControl.FileSecurity>对象创建后已修改的对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-503">The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="351e0-504">如果<xref:System.Security.AccessControl.FileSecurity>尚未修改对象，它不会保留到文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-504">If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="351e0-505">因此，不能检索<xref:System.Security.AccessControl.FileSecurity>对象从一个文件，并重新对同一对象应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-505">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="351e0-506">若要将 ACL 信息从一个文件复制到另一个：</span><span class="sxs-lookup"><span data-stu-id="351e0-506">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="351e0-507">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.FileSecurity>源文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-507">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="351e0-508">创建一个新<xref:System.Security.AccessControl.FileSecurity>目标文件的对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-508">Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="351e0-509">使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>方法的源<xref:System.Security.AccessControl.FileSecurity>要检索 ACL 信息对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-509">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="351e0-510">使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法的信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.FileSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="351e0-510">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.</span></span>  
  
5.  <span data-ttu-id="351e0-511">设置目标<xref:System.Security.AccessControl.FileSecurity>到目标文件使用的对象<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="351e0-511">Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="351e0-512">下面的代码示例使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法和<xref:System.IO.FileInfo.SetAccessControl%2A>方法添加，然后从文件中删除的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="351e0-512">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an ACL entry from a file.</span></span>  <span data-ttu-id="351e0-513">你必须提供有效的用户或组帐户以运行此示例。</span><span class="sxs-lookup"><span data-stu-id="351e0-513">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="351e0-514"><paramref name="fileSecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="351e0-514">The <paramref name="fileSecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="351e0-515">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="351e0-515">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="351e0-516">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-516">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="351e0-517">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="351e0-517">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="351e0-518">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.Change" /></span><span class="sxs-lookup"><span data-stu-id="351e0-518">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.Change" /></span></span>  
  
 <span data-ttu-id="351e0-519">安全操作： 需</span><span class="sxs-lookup"><span data-stu-id="351e0-519">Security Action: Demand</span></span>  
  
 <span data-ttu-id="351e0-520">若要访问该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="351e0-520">For permission to access the file.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="351e0-521">以字符串形式返回路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-521">Returns the path as a string.</span></span></summary>
        <returns><span data-ttu-id="351e0-522">一个表示该路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="351e0-522">A string representing the path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="351e0-523">返回的字符串<xref:System.IO.FileInfo.ToString%2A>方法表示传递给构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-523">The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.</span></span>  <span data-ttu-id="351e0-524">当你创建<xref:System.IO.FileInfo>对象使用构造函数，<xref:System.IO.FileInfo.ToString%2A>方法返回的完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-524">When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.</span></span>  <span data-ttu-id="351e0-525">但是，也会通过返回的字符串的情况<xref:System.IO.FileInfo.ToString%2A>方法不表示的完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-525">However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.</span></span>  <span data-ttu-id="351e0-526">例如，当创建<xref:System.IO.FileInfo>对象使用<xref:System.IO.DirectoryInfo.GetFiles%2A>方法，<xref:System.IO.FileInfo.ToString%2A>方法不表示的完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="351e0-526">For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>