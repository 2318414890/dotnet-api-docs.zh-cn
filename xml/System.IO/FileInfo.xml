<Type Name="FileInfo" FullName="System.IO.FileInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63498407e1c9ad414a88d9d4f17a0980b3ab25ef" /><Meta Name="ms.sourcegitcommit" Value="e3904cb57bb8e1854a7de1615afac7a569a2064b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/14/2019" /><Meta Name="ms.locfileid" Value="54252874" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type FileInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="668de-101">提供用于创建、复制、删除、移动和打开文件的属性和实例方法，并且帮助创建 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-101">Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <see cref="T:System.IO.FileStream" /> objects.</span></span> <span data-ttu-id="668de-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="668de-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-103">使用<xref:System.IO.FileInfo>类的典型操作，如复制、 移动、 重命名、 创建、 打开、 删除和追加到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-103">Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.</span></span>  
  
 <span data-ttu-id="668de-104">如果您正在执行相同的文件上的多个操作，它可以是使用更加高效<xref:System.IO.FileInfo>实例方法而不是相应的静态方法的<xref:System.IO.File>类，因为安全检查将不一定总是需要。</span><span class="sxs-lookup"><span data-stu-id="668de-104">If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.</span></span>  
  
 <span data-ttu-id="668de-105">许多<xref:System.IO.FileInfo>方法返回其他 I/O 类型，创建或打开文件时。</span><span class="sxs-lookup"><span data-stu-id="668de-105">Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files.</span></span> <span data-ttu-id="668de-106">您可以使用这些其他类型以进一步处理文件。</span><span class="sxs-lookup"><span data-stu-id="668de-106">You can use these other types to further manipulate a file.</span></span> <span data-ttu-id="668de-107">有关详细信息，请参阅特定<xref:System.IO.FileInfo>成员，如<xref:System.IO.FileInfo.Open%2A>， <xref:System.IO.FileInfo.OpenRead%2A>， <xref:System.IO.FileInfo.OpenText%2A>， <xref:System.IO.FileInfo.CreateText%2A>，或<xref:System.IO.FileInfo.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="668de-107">For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.</span></span>  
  
 <span data-ttu-id="668de-108">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="668de-108">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="668de-109">下表描述了用于自定义的各种行为的枚举<xref:System.IO.FileInfo>方法。</span><span class="sxs-lookup"><span data-stu-id="668de-109">The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.</span></span>  
  
|<span data-ttu-id="668de-110">枚举</span><span class="sxs-lookup"><span data-stu-id="668de-110">Enumeration</span></span>|<span data-ttu-id="668de-111">描述</span><span class="sxs-lookup"><span data-stu-id="668de-111">Description</span></span>|  
|-----------------|-----------------|  
|<xref:System.IO.FileAccess>|<span data-ttu-id="668de-112">指定读取和写入访问的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-112">Specifies read and write access to a file.</span></span>|  
|<xref:System.IO.FileShare>|<span data-ttu-id="668de-113">指定的文件，已在使用允许的访问级别。</span><span class="sxs-lookup"><span data-stu-id="668de-113">Specifies the level of access permitted for a file that is already in use.</span></span>|  
|<xref:System.IO.FileMode>|<span data-ttu-id="668de-114">指定现有文件的内容是保留还是覆盖，以及请求创建的现有文件是否会导致异常。</span><span class="sxs-lookup"><span data-stu-id="668de-114">Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="668de-115">在接受路径作为输入字符串的成员，该路径必须是格式正确，或引发的异常。</span><span class="sxs-lookup"><span data-stu-id="668de-115">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="668de-116">例如，如果路径是完全限定名称，但以空格开头，在类的方法不修整路径。</span><span class="sxs-lookup"><span data-stu-id="668de-116">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="668de-117">因此，该路径的格式不正确，并且会引发的异常。</span><span class="sxs-lookup"><span data-stu-id="668de-117">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="668de-118">同样的路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="668de-118">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="668de-119">例如，"c:\temp c:\windows"还会引发异常在大多数情况下。</span><span class="sxs-lookup"><span data-stu-id="668de-119">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="668de-120">请确保使用接受一个路径字符串的方法时您的路径的格式是否正确。</span><span class="sxs-lookup"><span data-stu-id="668de-120">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="668de-121">在接受一个路径的成员，路径可以引用的文件或只是一个目录。</span><span class="sxs-lookup"><span data-stu-id="668de-121">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="668de-122">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="668de-122">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="668de-123">例如，以下所有条件都可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="668de-123">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="668de-124">"c:\\\MyDir\\\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="668de-124">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668de-125">"c:\\\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="668de-125">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668de-126">"MyDir\\\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="668de-126">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668de-127">"\\\\\\\MyServer\\\MyShare"在 C# 中，或"\\\MyServer\MyShare"在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="668de-127">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="668de-128"><xref:System.IO.FileInfo>类提供了以下属性，使你能够检索有关文件的信息。</span><span class="sxs-lookup"><span data-stu-id="668de-128">The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file.</span></span> <span data-ttu-id="668de-129">有关如何使用每个属性的示例，请参阅属性页。</span><span class="sxs-lookup"><span data-stu-id="668de-129">For an example of how to use each property, see the property pages.</span></span>  
  
-   <span data-ttu-id="668de-130"><xref:System.IO.FileInfo.Directory%2A>属性检索一个对象，表示文件父目录。</span><span class="sxs-lookup"><span data-stu-id="668de-130">The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="668de-131"><xref:System.IO.FileInfo.DirectoryName%2A>属性检索文件的父目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="668de-131">The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="668de-132"><xref:System.IO.FileInfo.Exists%2A>属性操作前检查文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="668de-132">The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.</span></span>  
  
-   <span data-ttu-id="668de-133"><xref:System.IO.FileInfo.IsReadOnly%2A>属性获取或设置一个值，指定是否可以修改一个文件。</span><span class="sxs-lookup"><span data-stu-id="668de-133">The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.</span></span>  
  
-   <span data-ttu-id="668de-134"><xref:System.IO.FileInfo.Length%2A>检索文件的大小。</span><span class="sxs-lookup"><span data-stu-id="668de-134">The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.</span></span>  
  
-   <span data-ttu-id="668de-135"><xref:System.IO.FileInfo.Name%2A>检索文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-135">The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-136">下面的示例演示了一些主要成员`FileInfo`类。</span><span class="sxs-lookup"><span data-stu-id="668de-136">The following example demonstrates some of the main members of the `FileInfo` class.</span></span>  
  
 <span data-ttu-id="668de-137">当第一次检索属性时，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>的文件的方法和缓存信息。</span><span class="sxs-lookup"><span data-stu-id="668de-137">When the properties are first retrieved, <xref:System.IO.FileInfo> calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file.</span></span> <span data-ttu-id="668de-138">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="668de-138">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 [!code-cpp[FInfo Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Class/CPP/finfo class.cpp#1)]
 [!code-csharp[FInfo Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Class/CS/finfo class.cs#1)]
 [!code-vb[FInfo Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Class/VB/finfo class.vb#1)]  
  
 <span data-ttu-id="668de-139">此示例生成类似于以下输出。</span><span class="sxs-lookup"><span data-stu-id="668de-139">This example produces output similar to the following.</span></span>  
  
```  
Hello  
And  
Welcome  
C:\Users\userName\AppData\Local\Temp\tmp70AB.tmp was copied to C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp.  
C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp was successfully deleted.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.DriveInfo" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-140">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-140">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-141">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-141">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-142">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-142">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-143">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-143">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.IO.FileInfo : string -&gt; System.IO.FileInfo" Usage="new System.IO.FileInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="668de-144">新文件的完全限定名或相对文件名。</span><span class="sxs-lookup"><span data-stu-id="668de-144">The fully qualified name of the new file, or the relative file name.</span></span> <span data-ttu-id="668de-145">路径不要以目录分隔符结尾。</span><span class="sxs-lookup"><span data-stu-id="668de-145">Do not end the path with the directory separator character.</span></span></param>
        <summary><span data-ttu-id="668de-146">初始化作为文件路径的包装的 <see cref="T:System.IO.FileInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="668de-146">Initializes a new instance of the <see cref="T:System.IO.FileInfo" /> class, which acts as a wrapper for a file path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-147">您可以指定完全限定或相对文件名，但安全检查获取的完全限定的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-147">You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-148">以下示例使用此构造函数创建两个文件，然后写入、 读取、 复制，并删除。</span><span class="sxs-lookup"><span data-stu-id="668de-148">The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.</span></span>  
  
 [!code-cpp[finfo ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Ctor/CPP/finfo ctor.cpp#1)]
 [!code-csharp[finfo ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Ctor/CS/finfo ctor.cs#1)]
 [!code-vb[finfo ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Ctor/VB/finfo ctor.vb#1)]  
  
 <span data-ttu-id="668de-149">下面的示例打开一个现有文件或创建一个文件，将文本追加到文件，并显示结果。</span><span class="sxs-lookup"><span data-stu-id="668de-149">The following example opens an existing file or creates a file, appends text to the file, and displays the results.</span></span>  
  
 [!code-cpp[fileinfomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfomain/CPP/fileinfomain.cpp#1)]
 [!code-csharp[fileinfomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfomain/CS/fileinfomain.cs#1)]
 [!code-vb[fileinfomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfomain/VB/fileinfomain.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-150"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-150"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-151">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-151">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-152">文件名为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="668de-152">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-153">拒绝访问 <paramref name="fileName" />。</span><span class="sxs-lookup"><span data-stu-id="668de-153">Access to <paramref name="fileName" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="668de-154">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="668de-154">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-155"><paramref name="fileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="668de-155"><paramref name="fileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-156">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="668de-156">for reading files.</span></span> <span data-ttu-id="668de-157">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-157">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-158">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-158">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-159">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-159">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-160">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-160">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter AppendText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter AppendText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.AppendText" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ AppendText();" />
      <MemberSignature Language="F#" Value="member this.AppendText : unit -&gt; System.IO.StreamWriter" Usage="fileInfo.AppendText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-161">创建一个 <see cref="T:System.IO.StreamWriter" />，它向 <see cref="T:System.IO.FileInfo" /> 的此实例表示的文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="668de-161">Creates a <see cref="T:System.IO.StreamWriter" /> that appends text to the file represented by this instance of the <see cref="T:System.IO.FileInfo" />.</span></span></summary>
        <returns><span data-ttu-id="668de-162">一个新的 <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="668de-162">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="668de-163">以下示例将文本追加到文件，并从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="668de-163">The following example appends text to a file and reads from the file.</span></span>  
  
 [!code-cpp[finfo appendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo AppendText/CPP/finfo appendtext.cpp#1)]
 [!code-csharp[finfo appendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo AppendText/CS/finfo appendtext.cs#1)]
 [!code-vb[finfo appendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo AppendText/VB/finfo appendtext.vb#1)]  
  
 <span data-ttu-id="668de-164">以下示例演示如何将文本追加到文件末尾，并还追加操作的结果显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="668de-164">The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console.</span></span> <span data-ttu-id="668de-165">第一次调用此例程时，如果不存在，创建文件。</span><span class="sxs-lookup"><span data-stu-id="668de-165">The first time this routine is called, the file is created if it does not exist.</span></span> <span data-ttu-id="668de-166">然后，指定的文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-166">After that, the specified text is appended to the file.</span></span>  
  
 [!code-cpp[fileinfoappendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoappendtext/CPP/fileinfoappendtext.cpp#1)]
 [!code-csharp[fileinfoappendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoappendtext/CS/fileinfoappendtext.cs#1)]
 [!code-vb[fileinfoappendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoappendtext/VB/fileinfoappendtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-167">用于读取和追加到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-167">for reading and appending to files.</span></span> <span data-ttu-id="668de-168">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /></span><span class="sxs-lookup"><span data-stu-id="668de-168">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /></span></span></permission>
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-169">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-169">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-170">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-170">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-171">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-171">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-172">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-172">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="668de-173">将现有文件复制到新文件。</span><span class="sxs-lookup"><span data-stu-id="668de-173">Copies an existing file to a new file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string -&gt; System.IO.FileInfo" Usage="fileInfo.CopyTo destFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="668de-174">要复制到的新文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-174">The name of the new file to copy to.</span></span></param>
        <summary><span data-ttu-id="668de-175">将现有文件复制到新文件，不允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="668de-175">Copies an existing file to a new file, disallowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="668de-176">带有完全限定路径的新文件。</span><span class="sxs-lookup"><span data-stu-id="668de-176">A new file with a fully qualified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-177">使用<xref:System.IO.FileInfo.CopyTo(System.String,System.Boolean)>方法，以允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="668de-177">Use the <xref:System.IO.FileInfo.CopyTo(System.String,System.Boolean)> method to allow overwriting of an existing file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="668de-178">只要有可能，避免使用此方法使用短文件名 （例如 XXXXXX~1.XXX)。</span><span class="sxs-lookup"><span data-stu-id="668de-178">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="668de-179">如果两个文件都有等效项短文件名，则此方法可能失败并引发异常和/或导致意外行为</span><span class="sxs-lookup"><span data-stu-id="668de-179">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-180">下面的示例演示的两个重载`CopyTo`方法。</span><span class="sxs-lookup"><span data-stu-id="668de-180">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="668de-181">下面的示例演示如何将一个文件复制到另一个文件，如果目标文件已存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="668de-181">The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.</span></span>  
  
 [!code-cpp[FileInfoCopyTo1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileInfoCopyTo1/CPP/fileinfocopyto1.cpp#1)]
 [!code-csharp[FileInfoCopyTo1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileInfoCopyTo1/CS/fileinfocopyto1.cs#1)]
 [!code-vb[FileInfoCopyTo1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileInfoCopyTo1/VB/fileinfocopyto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-182"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="668de-182"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-183">出现错误，或目标文件已存在。</span><span class="sxs-lookup"><span data-stu-id="668de-183">An error occurs, or the destination file already exists.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-184">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-184">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-185"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-185"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-186">传入一个目录路径或此文件将被移至其他驱动器。</span><span class="sxs-lookup"><span data-stu-id="668de-186">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-187">在 <paramref name="destFileName" /> 中指定的此目录不存在。</span><span class="sxs-lookup"><span data-stu-id="668de-187">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="668de-188">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="668de-188">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-189"><paramref name="destFileName" /> 在其字符串中包含冒号 (:) ，但并未指定卷。</span><span class="sxs-lookup"><span data-stu-id="668de-189"><paramref name="destFileName" /> contains a colon (:) within the string but does not specify the volume.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-190">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-190">for reading and writing files.</span></span> <span data-ttu-id="668de-191">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-191">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-192">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-192">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-193">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-193">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-194">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-194">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-195">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-195">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String, overwrite As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string * bool -&gt; System.IO.FileInfo" Usage="fileInfo.CopyTo (destFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="668de-196">要复制到的新文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-196">The name of the new file to copy to.</span></span></param>
        <param name="overwrite"><span data-ttu-id="668de-197">如果允许覆盖现有文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-197"><see langword="true" /> to allow an existing file to be overwritten; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="668de-198">将现有文件复制到新文件，允许覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="668de-198">Copies an existing file to a new file, allowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="668de-199">为新文件；如果 <paramref name="overwrite" /> 是 <see langword="true" />，则为现有文件的覆盖。</span><span class="sxs-lookup"><span data-stu-id="668de-199">A new file, or an overwrite of an existing file if <paramref name="overwrite" /> is <see langword="true" />.</span></span> <span data-ttu-id="668de-200">如果文件存在且 <paramref name="overwrite" /> 为 <see langword="false" />，则引发 <see cref="T:System.IO.IOException" />。</span><span class="sxs-lookup"><span data-stu-id="668de-200">If the file exists and <paramref name="overwrite" /> is <see langword="false" />, an <see cref="T:System.IO.IOException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-201">使用此方法以允许或防止覆盖现有文件。</span><span class="sxs-lookup"><span data-stu-id="668de-201">Use this method to allow or prevent overwriting of an existing file.</span></span> <span data-ttu-id="668de-202">使用<xref:System.IO.FileInfo.CopyTo(System.String)>方法，以防止覆盖现有文件的默认情况下。</span><span class="sxs-lookup"><span data-stu-id="668de-202">Use the <xref:System.IO.FileInfo.CopyTo(System.String)> method to prevent overwriting of an existing file by default.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="668de-203">只要有可能，避免使用此方法使用短文件名 （例如 XXXXXX~1.XXX)。</span><span class="sxs-lookup"><span data-stu-id="668de-203">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="668de-204">如果两个文件都有等效项短文件名，则此方法可能失败并引发异常和/或导致意外行为</span><span class="sxs-lookup"><span data-stu-id="668de-204">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-205">下面的示例演示的两个重载`CopyTo`方法。</span><span class="sxs-lookup"><span data-stu-id="668de-205">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="668de-206">下面的示例演示如何将一个文件复制到另一个文件，指定是否覆盖已存在的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-206">The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.</span></span>  
  
 [!code-cpp[fileinfocopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfocopyto/CPP/fileinfocopyto.cpp#1)]
 [!code-csharp[fileinfocopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfocopyto/CS/fileinfocopyto.cs#1)]
 [!code-vb[fileinfocopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfocopyto/VB/fileinfocopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-207"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="668de-207"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-208">出现错误，或目标文件已存在，且 <paramref name="overwrite" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-208">An error occurs, or the destination file already exists and <paramref name="overwrite" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-209">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-209">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-210"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-210"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-211">在 <paramref name="destFileName" /> 中指定的此目录不存在。</span><span class="sxs-lookup"><span data-stu-id="668de-211">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-212">传入一个目录路径或此文件将被移至其他驱动器。</span><span class="sxs-lookup"><span data-stu-id="668de-212">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="668de-213">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="668de-213">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-214"><paramref name="destFileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="668de-214"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-215">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-215">for reading and writing files.</span></span> <span data-ttu-id="668de-216">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-216">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-217">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-217">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-218">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-218">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-219">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-219">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-220">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-220">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; System.IO.FileStream" Usage="fileInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-221">创建文件。</span><span class="sxs-lookup"><span data-stu-id="668de-221">Creates a file.</span></span></summary>
        <returns><span data-ttu-id="668de-222">新文件。</span><span class="sxs-lookup"><span data-stu-id="668de-222">A new file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-223">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="668de-223">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="668de-224">此方法是提供的功能的包装器<xref:System.IO.File.Create%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="668de-224">This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-225">下面的示例创建一个文件，对的引用，然后创建使用磁盘上的文件`FileInfo.Create()`。</span><span class="sxs-lookup"><span data-stu-id="668de-225">The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 <span data-ttu-id="668de-226">以下示例创建一个文件，添加一些文本，并从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="668de-226">The following example creates a file, adds some text to it, and reads from the file.</span></span>  
  
 [!code-cpp[finfo create#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Create/CPP/finfo create.cpp#1)]
 [!code-csharp[finfo create#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Create/CS/finfo create.cs#1)]
 [!code-vb[finfo create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Create/VB/finfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-227">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-227">for reading and writing files.</span></span> <span data-ttu-id="668de-228">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-228">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-229">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-229">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-230">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-230">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-231">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-231">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-232">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-232">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter CreateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter CreateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CreateText" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ CreateText();" />
      <MemberSignature Language="F#" Value="member this.CreateText : unit -&gt; System.IO.StreamWriter" Usage="fileInfo.CreateText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-233">创建写入新文本文件的 <see cref="T:System.IO.StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="668de-233">Creates a <see cref="T:System.IO.StreamWriter" /> that writes a new text file.</span></span></summary>
        <returns><span data-ttu-id="668de-234">一个新的 <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="668de-234">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-235">默认情况下，对新文件的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="668de-235">By default, full read/write access to new files is granted to all users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-236">下面的示例演示`CreateText`方法。</span><span class="sxs-lookup"><span data-stu-id="668de-236">The following example demonstrates the `CreateText` method.</span></span>  
  
 [!code-cpp[finfo createtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CreateText/CPP/finfo createtext.cpp#1)]
 [!code-csharp[finfo createtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CreateText/CS/finfo createtext.cs#1)]
 [!code-vb[finfo createtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CreateText/VB/finfo createtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-237">文件名是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-237">The file name is a directory.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-238">此盘为只读。</span><span class="sxs-lookup"><span data-stu-id="668de-238">The disk is read-only.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-239">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-239">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-240">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-240">for reading and writing files.</span></span> <span data-ttu-id="668de-241">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-241">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-242">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-242">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-243">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-243">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-244">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-244">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-245">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-245">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Decrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt();" />
      <MemberSignature Language="F#" Value="member this.Decrypt : unit -&gt; unit" Usage="fileInfo.Decrypt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-246">使用 <see cref="M:System.IO.FileInfo.Encrypt" /> 方法解密由当前帐户加密的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-246">Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.FileInfo.Encrypt" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-247"><xref:System.IO.FileInfo.Decrypt%2A>方法，可解密使用加密文件<xref:System.IO.FileInfo.Encrypt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="668de-247">The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  <span data-ttu-id="668de-248"><xref:System.IO.FileInfo.Decrypt%2A>方法可以解密使用当前用户帐户已加密的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-248">The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.</span></span>  
  
 <span data-ttu-id="668de-249">这两个<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="668de-249">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="668de-250">当前文件系统必须格式化为 NTFS 和当前操作系统必须是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-250">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-251">下面的代码示例使用<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法来加密和解密文件。</span><span class="sxs-lookup"><span data-stu-id="668de-251">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt and then decrypt a file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="668de-252">指定了无效的驱动器。</span><span class="sxs-lookup"><span data-stu-id="668de-252">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-253">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-253">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-254">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="668de-254">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-255">文件系统不是 NTFS。</span><span class="sxs-lookup"><span data-stu-id="668de-255">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-256">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-256">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-257">当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件为只读文件。</span><span class="sxs-lookup"><span data-stu-id="668de-257">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
<span data-ttu-id="668de-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-258">-or-</span></span> 
<span data-ttu-id="668de-259">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="668de-259">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="668de-260">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-260">-or-</span></span> 
<span data-ttu-id="668de-261">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-261">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-262">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-262">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
<span data-ttu-id="668de-263">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-263">Security action: Demand.</span></span>  
  
<span data-ttu-id="668de-264">用于读取和写入到当前所描述的文件的权限<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="668de-264">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="fileInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-265">永久删除文件。</span><span class="sxs-lookup"><span data-stu-id="668de-265">Permanently deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-266">如果该文件不存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="668de-266">If the file does not exist, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-267">下面的示例演示`Delete`方法。</span><span class="sxs-lookup"><span data-stu-id="668de-267">The following example demonstrates the `Delete` method.</span></span>  
  
 [!code-cpp[finfo delete#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Delete/CPP/finfo delete.cpp#1)]
 [!code-csharp[finfo delete#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Delete/CS/finfo delete.cs#1)]
 [!code-vb[finfo delete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Delete/VB/finfo delete.vb#1)]  
  
 <span data-ttu-id="668de-268">以下示例创建，将关闭，并删除的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-268">The following example creates, closes, and deletes a file.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-269">目标文件打开或在运行 Microsoft Windows NT 的计算机上进行内存映射。</span><span class="sxs-lookup"><span data-stu-id="668de-269">The target file is open or memory-mapped on a computer running Microsoft Windows NT.</span></span>  
  
<span data-ttu-id="668de-270">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-270">-or-</span></span> 
<span data-ttu-id="668de-271">在文件中存在开放句柄，并且操作系统是 Windows XP 或更早的版本。</span><span class="sxs-lookup"><span data-stu-id="668de-271">There is an open handle on the file, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="668de-272">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="668de-272">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="668de-273">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="668de-273">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-274">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-274">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-275">路径是一个目录。</span><span class="sxs-lookup"><span data-stu-id="668de-275">The path is a directory.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-276">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-276">for reading and writing files.</span></span> <span data-ttu-id="668de-277">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-277">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-278">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-278">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-279">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-279">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-280">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-280">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Directory" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Directory { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : System.IO.DirectoryInfo" Usage="System.IO.FileInfo.Directory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-281">获取父目录的实例。</span><span class="sxs-lookup"><span data-stu-id="668de-281">Gets an instance of the parent directory.</span></span></summary>
        <value><span data-ttu-id="668de-282">表示此文件父目录的 <see cref="T:System.IO.DirectoryInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-282">A <see cref="T:System.IO.DirectoryInfo" /> object representing the parent directory of this file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-283">若要获取字符串形式的父目录，请使用<xref:System.IO.FileInfo.DirectoryName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="668de-283">To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-284">下面的示例将打开或创建一个文件，确定其完整路径，确定并显示目录的完整内容。</span><span class="sxs-lookup"><span data-stu-id="668de-284">The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.</span></span>  
  
 [!code-cpp[fileinfodirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodirectory/CPP/fileinfodirectory.cpp#1)]
 [!code-csharp[fileinfodirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodirectory/CS/fileinfodirectory.cs#1)]
 [!code-vb[fileinfodirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodirectory/VB/fileinfodirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-285">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-285">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-286">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-286">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-287">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="668de-287">for reading files.</span></span> <span data-ttu-id="668de-288">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-288">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-289">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-289">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-290">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-290">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-291">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-291">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.IO.FileInfo.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-292">获取表示目录的完整路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="668de-292">Gets a string representing the directory's full path.</span></span></summary>
        <value><span data-ttu-id="668de-293">表示目录的完整路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="668de-293">A string representing the directory's full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-294">若要获取与父目录<xref:System.IO.DirectoryInfo>对象，请使用<xref:System.IO.FileInfo.Directory%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="668de-294">To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.</span></span>  
  
 <span data-ttu-id="668de-295">当首次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>并缓存文件的相关信息。</span><span class="sxs-lookup"><span data-stu-id="668de-295">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="668de-296">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="668de-296">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-297">下面的示例检索指定的文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="668de-297">The following example retrieves the full path of the specified file.</span></span>  
  
 [!code-cpp[System.IO.FileInfo members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileInfo members/CPP/fileinfomembers.cpp#3)]
 [!code-csharp[System.IO.FileInfo members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileInfo members/CS/fileinfomembers.cs#3)]
 [!code-vb[System.IO.FileInfo members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileInfo members/VB/fileinfomembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-298">为目录名传入 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-298"><see langword="null" /> was passed in for the directory name.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="668de-299">完全限定路径名称的长度超出系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="668de-299">The fully qualified path name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-300">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-300">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-301">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="668de-301">for reading files.</span></span> <span data-ttu-id="668de-302">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="668de-302">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-303">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-303">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-304">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-304">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-305">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-305">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Encrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Encrypt();" />
      <MemberSignature Language="F#" Value="member this.Encrypt : unit -&gt; unit" Usage="fileInfo.Encrypt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-306">将某个文件加密，使得只有加密该文件的帐户才能将其解密。</span><span class="sxs-lookup"><span data-stu-id="668de-306">Encrypts a file so that only the account used to encrypt the file can decrypt it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-307"><xref:System.IO.FileInfo.Encrypt%2A>方法，可加密一个文件，以便仅用来调用此方法的帐户能够对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="668de-307">The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.</span></span>  <span data-ttu-id="668de-308">使用<xref:System.IO.FileInfo.Decrypt%2A>方法以解密的加密的文件<xref:System.IO.FileInfo.Encrypt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="668de-308">Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  
  
 <span data-ttu-id="668de-309">这两个<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法使用安装在计算机和调用方法的过程的文件加密密钥的加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="668de-309">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="668de-310">当前文件系统必须格式化为 NTFS 和当前操作系统必须是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-310">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-311">下面的代码示例使用<xref:System.IO.FileInfo.Encrypt%2A>方法和<xref:System.IO.FileInfo.Decrypt%2A>方法加密文件，然后将其解密。</span><span class="sxs-lookup"><span data-stu-id="668de-311">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="668de-312">指定了无效的驱动器。</span><span class="sxs-lookup"><span data-stu-id="668de-312">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-313">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-313">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-314">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="668de-314">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-315">文件系统不是 NTFS。</span><span class="sxs-lookup"><span data-stu-id="668de-315">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-316">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-316">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-317">当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件为只读文件。</span><span class="sxs-lookup"><span data-stu-id="668de-317">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
<span data-ttu-id="668de-318">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-318">-or-</span></span> 
<span data-ttu-id="668de-319">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="668de-319">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="668de-320">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-320">-or-</span></span> 
<span data-ttu-id="668de-321">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-321">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-322">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-322">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
<span data-ttu-id="668de-323">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-323">Security action: Demand.</span></span>  
  
<span data-ttu-id="668de-324">用于读取和写入到当前所描述的文件的权限<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="668de-324">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.FileInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-325">获取指示文件是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="668de-325">Gets a value indicating whether a file exists.</span></span></summary>
        <value><span data-ttu-id="668de-326">如果该文件存在，则为 <see langword="true" />；如果文件不存在或文件即是目录，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-326"><see langword="true" /> if the file exists; <see langword="false" /> if the file does not exist or if the file is a directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-327">当首次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>并缓存文件的相关信息。</span><span class="sxs-lookup"><span data-stu-id="668de-327">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="668de-328">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="668de-328">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="668de-329"><xref:System.IO.FileInfo.Exists%2A>属性返回`false`如果尝试确定是否存在指定的文件时出现任何错误。</span><span class="sxs-lookup"><span data-stu-id="668de-329">The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="668de-330">这可以在引发异常，例如传递文件名包含无效的字符或字符太多，失败或丢失的磁盘的情况下会发生或如果调用方不具有读取该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-330">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-331">下面的代码示例使用<xref:System.IO.FileInfo.Exists%2A>属性确保打开它之前存在的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-331">The following code example uses the <xref:System.IO.FileInfo.Exists%2A> property ensure a file exists before opening it.</span></span>  <span data-ttu-id="668de-332">此方法可用于引发自定义异常时找不到该文件。</span><span class="sxs-lookup"><span data-stu-id="668de-332">You can use this technique to throw a custom exception when the file is not found.</span></span>  
  
 [!code-cpp[IO.FileInfo.Exists#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Exists/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Exists/cs/sample.cs#1)]
 [!code-vb[IO.FileInfo.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Exists/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-333">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-333">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-334">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-334">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-335">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-335">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="668de-336">获取 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-336">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-337">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索访问控制列表 (ACL) 项当前文件。</span><span class="sxs-lookup"><span data-stu-id="668de-337">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.FileSecurity" Usage="fileInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-338">获取 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-338">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="668de-339">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="668de-339">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-340">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-340">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="668de-341">ACL 描述个人和/或组具有或没有执行到对给定文件的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-341">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="668de-342">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="668de-342">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-343">下面的代码示例使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法和<xref:System.IO.FileInfo.SetAccessControl%2A>方法来添加，然后从文件删除访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-343">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.</span></span>  <span data-ttu-id="668de-344">你必须提供有效的用户或组帐户以运行此示例。</span><span class="sxs-lookup"><span data-stu-id="668de-344">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-345">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="668de-345">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-346">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-346">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="668de-347">当前的系统帐户没有管理权限。</span><span class="sxs-lookup"><span data-stu-id="668de-347">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="668de-348">找不到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-348">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-349">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="668de-349">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="668de-350">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-350">-or-</span></span> 
<span data-ttu-id="668de-351">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-351">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-352">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="668de-352">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span>  
  
<span data-ttu-id="668de-353">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-353">Security action: Demand.</span></span>  
  
<span data-ttu-id="668de-354">若要读取的访问控制列表的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-354">For permission to read the access control list.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="fileInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="668de-355"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，该值指定要检索的访问控制项组。</span><span class="sxs-lookup"><span data-stu-id="668de-355">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies which group of access control entries to retrieve.</span></span></param>
        <summary><span data-ttu-id="668de-356">获取一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-356">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="668de-357">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象封装当前文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="668de-357">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-358">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-358">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="668de-359">ACL 描述个人和/或组具有或没有执行到对给定文件的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-359">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="668de-360">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="668de-360">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-361">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="668de-361">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-362">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-362">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="668de-363">当前的系统帐户没有管理权限。</span><span class="sxs-lookup"><span data-stu-id="668de-363">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="668de-364">找不到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-364">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-365">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="668de-365">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="668de-366">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-366">-or-</span></span> 
<span data-ttu-id="668de-367">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-367">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-368">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="668de-368">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span>  
  
<span data-ttu-id="668de-369">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-369">Security action: Demand.</span></span>  
  
<span data-ttu-id="668de-370">若要读取的访问控制列表的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-370">For permission to read the access control list.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.IO.FileInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-371">获取或设置确定当前文件是否为只读的值。</span><span class="sxs-lookup"><span data-stu-id="668de-371">Gets or sets a value that determines if the current file is read only.</span></span></summary>
        <value><span data-ttu-id="668de-372">如果当前文件为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-372"><see langword="true" /> if the current file is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-373">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性来快速确定或更改是否当前文件为只读。</span><span class="sxs-lookup"><span data-stu-id="668de-373">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.</span></span>  
  
 <span data-ttu-id="668de-374">当首次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>并缓存文件的相关信息。</span><span class="sxs-lookup"><span data-stu-id="668de-374">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="668de-375">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="668de-375">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-376">下面的示例使用<xref:System.IO.FileInfo.IsReadOnly%2A>要将文件标记为只读，然后将其标记为可读写属性。</span><span class="sxs-lookup"><span data-stu-id="668de-376">The following example uses the <xref:System.IO.FileInfo.IsReadOnly%2A> property to mark a file as read only and then mark it as read-write.</span></span>  
  
 [!code-cpp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.isReadOnly/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-377">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-377">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-378">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="668de-378">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-379">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="668de-379">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="668de-380">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-380">-or-</span></span> 
<span data-ttu-id="668de-381">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-381">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-382">此用户没有写入权限，但尝试将此属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-382">The user does not have write permission, but attempted to set this property to <see langword="false" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-383">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-383">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.AccessControl.FileSystemRights.Write" /></span></span>  
  
<span data-ttu-id="668de-384">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-384">Security action: Demand.</span></span>  
  
<span data-ttu-id="668de-385">用于读取和写入到当前所描述的文件的权限<see cref="T:System.IO.FileInfo" />对象。</span><span class="sxs-lookup"><span data-stu-id="668de-385">For permission to read and write to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.FileInfo.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-386">获取当前文件的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="668de-386">Gets the size, in bytes, of the current file.</span></span></summary>
        <value><span data-ttu-id="668de-387">当前文件的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="668de-387">The size of the current file in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-388">值<xref:System.IO.FileInfo.Length%2A>属性会预先缓存，如果当前实例<xref:System.IO.FileInfo>对象返回从以下任一<xref:System.IO.DirectoryInfo>方法：</span><span class="sxs-lookup"><span data-stu-id="668de-388">The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>  
  
 <span data-ttu-id="668de-389">若要获取最新值，请调用<xref:System.IO.FileSystemInfo.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="668de-389">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-390">以下示例显示的指定文件的大小。</span><span class="sxs-lookup"><span data-stu-id="668de-390">The following example displays the size of the specified files.</span></span>  
  
 [!code-cpp[FileLength#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileLength/CPP/filelength.cpp#1)]
 [!code-csharp[FileLength#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileLength/CS/filelength.cs#1)]
 [!code-vb[FileLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileLength/VB/filelength.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-391"><see cref="M:System.IO.FileSystemInfo.Refresh" /> 无法更新文件或目录的状态。</span><span class="sxs-lookup"><span data-stu-id="668de-391"><see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot update the state of the file or directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-392">文件不存在。</span><span class="sxs-lookup"><span data-stu-id="668de-392">The file does not exist.</span></span>  
  
<span data-ttu-id="668de-393">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-393">-or-</span></span> 
<span data-ttu-id="668de-394">针对某个目录调用了 <see langword="Length" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="668de-394">The <see langword="Length" /> property is called for a directory.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-395">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-395">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-396">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-396">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-397">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-397">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destFileName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="fileInfo.MoveTo destFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="668de-398">要将文件移动到的路径，可以指定另一个文件名。</span><span class="sxs-lookup"><span data-stu-id="668de-398">The path to move the file to, which can specify a different file name.</span></span></param>
        <summary><span data-ttu-id="668de-399">将指定文件移到新位置，提供要指定新文件名的选项。</span><span class="sxs-lookup"><span data-stu-id="668de-399">Moves a specified file to a new location, providing the option to specify a new file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-400">此方法适用于整个磁盘卷。</span><span class="sxs-lookup"><span data-stu-id="668de-400">This method works across disk volumes.</span></span> <span data-ttu-id="668de-401">例如，文件 c:\MyFile.txt 可以移动到 d:\public，重命名 NewFile.txt。</span><span class="sxs-lookup"><span data-stu-id="668de-401">For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-402">下面的示例演示如何将文件移到另一个位置和重命名该文件。</span><span class="sxs-lookup"><span data-stu-id="668de-402">The following example demonstrates moving a file to a different location and renaming the file.</span></span>  
  
 [!code-csharp[IO.FileInfo.MoveTo#1](~/samples/snippets/csharp/VS_Snippets_Misc/IO.FileInfo.MoveTo/CS/Program.cs#1)]
 [!code-vb[IO.FileInfo.MoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/IO.FileInfo.MoveTo/VB/Program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-403">发生 I/O 错误，例如目标文件已存在或目标设备未就绪。</span><span class="sxs-lookup"><span data-stu-id="668de-403">An I/O error occurs, such as the destination file already exists or the destination device is not ready.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-404"><paramref name="destFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-404"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-405"><paramref name="destFileName" /> 为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="668de-405"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-406">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-406">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-407"><paramref name="destFileName" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-407"><paramref name="destFileName" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-408">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="668de-408">The file is not found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-409">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-409">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="668de-410">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="668de-410">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="668de-411"><paramref name="destFileName" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="668de-411"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-412">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-412">for reading and writing files.</span></span> <span data-ttu-id="668de-413">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-413">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-414">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-414">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-415">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-415">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-416">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-416">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.FileInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="668de-417">获取文件名。</span><span class="sxs-lookup"><span data-stu-id="668de-417">Gets the name of the file.</span></span></summary>
        <value><span data-ttu-id="668de-418">文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-418">The name of the file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-419">当首次调用，<xref:System.IO.FileInfo>调用<xref:System.IO.FileSystemInfo.Refresh%2A>并缓存文件的相关信息。</span><span class="sxs-lookup"><span data-stu-id="668de-419">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="668de-420">在后续调用中，必须调用<xref:System.IO.FileSystemInfo.Refresh%2A>以获取信息的最新副本。</span><span class="sxs-lookup"><span data-stu-id="668de-420">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="668de-421">文件的名称中包含的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="668de-421">The name of the file includes the file extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-422">下面的示例使用`Name`属性来显示当前目录中的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-422">The following example uses the `Name` property to display the names of files in the current directory.</span></span>  
  
 [!code-cpp[fileinfoname#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoname/CPP/fileinfoname.cpp#1)]
 [!code-csharp[fileinfoname#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoname/CS/fileinfoname.cs#1)]
 [!code-vb[fileinfoname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoname/VB/fileinfoname.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-423">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-423">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-424">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-424">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-425">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-425">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="668de-426">用各种读/写访问权限和共享特权打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-426">Opens a file with various read/write and sharing privileges.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode -&gt; System.IO.FileStream" Usage="fileInfo.Open mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="668de-427">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="668de-427">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <summary><span data-ttu-id="668de-428">在指定的模式中打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-428">Opens a file in the specified mode.</span></span></summary>
        <returns><span data-ttu-id="668de-429">在指定模式中打开、具有读/写访问权限且不共享的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-429">A file opened in the specified mode, with read/write access and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="668de-430">下面的示例打开文件，将某些信息添加到该文件，并读取该文件。</span><span class="sxs-lookup"><span data-stu-id="668de-430">The following example opens a file, adds some information to the file, and reads the file.</span></span>  
  
 [!code-cpp[finfo open1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open1/CPP/finfo open1.cpp#1)]
 [!code-csharp[finfo open1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open1/CS/finfo open1.cs#1)]
 [!code-vb[finfo open1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open1/VB/finfo open1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-431">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="668de-431">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-432">文件为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-432">The file is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-433">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-433">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-434">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="668de-434">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-435">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="668de-435">for writing to and reading from files.</span></span> <span data-ttu-id="668de-436">关联枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-436">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-437">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-437">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-438">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-438">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-439">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-439">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.FileStream" Usage="fileInfo.Open (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="668de-440">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="668de-440">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="668de-441">一个 <see cref="T:System.IO.FileAccess" /> 常数，它指定是使用 <see langword="Read" />、<see langword="Write" /> 还是 <see langword="ReadWrite" /> 文件访问来打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-441">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <summary><span data-ttu-id="668de-442">用读、写或读/写访问权限在指定模式下打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-442">Opens a file in the specified mode with read, write, or read/write access.</span></span></summary>
        <returns><span data-ttu-id="668de-443">用指定模式和访问权限打开的且不共享的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-443">A <see cref="T:System.IO.FileStream" /> object opened in the specified mode and access, and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="668de-444">下面的示例打开为只读文件，并从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="668de-444">The following example opens a file as read-only and reads from the file.</span></span>  
  
 [!code-cpp[finfo open2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open2/CPP/finfo open2.cpp#1)]
 [!code-csharp[finfo open2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open2/CS/finfo open2.cs#1)]
 [!code-vb[finfo open2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open2/VB/finfo open2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-445">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-445">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-446">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="668de-446">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-447"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-447"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-448">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-448">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-449">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="668de-449">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-450">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="668de-450">for writing to and reading from files.</span></span> <span data-ttu-id="668de-451">关联枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-451">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-452">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-452">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-453">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-453">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-454">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-454">How to: Write Text to a File</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-455"><paramref name="path" /> 为空，或者只包含空白。</span><span class="sxs-lookup"><span data-stu-id="668de-455"><paramref name="path" /> is empty or contains only white spaces.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-456">一个或多个参数为 NULL。</span><span class="sxs-lookup"><span data-stu-id="668de-456">One or more arguments is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess, share As FileShare) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.FileStream" Usage="fileInfo.Open (mode, access, share)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="668de-457">一个 <see cref="T:System.IO.FileMode" /> 常数，它指定打开文件所采用的模式（例如 <see langword="Open" /> 或 <see langword="Append" />）。</span><span class="sxs-lookup"><span data-stu-id="668de-457">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="668de-458">一个 <see cref="T:System.IO.FileAccess" /> 常数，它指定是使用 <see langword="Read" />、<see langword="Write" /> 还是 <see langword="ReadWrite" /> 文件访问来打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-458">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <param name="share"><span data-ttu-id="668de-459">一个 <see cref="T:System.IO.FileShare" /> 常数，它指定其他 <see langword="FileStream" /> 对象对此文件拥有的访问类型。</span><span class="sxs-lookup"><span data-stu-id="668de-459">A <see cref="T:System.IO.FileShare" /> constant specifying the type of access other <see langword="FileStream" /> objects have to this file.</span></span></param>
        <summary><span data-ttu-id="668de-460">用读、写或读/写访问权限和指定的共享选项在指定的模式中打开文件。</span><span class="sxs-lookup"><span data-stu-id="668de-460">Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</span></span></summary>
        <returns><span data-ttu-id="668de-461">用指定的模式、访问权限和共享选项打开的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-461">A <see cref="T:System.IO.FileStream" /> object opened with the specified mode, access, and sharing options.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="668de-462">下面的示例演示了如何打开用于读取和写入操作，但不允许向其他用户或进程的访问的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-462">The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.</span></span>  
  
 [!code-cpp[fileinfoopen#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoopen/CPP/fileinfoopen.cpp#1)]
 [!code-csharp[fileinfoopen#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoopen/CS/fileinfoopen.cs#1)]
 [!code-vb[fileinfoopen#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoopen/VB/fileinfoopen.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-463">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-463">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-464">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="668de-464">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-465"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-465"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-466">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-466">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-467">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="668de-467">The file is already open.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-468"><paramref name="path" /> 为空，或者只包含空白。</span><span class="sxs-lookup"><span data-stu-id="668de-468"><paramref name="path" /> is empty or contains only white spaces.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-469">一个或多个参数为 NULL。</span><span class="sxs-lookup"><span data-stu-id="668de-469">One or more arguments is null.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-470">用于写入和从文件读取。</span><span class="sxs-lookup"><span data-stu-id="668de-470">for writing to and reading from files.</span></span> <span data-ttu-id="668de-471">关联枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-471">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-472">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-472">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-473">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-473">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-474">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-474">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenRead" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenRead();" />
      <MemberSignature Language="F#" Value="member this.OpenRead : unit -&gt; System.IO.FileStream" Usage="fileInfo.OpenRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-475">创建一个只读的 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="668de-475">Creates a read-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="668de-476">一个新的只读的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-476">A new read-only <see cref="T:System.IO.FileStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-477">此方法返回一个只读<xref:System.IO.FileStream>对象使用<xref:System.IO.FileShare>模式设置为<xref:System.IO.FileShare.Read>。</span><span class="sxs-lookup"><span data-stu-id="668de-477">This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-478">下面的示例以只读方式打开一个文件，并从其读取。</span><span class="sxs-lookup"><span data-stu-id="668de-478">The following example opens a file as read-only and reads from it.</span></span>  
  
 [!code-cpp[finfo openread#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenRead/CPP/finfo openread.cpp#1)]
 [!code-csharp[finfo openread#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenRead/CS/finfo openread.cs#1)]
 [!code-vb[finfo openread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenRead/VB/finfo openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-479"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-479"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-480">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-480">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="668de-481">此文件已打开。</span><span class="sxs-lookup"><span data-stu-id="668de-481">The file is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-482">用于读取文件。</span><span class="sxs-lookup"><span data-stu-id="668de-482">for reading files.</span></span> <span data-ttu-id="668de-483">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="668de-483">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-484">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-484">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-485">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-485">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-486">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-486">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-487">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-487">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader OpenText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamReader OpenText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenText" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenText () As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamReader ^ OpenText();" />
      <MemberSignature Language="F#" Value="member this.OpenText : unit -&gt; System.IO.StreamReader" Usage="fileInfo.OpenText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-488">创建使用从现有文本文件中读取的 UTF8 编码的 <see cref="T:System.IO.StreamReader" />。</span><span class="sxs-lookup"><span data-stu-id="668de-488">Creates a <see cref="T:System.IO.StreamReader" /> with UTF8 encoding that reads from an existing text file.</span></span></summary>
        <returns><span data-ttu-id="668de-489">使用 UTF8 编码的新的 <see langword="StreamReader" />。</span><span class="sxs-lookup"><span data-stu-id="668de-489">A new <see langword="StreamReader" /> with UTF8 encoding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="668de-490">下面的示例读取文件中的文本。</span><span class="sxs-lookup"><span data-stu-id="668de-490">The following example reads text from a file.</span></span>  
  
 [!code-cpp[finfo opentext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenText/CPP/file opentext.cpp#1)]
 [!code-csharp[finfo opentext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenText/CS/file opentext.cs#1)]
 [!code-vb[finfo opentext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenText/VB/file opentext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="668de-491">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-491">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-492">未找到此文件。</span><span class="sxs-lookup"><span data-stu-id="668de-492">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-493"><paramref name="path" /> 为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-493"><paramref name="path" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-494">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="668de-494">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-495">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-495">for reading and writing files.</span></span> <span data-ttu-id="668de-496">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-496">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-497">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-497">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-498">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-498">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-499">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-499">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="668de-500">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="668de-500">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenWrite" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenWrite();" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : unit -&gt; System.IO.FileStream" Usage="fileInfo.OpenWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-501">创建一个只写的 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="668de-501">Creates a write-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="668de-502">新的或现有文件的只写非共享的 <see cref="T:System.IO.FileStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="668de-502">A write-only unshared <see cref="T:System.IO.FileStream" /> object for a new or existing file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-503"><xref:System.IO.FileInfo.OpenWrite%2A>方法打开一个文件，如果其中一个已存在的文件路径，或创建一个新文件，如果不存在。</span><span class="sxs-lookup"><span data-stu-id="668de-503">The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist.</span></span> <span data-ttu-id="668de-504">对于现有的文件，它不会不新将文本追加到现有的文本。</span><span class="sxs-lookup"><span data-stu-id="668de-504">For an existing file, it does not append the new text to the existing text.</span></span> <span data-ttu-id="668de-505">相反，它会用新的字符覆盖现有字符。</span><span class="sxs-lookup"><span data-stu-id="668de-505">Instead, it overwrites the existing characters with the new characters.</span></span> <span data-ttu-id="668de-506">如果使用较短的字符串 （如"第二个运行"） （例如，"这是 OpenWrite 方法的测试）"覆盖更长的字符串，则文件将包含多种字符串 ("第二个 runtest OpenWrite 方法的")。</span><span class="sxs-lookup"><span data-stu-id="668de-506">If you overwrite a longer string (such as "This is a test of the OpenWrite method") with a shorter string (like "Second run"), the file will contain a mix of the strings ("Second runtest of the OpenWrite method").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-507">下面的示例打开文件进行写入，然后从文件中读取。</span><span class="sxs-lookup"><span data-stu-id="668de-507">The following example opens a file for writing and then reads from the file.</span></span>  
  
 [!code-cpp[finfo openwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenWrite/CPP/file openwrite.cpp#1)]
 [!code-csharp[finfo openwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenWrite/CS/file openwrite.cs#1)]
 [!code-vb[finfo openwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenWrite/VB/file openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-508">创建 <see cref="T:System.IO.FileInfo" /> 对象的实例时指定的路径为只读或是目录。</span><span class="sxs-lookup"><span data-stu-id="668de-508">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="668de-509">创建 <see cref="T:System.IO.FileInfo" /> 对象的实例时指定的路径无效，例如此路径位于未映射的驱动器。</span><span class="sxs-lookup"><span data-stu-id="668de-509">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-510">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="668de-510">for reading and writing files.</span></span> <span data-ttu-id="668de-511">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-511">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="668de-512">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-512">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-513">使用<xref:System.IO.FileInfo.Replace%2A>方法时您需要快速将该文件替换当前所描述的文件的内容<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="668de-513">Use the <xref:System.IO.FileInfo.Replace%2A> methods when you need to quickly replace a file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; System.IO.FileInfo" Usage="fileInfo.Replace (destinationFileName, destinationBackupFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="destinationBackupFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="668de-514">要替换为当前文件的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-514">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="668de-515">文件的名称，该文件用于创建 <paramref name="destFileName" /> 参数所描述的文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-515">The name of a file with which to create a backup of the file described by the <paramref name="destFileName" /> parameter.</span></span></param>
        <summary><span data-ttu-id="668de-516">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-516">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <returns><span data-ttu-id="668de-517">一个 <see cref="T:System.IO.FileInfo" /> 对象，该对象封装有关 <paramref name="destFileName" /> 参数所描述的文件的信息。</span><span class="sxs-lookup"><span data-stu-id="668de-517">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-518"><xref:System.IO.FileInfo.Replace%2A>方法会指定文件的内容替换为当前所描述的文件的内容<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="668de-518">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="668de-519">它还创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-519">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="668de-520">最后，它将返回一个新<xref:System.IO.FileInfo>对象，描述被覆盖的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-520">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="668de-521">如果此方法会在 Windows 2000 环境中成功`destFileName`是只读的并且不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="668de-521">This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception.</span></span> <span data-ttu-id="668de-522">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性来检查目标文件然后再尝试将其替换为中是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="668de-522">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.</span></span>  
  
 <span data-ttu-id="668de-523">传递`null`到`destBackupFileName`参数，如果您不想要创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-523">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-524">下面的示例使用<xref:System.IO.File.Replace%2A>方法文件替换为另一个文件并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-524">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-525"><paramref name="destFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="668de-525">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
<span data-ttu-id="668de-526">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-526">-or-</span></span> 
<span data-ttu-id="668de-527"><paramref name="destBackupFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="668de-527">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-528"><paramref name="destFileName" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-528">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-529">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-529">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
<span data-ttu-id="668de-530">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-530">-or-</span></span> 
<span data-ttu-id="668de-531">找不到 <paramref name="destinationFileName" /> 参数描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-531">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-532">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-532">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-533">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-533">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span>  
  
<span data-ttu-id="668de-534">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-534">Security Action: Demand.</span></span>  
  
<span data-ttu-id="668de-535">用于写入的权限所描述的文件<paramref name="destBackupFileName" />如果指定的参数。</span><span class="sxs-lookup"><span data-stu-id="668de-535">For permission to write to file described by the <paramref name="destBackupFileName" /> parameter if one is specified.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String, ignoreMetadataErrors As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * bool -&gt; System.IO.FileInfo" Usage="fileInfo.Replace (destinationFileName, destinationBackupFileName, ignoreMetadataErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="destinationBackupFileName" Type="System.String" />
        <Parameter Name="ignoreMetadataErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="668de-536">要替换为当前文件的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="668de-536">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="668de-537">文件的名称，该文件用于创建 <paramref name="destFileName" /> 参数所描述的文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-537">The name of a file with which to create a backup of the file described by the <paramref name="destFileName" /> parameter.</span></span></param>
        <param name="ignoreMetadataErrors"><span data-ttu-id="668de-538">若要忽略从被替换文件到替换文件的合并错误（例如特性和 ACL），请设置为 <see langword="true" />；否则设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="668de-538"><see langword="true" /> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="668de-539">使用当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件替换指定文件的内容，这一过程将删除原始文件，并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-539">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span>  <span data-ttu-id="668de-540">还指定是否忽略合并错误。</span><span class="sxs-lookup"><span data-stu-id="668de-540">Also specifies whether to ignore merge errors.</span></span></summary>
        <returns><span data-ttu-id="668de-541">一个 <see cref="T:System.IO.FileInfo" /> 对象，该对象封装有关 <paramref name="destFileName" /> 参数所描述的文件的信息。</span><span class="sxs-lookup"><span data-stu-id="668de-541">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-542"><xref:System.IO.FileInfo.Replace%2A>方法会指定文件的内容替换为当前所描述的文件的内容<xref:System.IO.FileInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="668de-542">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="668de-543">它还创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-543">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="668de-544">最后，它将返回一个新<xref:System.IO.FileInfo>对象，描述被覆盖的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-544">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="668de-545">如果此方法会在 Windows 2000 环境中成功`destFileName`是只读的并且不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="668de-545">This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception.</span></span> <span data-ttu-id="668de-546">使用<xref:System.IO.FileInfo.IsReadOnly%2A>属性来检查目标文件然后再尝试将其替换为中是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="668de-546">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.</span></span>  
  
 <span data-ttu-id="668de-547">传递`null`到`destBackupFileName`参数，如果您不想要创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-547">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-548">下面的示例使用<xref:System.IO.File.Replace%2A>方法文件替换为另一个文件并创建被替换文件的备份。</span><span class="sxs-lookup"><span data-stu-id="668de-548">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="668de-549"><paramref name="destFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="668de-549">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
<span data-ttu-id="668de-550">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-550">-or-</span></span> 
<span data-ttu-id="668de-551"><paramref name="destBackupFileName" /> 参数描述的路径格式不合法。</span><span class="sxs-lookup"><span data-stu-id="668de-551">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-552"><paramref name="destFileName" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-552">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="668de-553">找不到当前 <see cref="T:System.IO.FileInfo" /> 对象描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-553">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
<span data-ttu-id="668de-554">- 或 -</span><span class="sxs-lookup"><span data-stu-id="668de-554">-or-</span></span> 
<span data-ttu-id="668de-555">找不到 <paramref name="destinationFileName" /> 参数描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-555">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-556">当前操作系统不是 Microsoft Windows NT 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-556">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-557">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="668de-557">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span>  
  
<span data-ttu-id="668de-558">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="668de-558">Security Action: Demand.</span></span>  
  
<span data-ttu-id="668de-559">用于写入的权限所描述的文件<paramref name="destBackupFileName" />如果指定的参数。</span><span class="sxs-lookup"><span data-stu-id="668de-559">For permission to write to file described by the <paramref name="destBackupFileName" /> parameter if one is specified.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.FileSecurity -&gt; unit" Usage="fileInfo.SetAccessControl fileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileSecurity"><span data-ttu-id="668de-560">一个 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象，该对象描述要应用于当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-560">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that describes an access control list (ACL) entry to apply to the current file.</span></span></param>
        <summary><span data-ttu-id="668de-561">将 <see cref="T:System.Security.AccessControl.FileSecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.FileInfo" /> 对象所描述的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-561">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity" /> object to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-562"><xref:System.IO.FileInfo.SetAccessControl%2A>方法适用于表示非继承的 ACL 列表的当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="668de-562">The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.</span></span>  
  
 <span data-ttu-id="668de-563">使用<xref:System.IO.FileInfo.SetAccessControl%2A>方法，无论何时需要添加或移除对文件的 ACL 条目。</span><span class="sxs-lookup"><span data-stu-id="668de-563">Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="668de-564">为 ACL 指定`fileSecurity`参数将替换现有文件 ACL。</span><span class="sxs-lookup"><span data-stu-id="668de-564">The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file.</span></span> <span data-ttu-id="668de-565">若要添加新用户的权限，请使用<xref:System.IO.Directory.GetAccessControl%2A>方法以获取现有 ACL，对其进行修改，然后使用<xref:System.IO.FileInfo.SetAccessControl%2A>以将其应用到的文件。</span><span class="sxs-lookup"><span data-stu-id="668de-565">To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.</span></span>  
  
 <span data-ttu-id="668de-566">ACL 描述个人和/或组具有或没有执行到对给定文件的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-566">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="668de-567">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="668de-567">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="668de-568"><xref:System.IO.FileInfo.SetAccessControl%2A>方法仅保持<xref:System.Security.AccessControl.FileSecurity>对象创建后修改的对象。</span><span class="sxs-lookup"><span data-stu-id="668de-568">The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="668de-569">如果<xref:System.Security.AccessControl.FileSecurity>尚未修改对象，它不会保存到文件。</span><span class="sxs-lookup"><span data-stu-id="668de-569">If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="668de-570">因此，不能检索<xref:System.Security.AccessControl.FileSecurity>对象从一个文件，并对另一个文件重新应用相同的对象。</span><span class="sxs-lookup"><span data-stu-id="668de-570">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="668de-571">若要将 ACL 信息从一个文件复制到另一种：</span><span class="sxs-lookup"><span data-stu-id="668de-571">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="668de-572">使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.FileSecurity>源文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="668de-572">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="668de-573">创建一个新<xref:System.Security.AccessControl.FileSecurity>目标文件的对象。</span><span class="sxs-lookup"><span data-stu-id="668de-573">Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="668de-574">使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>源方法<xref:System.Security.AccessControl.FileSecurity>对象来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="668de-574">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="668de-575">使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法以将信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.FileSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="668de-575">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.</span></span>  
  
5.  <span data-ttu-id="668de-576">设置目标<xref:System.Security.AccessControl.FileSecurity>对象与目标文件使用<xref:System.IO.FileInfo.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="668de-576">Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668de-577">下面的代码示例使用<xref:System.IO.FileInfo.GetAccessControl%2A>方法和<xref:System.IO.FileInfo.SetAccessControl%2A>方法来添加，然后从文件删除的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="668de-577">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an ACL entry from a file.</span></span>  <span data-ttu-id="668de-578">你必须提供有效的用户或组帐户以运行此示例。</span><span class="sxs-lookup"><span data-stu-id="668de-578">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="668de-579"><paramref name="fileSecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="668de-579">The <paramref name="fileSecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="668de-580">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="668de-580">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="668de-581">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-581">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="668de-582">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="668de-582">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="668de-583">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.Change" /></span><span class="sxs-lookup"><span data-stu-id="668de-583">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.Change" /></span></span>  
  
<span data-ttu-id="668de-584">安全操作：需求</span><span class="sxs-lookup"><span data-stu-id="668de-584">Security Action: Demand</span></span> 
<span data-ttu-id="668de-585">若要访问该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="668de-585">For permission to access the file.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="668de-586">以字符串形式返回路径。</span><span class="sxs-lookup"><span data-stu-id="668de-586">Returns the path as a string.</span></span></summary>
        <returns><span data-ttu-id="668de-587">一个表示该路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="668de-587">A string representing the path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668de-588">返回的字符串<xref:System.IO.FileInfo.ToString%2A>方法表示传递给构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="668de-588">The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.</span></span>  <span data-ttu-id="668de-589">当您创建<xref:System.IO.FileInfo>对象使用的构造函数，<xref:System.IO.FileInfo.ToString%2A>方法返回的完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="668de-589">When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.</span></span>  <span data-ttu-id="668de-590">但是，也会通过返回的字符串的情况<xref:System.IO.FileInfo.ToString%2A>方法不表示完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="668de-590">However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.</span></span>  <span data-ttu-id="668de-591">例如，创建<xref:System.IO.FileInfo>对象使用<xref:System.IO.DirectoryInfo.GetFiles%2A>方法，<xref:System.IO.FileInfo.ToString%2A>方法不表示完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="668de-591">For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="668de-592">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="668de-592">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="668de-593">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="668de-593">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="668de-594">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="668de-594">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>