<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bec9b-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span><span class="sxs-lookup"><span data-stu-id="bec9b-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="bec9b-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="bec9b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-103">使用<xref:System.IO.DirectoryInfo>类用于典型操作，如复制、 移动、 重命名、 创建和删除的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="bec9b-104">如果想要重用多次的某个对象，请考虑使用的实例方法<xref:System.IO.DirectoryInfo>而不是静态方法的相应<xref:System.IO.Directory>类，因为安全检查不会总是有必要。</span><span class="sxs-lookup"><span data-stu-id="bec9b-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-105">在接受将路径作为输入字符串的成员，该路径必须是格式正确，或引发异常。</span><span class="sxs-lookup"><span data-stu-id="bec9b-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="bec9b-106">例如，如果路径是完全限定的但以空格开始，在类的方法不修整路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="bec9b-107">因此，该路径格式不正确并且引发异常。</span><span class="sxs-lookup"><span data-stu-id="bec9b-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="bec9b-108">同样，路径或组合的路径不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="bec9b-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="bec9b-109">例如，"c:\temp c:\windows"也会引发异常在大多数情况下。</span><span class="sxs-lookup"><span data-stu-id="bec9b-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="bec9b-110">确保使用接受将路径字符串的方法时，你的路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="bec9b-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="bec9b-111">在接受路径的成员，路径可以引用一个文件或仅是目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="bec9b-112">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="bec9b-113">例如，以下所有条件都可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="bec9b-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="bec9b-114">"c:\\\MyDir\\\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="bec9b-115">"c:\\\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="bec9b-116">"MyDir\\\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="bec9b-117">"\\\\\\\MyServer\\\MyShare"在 C# 中，或"\\\MyServer\MyShare"在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="bec9b-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="bec9b-118">默认情况下，对新目录的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="bec9b-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="bec9b-119">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-120">下面的示例演示的一些主要成员`DirectoryInfo`类。</span><span class="sxs-lookup"><span data-stu-id="bec9b-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="bec9b-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="bec9b-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="bec9b-122">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-123">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bec9b-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-124">此构造函数不会检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="bec9b-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="bec9b-125">此构造函数是用于访问在后续操作中的磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="bec9b-126">`path`参数可以为文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bec9b-127">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="bec9b-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="bec9b-128">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-129">下面的示例使用此构造函数创建指定的目录和子目录，并演示包含子目录的目录，不能删除。</span><span class="sxs-lookup"><span data-stu-id="bec9b-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-130"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-130"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-131">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-131">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-132"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="bec9b-132"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="bec9b-133">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bec9b-133">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="bec9b-134">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-134">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="bec9b-135">指定的路径和/或文件名太长。</span><span class="sxs-lookup"><span data-stu-id="bec9b-135">The specified path, file name, or both are too long.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-136">用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-136">for reading from files and directories.</span></span> <span data-ttu-id="bec9b-137">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-137">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-138">创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-138">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-139">创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-139">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-140">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bec9b-140">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="bec9b-141">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-141">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-142">下面的示例检查是否存在指定的目录，会创建目录，如果它不存在，然后删除该目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-142">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-143">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-143">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-144">用于写入文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-144">for writing files.</span></span> <span data-ttu-id="bec9b-145">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-145">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="bec9b-146">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="bec9b-146">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="bec9b-147">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-147">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-148">使用此方法重载来创建一个目录的访问控制，以便在安全设置会应用之前，可以访问该目录不会。</span><span class="sxs-lookup"><span data-stu-id="bec9b-148">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="bec9b-149">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bec9b-149">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="bec9b-150">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-150">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-151"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="bec9b-151">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-152">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-152">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-153"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-153"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-154"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-154"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="bec9b-155">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bec9b-155">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="bec9b-156">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-156">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-157">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="bec9b-157">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bec9b-158">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-158">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-159">若要创建一个目录的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-159">for permission to create a directory.</span></span> <span data-ttu-id="bec9b-160">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-160">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="bec9b-161">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-161">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-162">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-162">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="bec9b-163">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-163">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="bec9b-164">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-164">The specified path.</span></span> <span data-ttu-id="bec9b-165">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-165">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="bec9b-166">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-166">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="bec9b-167">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-167">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="bec9b-168">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-168">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-169">中指定的所有目录`path`创建的除非的某些部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-169">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="bec9b-170">`path`参数指定一个目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-170">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="bec9b-171">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bec9b-171">If the subdirectory already exists, this method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-172">路径名称都限制为 248 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-172">Path names are limited to 248 characters.</span></span>  
  
 <span data-ttu-id="bec9b-173">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-173">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-174">下面的示例演示如何创建一个子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-174">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="bec9b-175">在此示例中，创建后立即删除所创建的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-175">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="bec9b-176">因此，若要测试此示例，应注释掉代码中删除的行。</span><span class="sxs-lookup"><span data-stu-id="bec9b-176">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-177"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-177"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-178"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-178"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-179">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="bec9b-179">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-180">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-180">The subdirectory cannot be created.</span></span>  
  
 <span data-ttu-id="bec9b-181">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-181">-or-</span></span>  
  
 <span data-ttu-id="bec9b-182">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-182">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="bec9b-183">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bec9b-183">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="bec9b-184">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-184">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="bec9b-185">指定的路径和/或文件名太长。</span><span class="sxs-lookup"><span data-stu-id="bec9b-185">The specified path, file name, or both are too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-186">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-186">The caller does not have code access permission to create the directory.</span></span>  
  
 <span data-ttu-id="bec9b-187">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-187">-or-</span></span>  
  
 <span data-ttu-id="bec9b-188">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-188">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="bec9b-189">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="bec9b-189">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bec9b-190"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-190"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-191">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-191">for reading and writing files.</span></span> <span data-ttu-id="bec9b-192">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-192">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="bec9b-193">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-193">The specified path.</span></span> <span data-ttu-id="bec9b-194">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-194">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="bec9b-195">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="bec9b-195">The security to apply.</span></span></param>
        <summary><span data-ttu-id="bec9b-196">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-196">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="bec9b-197">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-197">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="bec9b-198">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-198">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-199">中指定的所有目录`path`创建的除非的某些部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-199">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="bec9b-200">`path`参数指定一个目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-200">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="bec9b-201">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bec9b-201">If the subdirectory already exists, this method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-202">路径名称都限制为 248 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-202">Path names are limited to 248 characters.</span></span>  
  
 <span data-ttu-id="bec9b-203">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-203">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-204"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-204"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-205"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-205"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-206">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="bec9b-206">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-207">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-207">The subdirectory cannot be created.</span></span>  
  
 <span data-ttu-id="bec9b-208">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-208">-or-</span></span>  
  
 <span data-ttu-id="bec9b-209">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-209">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="bec9b-210">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bec9b-210">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="bec9b-211">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-211">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span> <span data-ttu-id="bec9b-212">指定的路径和/或文件名太长。</span><span class="sxs-lookup"><span data-stu-id="bec9b-212">The specified path, file name, or both are too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-213">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-213">The caller does not have code access permission to create the directory.</span></span>  
  
 <span data-ttu-id="bec9b-214">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-214">-or-</span></span>  
  
 <span data-ttu-id="bec9b-215">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-215">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="bec9b-216">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="bec9b-216">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bec9b-217"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-217"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-218">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-218">for reading and writing files.</span></span> <span data-ttu-id="bec9b-219">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-219">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-220">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="bec9b-220">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-221">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="bec9b-221">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-222">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-222">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-223">如果你尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bec9b-223">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-224">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-224">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-225">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="bec9b-225">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-226">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="bec9b-226">The directory is not empty.</span></span>  
  
 <span data-ttu-id="bec9b-227">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-227">-or-</span></span>  
  
 <span data-ttu-id="bec9b-228">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-228">The directory is the application's current working directory.</span></span>  
  
 <span data-ttu-id="bec9b-229">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-229">-or-</span></span>  
  
 <span data-ttu-id="bec9b-230">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="bec9b-230">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="bec9b-231">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-231">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="bec9b-232">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-232">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-233">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-233">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-234">用于写入目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-234">for writing directories.</span></span> <span data-ttu-id="bec9b-235">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-235">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="bec9b-236">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-236"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-237">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-237">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-238">如果`DirectoryInfo`没有文件或子目录，此方法会删除`DirectoryInfo`即使`recursive`是`false`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-238">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="bec9b-239">尝试删除`DirectoryInfo`，不为空时`recursive`是`false`引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="bec9b-239">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="bec9b-240">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-240">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-241">下面的示例演示如何删除一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-241">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="bec9b-242">目录中删除，因为先注释掉`Delete`测试目录已存在的行。</span><span class="sxs-lookup"><span data-stu-id="bec9b-242">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="bec9b-243">然后取消注释代码来测试目录已被成功删除同一的行。</span><span class="sxs-lookup"><span data-stu-id="bec9b-243">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-244">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-244">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-245">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="bec9b-245">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-246">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="bec9b-246">The directory is read-only.</span></span>  
  
 <span data-ttu-id="bec9b-247">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-247">-or-</span></span>  
  
 <span data-ttu-id="bec9b-248">该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-248">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="bec9b-249">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-249">-or-</span></span>  
  
 <span data-ttu-id="bec9b-250">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-250">The directory is the application's current working directory.</span></span>  
  
 <span data-ttu-id="bec9b-251">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-251">-or-</span></span>  
  
 <span data-ttu-id="bec9b-252">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="bec9b-252">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="bec9b-253">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="bec9b-253">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="bec9b-254">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-254">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-255">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-255">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="bec9b-256">写入所需的写入权限的标志<see langword="DirectoryInfo" />和要删除的子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-256">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-257">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-257">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-258">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-258">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-259">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-259">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-260"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-260">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-261">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-261">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-262">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-262">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-263">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-263">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-264">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-264">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-265">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-265">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-266">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询以返回 2009 年之前创建的检查的值的所有目录名<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bec9b-266">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="bec9b-267">如果你只需要的子目录的名称，使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="bec9b-267">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="bec9b-268">有关示例，请参阅<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bec9b-268">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-269">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-269">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-270">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-270">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-271">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-271">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-272">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-272">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-273">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-273">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="bec9b-274">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-274">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-275">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-275">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-276">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-276">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-277">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-277">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-278">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-278">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-279">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-279">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-280">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-280">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-281">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-281">?</span></span> <span data-ttu-id="bec9b-282">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-282">(question mark)</span></span>|<span data-ttu-id="bec9b-283">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-283">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-284">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-284">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-285">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-285">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-286">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-286">".</span></span> <span data-ttu-id="bec9b-287">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-287">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-288"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-288">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-289">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-289">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-290">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-290">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-291">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-291">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-292">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-292">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-293">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-293">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-294"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-294"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-295">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-295">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-296">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-296">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-297">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-297">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-298">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-298">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-299">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-299">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="bec9b-300">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-300">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-301">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-301">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="bec9b-302">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-302">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-303">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-303">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-304">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-304">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-305">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-305">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-306">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-306">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-307">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-307">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-308">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-308">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-309">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-309">?</span></span> <span data-ttu-id="bec9b-310">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-310">(question mark)</span></span>|<span data-ttu-id="bec9b-311">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-311">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-312">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-312">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-313">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-313">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-314">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-314">".</span></span> <span data-ttu-id="bec9b-315">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-315">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-316"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-316">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-317">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-317">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-318">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-318">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-319">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-319">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-320">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-320">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-321">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-321">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-322">以下示例中，从指定的目录开始使用此方法与<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>方法枚举的文件和目录中的开始目录并显示详细信息的任何文件超过 10 MB 的大小。</span><span class="sxs-lookup"><span data-stu-id="bec9b-322">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-323"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-323"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-324"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-324"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-325">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-325">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-326">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-326">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-327">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-327">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-328">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-328">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-329">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-329">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-330"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-330">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-331">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-331">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-332">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-332">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-333">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-333">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-334">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-334">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="bec9b-335">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-335">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-336">下面的示例枚举指定目录下的文件，并使用 LINQ 查询返回的 2009 年之前创建的检查的值的所有文件的名称<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bec9b-336">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="bec9b-337">如果你只需要的文件的名称，使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="bec9b-337">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="bec9b-338">有关示例，请参阅<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="bec9b-338">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="bec9b-339">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-339">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="bec9b-340">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-340">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-341">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-341">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-342">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-342">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-343">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-343">The search string to match against the names of files.</span></span>  <span data-ttu-id="bec9b-344">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-344">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-345">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-345">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="bec9b-346">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-346">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-347">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-347">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-348">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-348">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-349">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-349">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-350">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-350">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-351">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-351">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-352">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-352">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-353">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-353">?</span></span> <span data-ttu-id="bec9b-354">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-354">(question mark)</span></span>|<span data-ttu-id="bec9b-355">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-355">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-356">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-356">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-357">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-357">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-358">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-358">".</span></span> <span data-ttu-id="bec9b-359">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-359">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-360"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-360">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-361">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-361">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-362">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-362">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-363">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-363">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-364">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-364">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="bec9b-365">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-365">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-366">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-366">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="bec9b-367">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-367">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-368"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-368"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-369">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-369">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-370">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-370">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-371">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-371">The search string to match against the names of files.</span></span>  <span data-ttu-id="bec9b-372">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-372">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-373">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-373">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="bec9b-374">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-374">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-375">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-375">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="bec9b-376">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-376">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-377">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-377">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-378">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-378">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-379">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-379">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-380">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-380">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-381">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-381">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-382">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-382">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-383">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-383">?</span></span> <span data-ttu-id="bec9b-384">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-384">(question mark)</span></span>|<span data-ttu-id="bec9b-385">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-385">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-386">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-386">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-387">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-387">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-388">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-388">".</span></span> <span data-ttu-id="bec9b-389">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-389">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-390"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-390">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-391">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-391">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-392">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-392">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-393">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-393">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-394">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-394">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="bec9b-395">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-395">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-396">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-396">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="bec9b-397">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-397">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-398"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-398"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-399"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-399"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-400">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-400">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-401">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-401">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-402">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-402">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-403">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-403">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-404">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-404">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-405"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-405">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-406">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-406">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-407">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-407">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-408">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-408">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-409">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-409">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-410">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-410">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-411">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-411">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-412">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-412">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-413">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-413">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-414">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-414">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-415">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-415">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="bec9b-416">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-416">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-417">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-417">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-418">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-418">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-419">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-419">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-420">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-420">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-421">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-421">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-422">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-422">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-423">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-423">?</span></span> <span data-ttu-id="bec9b-424">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-424">(question mark)</span></span>|<span data-ttu-id="bec9b-425">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-425">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-426">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-426">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-427">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-427">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-428">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-428">".</span></span> <span data-ttu-id="bec9b-429">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-429">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-430"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-430">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-431">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-431">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-432">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-432">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-433">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-433">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-434">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-434">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-435">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-435">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-436"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-436"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-437">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-437">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-438">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-438">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-439">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-439">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-440">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-440">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-441">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-441">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="bec9b-442">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-442">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-443">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-443">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="bec9b-444">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-444">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-445">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-445">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-446">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-446">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-447">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-447">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-448">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-448">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-449">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-449">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-450">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-450">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-451">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-451">?</span></span> <span data-ttu-id="bec9b-452">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-452">(question mark)</span></span>|<span data-ttu-id="bec9b-453">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-453">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-454">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-454">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-455">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-455">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-456">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-456">".</span></span> <span data-ttu-id="bec9b-457">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-457">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-458">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-459">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-459">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-460">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-460">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-461">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-461">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-462">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-462">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="bec9b-463">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="bec9b-463">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-464"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-464"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-465"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-465"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-466">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-466">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-467">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-467">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec9b-468">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-468">Gets a value indicating whether the directory exists.</span></span></summary>
        <value>
          <span data-ttu-id="bec9b-469">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-469"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-470"><xref:System.IO.DirectoryInfo.Exists%2A>属性返回`false`如果在尝试确定指定的文件是否存在任何错误时发生。</span><span class="sxs-lookup"><span data-stu-id="bec9b-470">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="bec9b-471">在引发异常，例如传递具有无效的字符或太多字符，磁盘失效或缺失的文件名的情况下可能发生这或如果调用方没有权限读取此文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-471">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-472">下面的示例演示使用`Exists`将源目录复制到目标目录的上下文中的属性。</span><span class="sxs-lookup"><span data-stu-id="bec9b-472">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec9b-473">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-473">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="bec9b-474">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-474">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-475">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-475">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-476">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索访问控制的当前文件的列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-476">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="bec9b-477">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-477">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-478">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-478">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="bec9b-479">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="bec9b-479">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-480">调用此方法重载是等效于调用<xref:System.IO.Directory.GetAccessControl%2A>方法重载并指定访问控制部分<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-480">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="bec9b-481">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-481">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="bec9b-482">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-482">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="bec9b-483">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-483">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-484">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-484">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="bec9b-485">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-485">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-486">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="bec9b-486">The directory is read-only.</span></span>  
  
 <span data-ttu-id="bec9b-487">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-487">-or-</span></span>  
  
 <span data-ttu-id="bec9b-488">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="bec9b-488">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="bec9b-489">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-489">-or-</span></span>  
  
 <span data-ttu-id="bec9b-490">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-490">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-491">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="bec9b-491">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bec9b-492">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="bec9b-492">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-493">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-493">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="bec9b-494">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-494">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="bec9b-495">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-495">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="bec9b-496"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="bec9b-496">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="bec9b-497">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-497">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="bec9b-498">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="bec9b-498">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
 <span data-ttu-id="bec9b-499">异常</span><span class="sxs-lookup"><span data-stu-id="bec9b-499">Exceptions</span></span>  
  
 <span data-ttu-id="bec9b-500"><list type="table"><listheader><term> 异常类型</span><span class="sxs-lookup"><span data-stu-id="bec9b-500"><list type="table"><listheader><term> Exception type</span></span>  
  
 <span data-ttu-id="bec9b-501"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="bec9b-501"></term><description> Condition</span></span>  
  
 <span data-ttu-id="bec9b-502"></description></listheader><item><term><see cref="T:System.SystemException" /></term><description> 未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-502"></description></listheader><item><term><see cref="T:System.SystemException" /></term><description> The directory could not be found or modified.</span></span>  
  
 <span data-ttu-id="bec9b-503"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 当前进程没有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-503"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The current process does not have access to open the directory.</span></span>  
  
 <span data-ttu-id="bec9b-504"></description></item><item><term><see cref="T:System.IO.IOException" /></term><description> 打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="bec9b-504"></description></item><item><term><see cref="T:System.IO.IOException" /></term><description> An I/O error occurred while opening the directory.</span></span>  
  
 <span data-ttu-id="bec9b-505"></description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> 当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="bec9b-505"></description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 <span data-ttu-id="bec9b-506"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 目录为只读。</span><span class="sxs-lookup"><span data-stu-id="bec9b-506"></description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The directory is read-only.</span></span>  
  
 <span data-ttu-id="bec9b-507">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-507">-or-</span></span>  
  
 <span data-ttu-id="bec9b-508">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="bec9b-508">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="bec9b-509">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-509">-or-</span></span>  
  
 <span data-ttu-id="bec9b-510">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-510">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-511">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-511">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="bec9b-512">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-512">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="bec9b-513">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-513">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-514">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-514">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="bec9b-515">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-515">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="bec9b-516">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-516">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-517">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-517">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-518">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-518">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-519">一个 <see cref="T:System.IO.DirectoryInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-519">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-520">如果不存在子目录，此方法将返回空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-520">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="bec9b-521">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="bec9b-521">This method is not recursive.</span></span>  
  
 <span data-ttu-id="bec9b-522">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-522">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-523">下面的示例检索的根目录中的所有目录，并显示目录的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-523">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-524">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，比如在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="bec9b-524">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-525">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-525">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-526">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-526">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-527">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-527">for reading directories.</span></span> <span data-ttu-id="bec9b-528">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-528">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-529">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-529">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-530">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-530">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-531">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-531">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="bec9b-532">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-532">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-533">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-533">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-534">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-534">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-535">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-535">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-536">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-536">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-537">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-537">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-538">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-538">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-539">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-539">?</span></span> <span data-ttu-id="bec9b-540">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-540">(question mark)</span></span>|<span data-ttu-id="bec9b-541">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-541">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-542">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-542">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-543">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-543">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-544">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-544">".</span></span> <span data-ttu-id="bec9b-545">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-545">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-546">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-546">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-547">下面的示例计算包含指定的字母的目录路径中。</span><span class="sxs-lookup"><span data-stu-id="bec9b-547">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-548"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-548"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-549"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-549"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-550">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-550">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-551">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-551">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-552">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-552">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="bec9b-553">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-553">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-554">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-554">The search string to match against the names of directories.</span></span>  <span data-ttu-id="bec9b-555">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-555">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-556">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-556">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="bec9b-557">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-557">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="bec9b-558">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-558">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-559">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-559">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-560">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-560">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-561">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-561">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-562">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-562">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-563">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-563">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-564">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-564">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-565">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-565">?</span></span> <span data-ttu-id="bec9b-566">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-566">(question mark)</span></span>|<span data-ttu-id="bec9b-567">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-567">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-568">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-568">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-569">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-569">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-570">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-570">".</span></span> <span data-ttu-id="bec9b-571">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-571">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-572">如果不存在子目录，或者没有子目录匹配`searchPattern`参数，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-572">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="bec9b-573">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-573">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-574">下面的示例列出的所有目录和字母"c"开头的文件中"c:\\"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-574">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-575"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-575"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-576"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-576"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-577"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-577"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-578">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-578">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-579">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-579">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-580">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-580">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="bec9b-581">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-581">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-582">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-582">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-583">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-583">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-584"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-584">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-585"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-585">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-586">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-586">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-587">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-587">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-588">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-588">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-589">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-589">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="bec9b-590">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="bec9b-590">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="bec9b-591">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-591">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-592">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-592">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="bec9b-593">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-593">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-594">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-594">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-595">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-595">for reading directories.</span></span> <span data-ttu-id="bec9b-596">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-596">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-597">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-597">The search string to match against the names of files.</span></span>  <span data-ttu-id="bec9b-598">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-598">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-599">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-599">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="bec9b-600"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-600">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-601">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-601">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-602">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-602">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-603">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-603">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-604">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-604">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-605">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-605">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-606">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-606">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-607">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-607">?</span></span> <span data-ttu-id="bec9b-608">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-608">(question mark)</span></span>|<span data-ttu-id="bec9b-609">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-609">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-610">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-610">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-611">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-611">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-612">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-612">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-613"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-613">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-614">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-614">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-615">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-615">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-616">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-616">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-617">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-617">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="bec9b-618">中允许有以下通配说明符`searchPattern`参数。</span><span class="sxs-lookup"><span data-stu-id="bec9b-618">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="bec9b-619">通配符</span><span class="sxs-lookup"><span data-stu-id="bec9b-619">Wildcard character</span></span>|<span data-ttu-id="bec9b-620">描述</span><span class="sxs-lookup"><span data-stu-id="bec9b-620">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="bec9b-621">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-621">Zero or more characters.</span></span>|  
|<span data-ttu-id="bec9b-622">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-622">?</span></span>|<span data-ttu-id="bec9b-623">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-623">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="bec9b-624">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="bec9b-624">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="bec9b-625">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-625">Wildcards are permitted.</span></span> <span data-ttu-id="bec9b-626">例如，`searchPattern`字符串"\*.txt"搜索所有文件扩展名为"txt"的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-626">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="bec9b-627">`searchPattern`字符串"s\*"搜索所有以字母"s"开头的文件名。</span><span class="sxs-lookup"><span data-stu-id="bec9b-627">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="bec9b-628">如果有任何文件，或否匹配的文件`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-628">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-629">使用中的星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="bec9b-629">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="bec9b-630">A`searchPattern`文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-630">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="bec9b-631">A`searchPattern`与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-631">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="bec9b-632">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-632">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="bec9b-633">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-633">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-634">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1\*.txt"可能会返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-634">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="bec9b-635">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-635">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="bec9b-636">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-636">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-637">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-637">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="bec9b-638">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-638">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-639"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-639"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-640"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-640"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-641">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-641">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-642">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-642">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-643">访问路径，用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-643">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="bec9b-644">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-644">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-645">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-645">The search string to match against the names of files.</span></span>  <span data-ttu-id="bec9b-646">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-646">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-647">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-647">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="bec9b-648">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-648">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="bec9b-649"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-649">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-650"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="bec9b-650">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="bec9b-651">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="bec9b-651">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="bec9b-652">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="bec9b-652">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="bec9b-653">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="bec9b-653">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="bec9b-654">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-654">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="bec9b-655">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-655">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-656">通配符</span><span class="sxs-lookup"><span data-stu-id="bec9b-656">Wildcard character</span></span>|<span data-ttu-id="bec9b-657">描述</span><span class="sxs-lookup"><span data-stu-id="bec9b-657">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="bec9b-658">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-658">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-659">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-659">Zero or more characters.</span></span>|  
|<span data-ttu-id="bec9b-660">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-660">?</span></span> <span data-ttu-id="bec9b-661">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-661">(question mark)</span></span>|<span data-ttu-id="bec9b-662">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-662">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="bec9b-663">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="bec9b-663">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="bec9b-664">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-664">Wildcards are permitted.</span></span> <span data-ttu-id="bec9b-665">例如，`searchPattern`字符串"\*.txt"搜索所有文件扩展名为"txt"的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-665">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="bec9b-666">`searchPattern`字符串"s\*"搜索所有以字母"s"开头的文件名。</span><span class="sxs-lookup"><span data-stu-id="bec9b-666">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="bec9b-667">如果有任何文件，或否匹配的文件`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-667">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-668">使用中的星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="bec9b-668">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="bec9b-669">A`searchPattern`文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-669">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="bec9b-670">A`searchPattern`与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-670">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="bec9b-671">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-671">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="bec9b-672">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-672">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="bec9b-673">以下列表显示的不同长度的行为`searchPattern`参数：</span><span class="sxs-lookup"><span data-stu-id="bec9b-673">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="bec9b-674">"\*.abc"返回文件具有扩展名 of.abc,.abcd,.abcde,.abcdef，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bec9b-674">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="bec9b-675">"\*.abcd"返回仅具有扩展 of.abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-675">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="bec9b-676">"\*.abcde"返回仅具有扩展 of.abcde 的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-676">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="bec9b-677">"\*.abcdef"返回仅具有扩展 of.abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-677">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9b-678">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1\*.txt"可能会返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-678">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="bec9b-679">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-679">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="bec9b-680">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-680">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-681">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="bec9b-681">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="bec9b-682">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-682">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-683"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-683"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-684"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-684"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-685"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-685"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-686">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-686">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-687">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-687">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-688">访问路径，用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-688">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="bec9b-689">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-689">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bec9b-690">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-690">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-691">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-691">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="bec9b-692">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-692">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-693">如果不有任何文件或目录中的<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-693">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="bec9b-694">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="bec9b-694">This method is not recursive.</span></span>  
  
 <span data-ttu-id="bec9b-695">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="bec9b-695">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="bec9b-696">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-696">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="bec9b-697">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-697">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-698">下面的示例计算的文件和目录的指定目录下。</span><span class="sxs-lookup"><span data-stu-id="bec9b-698">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-699">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-699">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-700">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-700">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="bec9b-701">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-701">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="bec9b-702">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-702">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="bec9b-703">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-703">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-704">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-704">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-705">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-705">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-706">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-706">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-707">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-707">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-708">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-708">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-709">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-709">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-710">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-710">?</span></span> <span data-ttu-id="bec9b-711">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-711">(question mark)</span></span>|<span data-ttu-id="bec9b-712">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-712">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-713">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-713">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-714">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-714">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-715">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-715">".</span></span> <span data-ttu-id="bec9b-716">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-716">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-717">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="bec9b-717">This method is not recursive.</span></span>  
  
 <span data-ttu-id="bec9b-718">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="bec9b-718">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="bec9b-719">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-719">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="bec9b-720">允许通配符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-720">Wild cards are permitted.</span></span> <span data-ttu-id="bec9b-721">例如，`searchPattern`字符串"\* t"中的所有目录名称搜索`path`以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-721">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="bec9b-722">`searchPattern`字符串"s\*"中的所有目录名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-722">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-723">字符串".."仅可在`searchPattern`如果它作为一部分有效目录名称，如中指定的目录名称"。。b"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-723">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="bec9b-724">它不能用于目录层次结构中向上移动。</span><span class="sxs-lookup"><span data-stu-id="bec9b-724">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="bec9b-725">如果不有任何文件或目录，或任何文件或匹配的目录`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-725">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="bec9b-726">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-726">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-727">下面的示例计算的文件和与指定的搜索模式匹配的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-727">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-728"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-728"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-729"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-729"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-730">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-730">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-731">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-731">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-732">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-732">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="bec9b-733">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-733">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="bec9b-734">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="bec9b-734">The search string to match against the names of directories and filesa.</span></span>  <span data-ttu-id="bec9b-735">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="bec9b-736">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="bec9b-736">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="bec9b-737">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-737">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="bec9b-738">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-738">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="bec9b-739">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="bec9b-739">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-740">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="bec9b-740">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="bec9b-741">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="bec9b-741">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="bec9b-742">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="bec9b-742">Wildcard specifier</span></span>|<span data-ttu-id="bec9b-743">匹配</span><span class="sxs-lookup"><span data-stu-id="bec9b-743">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="bec9b-744">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-744">\* (asterisk)</span></span>|<span data-ttu-id="bec9b-745">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-745">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="bec9b-746">?</span><span class="sxs-lookup"><span data-stu-id="bec9b-746">?</span></span> <span data-ttu-id="bec9b-747">（问号）</span><span class="sxs-lookup"><span data-stu-id="bec9b-747">(question mark)</span></span>|<span data-ttu-id="bec9b-748">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-748">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="bec9b-749">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-749">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="bec9b-750">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="bec9b-750">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="bec9b-751">".</span><span class="sxs-lookup"><span data-stu-id="bec9b-751">".</span></span> <span data-ttu-id="bec9b-752">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="bec9b-752">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="bec9b-753">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="bec9b-753">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="bec9b-754">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-754">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="bec9b-755">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="bec9b-755">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-756"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="bec9b-756"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-757"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-757"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bec9b-758"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bec9b-758"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-759">指定的路径无效（例如，它在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="bec9b-759">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-760">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-760">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="bec9b-761">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-761">The name and path to which to move this directory.</span></span> <span data-ttu-id="bec9b-762">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-762">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="bec9b-763">它可以是你要将此目录作为子目录添加到某个现有目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-763">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="bec9b-764">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-764">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-765">此方法将引发<xref:System.IO.IOException>如果，例如，你尝试将 c:\mydir 移到 c:\public，并且 c:\public 已经存在。</span><span class="sxs-lookup"><span data-stu-id="bec9b-765">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="bec9b-766">必须指定"c:\\\public\\\mydir"作为`destDirName`参数，或指定新的目录名称，如"c:\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="bec9b-766">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="bec9b-767">此方法允许将目录移动到只读的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-767">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="bec9b-768">既不目录的读/写属性会受到影响。</span><span class="sxs-lookup"><span data-stu-id="bec9b-768">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="bec9b-769">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-769">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-770">下面的示例演示如何移动一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-770">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bec9b-771"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-771"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bec9b-772"><paramref name="destDirName" /> 是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="bec9b-772"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bec9b-773">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="bec9b-773">An attempt was made to move a directory to a different volume.</span></span>  
  
 <span data-ttu-id="bec9b-774">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-774">-or-</span></span>  
  
 <span data-ttu-id="bec9b-775"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="bec9b-775"><paramref name="destDirName" /> already exists.</span></span>  
  
 <span data-ttu-id="bec9b-776">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-776">-or-</span></span>  
  
 <span data-ttu-id="bec9b-777">你没有访问此路径的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-777">You are not authorized to access this path.</span></span>  
  
 <span data-ttu-id="bec9b-778">或</span><span class="sxs-lookup"><span data-stu-id="bec9b-778">-or-</span></span>  
  
 <span data-ttu-id="bec9b-779">要移动的目录和目标目录具有相同的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-779">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-780">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-780">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="bec9b-781">找不到目标目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-781">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-782">用于读取和写入文件和目录以及用于访问目标目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-782">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="bec9b-783">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-783">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="bec9b-784">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-784">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec9b-785">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-785">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="bec9b-786">目录名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-786">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-787">这<xref:System.IO.DirectoryInfo.Name%2A>属性返回仅目录，例如"Bin"的名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-787">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="bec9b-788">若要获取的完整路径，例如"c:\public\Bin"使用<xref:System.IO.FileSystemInfo.FullName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bec9b-788">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="bec9b-789"><xref:System.IO.DirectoryInfo.Name%2A>属性<xref:System.IO.DirectoryInfo>不需要任何权限 (超出对构造所需的目录的读取权限<xref:System.IO.DirectoryInfo.Exists%2A>) 但可以透露的目录名称。</span><span class="sxs-lookup"><span data-stu-id="bec9b-789">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="bec9b-790">如有必要移交 out<xref:System.IO.DirectoryInfo>到受保护的目录具有加密性极安全的名称，为创建一个虚拟目录的不受信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="bec9b-790">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="bec9b-791">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-791">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-792">下面的示例显示的当前名称`DirectoryInfo`仅实例。</span><span class="sxs-lookup"><span data-stu-id="bec9b-792">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec9b-793">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-793">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="bec9b-794">父目录，或<see langword="null" />如果路径为 null 或文件路径表示根 (如"\\"，"c:"或 \*"\\\server\share")。</span><span class="sxs-lookup"><span data-stu-id="bec9b-794">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-795">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-795">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-796">下面的示例演示引用指定的目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-796">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-797">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-797">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-798">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-798">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="bec9b-799">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-799">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec9b-800">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="bec9b-800">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="bec9b-801">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-801">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bec9b-802">下面的示例显示对于指定的目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="bec9b-802">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bec9b-803">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-803">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-804">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-804">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="bec9b-805">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-805">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="bec9b-806">一个对象，描述要应用于 <c>path</c> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="bec9b-806">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span></span></param>
        <summary><span data-ttu-id="bec9b-807">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-807">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9b-808">访问控制列表 (ACL) 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-808">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="bec9b-809">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="bec9b-809">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="bec9b-810"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法适用于表示非继承的 ACL 列表的文件的 ACL 条目。</span><span class="sxs-lookup"><span data-stu-id="bec9b-810">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bec9b-811">为 ACL 指定`directorySecurity`替换现有的目录 ACL。</span><span class="sxs-lookup"><span data-stu-id="bec9b-811">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="bec9b-812">若要添加的新用户的权限，请使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法可以获取现有的 ACL，并对其进行修改。</span><span class="sxs-lookup"><span data-stu-id="bec9b-812">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="bec9b-813"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法仍然仅存在<xref:System.Security.AccessControl.DirectorySecurity>对象创建后已修改的对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-813">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="bec9b-814">如果<xref:System.Security.AccessControl.DirectorySecurity>尚未修改对象，它不会保留到文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-814">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="bec9b-815">因此，不能检索<xref:System.Security.AccessControl.DirectorySecurity>对象从一个文件，并重新对同一对象应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-815">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="bec9b-816">若要将 ACL 信息从一个文件复制到另一个：</span><span class="sxs-lookup"><span data-stu-id="bec9b-816">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="bec9b-817">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.DirectorySecurity>源文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-817">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="bec9b-818">创建一个新<xref:System.Security.AccessControl.DirectorySecurity>目标文件的对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-818">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="bec9b-819">使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>方法的源<xref:System.Security.AccessControl.DirectorySecurity>要检索 ACL 信息对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-819">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="bec9b-820">使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法的信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.DirectorySecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="bec9b-820">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="bec9b-821">设置目标<xref:System.Security.AccessControl.DirectorySecurity>到目标文件使用的对象<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bec9b-821">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9b-822">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="bec9b-822">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bec9b-823"><paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-823">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="bec9b-824">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="bec9b-824">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="bec9b-825">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-825">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bec9b-826">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="bec9b-826">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="bec9b-827">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="bec9b-827">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="bec9b-828">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="bec9b-828">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="bec9b-829">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="bec9b-829">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9b-830">返回用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-830">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="bec9b-831">返回用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="bec9b-831">Returns the original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>