<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad0784f971cfb919d9f1e6b7d1918d792bf594e8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36561402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="face9-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="face9-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span>
      </span>
      <span data-ttu-id="face9-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="face9-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-103">使用<xref:System.IO.DirectoryInfo>类用于典型操作，如复制、 移动、 重命名、 创建和删除的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="face9-104">如果想要重用多次的某个对象，请考虑使用的实例方法<xref:System.IO.DirectoryInfo>而不是静态方法的相应<xref:System.IO.Directory>类，因为安全检查不会总是有必要。</span><span class="sxs-lookup"><span data-stu-id="face9-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="face9-105">在接受将路径作为输入字符串的成员，该路径必须是格式正确，或引发异常。</span><span class="sxs-lookup"><span data-stu-id="face9-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="face9-106">例如，如果路径是完全限定的但以空格开始，在类的方法不修整路径。</span><span class="sxs-lookup"><span data-stu-id="face9-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="face9-107">因此，该路径格式不正确并且引发异常。</span><span class="sxs-lookup"><span data-stu-id="face9-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="face9-108">同样，路径或组合的路径不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="face9-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="face9-109">例如，"c:\temp c:\windows"也会引发异常在大多数情况下。</span><span class="sxs-lookup"><span data-stu-id="face9-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="face9-110">确保使用接受将路径字符串的方法时，你的路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="face9-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="face9-111">在接受路径的成员，路径可以引用一个文件或仅是目录。</span><span class="sxs-lookup"><span data-stu-id="face9-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="face9-112">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="face9-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="face9-113">例如，以下所有条件都可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="face9-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="face9-114">"c:\\\MyDir\\\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="face9-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="face9-115">"c:\\\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="face9-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="face9-116">"MyDir\\\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="face9-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="face9-117">"\\\\\\\MyServer\\\MyShare"在 C# 中，或"\\\MyServer\MyShare"在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="face9-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="face9-118">默认情况下，对新目录的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="face9-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="face9-119">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-120">下面的示例演示的一些主要成员`DirectoryInfo`类。</span><span class="sxs-lookup"><span data-stu-id="face9-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="face9-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="face9-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="face9-122">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-123">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-124">此构造函数不会检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="face9-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="face9-125">此构造函数是用于访问在后续操作中的磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="face9-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="face9-126">`path`参数可以为文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="face9-127">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="face9-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="face9-128">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-129">下面的示例使用此构造函数创建指定的目录和子目录，并演示包含子目录的目录，不能删除。</span><span class="sxs-lookup"><span data-stu-id="face9-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-130">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-131">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-132">
            <paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-132">
              <paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="face9-133">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-133">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-134">用于读取文件和目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-134">for reading from files and directories.</span>
          </span>
          <span data-ttu-id="face9-135">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-135">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-136">创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-136">Creates a directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-137">创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-137">Creates a directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-138">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="face9-138">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="face9-139">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-140">下面的示例检查是否存在指定的目录，会创建目录，如果它不存在，然后删除该目录。</span><span class="sxs-lookup"><span data-stu-id="face9-140">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-141">无法创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-141">The directory cannot be created.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-142">用于写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-142">for writing files.</span>
          </span>
          <span data-ttu-id="face9-143">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-143">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="face9-144">要应用于此目录的访问控制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-144">The access control to apply to the directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-145">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-145">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-146">使用此方法重载来创建一个目录的访问控制，以便在安全设置会应用之前，可以访问该目录不会。</span><span class="sxs-lookup"><span data-stu-id="face9-146">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="face9-147">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="face9-147">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="face9-148">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-149">
            <paramref name="path" /> 指定的目录为只读或为非空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-149">The directory specified by <paramref name="path" /> is read-only or is not empty.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-150">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-151">
            <paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-152">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="face9-153">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-153">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-154">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-154">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="face9-155">试图创建只带冒号 (:) 字符的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-155">Creating a directory with only the colon (:) character was attempted.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-156">若要创建一个目录的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-156">for permission to create a directory.</span>
          </span>
          <span data-ttu-id="face9-157">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-157">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="face9-158">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-158">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-159">在指定路径上创建一个或多个子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-159">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="face9-160">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-160">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="face9-161">指定的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-161">The specified path.</span>
          </span>
          <span data-ttu-id="face9-162">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-162">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-163">在指定路径上创建一个或多个子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-163">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="face9-164">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-164">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-165">在 <paramref name="path" /> 中指定的最后一个目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-165">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-166">中指定的所有目录`path`创建的除非的某些部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="face9-166">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="face9-167">`path`参数指定一个目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="face9-167">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="face9-168">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="face9-168">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="face9-169">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-169">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-170">下面的示例演示如何创建一个子目录。</span><span class="sxs-lookup"><span data-stu-id="face9-170">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="face9-171">在此示例中，创建后立即删除所创建的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-171">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="face9-172">因此，若要测试此示例，应注释掉代码中删除的行。</span><span class="sxs-lookup"><span data-stu-id="face9-172">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-173">
            <paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-173">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-174">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-174">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-175">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-175">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-176">无法创建子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-176">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="face9-177">- 或 -  文件或目录已具有 <paramref name="path" /> 指定的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-177">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="face9-178">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-178">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-179">调用方没有代码访问权限来创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-179">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="face9-180">- 或 -  调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-180">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="face9-181">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-181">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="face9-182">
            <paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-182">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-183">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-183">for reading and writing files.</span>
          </span>
          <span data-ttu-id="face9-184">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-184">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="face9-185">指定的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-185">The specified path.</span>
          </span>
          <span data-ttu-id="face9-186">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-186">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <param name="directorySecurity">
          <span data-ttu-id="face9-187">要应用的安全性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-187">The security to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-188">使用指定的安全性在指定的路径上创建一个或多个子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-188">Creates a subdirectory or subdirectories on the specified path with the specified security.</span>
          </span>
          <span data-ttu-id="face9-189">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-189">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-190">在 <paramref name="path" /> 中指定的最后一个目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-190">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-191">中指定的所有目录`path`创建的除非的某些部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="face9-191">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="face9-192">`path`参数指定一个目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="face9-192">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="face9-193">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="face9-193">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="face9-194">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-194">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-195">
            <paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-195">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-196">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-196">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-197">指定的路径无效，例如位于未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-197">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-198">无法创建子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-198">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="face9-199">- 或 -  文件或目录已具有 <paramref name="path" /> 指定的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-199">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="face9-200">指定的路径和/或文件名超过了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-200">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-201">调用方没有代码访问权限来创建目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-201">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="face9-202">- 或 -  调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-202">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="face9-203">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-203">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="face9-204">
            <paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-204">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-205">用于读取和写入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-205">for reading and writing files.</span>
          </span>
          <span data-ttu-id="face9-206">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-206">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-207">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-207">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-208">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-208">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-209">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-210">如果你尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="face9-210">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-211">该目录包含一个只读文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-211">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-212">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-212">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-213">目录不为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-213">The directory is not empty.</span>
          </span>
          <span data-ttu-id="face9-214">- 或 -  该目录是应用程序的当前工作目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-214">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="face9-215">- 或 -  目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-215">-or-  There is an open handle on the directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="face9-216">开放句柄可能产生自枚举目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-216">This open handle can result from enumerating directories.</span>
          </span>
          <span data-ttu-id="face9-217">有关详细信息，请参阅 [如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-217">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-218">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-218">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-219">用于写入目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-219">for writing directories.</span>
          </span>
          <span data-ttu-id="face9-220">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-220">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="face9-221">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-221">
              <see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-222">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-222">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-223">如果`DirectoryInfo`没有文件或子目录，此方法会删除`DirectoryInfo`即使`recursive`是`false`。</span><span class="sxs-lookup"><span data-stu-id="face9-223">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="face9-224">尝试删除`DirectoryInfo`，不为空时`recursive`是`false`引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="face9-224">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="face9-225">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-226">下面的示例演示如何删除一个目录。</span><span class="sxs-lookup"><span data-stu-id="face9-226">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="face9-227">目录中删除，因为先注释掉`Delete`测试目录已存在的行。</span><span class="sxs-lookup"><span data-stu-id="face9-227">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="face9-228">然后取消注释代码来测试目录已被成功删除同一的行。</span><span class="sxs-lookup"><span data-stu-id="face9-228">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-229">该目录包含一个只读文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-229">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-230">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-230">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-231">目录为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-231">The directory is read-only.</span>
          </span>
          <span data-ttu-id="face9-232">- 或 -  该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-232">-or-  The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="face9-233">- 或 -  该目录是应用程序的当前工作目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-233">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="face9-234">- 或 -  目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-234">-or-  There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="face9-235">枚举目录和文件可能会导致此开放句柄出现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-235">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="face9-236">有关详细信息，请参阅 [如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-237">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-237">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="face9-238">写入所需的写入权限的标志<see langword="DirectoryInfo" />和要删除的子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-238">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-239">返回当前目录中目录信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-239">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-240">返回当前目录中目录信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-240">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-241">当前目录中目录的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-241">An enumerable collection of directories in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-242"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-242">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-243">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-243">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-244">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-244">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-245">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-245">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-246">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-246">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-247">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-247">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-248">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询以返回 2009 年之前创建的检查的值的所有目录名<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="face9-248">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="face9-249">如果你只需要的子目录的名称，使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="face9-249">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="face9-250">有关示例，请参阅<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="face9-250">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-251">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-251">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-252">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-252">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-253">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-253">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-254">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-254">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-255">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-255">Returns an enumerable collection of directory information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-256">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-256">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-257">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-257">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-258">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-258">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-259">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-259">Wildcard specifier</span></span>|<span data-ttu-id="face9-260">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-260">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-261">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-261">\* (asterisk)</span></span>|<span data-ttu-id="face9-262">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-262">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-263">?</span><span class="sxs-lookup"><span data-stu-id="face9-263">?</span></span> <span data-ttu-id="face9-264">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-264">(question mark)</span></span>|<span data-ttu-id="face9-265">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-265">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-266">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-266">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-267">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-267">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-268">".</span><span class="sxs-lookup"><span data-stu-id="face9-268">".</span></span> <span data-ttu-id="face9-269">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-269">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-271">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-272">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-273">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-274">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-275">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-276">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-276">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-277">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-277">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-278">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-278">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-279">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-279">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-280">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-280">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-281">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-281">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="face9-282">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-282">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-283">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-283">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-284">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-284">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-285">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-286">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-287">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-287">Wildcard specifier</span></span>|<span data-ttu-id="face9-288">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-289">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-289">\* (asterisk)</span></span>|<span data-ttu-id="face9-290">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-291">?</span><span class="sxs-lookup"><span data-stu-id="face9-291">?</span></span> <span data-ttu-id="face9-292">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-292">(question mark)</span></span>|<span data-ttu-id="face9-293">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-294">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-295">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-296">".</span><span class="sxs-lookup"><span data-stu-id="face9-296">".</span></span> <span data-ttu-id="face9-297">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-299">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，你可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-300">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待的整个数组<xref:System.IO.DirectoryInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-301">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-302">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-303">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-304">以下示例中，从指定的目录开始使用此方法与<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>方法枚举的文件和目录中的开始目录并显示详细信息的任何文件超过 10 MB 的大小。</span><span class="sxs-lookup"><span data-stu-id="face9-304">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-305">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-305">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-306">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-306">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-307">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-307">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-308">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-308">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-309">返回当前目录中的文件信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-309">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-310">返回当前目录中的文件信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-310">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-311">当前目录中的文件的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-311">An enumerable collection of the files in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-312"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-312">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-313">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-313">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-314">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-314">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-315">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-315">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-316">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-316">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="face9-317">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-317">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-318">下面的示例枚举指定目录下的文件，并使用 LINQ 查询返回的 2009 年之前创建的检查的值的所有文件的名称<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="face9-318">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="face9-319">如果你只需要的文件的名称，使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="face9-319">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="face9-320">有关示例，请参阅<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="face9-320">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="face9-321">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-321">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="face9-322">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-322">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-323">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-323">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-324">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-324">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-325">要与文件名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-325">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="face9-326">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-326">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-327">返回与搜索模式匹配的文件信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-327">Returns an enumerable collection of file information that matches a search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-328">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-328">An enumerable collection of files that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-329">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-330">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-331">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-331">Wildcard specifier</span></span>|<span data-ttu-id="face9-332">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-333">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-333">\* (asterisk)</span></span>|<span data-ttu-id="face9-334">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-335">?</span><span class="sxs-lookup"><span data-stu-id="face9-335">?</span></span> <span data-ttu-id="face9-336">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-336">(question mark)</span></span>|<span data-ttu-id="face9-337">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-338">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-339">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-339">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-340">".</span><span class="sxs-lookup"><span data-stu-id="face9-340">".</span></span> <span data-ttu-id="face9-341">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-342"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-342">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-343">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-343">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-344">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-344">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-345">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-346">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-346">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="face9-347">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-348">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-348">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="face9-349">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-349">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-350">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-350">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-351">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-352">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-352">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-353">要与文件名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-353">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="face9-354">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-355">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-355">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="face9-356">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-356">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-357">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-357">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-358">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-358">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-359">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-359">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-360">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-360">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-361">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-361">Wildcard specifier</span></span>|<span data-ttu-id="face9-362">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-362">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-363">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-363">\* (asterisk)</span></span>|<span data-ttu-id="face9-364">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-364">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-365">?</span><span class="sxs-lookup"><span data-stu-id="face9-365">?</span></span> <span data-ttu-id="face9-366">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-366">(question mark)</span></span>|<span data-ttu-id="face9-367">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-367">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-368">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-368">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-369">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-369">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-370">".</span><span class="sxs-lookup"><span data-stu-id="face9-370">".</span></span> <span data-ttu-id="face9-371">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-371">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-372"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-372">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-373">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-373">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-374">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-374">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-375">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-375">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-376">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-376">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="face9-377">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-377">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-378">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-378">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="face9-379">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-379">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-380">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-380">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-381">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-381">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-382">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-382">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-383">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-383">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-384">返回当前目录中的文件系统信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-384">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-385">返回当前目录中的文件系统信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-385">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-386">当前目录中的文件系统信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-386">An enumerable collection of file system information in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-387"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-387">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-388">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-388">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-389">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-389">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-390">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-390">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-391">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-391">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-392">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-392">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-393">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-393">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-394">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-394">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-395">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-395">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-396">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-396">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-397">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-397">Returns an enumerable collection of file system information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-398">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-398">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-399">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-399">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-400">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-400">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-401">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-401">Wildcard specifier</span></span>|<span data-ttu-id="face9-402">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-402">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-403">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-403">\* (asterisk)</span></span>|<span data-ttu-id="face9-404">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-404">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-405">?</span><span class="sxs-lookup"><span data-stu-id="face9-405">?</span></span> <span data-ttu-id="face9-406">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-406">(question mark)</span></span>|<span data-ttu-id="face9-407">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-407">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-408">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-408">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-409">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-409">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-410">".</span><span class="sxs-lookup"><span data-stu-id="face9-410">".</span></span> <span data-ttu-id="face9-411">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-411">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-412"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-412">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-413">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-413">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-414">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-414">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-415">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-415">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-416">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-416">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-417">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-417">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-418">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-418">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-419">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-419">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-420">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-421">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-421">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-422">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-422">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-423">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-423">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="face9-424">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-424">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-425">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-425">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-426">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-427">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-428">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-429">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-429">Wildcard specifier</span></span>|<span data-ttu-id="face9-430">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-431">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-431">\* (asterisk)</span></span>|<span data-ttu-id="face9-432">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-433">?</span><span class="sxs-lookup"><span data-stu-id="face9-433">?</span></span> <span data-ttu-id="face9-434">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-434">(question mark)</span></span>|<span data-ttu-id="face9-435">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-436">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-437">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-438">".</span><span class="sxs-lookup"><span data-stu-id="face9-438">".</span></span> <span data-ttu-id="face9-439">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-441">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，你可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-442">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待的整个数组<xref:System.IO.FileSystemInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-443">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-444">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="face9-445">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>对集合的方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="face9-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-446">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-446">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-447">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-447">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-448">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-448">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-449">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-449">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="face9-450">获取指示目录是否存在的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-450">Gets a value indicating whether the directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="face9-451">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-451">
              <see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-452"><xref:System.IO.DirectoryInfo.Exists%2A>属性返回`false`如果在尝试确定指定的文件是否存在任何错误时发生。</span><span class="sxs-lookup"><span data-stu-id="face9-452">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="face9-453">在引发异常，例如传递具有无效的字符或太多字符，磁盘失效或缺失的文件名的情况下可能发生这或如果调用方没有权限读取此文件。</span><span class="sxs-lookup"><span data-stu-id="face9-453">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-454">下面的示例演示使用`Exists`将源目录复制到目标目录的上下文中的属性。</span><span class="sxs-lookup"><span data-stu-id="face9-454">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="face9-455">获取目录的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-455">Gets the full path of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="face9-456">包含完整目录的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-456">A string containing the full path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-457">获取当前目录的访问控制列表 (ACL) 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-457">Gets the access control list (ACL) entries for the current directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-458">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索访问控制的当前文件的列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="face9-458">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="face9-459">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-459">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-460">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-460">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-461">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-461">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-462">调用此方法重载是等效于调用<xref:System.IO.Directory.GetAccessControl%2A>方法重载并指定访问控制部分<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="face9-462">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="face9-463">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="face9-463">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="face9-464">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="face9-464">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="face9-465">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-465">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-466">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="face9-466">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="face9-467">未能找到或修改该目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-467">The directory could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-468">目录为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-468">The directory is read-only.</span>
          </span>
          <span data-ttu-id="face9-469">- 或 -  当前平台不支持此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-469">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="face9-470">- 或 -  调用方没有所需权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-470">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-471">打开目录时发生 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-471">An I/O error occurred while opening the directory.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="face9-472">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-472">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-473">表示枚举目录的访问控制列表 (ACL) 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-473">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="face9-474">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-474">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="face9-475">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-475">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">
          <span data-ttu-id="face9-476">
            <see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-476">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-477">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-477">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-478">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-478">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span>
          </span>
          <span data-ttu-id="face9-479">异常  <list type="table"><listheader><term> 异常类型  </term><description> 条件  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> 未能找到或修改该目录。</description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 当前进程没有打开该目录的权限。</description></item><item><term><see cref="T:System.IO.IOException" /></term><description> 打开目录时发生 I/O 错误。</description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> 当前操作系统不是 Microsoft Windows 2000 或更高版本。</description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 该目录为只读。  - 或 -  当前平台不支持此操作。  - 或 -  调用方没有所需权限。  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-479">Exceptions  <list type="table"><listheader><term> Exception type  </term><description> Condition  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> The directory could not be found or modified.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The current process does not have access to open the directory.  </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> An I/O error occurred while opening the directory.  </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> The current operating system is not Microsoft Windows 2000 or later.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The directory is read-only.  -or-  This operation is not supported on the current platform.  -or-  The caller does not have the required permission.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-480">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="face9-480">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="face9-481">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="face9-481">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="face9-482">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-482">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-483">表示枚举目录的访问控制列表 (ACL) 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-483">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="face9-484">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-484">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="face9-485">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-485">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-486">返回当前目录的子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-486">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-487">返回当前目录的子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-487">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-488">一个 <see cref="T:System.IO.DirectoryInfo" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-488">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-489">如果不存在子目录，此方法将返回空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-489">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="face9-490">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="face9-490">This method is not recursive.</span></span>  
  
 <span data-ttu-id="face9-491">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-491">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-492">下面的示例检索的根目录中的所有目录，并显示目录的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-492">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-493">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，比如在未映射的驱动器上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-493">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-494">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-494">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-495">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-495">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-496">用于读取目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-496">for reading directories.</span>
          </span>
          <span data-ttu-id="face9-497">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-497">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-498">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-498">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-499">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-499">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-500">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-500">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-501">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-501">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-502">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-502">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-503">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-503">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-504">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-504">Wildcard specifier</span></span>|<span data-ttu-id="face9-505">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-505">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-506">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-506">\* (asterisk)</span></span>|<span data-ttu-id="face9-507">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-507">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-508">?</span><span class="sxs-lookup"><span data-stu-id="face9-508">?</span></span> <span data-ttu-id="face9-509">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-509">(question mark)</span></span>|<span data-ttu-id="face9-510">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-510">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-511">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-511">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-512">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-512">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-513">".</span><span class="sxs-lookup"><span data-stu-id="face9-513">".</span></span> <span data-ttu-id="face9-514">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-514">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-515">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-515">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-516">下面的示例计算包含指定的字母的目录路径中。</span><span class="sxs-lookup"><span data-stu-id="face9-516">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-517">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-517">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-518">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-518">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-519">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-519">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-520">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-520">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-521">用于读取从文件和目录和路径的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-521">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="face9-522">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-522">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-523">要与目录名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-523">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="face9-524">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-524">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-525">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-525">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-526">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-526">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-527">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-527">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-528">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-528">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-529">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-529">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-530">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-530">Wildcard specifier</span></span>|<span data-ttu-id="face9-531">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-531">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-532">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-532">\* (asterisk)</span></span>|<span data-ttu-id="face9-533">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-533">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-534">?</span><span class="sxs-lookup"><span data-stu-id="face9-534">?</span></span> <span data-ttu-id="face9-535">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-535">(question mark)</span></span>|<span data-ttu-id="face9-536">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-536">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-537">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-537">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-538">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-538">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-539">".</span><span class="sxs-lookup"><span data-stu-id="face9-539">".</span></span> <span data-ttu-id="face9-540">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-540">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-541">如果不存在子目录，或者没有子目录匹配`searchPattern`参数，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-541">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="face9-542">此方法将预先填充的以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-542">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-543">下面的示例列出的所有目录和字母"c"开头的文件中"c:\\"。</span><span class="sxs-lookup"><span data-stu-id="face9-543">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-544">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-544">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-545">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-545">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-546">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-546">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-547">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-547">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-548">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-548">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-549">用于读取从文件和目录和路径的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-549">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="face9-550">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-550">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-551">返回当前目录的文件列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-551">Returns a file list from the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-552">返回当前目录的文件列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-552">Returns a file list from the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-553">
            <see cref="T:System.IO.FileInfo" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-553">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-554"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-554">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-555">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-555">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-556">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-556">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-557">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-557">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-558">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-558">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="face9-559">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="face9-559">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="face9-560">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-560">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-561">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="face9-561">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="face9-562">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-562">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-563">路径无效（例如，路径位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-563">The path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-564">用于读取目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-564">for reading directories.</span>
          </span>
          <span data-ttu-id="face9-565">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-565">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-566">要与文件名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-566">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="face9-567">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-567">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-568">返回当前目录中与给定的搜索模式匹配的文件列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-568">Returns a file list from the current directory matching the given search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-569">
            <see cref="T:System.IO.FileInfo" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-569">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-570">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-570">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-571">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-571">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-572">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-572">Wildcard specifier</span></span>|<span data-ttu-id="face9-573">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-573">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-574">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-574">\* (asterisk)</span></span>|<span data-ttu-id="face9-575">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-575">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-576">?</span><span class="sxs-lookup"><span data-stu-id="face9-576">?</span></span> <span data-ttu-id="face9-577">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-577">(question mark)</span></span>|<span data-ttu-id="face9-578">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-578">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-579">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-579">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-580">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-580">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-581">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-581">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-582"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-582">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-583">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-583">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-584">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-584">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-585">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-585">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-586">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-586">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="face9-587">中允许有以下通配说明符`searchPattern`参数。</span><span class="sxs-lookup"><span data-stu-id="face9-587">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="face9-588">通配符</span><span class="sxs-lookup"><span data-stu-id="face9-588">Wildcard character</span></span>|<span data-ttu-id="face9-589">描述</span><span class="sxs-lookup"><span data-stu-id="face9-589">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="face9-590">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-590">Zero or more characters.</span></span>|  
|<span data-ttu-id="face9-591">?</span><span class="sxs-lookup"><span data-stu-id="face9-591">?</span></span>|<span data-ttu-id="face9-592">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-592">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="face9-593">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="face9-593">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="face9-594">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="face9-594">Wildcards are permitted.</span></span> <span data-ttu-id="face9-595">例如，`searchPattern`字符串"\*.txt"搜索所有文件扩展名为"txt"的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-595">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="face9-596">`searchPattern`字符串"s\*"搜索所有以字母"s"开头的文件名。</span><span class="sxs-lookup"><span data-stu-id="face9-596">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="face9-597">如果有任何文件，或否匹配的文件`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-597">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="face9-598">使用中的星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="face9-598">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="face9-599">A`searchPattern`文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-599">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="face9-600">A`searchPattern`与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-600">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="face9-601">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-601">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="face9-602">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="face9-602">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="face9-603">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1\*.txt"可能会返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-603">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="face9-604">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="face9-604">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="face9-605">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-605">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-606">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="face9-606">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="face9-607">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-607">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-608">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-608">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-609">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-609">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-610">路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-610">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-611">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-611">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-612">访问路径，用于读取文件和目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-612">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="face9-613">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-613">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-614">要与文件名匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-614">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="face9-615">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-615">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-616">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-616">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-617">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-617">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-618">
            <see cref="T:System.IO.FileInfo" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-618">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-619"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="face9-619">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="face9-620">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，你可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="face9-620">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="face9-621">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待的整个数组<xref:System.IO.FileInfo>对象之前才能访问该数组返回。</span><span class="sxs-lookup"><span data-stu-id="face9-621">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="face9-622">因此，当你正在使用许多文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="face9-622">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="face9-623">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-623">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="face9-624">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-624">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-625">通配符</span><span class="sxs-lookup"><span data-stu-id="face9-625">Wildcard character</span></span>|<span data-ttu-id="face9-626">描述</span><span class="sxs-lookup"><span data-stu-id="face9-626">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="face9-627">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-627">\* (asterisk)</span></span>|<span data-ttu-id="face9-628">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-628">Zero or more characters.</span></span>|  
|<span data-ttu-id="face9-629">?</span><span class="sxs-lookup"><span data-stu-id="face9-629">?</span></span> <span data-ttu-id="face9-630">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-630">(question mark)</span></span>|<span data-ttu-id="face9-631">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-631">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="face9-632">返回的文件的名称的顺序不能保证;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="face9-632">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="face9-633">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="face9-633">Wildcards are permitted.</span></span> <span data-ttu-id="face9-634">例如，`searchPattern`字符串"\*.txt"搜索所有文件扩展名为"txt"的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-634">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="face9-635">`searchPattern`字符串"s\*"搜索所有以字母"s"开头的文件名。</span><span class="sxs-lookup"><span data-stu-id="face9-635">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="face9-636">如果有任何文件，或否匹配的文件`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-636">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="face9-637">使用中的星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="face9-637">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="face9-638">A`searchPattern`文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-638">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="face9-639">A`searchPattern`与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-639">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="face9-640">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-640">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="face9-641">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="face9-641">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="face9-642">以下列表显示的不同长度的行为`searchPattern`参数：</span><span class="sxs-lookup"><span data-stu-id="face9-642">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="face9-643">"\*.abc"返回文件具有扩展名 of.abc,.abcd,.abcde,.abcdef，依次类推。</span><span class="sxs-lookup"><span data-stu-id="face9-643">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="face9-644">"\*.abcd"返回仅具有扩展 of.abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-644">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="face9-645">"\*.abcde"返回仅具有扩展 of.abcde 的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-645">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="face9-646">"\*.abcdef"返回仅具有扩展 of.abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="face9-646">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="face9-647">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1\*.txt"可能会返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-647">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="face9-648">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="face9-648">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="face9-649">此方法将预先填充的以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-649">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-650">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="face9-650">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="face9-651">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-651">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-652">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-652">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-653">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-653">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-654">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-654">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-655">路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-655">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-656">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-656">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-657">访问路径，用于读取文件和目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-657">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="face9-658">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-658">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="face9-659">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-659">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-660">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-660">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-661">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-661">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-662">如果不有任何文件或目录中的<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-662">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="face9-663">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="face9-663">This method is not recursive.</span></span>  
  
 <span data-ttu-id="face9-664">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="face9-664">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="face9-665">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="face9-665">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="face9-666">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-666">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-667">下面的示例计算的文件和目录的指定目录下。</span><span class="sxs-lookup"><span data-stu-id="face9-667">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-668">路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-668">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-669">要与目录和文件的名称匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-669">The search string to match against the names of directories and files.</span>
          </span>
          <span data-ttu-id="face9-670">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-670">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-671">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-671">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-672">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-672">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-673">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-673">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-674">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-674">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-675">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-675">Wildcard specifier</span></span>|<span data-ttu-id="face9-676">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-676">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-677">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-677">\* (asterisk)</span></span>|<span data-ttu-id="face9-678">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-678">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-679">?</span><span class="sxs-lookup"><span data-stu-id="face9-679">?</span></span> <span data-ttu-id="face9-680">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-680">(question mark)</span></span>|<span data-ttu-id="face9-681">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-681">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-682">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-682">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-683">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-683">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-684">".</span><span class="sxs-lookup"><span data-stu-id="face9-684">".</span></span> <span data-ttu-id="face9-685">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-685">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-686">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="face9-686">This method is not recursive.</span></span>  
  
 <span data-ttu-id="face9-687">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="face9-687">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="face9-688">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="face9-688">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="face9-689">允许通配符。</span><span class="sxs-lookup"><span data-stu-id="face9-689">Wild cards are permitted.</span></span> <span data-ttu-id="face9-690">例如，`searchPattern`字符串"\* t"中的所有目录名称搜索`path`以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-690">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="face9-691">`searchPattern`字符串"s\*"中的所有目录名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-691">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-692">字符串".."仅可在`searchPattern`如果它作为一部分有效目录名称，如中指定的目录名称"。。b"。</span><span class="sxs-lookup"><span data-stu-id="face9-692">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="face9-693">它不能用于目录层次结构中向上移动。</span><span class="sxs-lookup"><span data-stu-id="face9-693">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="face9-694">如果不有任何文件或目录，或任何文件或匹配的目录`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="face9-694">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="face9-695">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-695">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="face9-696">下面的示例计算的文件和与指定的搜索模式匹配的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-696">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-697">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-697">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-698">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-698">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-699">指定的路径无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-699">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-700">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-700">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-701">用于读取从文件和目录和路径的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-701">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="face9-702">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-702">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="face9-703">要与目录和文件的名称匹配的搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-703">The search string to match against the names of directories and filesa.</span>
          </span>
          <span data-ttu-id="face9-704">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-704">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="face9-705">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-705">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="face9-706">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-706">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-707">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-707">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-708">与搜索条件匹配的文件系统项的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-708">An array of file system entries that match the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-709">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="face9-709">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="face9-710">中允许有以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="face9-710">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="face9-711">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="face9-711">Wildcard specifier</span></span>|<span data-ttu-id="face9-712">匹配</span><span class="sxs-lookup"><span data-stu-id="face9-712">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="face9-713">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="face9-713">\* (asterisk)</span></span>|<span data-ttu-id="face9-714">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-714">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="face9-715">?</span><span class="sxs-lookup"><span data-stu-id="face9-715">?</span></span> <span data-ttu-id="face9-716">（问号）</span><span class="sxs-lookup"><span data-stu-id="face9-716">(question mark)</span></span>|<span data-ttu-id="face9-717">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="face9-717">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="face9-718">非通配符字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="face9-718">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="face9-719">例如，字符串"\* t"搜索所有中的名称以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="face9-719">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="face9-720">".</span><span class="sxs-lookup"><span data-stu-id="face9-720">".</span></span> <span data-ttu-id="face9-721">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="face9-721">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="face9-722">对于子目录，<xref:System.IO.FileSystemInfo>此方法返回的对象可以强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="face9-722">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="face9-723">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="face9-723">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="face9-724">此方法将预先填充的以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="face9-724">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-725">
            <paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-725">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-726">
            <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-726">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="face9-727">
            <paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-727">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-728">指定的路径无效（例如，它在未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-728">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-729">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-729">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName">
          <span data-ttu-id="face9-730">要将此目录移动到的目标位置的名称和路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-730">The name and path to which to move this directory.</span>
          </span>
          <span data-ttu-id="face9-731">目标不能是另一个具有相同名称的磁盘卷或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-731">The destination cannot be another disk volume or a directory with the identical name.</span>
          </span>
          <span data-ttu-id="face9-732">它可以是你要将此目录作为子目录添加到某个现有目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-732">It can be an existing directory to which you want to add this directory as a subdirectory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-733">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-733">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-734">此方法将引发<xref:System.IO.IOException>如果，例如，你尝试将 c:\mydir 移到 c:\public，并且 c:\public 已经存在。</span><span class="sxs-lookup"><span data-stu-id="face9-734">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="face9-735">必须指定"c:\\\public\\\mydir"作为`destDirName`参数，或指定新的目录名称，如"c:\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="face9-735">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="face9-736">此方法允许将目录移动到只读的目录。</span><span class="sxs-lookup"><span data-stu-id="face9-736">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="face9-737">既不目录的读/写属性会受到影响。</span><span class="sxs-lookup"><span data-stu-id="face9-737">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="face9-738">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-738">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-739">下面的示例演示如何移动一个目录。</span><span class="sxs-lookup"><span data-stu-id="face9-739">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-740">
            <paramref name="destDirName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-740">
              <paramref name="destDirName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="face9-741">
            <paramref name="destDirName" /> 是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-741">
              <paramref name="destDirName" /> is an empty string (''").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="face9-742">尝试将目录移动到不同的卷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-742">An attempt was made to move a directory to a different volume.</span>
          </span>
          <span data-ttu-id="face9-743">- 或 -  <paramref name="destDirName" /> 已存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-743">-or-  <paramref name="destDirName" /> already exists.</span>
          </span>
          <span data-ttu-id="face9-744">- 或 -  你无权访问此路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-744">-or-  You are not authorized to access this path.</span>
          </span>
          <span data-ttu-id="face9-745">- 或 -  要移动的目录和目标目录具有相同的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-745">-or-  The directory being moved and the destination directory have the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-746">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-746">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="face9-747">找不到目标目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-747">The destination directory cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-748">用于读取和写入文件和目录以及用于访问目标目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-748">for reading and writing files and directories and for access to the destination directory.</span>
          </span>
          <span data-ttu-id="face9-749">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-749">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="face9-750">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-750">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="face9-751">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-751">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="face9-752">目录名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-752">The directory name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-753">这<xref:System.IO.DirectoryInfo.Name%2A>属性返回仅目录，例如"Bin"的名称。</span><span class="sxs-lookup"><span data-stu-id="face9-753">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="face9-754">若要获取的完整路径，例如"c:\public\Bin"使用<xref:System.IO.FileSystemInfo.FullName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="face9-754">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="face9-755"><xref:System.IO.DirectoryInfo.Name%2A>属性<xref:System.IO.DirectoryInfo>不需要任何权限 (超出对构造所需的目录的读取权限<xref:System.IO.DirectoryInfo.Exists%2A>) 但可以透露的目录名称。</span><span class="sxs-lookup"><span data-stu-id="face9-755">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="face9-756">如有必要移交 out<xref:System.IO.DirectoryInfo>到受保护的目录具有加密性极安全的名称，为创建一个虚拟目录的不受信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="face9-756">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="face9-757">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-757">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-758">下面的示例显示的当前名称`DirectoryInfo`仅实例。</span><span class="sxs-lookup"><span data-stu-id="face9-758">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="face9-759">获取指定的子目录的父目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-759">Gets the parent directory of a specified subdirectory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="face9-760">父目录，或<see langword="null" />如果路径为 null 或文件路径表示根 (如"\\"，"c:"或 \*"\\\server\share")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-760">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-761">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-761">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-762">下面的示例演示引用指定的目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="face9-762">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-763">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-763">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-764">用于读取从文件和目录和路径的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-764">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="face9-765">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-765">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="face9-766">获取目录的根部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-766">Gets the root portion of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="face9-767">一个表示目录的根目录的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-767">An object that represents the root of the directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="face9-768">下面的示例显示对于指定的目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="face9-768">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="face9-769">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-769">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-770">用于读取从文件和目录和路径的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-770">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="face9-771">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-771">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="face9-772">一个对象，描述要应用于 <c>path</c> 参数所描述的目录的 ACL 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-772">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="face9-773">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-773">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="face9-774">访问控制列表 (ACL) 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="face9-774">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="face9-775">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="face9-775">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="face9-776"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法适用于表示非继承的 ACL 列表的文件的 ACL 条目。</span><span class="sxs-lookup"><span data-stu-id="face9-776">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="face9-777">为 ACL 指定`directorySecurity`替换现有的目录 ACL。</span><span class="sxs-lookup"><span data-stu-id="face9-777">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="face9-778">若要添加的新用户的权限，请使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法可以获取现有的 ACL，并对其进行修改。</span><span class="sxs-lookup"><span data-stu-id="face9-778">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="face9-779"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法仍然仅存在<xref:System.Security.AccessControl.DirectorySecurity>对象创建后已修改的对象。</span><span class="sxs-lookup"><span data-stu-id="face9-779">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="face9-780">如果<xref:System.Security.AccessControl.DirectorySecurity>尚未修改对象，它不会保留到文件。</span><span class="sxs-lookup"><span data-stu-id="face9-780">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="face9-781">因此，不能检索<xref:System.Security.AccessControl.DirectorySecurity>对象从一个文件，并重新对同一对象应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="face9-781">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="face9-782">若要将 ACL 信息从一个文件复制到另一个：</span><span class="sxs-lookup"><span data-stu-id="face9-782">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="face9-783">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.DirectorySecurity>源文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="face9-783">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="face9-784">创建一个新<xref:System.Security.AccessControl.DirectorySecurity>目标文件的对象。</span><span class="sxs-lookup"><span data-stu-id="face9-784">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="face9-785">使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>方法的源<xref:System.Security.AccessControl.DirectorySecurity>要检索 ACL 信息对象。</span><span class="sxs-lookup"><span data-stu-id="face9-785">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="face9-786">使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法的信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.DirectorySecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="face9-786">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="face9-787">设置目标<xref:System.Security.AccessControl.DirectorySecurity>到目标文件使用的对象<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="face9-787">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="face9-788">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="face9-788">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="face9-789">
            <paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-789">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="face9-790">未能找到或修改该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-790">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="face9-791">当前进程不具有打开该文件的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-791">The current process does not have access to open the file.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="face9-792">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-792">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="face9-793">表示枚举目录的访问控制列表 (ACL) 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-793">for permission to enumerate access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="face9-794">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-794">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="face9-795">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-795">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="face9-796">返回用户所传递的原始路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-796">Returns the original path that was passed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="face9-797">返回用户所传递的原始路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="face9-797">Returns the original path that was passed by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>