<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02f6377dc49d70ee978bdebbcf7b630da68ebf9c" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53450238" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b66c6-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span><span class="sxs-lookup"><span data-stu-id="b66c6-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="b66c6-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b66c6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-103">使用<xref:System.IO.DirectoryInfo>类的典型操作，如复制、 移动、 重命名、 创建和删除目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="b66c6-104">如果要多次重用对象，请考虑使用的实例方法<xref:System.IO.DirectoryInfo>而不是相应的静态方法的<xref:System.IO.Directory>类，因为安全检查将不一定总是需要。</span><span class="sxs-lookup"><span data-stu-id="b66c6-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b66c6-105">在接受路径作为输入字符串的成员，该路径必须是格式正确，或引发的异常。</span><span class="sxs-lookup"><span data-stu-id="b66c6-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="b66c6-106">例如，如果路径是完全限定名称，但以空格开头，在类的方法不修整路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="b66c6-107">因此，该路径的格式不正确，并且会引发的异常。</span><span class="sxs-lookup"><span data-stu-id="b66c6-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="b66c6-108">同样的路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="b66c6-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="b66c6-109">例如，"c:\temp c:\windows"还会引发异常在大多数情况下。</span><span class="sxs-lookup"><span data-stu-id="b66c6-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="b66c6-110">请确保使用接受一个路径字符串的方法时您的路径的格式是否正确。</span><span class="sxs-lookup"><span data-stu-id="b66c6-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="b66c6-111">在接受一个路径的成员，路径可以引用的文件或只是一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="b66c6-112">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="b66c6-113">例如，以下所有条件都可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="b66c6-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="b66c6-114">"c:\\\MyDir\\\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b66c6-115">"c:\\\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b66c6-116">"MyDir\\\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b66c6-117">"\\\\\\\MyServer\\\MyShare"在 C# 中，或"\\\MyServer\MyShare"在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="b66c6-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="b66c6-118">默认情况下，对新目录的完全读/写访问权限授予所有用户。</span><span class="sxs-lookup"><span data-stu-id="b66c6-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="b66c6-119">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-120">下面的示例演示了一些主要成员`DirectoryInfo`类。</span><span class="sxs-lookup"><span data-stu-id="b66c6-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="b66c6-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="b66c6-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-122">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-123">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-124">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="b66c6-125">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="b66c6-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b66c6-126">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-127">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b66c6-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-128">此构造函数不会检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="b66c6-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="b66c6-129">此构造函数是一个字符串，用于访问在后续操作中的磁盘的占位符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="b66c6-130">`path`参数可以是文件名，包括通用命名约定 (UNC) 共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b66c6-131">当你使用特定的区域性设置进行编译的一组字符和检索个不同的区域性设置这些相同的字符时，字符可能无法解释，和可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="b66c6-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="b66c6-132">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-133">下面的示例使用此构造函数创建指定的目录和子目录，并演示不能删除包含子目录的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-134"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-135">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-136"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="b66c6-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b66c6-137">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="b66c6-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-138">用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-138">for reading from files and directories.</span></span> <span data-ttu-id="b66c6-139">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-140">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-141">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-142">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-143">创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-144">创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-145">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b66c6-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b66c6-146">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-147">以下示例检查是否存在指定的目录，会创建目录，如果它不存在，然后删除该目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-148">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-149">用于写入文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-149">for writing files.</span></span> <span data-ttu-id="b66c6-150">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-151">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-152">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-153">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="b66c6-154">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="b66c6-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="b66c6-155">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-156">使用此方法的重载使用访问控制，创建一个目录，因此不可能将安全性应用之前，无法访问目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="b66c6-157">如果该目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b66c6-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b66c6-158">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-159"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="b66c6-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-160">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-161"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-162"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b66c6-163">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="b66c6-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-164">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="b66c6-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b66c6-165">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-166">若要创建一个目录的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-166">for permission to create a directory.</span></span> <span data-ttu-id="b66c6-167">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b66c6-168">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-169">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="b66c6-170">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b66c6-171">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-171">The specified path.</span></span> <span data-ttu-id="b66c6-172">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="b66c6-173">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="b66c6-174">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="b66c6-175">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-176">指定的所有目录`path`创建的除非某一部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="b66c6-177">`path`参数指定的目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="b66c6-178">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b66c6-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b66c6-179">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-180">下面的示例演示如何创建一个子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="b66c6-181">在此示例中，创建后立即删除所创建的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="b66c6-182">因此，若要测试此示例，注释代码中删除行。</span><span class="sxs-lookup"><span data-stu-id="b66c6-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-183"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-184"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-185">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="b66c6-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-186">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="b66c6-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-187">-or-</span></span> 
<span data-ttu-id="b66c6-188">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b66c6-189">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="b66c6-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-190">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="b66c6-191">或</span><span class="sxs-lookup"><span data-stu-id="b66c6-191">-or-</span></span> 
<span data-ttu-id="b66c6-192">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="b66c6-193">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="b66c6-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b66c6-194"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-195">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-195">for reading and writing files.</span></span> <span data-ttu-id="b66c6-196">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-197">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-198">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-199">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b66c6-200">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-200">The specified path.</span></span> <span data-ttu-id="b66c6-201">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="b66c6-202">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="b66c6-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="b66c6-203">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="b66c6-204">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="b66c6-205">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-206">指定的所有目录`path`创建的除非某一部分`path`无效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="b66c6-207">`path`参数指定的目录路径，而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="b66c6-208">如果子目录已存在，则此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b66c6-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b66c6-209">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-210"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-211"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-212">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="b66c6-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-213">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="b66c6-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-214">-or-</span></span> 
<span data-ttu-id="b66c6-215">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b66c6-216">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="b66c6-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-217">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="b66c6-218">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-218">-or-</span></span> 
<span data-ttu-id="b66c6-219">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="b66c6-220">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="b66c6-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b66c6-221"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-222">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-222">for reading and writing files.</span></span> <span data-ttu-id="b66c6-223">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-224">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="b66c6-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-225">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="b66c6-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-226">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-227">如果尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="b66c6-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-228">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-229">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="b66c6-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-230">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="b66c6-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="b66c6-231">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-231">-or-</span></span> 
<span data-ttu-id="b66c6-232">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="b66c6-233">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-233">-or-</span></span> 
<span data-ttu-id="b66c6-234">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="b66c6-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="b66c6-235">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="b66c6-236">有关更多信息，请参见[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-237">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-238">用于写入的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-238">for writing directories.</span></span> <span data-ttu-id="b66c6-239">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-240">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-241">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-242">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="b66c6-243">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-244">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-245">如果`DirectoryInfo`没有文件或子目录，此方法会删除`DirectoryInfo`即使`recursive`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="b66c6-246">尝试删除`DirectoryInfo`不为空的何时`recursive`是`false`引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="b66c6-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="b66c6-247">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-248">下面的示例演示如何删除一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="b66c6-249">由于目录中删除，因此首先注释掉`Delete`测试目录已存在的行。</span><span class="sxs-lookup"><span data-stu-id="b66c6-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="b66c6-250">然后，取消注释代码以测试已成功删除目录的同一行。</span><span class="sxs-lookup"><span data-stu-id="b66c6-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-251">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-252">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="b66c6-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-253">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="b66c6-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="b66c6-254">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-254">-or-</span></span> 
<span data-ttu-id="b66c6-255">该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="b66c6-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-256">-or-</span></span> 
<span data-ttu-id="b66c6-257">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="b66c6-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-258">-or-</span></span> 
<span data-ttu-id="b66c6-259">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="b66c6-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="b66c6-260">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="b66c6-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="b66c6-261">有关更多信息，请参见[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-262">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="b66c6-263">编写所需的写入权限的标志<see langword="DirectoryInfo" />和要删除的子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-264">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-265">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-266">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-267">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-268">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-269">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-271">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-272">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待整个数组<xref:System.IO.DirectoryInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-273">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-274">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-275">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-276">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询来返回 2009 年之前创建的检查的值的所有目录的名称<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b66c6-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="b66c6-277">如果您只需要的子目录的名称，则使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="b66c6-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="b66c6-278">有关示例，请参阅<xref:System.IO.Directory.EnumerateDirectories%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b66c6-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-279">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-280">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-281">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-282">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-283">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="b66c6-284">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-285">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-286">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-287">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-287">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-288">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-289">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-289">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-290">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-291">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-291">?</span></span> <span data-ttu-id="b66c6-292">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-292">(question mark)</span></span>|<span data-ttu-id="b66c6-293">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-294">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-295">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-296">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-296">".</span></span> <span data-ttu-id="b66c6-297">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-299">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-300">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待整个数组<xref:System.IO.DirectoryInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-301">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-302">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-303">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-304"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-305">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-306">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-307">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-307">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-308">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-309">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-309">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b66c6-310">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-310">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-311">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-311">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b66c6-312">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-312">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-313">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-313">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-314">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-314">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-315">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-315">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-316">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-316">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-317">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-317">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-318">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-318">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-319">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-319">?</span></span> <span data-ttu-id="b66c6-320">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-320">(question mark)</span></span>|<span data-ttu-id="b66c6-321">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-321">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-322">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-322">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-323">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-323">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-324">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-324">".</span></span> <span data-ttu-id="b66c6-325">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-325">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-326"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和<xref:System.IO.DirectoryInfo.GetDirectories%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-326">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-327">当你使用<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>，可以开始枚举的集合<xref:System.IO.DirectoryInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-327">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-328">当你使用<xref:System.IO.DirectoryInfo.GetDirectories%2A>，你必须等待整个数组<xref:System.IO.DirectoryInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-328">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-329">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-329">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-330">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-330">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-331">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-331">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-332">以下示例中，从指定的目录开始使用此方法和<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>方法来枚举文件和开始目录中的目录并显示详细信息的任何文件超过 10 MB 的大小。</span><span class="sxs-lookup"><span data-stu-id="b66c6-332">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-333"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-333"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-334"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-334"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-335">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-335">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-336">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-336">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-337">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-337">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-338">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-338">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-339">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-339">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-340"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-340">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-341">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-341">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-342">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-342">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-343">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-343">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-344">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-344">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b66c6-345">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-345">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-346">下面的示例枚举指定目录下的文件，并使用 LINQ 查询来返回 2009 年之前创建的检查的值的所有文件的名称<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b66c6-346">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="b66c6-347">如果您只需要的文件的名称，则使用静态<xref:System.IO.Directory>类以更好的性能。</span><span class="sxs-lookup"><span data-stu-id="b66c6-347">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="b66c6-348">有关示例，请参阅<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b66c6-348">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="b66c6-349">下面的示例说明如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-349">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b66c6-350">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-350">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-351">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-352">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-353">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-353">The search string to match against the names of files.</span></span>  <span data-ttu-id="b66c6-354">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-355">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-355">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="b66c6-356">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-356">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-357">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-357">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-358">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-358">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-359">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-359">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-360">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-360">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-361">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-361">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-362">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-362">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-363">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-363">?</span></span> <span data-ttu-id="b66c6-364">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-364">(question mark)</span></span>|<span data-ttu-id="b66c6-365">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-365">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-366">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-366">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-367">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-367">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-368">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-368">".</span></span> <span data-ttu-id="b66c6-369">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-369">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-370"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-370">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-371">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-371">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-372">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-372">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-373">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-373">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-374">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-374">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b66c6-375">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-375">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-376">下面的示例说明如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b66c6-377">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-378"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-378"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-379">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-379">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-380">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-381">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-381">The search string to match against the names of files.</span></span>  <span data-ttu-id="b66c6-382">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-382">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-383">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-383">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b66c6-384">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-384">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-385">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-385">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b66c6-386">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-386">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-387">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-387">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-388">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-388">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-389">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-389">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-390">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-390">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-391">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-391">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-392">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-392">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-393">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-393">?</span></span> <span data-ttu-id="b66c6-394">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-394">(question mark)</span></span>|<span data-ttu-id="b66c6-395">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-395">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-396">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-396">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-397">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-397">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-398">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-398">".</span></span> <span data-ttu-id="b66c6-399">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-399">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-400"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-400">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-401">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-401">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-402">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-402">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-403">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-403">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-404">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-404">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b66c6-405">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-405">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-406">下面的示例说明如何通过使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-406">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b66c6-407">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-407">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-408"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-408"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-409"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-409"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-410">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-410">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-411">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-411">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-412">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-412">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-413">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-413">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-414">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-414">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-415"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-415">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-416">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-417">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待整个数组<xref:System.IO.FileSystemInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-417">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-418">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-419">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-419">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-420">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-421">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-422">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-422">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-423">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-423">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-424">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-425">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-425">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="b66c6-426">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-427">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-428">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-429">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-429">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-430">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-431">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-431">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-432">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-433">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-433">?</span></span> <span data-ttu-id="b66c6-434">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-434">(question mark)</span></span>|<span data-ttu-id="b66c6-435">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-436">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-437">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-438">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-438">".</span></span> <span data-ttu-id="b66c6-439">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-441">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-442">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待整个数组<xref:System.IO.FileSystemInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-443">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-444">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-445">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-446"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-446"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-447">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-447">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-448">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-448">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-449">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-449">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-450">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-450">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-451">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-451">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b66c6-452">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-452">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-453">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-453">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b66c6-454">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-454">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-455">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-455">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-456">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-456">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-457">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-457">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-458">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-458">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-459">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-459">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-460">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-460">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-461">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-461">?</span></span> <span data-ttu-id="b66c6-462">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-462">(question mark)</span></span>|<span data-ttu-id="b66c6-463">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-463">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-464">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-464">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-465">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-465">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-466">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-466">".</span></span> <span data-ttu-id="b66c6-467">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-467">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-468"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-468">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-469">当你使用<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>，可以开始枚举的集合<xref:System.IO.FileSystemInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-469">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-470">当你使用<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>，你必须等待整个数组<xref:System.IO.FileSystemInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-470">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-471">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-471">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-472">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-472">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b66c6-473">不缓存返回的集合;每次调用<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>集合方法将启动一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="b66c6-473">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-474"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-474"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-475"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-475"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-476">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-476">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-477">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-477">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b66c6-478">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-478">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="b66c6-479">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-479"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-480"><xref:System.IO.DirectoryInfo.Exists%2A>属性返回`false`如果尝试确定是否存在指定的文件时出现任何错误。</span><span class="sxs-lookup"><span data-stu-id="b66c6-480">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="b66c6-481">这可以在引发异常，例如传递文件名包含无效的字符或字符太多，失败或丢失的磁盘的情况下会发生或如果调用方不具有读取该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-481">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-482">下面的示例演示使用的`Exists`将源目录复制到目标目录的上下文中的属性。</span><span class="sxs-lookup"><span data-stu-id="b66c6-482">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-483">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-483">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-484">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-484">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-485">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-485">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b66c6-486">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-486">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="b66c6-487">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-487">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-488">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-488">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-489">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索访问控制列表 (ACL) 项当前文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-489">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b66c6-490">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-490">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-491">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-491">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b66c6-492">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="b66c6-492">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-493">调用此方法重载是等效于调用<xref:System.IO.Directory.GetAccessControl%2A>方法重载并指定访问控制部分<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-493">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="b66c6-494">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-494">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b66c6-495">ACL 描述个人和/或组具有或没有执行到给定的文件或目录的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-495">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b66c6-496">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-496">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-497">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法来添加，然后删除所需的访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-497">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="b66c6-498">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-498">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-499">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="b66c6-499">The directory is read-only.</span></span>  
  
<span data-ttu-id="b66c6-500">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-500">-or-</span></span> 
<span data-ttu-id="b66c6-501">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="b66c6-501">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="b66c6-502">或</span><span class="sxs-lookup"><span data-stu-id="b66c6-502">-or-</span></span> 
<span data-ttu-id="b66c6-503">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-503">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-504">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="b66c6-504">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b66c6-505">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b66c6-505">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-506">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-506">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="b66c6-507">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-507">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b66c6-508">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-508">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="b66c6-509"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="b66c6-509">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="b66c6-510">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-510">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b66c6-511">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="b66c6-511">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="b66c6-512">异常</span><span class="sxs-lookup"><span data-stu-id="b66c6-512">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="b66c6-513">异常类型</span><span class="sxs-lookup"><span data-stu-id="b66c6-513">Exception type</span></span> 
 </term><description> <span data-ttu-id="b66c6-514">条件</span><span class="sxs-lookup"><span data-stu-id="b66c6-514">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="b66c6-515">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-515">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="b66c6-516">当前进程不具有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-516">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="b66c6-517">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="b66c6-517">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="b66c6-518">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b66c6-518">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="b66c6-519">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="b66c6-519">The directory is read-only.</span></span>  
  
<span data-ttu-id="b66c6-520">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-520">-or-</span></span> 
<span data-ttu-id="b66c6-521">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="b66c6-521">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="b66c6-522">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-522">-or-</span></span> 
<span data-ttu-id="b66c6-523">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-523">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-524">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索当前文件的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-524">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b66c6-525">ACL 描述个人和/或组具有或没有执行到给定的文件或目录的特定操作的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-525">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b66c6-526">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-526">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-527">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-527">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="b66c6-528">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-528">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b66c6-529">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-529">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-530">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-530">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-531">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-531">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-532">一个 <see cref="T:System.IO.DirectoryInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-532">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-533">如果不有任何子目录，则此方法返回空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-533">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="b66c6-534">此方法不是递归。</span><span class="sxs-lookup"><span data-stu-id="b66c6-534">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b66c6-535">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-535">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-536">下面的示例检索的根目录中的所有目录，并显示目录的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-536">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-537">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，例如，在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="b66c6-537">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-538">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-538">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-539">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-540">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-540">for reading directories.</span></span> <span data-ttu-id="b66c6-541">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-541">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-542">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-542">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-543">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-543">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-544">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-544">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-545">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-545">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-546">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-546">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-547">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-547">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="b66c6-548">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-548">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-549">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-549">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-550">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-550">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-551">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-551">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-552">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-552">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-553">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-553">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-554">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-554">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-555">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-555">?</span></span> <span data-ttu-id="b66c6-556">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-556">(question mark)</span></span>|<span data-ttu-id="b66c6-557">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-557">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-558">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-558">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-559">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-559">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-560">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-560">".</span></span> <span data-ttu-id="b66c6-561">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-561">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-562">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-562">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-563">下面的示例计算包含所指定的信函的目录路径中。</span><span class="sxs-lookup"><span data-stu-id="b66c6-563">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-564"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-564"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-565"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-565"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-566">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-566">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-567">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-567">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-568">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-568">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b66c6-569">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-569">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-570">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-570">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-571">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-571">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-572">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-572">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-573">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-573">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b66c6-574">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-574">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-575">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-575">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="b66c6-576">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-576">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="b66c6-577">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-577">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-578">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-578">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-579">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-579">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-580">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-580">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-581">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-581">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-582">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-582">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-583">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-583">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-584">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-584">?</span></span> <span data-ttu-id="b66c6-585">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-585">(question mark)</span></span>|<span data-ttu-id="b66c6-586">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-586">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-587">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-587">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-588">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-588">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-589">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-589">".</span></span> <span data-ttu-id="b66c6-590">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-590">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-591">如果没有子目录，或者没有子目录匹配`searchPattern`参数，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-591">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b66c6-592">此方法预先填充以下值<xref:System.IO.DirectoryInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-592">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-593">下面的示例列出中的目录和文件字母"c"开头的所有"c:\\"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-593">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-594"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-594"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-595"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-595"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-596"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-596"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-597">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-597">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-598">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-598">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-599">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-599">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b66c6-600">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-600">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-601">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-602">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-603">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-604">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-604">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-605">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-605">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-606"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-606">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-607"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-607">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-608">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-608">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-609">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-609">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-610">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-610">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-611">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-611">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b66c6-612">无法保证返回的文件名的顺序;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="b66c6-612">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b66c6-613">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-613">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-614">下面的示例演示如何使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-614">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b66c6-615">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-615">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-616">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-616">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-617">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-617">for reading directories.</span></span> <span data-ttu-id="b66c6-618">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-618">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-619">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-619">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-620">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-620">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-621">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-621">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-622">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-622">The search string to match against the names of files.</span></span>  <span data-ttu-id="b66c6-623">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-623">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-624">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-624">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="b66c6-625"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-625">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-626">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-626">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-627">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-627">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-628">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-628">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-629">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-629">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-630">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-630">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-631">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-631">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-632">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-632">?</span></span> <span data-ttu-id="b66c6-633">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-633">(question mark)</span></span>|<span data-ttu-id="b66c6-634">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-634">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-635">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-635">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-636">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-636">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-637">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-637">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-638"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-638">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-639">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-639">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-640">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-640">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-641">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-641">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-642">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-642">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b66c6-643">中允许以下通配说明符`searchPattern`参数。</span><span class="sxs-lookup"><span data-stu-id="b66c6-643">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="b66c6-644">通配符字符</span><span class="sxs-lookup"><span data-stu-id="b66c6-644">Wildcard character</span></span>|<span data-ttu-id="b66c6-645">描述</span><span class="sxs-lookup"><span data-stu-id="b66c6-645">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="b66c6-646">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-646">Zero or more characters.</span></span>|  
|<span data-ttu-id="b66c6-647">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-647">?</span></span>|<span data-ttu-id="b66c6-648">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-648">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="b66c6-649">无法保证返回的文件名的顺序;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="b66c6-649">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b66c6-650">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-650">Wildcards are permitted.</span></span> <span data-ttu-id="b66c6-651">例如，`searchPattern`所有文件扩展名为"txt"的名称的字符串"\*.txt"的搜索。</span><span class="sxs-lookup"><span data-stu-id="b66c6-651">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="b66c6-652">`searchPattern`字符串"s\*"搜索以查找名称以字母"s"开头的所有文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-652">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="b66c6-653">如果有任何文件或没有文件匹配的`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-653">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b66c6-654">使用星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="b66c6-654">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="b66c6-655">一个`searchPattern`使用文件正好包含三个字符的扩展插件可以返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-655">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b66c6-656">一个`searchPattern`文件扩展名为一个、 两个，或三个以上的字符将返回唯一扩展名的文件的长度正好匹配中指定的文件扩展名的`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-656">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b66c6-657">当使用问号通配符字符，则此方法返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-657">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="b66c6-658">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。仅将第一个文件，同时搜索模式的 txt"返回"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-658">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b66c6-659">此方法检查针对使用 8.3 文件名的格式和长文件名的格式的文件名称，因为的搜索模式类似于"\* 1\*.txt"可能返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="b66c6-660">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名称格式是"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="b66c6-661">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-662">下面的示例演示如何使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b66c6-663">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-664"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-664"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-665"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-665"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-666">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-666">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-667">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-667">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-668">访问的路径或从文件和目录进行读取。</span><span class="sxs-lookup"><span data-stu-id="b66c6-668">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="b66c6-669">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-669">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-670">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-670">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-671">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-671">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-672">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-672">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-673">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-673">The search string to match against the names of files.</span></span>  <span data-ttu-id="b66c6-674">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-674">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-675">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-675">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="b66c6-676">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-676">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="b66c6-677"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-677">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-678"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和<xref:System.IO.DirectoryInfo.GetFiles%2A>方法的行为有所不同，如下所示：</span><span class="sxs-lookup"><span data-stu-id="b66c6-678">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b66c6-679">当你使用<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>，可以开始枚举的集合<xref:System.IO.FileInfo>对象之前，则返回整个集合。</span><span class="sxs-lookup"><span data-stu-id="b66c6-679">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b66c6-680">当你使用<xref:System.IO.DirectoryInfo.GetFiles%2A>，你必须等待整个数组<xref:System.IO.FileInfo>才能访问该数组要返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-680">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b66c6-681">因此，当您正在使用多个文件和目录，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>可能更有效。</span><span class="sxs-lookup"><span data-stu-id="b66c6-681">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b66c6-682">如果不没有在任何文件<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-682">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b66c6-683">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-684">通配符字符</span><span class="sxs-lookup"><span data-stu-id="b66c6-684">Wildcard character</span></span>|<span data-ttu-id="b66c6-685">描述</span><span class="sxs-lookup"><span data-stu-id="b66c6-685">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="b66c6-686">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-686">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-687">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-687">Zero or more characters.</span></span>|  
|<span data-ttu-id="b66c6-688">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-688">?</span></span> <span data-ttu-id="b66c6-689">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-689">(question mark)</span></span>|<span data-ttu-id="b66c6-690">完全零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-690">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="b66c6-691">无法保证返回的文件名的顺序;使用<xref:System.Array.Sort%2A>方法是否需要特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="b66c6-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b66c6-692">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-692">Wildcards are permitted.</span></span> <span data-ttu-id="b66c6-693">例如，`searchPattern`所有文件扩展名为"txt"的名称的字符串"\*.txt"的搜索。</span><span class="sxs-lookup"><span data-stu-id="b66c6-693">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="b66c6-694">`searchPattern`字符串"s\*"搜索以查找名称以字母"s"开头的所有文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-694">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="b66c6-695">如果有任何文件或没有文件匹配的`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-695">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b66c6-696">使用星号通配符时`searchPattern`(例如，"\*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</span><span class="sxs-lookup"><span data-stu-id="b66c6-696">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="b66c6-697">一个`searchPattern`使用文件正好包含三个字符的扩展插件可以返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-697">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b66c6-698">一个`searchPattern`文件扩展名为一个、 两个，或三个以上的字符将返回唯一扩展名的文件的长度正好匹配中指定的文件扩展名的`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-698">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b66c6-699">当使用问号通配符字符，则此方法返回与匹配指定的文件扩展名的文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-699">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="b66c6-700">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。仅将第一个文件，同时搜索模式的 txt"返回"文件\*.txt"返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-700">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="b66c6-701">以下列表显示了为不同长度的行为`searchPattern`参数：</span><span class="sxs-lookup"><span data-stu-id="b66c6-701">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="b66c6-702">"\*.abc"返回扩展 of.abc,.abcd,.abcde,.abcdef 的文件，等等。</span><span class="sxs-lookup"><span data-stu-id="b66c6-702">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="b66c6-703">"\*.abcd"只返回文件具有扩展名 of.abcd。</span><span class="sxs-lookup"><span data-stu-id="b66c6-703">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="b66c6-704">"\*.abcde"只返回文件具有扩展名 of.abcde。</span><span class="sxs-lookup"><span data-stu-id="b66c6-704">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="b66c6-705">"\*.abcdef"只返回文件具有扩展名 of.abcdef。</span><span class="sxs-lookup"><span data-stu-id="b66c6-705">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b66c6-706">此方法检查针对使用 8.3 文件名的格式和长文件名的格式的文件名称，因为的搜索模式类似于"\* 1\*.txt"可能返回意外的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-706">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="b66c6-707">例如，使用的搜索模式"\*1\*.txt"将返回"longfilename.txt"，因为等效 8.3 文件名称格式是"longf~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-707">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="b66c6-708">此方法预先填充以下值<xref:System.IO.FileInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-708">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-709">下面的示例演示如何使用不同的搜索选项从目录获取文件的列表。</span><span class="sxs-lookup"><span data-stu-id="b66c6-709">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b66c6-710">该示例假定具有名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt 和具有一个名为 SubFile.txt 文件的子目录的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-710">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-711"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-711"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-712"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-712"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-713"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-713"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-714">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-714">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-715">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-715">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-716">访问的路径或从文件和目录进行读取。</span><span class="sxs-lookup"><span data-stu-id="b66c6-716">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="b66c6-717">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-717">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-718">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-718">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-719">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-719">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-720">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-720">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b66c6-721">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-721">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-722">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-722">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="b66c6-723">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-723">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-724">如果不有任何文件或目录中的<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-724">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="b66c6-725">此方法不是递归。</span><span class="sxs-lookup"><span data-stu-id="b66c6-725">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b66c6-726">为子目录<xref:System.IO.FileSystemInfo>此方法返回的对象可强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="b66c6-726">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b66c6-727">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-727">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b66c6-728">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-728">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-729">下面的示例计算的文件和目录的指定目录下。</span><span class="sxs-lookup"><span data-stu-id="b66c6-729">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-730">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-730">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-731">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-731">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-732">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-733">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-734">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-734">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="b66c6-735">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b66c6-736">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-736">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="b66c6-737">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-737">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-738">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-738">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-739">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-739">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-740">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-740">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-741">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-741">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-742">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-742">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-743">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-743">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-744">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-744">?</span></span> <span data-ttu-id="b66c6-745">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-745">(question mark)</span></span>|<span data-ttu-id="b66c6-746">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-746">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-747">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-747">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-748">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-748">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-749">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-749">".</span></span> <span data-ttu-id="b66c6-750">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-750">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-751">此方法不是递归。</span><span class="sxs-lookup"><span data-stu-id="b66c6-751">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b66c6-752">为子目录<xref:System.IO.FileSystemInfo>此方法返回的对象可强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="b66c6-752">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b66c6-753">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-753">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b66c6-754">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-754">Wild cards are permitted.</span></span> <span data-ttu-id="b66c6-755">例如，`searchPattern`字符串"\* t"中的所有目录名称搜索`path`以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-755">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="b66c6-756">`searchPattern`字符串"s\*"中的所有目录名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-756">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-757">字符串".."仅可在`searchPattern`如果它作为一部分有效的目录名称，例如中指定的目录名称"。。b"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-757">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="b66c6-758">它不能用于目录层次结构向上移动。</span><span class="sxs-lookup"><span data-stu-id="b66c6-758">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="b66c6-759">如果不有任何文件或目录，或任何文件或目录与匹配`searchPattern`字符串中<xref:System.IO.DirectoryInfo>，此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-759">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b66c6-760">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-760">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-761">下面的示例计算的文件和与指定的搜索模式匹配的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-761">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-762"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-762"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-763"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-763"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-764">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-764">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-765">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-765">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-766">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-766">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b66c6-767">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-767">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-768">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-768">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-769">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-769">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-770">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-770">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b66c6-771">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="b66c6-771">The search string to match against the names of directories and filesa.</span></span>  <span data-ttu-id="b66c6-772">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-772">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b66c6-773">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="b66c6-773">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b66c6-774">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-774">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b66c6-775">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-775">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="b66c6-776">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="b66c6-776">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-777">`searchPattern` 可以是文本和通配符字符的组合，但它不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="b66c6-777">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b66c6-778">中允许以下通配说明符`searchPattern`。</span><span class="sxs-lookup"><span data-stu-id="b66c6-778">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b66c6-779">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="b66c6-779">Wildcard specifier</span></span>|<span data-ttu-id="b66c6-780">匹配</span><span class="sxs-lookup"><span data-stu-id="b66c6-780">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b66c6-781">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-781">\* (asterisk)</span></span>|<span data-ttu-id="b66c6-782">在该位置的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-782">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b66c6-783">?</span><span class="sxs-lookup"><span data-stu-id="b66c6-783">?</span></span> <span data-ttu-id="b66c6-784">（问号）</span><span class="sxs-lookup"><span data-stu-id="b66c6-784">(question mark)</span></span>|<span data-ttu-id="b66c6-785">在该位置的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-785">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b66c6-786">通配符以外的字符是原义字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-786">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b66c6-787">例如，字符串"\* t"搜索所有名称中以字母"t"结尾。</span><span class="sxs-lookup"><span data-stu-id="b66c6-787">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b66c6-788">".</span><span class="sxs-lookup"><span data-stu-id="b66c6-788">".</span></span> <span data-ttu-id="b66c6-789">`searchPattern`字符串"s\*"中的所有名称搜索`path`以字母"s"开头。</span><span class="sxs-lookup"><span data-stu-id="b66c6-789">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b66c6-790">为子目录<xref:System.IO.FileSystemInfo>此方法返回的对象可强制转换为派生类<xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="b66c6-790">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b66c6-791">使用<xref:System.IO.FileAttributes>返回值<xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType>属性来确定是否<xref:System.IO.FileSystemInfo>表示文件或目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-791">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b66c6-792">此方法预先填充以下值<xref:System.IO.FileSystemInfo>属性：</span><span class="sxs-lookup"><span data-stu-id="b66c6-792">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-793"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="b66c6-793"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-794"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-794"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b66c6-795"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="b66c6-795"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-796">指定的路径无效（例如，它在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="b66c6-796">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-797">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-797">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="b66c6-798">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-798">The name and path to which to move this directory.</span></span> <span data-ttu-id="b66c6-799">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-799">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="b66c6-800">它可以是你要将此目录作为子目录添加到某个现有目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-800">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="b66c6-801">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-801">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-802">此方法将引发<xref:System.IO.IOException>如果，例如，尝试将 c:\mydir 移动到 c:\public，并且 c:\public 已经存在。</span><span class="sxs-lookup"><span data-stu-id="b66c6-802">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="b66c6-803">必须指定"c:\\\public\\\mydir"作为`destDirName`参数，或指定新的目录名称，如"c:\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="b66c6-803">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="b66c6-804">此方法允许将一个目录移动到只读的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-804">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="b66c6-805">既不目录的读/写属性会受到影响。</span><span class="sxs-lookup"><span data-stu-id="b66c6-805">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="b66c6-806">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-806">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-807">下面的示例演示如何移动一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-807">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-808"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-808"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b66c6-809"><paramref name="destDirName" /> 是一个空字符串 (''")。</span><span class="sxs-lookup"><span data-stu-id="b66c6-809"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b66c6-810">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="b66c6-810">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="b66c6-811">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-811">-or-</span></span> 
 <span data-ttu-id="b66c6-812"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="b66c6-812"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="b66c6-813">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-813">-or-</span></span> 
<span data-ttu-id="b66c6-814">你没有访问此路径的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-814">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="b66c6-815">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b66c6-815">-or-</span></span> 
<span data-ttu-id="b66c6-816">要移动的目录和目标目录具有相同的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-816">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-817">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-817">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b66c6-818">找不到目标目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-818">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-819">用于读取和写入文件和目录以及用于访问目标目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-819">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="b66c6-820">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-820">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b66c6-821">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-821">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-822">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-822">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-823">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-823">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-824">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-824">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b66c6-825">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-825">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="b66c6-826">目录名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-826">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-827">这<xref:System.IO.DirectoryInfo.Name%2A>属性将返回仅的目录，如"Bin"的名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-827">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="b66c6-828">若要获取的完整路径，例如"c:\public\Bin"使用<xref:System.IO.FileSystemInfo.FullName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b66c6-828">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="b66c6-829"><xref:System.IO.DirectoryInfo.Name%2A>的属性<xref:System.IO.DirectoryInfo>要求没有权限 (超出构造所需的目录的读取权限<xref:System.IO.DirectoryInfo.Exists%2A>)，但可以提供目录名称。</span><span class="sxs-lookup"><span data-stu-id="b66c6-829">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="b66c6-830">如有必要给出<xref:System.IO.DirectoryInfo>到受保护的目录的安全加密的名称，为创建一个虚拟目录不受信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="b66c6-830">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="b66c6-831">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-831">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-832">下面的示例显示的当前名称`DirectoryInfo`仅实例。</span><span class="sxs-lookup"><span data-stu-id="b66c6-832">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-833">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-834">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-835">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b66c6-836">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-836">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="b66c6-837">父目录，或<see langword="null" />如果路径为 null 或文件路径表示根 (如"\\"，"c:"或 \*"\\\server\share")。</span><span class="sxs-lookup"><span data-stu-id="b66c6-837">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-838">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-838">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-839">下面的示例演示了引用指定目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-839">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-840">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-840">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-841">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-841">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b66c6-842">关联枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-842">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-843">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-843">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-844">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-844">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-845">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-845">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b66c6-846">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="b66c6-846">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="b66c6-847">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-847">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b66c6-848">下面的示例显示对于指定的目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="b66c6-848">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b66c6-849">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-849">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-850">用于读取从文件和目录和路径的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-850">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b66c6-851">关联枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />， <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-851">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-852">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-852">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-853">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-853">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-854">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-854">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="b66c6-855">一个对象，描述要应用于 <paramref name="path" /> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="b66c6-855">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b66c6-856">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-856">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b66c6-857">个人和/或组，或没有执行给定的文件或目录的特定操作的权限的人员，介绍了访问控制列表 (ACL)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-857">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b66c6-858">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="b66c6-858">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="b66c6-859"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法适用于表示非继承的 ACL 列表的文件的 ACL 条目。</span><span class="sxs-lookup"><span data-stu-id="b66c6-859">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b66c6-860">为 ACL 指定`directorySecurity`替换现有的目录的 ACL。</span><span class="sxs-lookup"><span data-stu-id="b66c6-860">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="b66c6-861">若要添加新用户的权限，请使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法可以获取现有 ACL，并对其进行修改。</span><span class="sxs-lookup"><span data-stu-id="b66c6-861">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="b66c6-862"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法仅保持<xref:System.Security.AccessControl.DirectorySecurity>对象创建后修改的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-862">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="b66c6-863">如果<xref:System.Security.AccessControl.DirectorySecurity>尚未修改对象，它不会保存到文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-863">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="b66c6-864">因此，不能检索<xref:System.Security.AccessControl.DirectorySecurity>对象从一个文件，并对另一个文件重新应用相同的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-864">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="b66c6-865">若要将 ACL 信息从一个文件复制到另一种：</span><span class="sxs-lookup"><span data-stu-id="b66c6-865">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="b66c6-866">使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>方法来检索<xref:System.Security.AccessControl.DirectorySecurity>源文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-866">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="b66c6-867">创建一个新<xref:System.Security.AccessControl.DirectorySecurity>目标文件的对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-867">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="b66c6-868">使用<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>源方法<xref:System.Security.AccessControl.DirectorySecurity>对象来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="b66c6-868">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="b66c6-869">使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>或<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法以将信息复制到目标的步骤 3 中检索<xref:System.Security.AccessControl.DirectorySecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="b66c6-869">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="b66c6-870">设置目标<xref:System.Security.AccessControl.DirectorySecurity>对象与目标文件使用<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b66c6-870">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b66c6-871">下面的示例使用<xref:System.IO.DirectoryInfo.GetAccessControl%2A>和<xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法来添加，然后删除所需的访问控制列表 (ACL) 项从一个目录。</span><span class="sxs-lookup"><span data-stu-id="b66c6-871">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b66c6-872"><paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-872">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="b66c6-873">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="b66c6-873">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b66c6-874">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-874">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b66c6-875">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b66c6-875">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b66c6-876">表示枚举目录的访问控制列表 (ACL) 权限。</span><span class="sxs-lookup"><span data-stu-id="b66c6-876">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="b66c6-877">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="b66c6-877">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b66c6-878">关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />， <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b66c6-878">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b66c6-879">返回用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-879">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="b66c6-880">用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="b66c6-880">The original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b66c6-881">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="b66c6-881">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b66c6-882">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-882">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b66c6-883">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="b66c6-883">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>