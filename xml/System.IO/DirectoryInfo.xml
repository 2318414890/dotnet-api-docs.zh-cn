<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DirectoryInfo.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59d77ffa90a7c6c644f21fab1107585ed64b93ce1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d77ffa90a7c6c644f21fab1107585ed64b93ce1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</source>
          <target state="translated">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>类用于典型操作，如复制、 移动、 重命名、 创建和删除的目录。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>If you are going to reuse an object several times, consider using the instance method of <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> instead of the corresponding static methods of the <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph> class, because a security check will not always be necessary.</source>
          <target state="translated">如果想要重用多次的某个对象，请考虑使用的实例方法<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>而不是静态方法的相应<ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph>类，因为安全检查不会总是有必要。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path as an input string, that path must be well-formed or an exception is raised.</source>
          <target state="translated">在接受将路径作为输入字符串的成员，该路径必须是格式正确，或引发异常。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</source>
          <target state="translated">例如，如果路径是完全限定的但以空格开始，在类的方法不修整路径。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Therefore, the path is malformed and an exception is raised.</source>
          <target state="translated">因此，该路径格式不正确并且引发异常。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Similarly, a path or a combination of paths cannot be fully qualified twice.</source>
          <target state="translated">同样，路径或组合的路径不能完全限定两次。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, "c:\temp c:\windows" also raises an exception in most cases.</source>
          <target state="translated">例如，"c:\temp c:\windows"也会引发异常在大多数情况下。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
          <target state="translated">确保使用接受将路径字符串的方法时，你的路径格式正确。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path, the path can refer to a file or just a directory.</source>
          <target state="translated">在接受路径的成员，路径可以引用一个文件或仅是目录。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</source>
          <target state="translated">指定的路径也可以指相对路径或服务器和共享名称的通用命名约定 (UNC) 路径。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, all the following are acceptable paths:</source>
          <target state="translated">例如，以下所有条件都可接受的路径：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt"在 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir"在 C# 或 Visual Basic 中的"c:\MyDir"。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
          <target state="translated">"MyDir<ph id="ph1">\\</ph>\MySubdir"在 C# 或 Visual Basic 中的"MyDir\MySubDir"。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
          <target state="translated">"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare"在 C# 中，或"<ph id="ph5">\\</ph>\MyServer\MyShare"在 Visual Basic 中。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>By default, full read/write access to new directories is granted to all users.</source>
          <target state="translated">默认情况下，对新目录的完全读/写访问权限授予所有用户。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates some of the main members of the <ph id="ph1">`DirectoryInfo`</ph> class.</source>
          <target state="translated">下面的示例演示的一些主要成员<ph id="ph1">`DirectoryInfo`</ph>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates how to copy a directory and its contents.</source>
          <target state="translated">下面的示例演示如何复制目录及其内容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>A string specifying the path on which to create the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>.</source>
          <target state="translated">一个字符串，它指定要在其中创建 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 的路径。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class on the specified path.</source>
          <target state="translated">初始化指定路径上的 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor does not check if a directory exists.</source>
          <target state="translated">此构造函数不会检查目录是否存在。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</source>
          <target state="translated">此构造函数是用于访问在后续操作中的磁盘的字符串的占位符。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph>参数可以为文件名，包括通用命名约定 (UNC) 共享上的文件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">当你使用特定的区域性设置进行编译的一组字符，并检索这些具有不同的区域性设置的相同字符时，字符可能无法解释，并可能会导致引发异常。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</source>
          <target state="translated">下面的示例使用此构造函数创建指定的目录和子目录，并演示包含子目录的目录，不能删除。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains invalid characters such as ", <ph id="ph2">&amp;lt;</ph>, <ph id="ph3">&amp;gt;</ph>, or |.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含无效字符，例如 "、<ph id="ph2">&amp;lt;</ph>、<ph id="ph3">&amp;gt;</ph> 或 |。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和/或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定的路径和/或文件名太长。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>for reading from files and directories.</source>
          <target state="translated">用于读取文件和目录。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a directory.</source>
          <target state="translated">创建目录。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>Creates a directory.</source>
          <target state="translated">创建目录。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">如果该目录已存在，则此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</source>
          <target state="translated">下面的示例检查是否存在指定的目录，会创建目录，如果它不存在，然后删除该目录。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>The directory cannot be created.</source>
          <target state="translated">无法创建目录。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>for writing files.</source>
          <target state="translated">用于写入文件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The access control to apply to the directory.</source>
          <target state="translated">要应用于此目录的访问控制。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a directory using a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象创建目录。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</source>
          <target state="translated">使用此方法重载来创建一个目录的访问控制，以便在安全设置会应用之前，可以访问该目录不会。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">如果该目录已存在，则此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is not empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 指定的目录为只读或为非空。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph> 定义的无效字符。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和/或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creating a directory with only the colon (:) character was attempted.</source>
          <target state="translated">试图创建只带冒号 (:) 字符的目录。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to create a directory.</source>
          <target state="translated">若要创建一个目录的权限。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">在指定路径上创建一个或多个子目录。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">指定路径可以是相对于 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 类的此实例的路径。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path.</source>
          <target state="translated">指定的路径。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">在指定路径上创建一个或多个子目录。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">指定路径可以是相对于 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 类的此实例的路径。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 中指定的最后一个目录。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">中指定的所有目录<ph id="ph1">`path`</ph>创建的除非的某些部分<ph id="ph2">`path`</ph>无效。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph>参数指定一个目录路径，而不是文件路径。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">如果子目录已存在，则此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">路径名称都限制为 248 个字符。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The following example demonstrates creating a subdirectory.</source>
          <target state="translated">下面的示例演示如何创建一个子目录。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>In this example, the created directories are removed once created.</source>
          <target state="translated">在此示例中，创建后立即删除所创建的目录。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Therefore, to test this sample, comment out the delete lines in the code.</source>
          <target state="translated">因此，若要测试此示例，应注释掉代码中删除的行。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 未指定有效的文件路径或包含无效 <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 字符。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">无法创建子目录。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated">文件或目录已具有 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 指定的名称。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和/或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定的路径和/或文件名太长。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">调用方没有代码访问权限来创建目录。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">调用方没有代码访问权限来读取返回的 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象所描述的目录。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated">当 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 参数描述现有目录时，会发生这种情况。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含不是驱动器标签（“C:<ph id="ph2">\\</ph>”）的一部分的冒号字符 (:)。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用于读取和写入文件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path.</source>
          <target state="translated">指定的路径。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The security to apply.</source>
          <target state="translated">要应用的安全性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a subdirectory or subdirectories on the specified path with the specified security.</source>
          <target state="translated">使用指定的安全性在指定的路径上创建一个或多个子目录。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">指定路径可以是相对于 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 类的此实例的路径。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 中指定的最后一个目录。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">中指定的所有目录<ph id="ph1">`path`</ph>创建的除非的某些部分<ph id="ph2">`path`</ph>无效。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph>参数指定一个目录路径，而不是文件路径。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">如果子目录已存在，则此方法没有任何影响。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">路径名称都限制为 248 个字符。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 未指定有效的文件路径或包含无效 <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 字符。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路径无效，例如位于未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">无法创建子目录。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated">文件或目录已具有 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 指定的名称。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路径和/或文件名超过了系统定义的最大长度。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">指定的路径和/或文件名太长。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">调用方没有代码访问权限来创建目录。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">调用方没有代码访问权限来读取返回的 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象所描述的目录。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated">当 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 参数描述现有目录时，会发生这种情况。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含不是驱动器标签（“C:<ph id="ph2">\\</ph>”）的一部分的冒号字符 (:)。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>for reading and writing files.</source>
          <target state="translated">用于读取和写入文件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Deletes a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> and its contents from a path.</source>
          <target state="translated">从路径中删除 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 及其内容。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Deletes this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> if it is empty.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 为空则将其删除。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The following example throws an exception if you attempt to delete a directory that is not empty.</source>
          <target state="translated">如果你尝试删除不为空的目录，下面的示例将引发异常。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory contains a read-only file.</source>
          <target state="translated">该目录包含一个只读文件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象描述的目录不存在或找不到。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is not empty.</source>
          <target state="translated">目录不为空。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">该目录是应用程序的当前工作目录。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>There is an open handle on the directory, and the operating system is Windows XP or earlier.</source>
          <target state="translated">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>This open handle can result from enumerating directories.</source>
          <target state="translated">开放句柄可能产生自枚举目录。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：枚举目录和文件<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>for writing directories.</source>
          <target state="translated">用于写入目录。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to delete this directory, its subdirectories, and all files; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要删除此目录，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Deletes this instance of a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>, specifying whether to delete subdirectories and files.</source>
          <target state="translated">删除 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 的此实例，指定是否删除子目录和文件。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>If the <ph id="ph1">`DirectoryInfo`</ph> has no files or subdirectories, this method deletes the <ph id="ph2">`DirectoryInfo`</ph> even if <ph id="ph3">`recursive`</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`DirectoryInfo`</ph>没有文件或子目录，此方法会删除<ph id="ph2">`DirectoryInfo`</ph>即使<ph id="ph3">`recursive`</ph>是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Attempting to delete a <ph id="ph1">`DirectoryInfo`</ph> that is not empty when <ph id="ph2">`recursive`</ph> is <ph id="ph3">`false`</ph> throws an <ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">尝试删除<ph id="ph1">`DirectoryInfo`</ph>，不为空时<ph id="ph2">`recursive`</ph>是<ph id="ph3">`false`</ph>引发<ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The following example demonstrates deleting a directory.</source>
          <target state="translated">下面的示例演示如何删除一个目录。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Because the directory is removed, first comment out the <ph id="ph1">`Delete`</ph> line to test that the directory exists.</source>
          <target state="translated">目录中删除，因为先注释掉<ph id="ph1">`Delete`</ph>测试目录已存在的行。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Then uncomment the same line of code to test that the directory was removed successfully.</source>
          <target state="translated">然后取消注释代码来测试目录已被成功删除同一的行。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains a read-only file.</source>
          <target state="translated">该目录包含一个只读文件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象描述的目录不存在或找不到。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is read-only.</source>
          <target state="translated">目录为只读。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains one or more files or subdirectories and <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">该目录包含一个或多个文件或子目录，且 <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">该目录是应用程序的当前工作目录。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</source>
          <target state="translated">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>This open handle can result from enumerating directories and files.</source>
          <target state="translated">枚举目录和文件可能会导致此开放句柄出现。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：枚举目录和文件<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Write flag required for write permission to the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> and subdirectories to be deleted.</source>
          <target state="translated">写入所需的写入权限的标志<ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>和要删除的子目录。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">返回当前目录中目录信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">返回当前目录中目录信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>An enumerable collection of directories in the current directory.</source>
          <target state="translated">当前目录中目录的可枚举集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询以返回 2009 年之前创建的检查的值的所有目录名<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>If you only need the names of the subdirectories, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">如果你只需要的子目录的名称，使用静态<ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph>类以更好的性能。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph> method.</source>
          <target state="translated">有关示例，请参阅<ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern.</source>
          <target state="translated">返回与指定的搜索模式匹配的目录信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 匹配的目录的可枚举集合。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，在未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> 匹配的目录的可枚举集合。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following example, starting from a specified directory, uses this method and the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</source>
          <target state="translated">以下示例中，从指定的目录开始使用此方法与<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>方法枚举的文件和目录中的开始目录并显示详细信息的任何文件超过 10 MB 的大小。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">返回当前目录中的文件信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">返回当前目录中的文件信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>An enumerable collection of the files in the current directory.</source>
          <target state="translated">当前目录中的文件的可枚举集合。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例枚举指定目录下的文件，并使用 LINQ 查询返回的 2009 年之前创建的检查的值的所有文件的名称<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>If you only need the names of the files, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">如果你只需要的文件的名称，使用静态<ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph>类以更好的性能。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">有关示例，请参阅<ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">要与文件名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Returns an enumerable collection of file information that matches a search pattern.</source>
          <target state="translated">返回与搜索模式匹配的文件信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 匹配的文件的可枚举集合。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">要与文件名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> 匹配的文件的可枚举集合。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项枚举目录中的文件。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">返回当前目录中的文件系统信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">返回当前目录中的文件系统信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>An enumerable collection of file system information in the current directory.</source>
          <target state="translated">当前目录中的文件系统信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern.</source>
          <target state="translated">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 匹配的文件系统信息对象的可枚举集合。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，在未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph> 匹配的文件系统信息对象的可枚举集合。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">不缓存返回的集合;每次调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>对集合的方法将启动一个新的枚举。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Exists">
          <source>Gets a value indicating whether the directory exists.</source>
          <target state="translated">获取指示目录是否存在的值。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the directory exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目录存在，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>属性返回<ph id="ph2">`false`</ph>如果在尝试确定指定的文件是否存在任何错误时发生。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
          <target state="translated">在引发异常，例如传递具有无效的字符或太多字符，磁盘失效或缺失的文件名的情况下可能发生这或如果调用方没有权限读取此文件。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The following example demonstrates a use of the <ph id="ph1">`Exists`</ph> property in the context of copying a source directory to a target directory.</source>
          <target state="translated">下面的示例演示使用<ph id="ph1">`Exists`</ph>将源目录复制到目标目录的上下文中的属性。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.FullName">
          <source>Gets the full path of the directory.</source>
          <target state="translated">获取目录的完整路径。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.FullName">
          <source>A string containing the full path.</source>
          <target state="translated">包含完整目录的字符串。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Gets the access control list (ACL) entries for the current directory.</source>
          <target state="translated">获取当前目录的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> methods to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>方法来检索访问控制的当前文件的列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：添加或移除访问控制列表项<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象，该对象封装当前 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象所描述的目录的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the directory.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象，该对象封装此目录的访问控制规则。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Calling this method overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method overload and specifying the access control sections <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph><ph id="ph6">`Or`</ph><ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph><ph id="ph8">`Or`</ph><ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> in Visual Basic).</source>
          <target state="translated">调用此方法重载是等效于调用<ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph>方法重载并指定访问控制部分<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> <ph id="ph6">`Or`</ph> <ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> <ph id="ph8">`Or`</ph> <ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>方法来检索当前文件的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：添加或移除访问控制列表项<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory could not be found or modified.</source>
          <target state="translated">未能找到或修改该目录。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory is read-only.</source>
          <target state="translated">目录为只读。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">当前平台不支持此操作。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An I/O error occurred while opening the directory.</source>
          <target state="translated">打开目录时发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">当前操作系统不是 Microsoft Windows 2000 或更高版本。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">表示枚举目录的访问控制列表 (ACL) 权限。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> values that specifies the type of access control list (ACL) information to receive.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象，该对象封装当前 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the file described by the <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象，它封装由 <ph id="ph2">&lt;paramref name="path" /&gt;</ph> 参数描述的文件的访问控制规则。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Exceptions</source>
          <target state="translated">异常</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Exception type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 异常类型</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 条件</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory could not be found or modified.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 未能找到或修改该目录。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current process does not have access to open the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 当前进程没有打开该目录的权限。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> An I/O error occurred while opening the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 打开目录时发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 当前操作系统不是 Microsoft Windows 2000 或更高版本。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 目录为只读。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">当前平台不支持此操作。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>方法来检索当前文件的访问控制列表 (ACL) 项。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：添加或移除访问控制列表项<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">表示枚举目录的访问控制列表 (ACL) 权限。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">返回当前目录的子目录。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">返回当前目录的子目录。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>If there are no subdirectories, this method returns an empty array.</source>
          <target state="translated">如果不存在子目录，此方法将返回空数组。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method is not recursive.</source>
          <target state="translated">此方法不是递归的。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The following example retrieves all the directories in the root directory and displays the directory names.</source>
          <target state="translated">下面的示例检索的根目录中的所有目录，并显示目录的名称。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, such as being on an unmapped drive.</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象中的路径无效，比如在未映射的驱动器上。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>for reading directories.</source>
          <target state="translated">用于读取目录。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 中与给定搜索条件匹配的目录的数组。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 匹配的 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following example counts the directories in a path that contain the specified letter.</source>
          <target state="translated">下面的示例计算包含指定的字母的目录路径中。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，在未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">用于读取从文件和目录和路径的访问权限。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">要与目录名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria and using a value to determine whether to search subdirectories.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 匹配的 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>If there are no subdirectories, or no subdirectories match the <ph id="ph1">`searchPattern`</ph> parameter, this method returns an empty array.</source>
          <target state="translated">如果不存在子目录，或者没有子目录匹配<ph id="ph1">`searchPattern`</ph>参数，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following example lists all of the directories and files that begin with the letter "c" in "c:<ph id="ph1">\\</ph>".</source>
          <target state="translated">下面的示例列出的所有目录和字母"c"开头的文件中"c:<ph id="ph1">\\</ph>"。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">封装在 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 对象中的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">用于读取从文件和目录和路径的访问权限。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">返回当前目录的文件列表。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">返回当前目录的文件列表。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果不没有在任何文件<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返回的文件的名称的顺序不能保证;使用<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>方法是否需要特定的排序顺序。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">路径无效（例如，路径位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>for reading directories.</source>
          <target state="translated">用于读取目录。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">要与文件名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Returns a file list from the current directory matching the given search pattern.</source>
          <target state="translated">返回当前目录中与给定的搜索模式匹配的文件列表。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果不没有在任何文件<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in the <ph id="ph1">`searchPattern`</ph> parameter.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>参数。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard character</source>
          <target state="translated">通配符</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters.</source>
          <target state="translated">零个或多个字符。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Exactly zero or one character.</source>
          <target state="translated">完全零个或一个字符。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返回的文件的名称的顺序不能保证;使用<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>方法是否需要特定的排序顺序。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">例如，<ph id="ph1">`searchPattern`</ph>字符串"*.txt"搜索所有文件扩展名为"txt"的名称。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"搜索所有以字母"s"开头的文件名。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果有任何文件，或否匹配的文件<ph id="ph1">`searchPattern`</ph>字符串中<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">使用中的星号通配符时<ph id="ph1">`searchPattern`</ph>(例如，"*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名<ph id="ph2">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展<ph id="ph2">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件<ph id="ph1">\*</ph>.txt"返回这两个文件。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1<ph id="ph1">\*</ph>.txt"可能会返回意外的文件的名称。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">例如，使用的搜索模式"<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">访问路径，用于读取文件和目录。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">要与文件名匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</source>
          <target state="translated">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 类型的数组。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法的行为有所不同，如下所示：</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>，你可以开始枚举的集合<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前，则返回整个集合。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>，你必须等待的整个数组<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>对象之前才能访问该数组返回。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">因此，当你正在使用许多文件和目录，<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>可能更有效。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果不没有在任何文件<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard character</source>
          <target state="translated">通配符</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters.</source>
          <target state="translated">零个或多个字符。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Exactly zero or one character.</source>
          <target state="translated">完全零个或一个字符。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">返回的文件的名称的顺序不能保证;使用<ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph>方法是否需要特定的排序顺序。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">例如，<ph id="ph1">`searchPattern`</ph>字符串"*.txt"搜索所有文件扩展名为"txt"的名称。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"搜索所有以字母"s"开头的文件名。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果有任何文件，或否匹配的文件<ph id="ph1">`searchPattern`</ph>字符串中<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">使用中的星号通配符时<ph id="ph1">`searchPattern`</ph>(例如，"*.txt")，具体取决于指定的文件扩展名的长度的匹配行为各不相同。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>文件扩展名为 3 个字符将返回的文件扩展名为三个或多个字符，其中的前三个字符匹配中指定的文件扩展名<ph id="ph2">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A<ph id="ph1">`searchPattern`</ph>与文件扩展名为一个、 两个或三个以上字符仅返回与匹配中指定的文件扩展名的长度正好扩展<ph id="ph2">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">当使用问号通配符字符，此方法将返回与匹配指定的文件扩展名的文件。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">例如，给定两个文件中的目录、"file1.txt"和"file1.txtother"，搜索模式的"文件？。txt"返回仅第一个文件时的搜索模式"文件<ph id="ph1">\*</ph>.txt"返回这两个文件。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following list shows the behavior of different lengths for the <ph id="ph1">`searchPattern`</ph> parameter:</source>
          <target state="translated">以下列表显示的不同长度的行为<ph id="ph1">`searchPattern`</ph>参数：</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</source>
          <target state="translated">"*.abc"返回文件具有扩展名 of.abc,.abcd,.abcde,.abcdef，依次类推。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcd" returns only files having an extension of.abcd.</source>
          <target state="translated">"*.abcd"返回仅具有扩展 of.abcd 的文件。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcde" returns only files having an extension of.abcde.</source>
          <target state="translated">"*.abcde"返回仅具有扩展 of.abcde 的文件。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcdef" returns only files having an extension of.abcdef.</source>
          <target state="translated">"*.abcdef"返回仅具有扩展 of.abcdef 的文件。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">此方法检查针对使用 8.3 文件名称格式和长文件名的格式的文件名称，因为的搜索模式类似于"* 1<ph id="ph1">\*</ph>.txt"可能会返回意外的文件的名称。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">例如，使用的搜索模式"<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt"将返回"longfilename.txt"，因为等效 8.3 文件名格式将"longf~1.txt"。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">下面的示例演示如何通过使用不同的搜索选项从目录获取文件的列表。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">该示例假定名为 log1.txt、 log2.txt、 test1.txt、 test2.txt、 test3.txt，和具有名为 SubFile.txt 的文件的子目录的文件的目录。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">访问路径，用于读取文件和目录。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing files and subdirectories of the current directory.</source>
          <target state="translated">检索表示当前目录的文件和子目录的强类型 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Returns an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries representing all the files and subdirectories in a directory.</source>
          <target state="translated">返回表示某个目录中所有文件和子目录的强类型 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 项的数组。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>An array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries.</source>
          <target state="translated">强类型 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 项的数组。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>If there are no files or directories in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果不有任何文件或目录中的<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method is not recursive.</source>
          <target state="translated">此方法不是递归的。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">对于子目录，<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>此方法返回的对象可以强制转换为派生类<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>返回值<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>属性来确定是否<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>表示文件或目录。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The following example counts the files and directories under the specified directory.</source>
          <target state="translated">下面的示例计算的文件和目录的指定目录下。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories and files.</source>
          <target state="translated">要与目录和文件的名称匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing the files and subdirectories that match the specified search criteria.</source>
          <target state="translated">检索强类型 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>An array of strongly typed <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> objects matching the search criteria.</source>
          <target state="translated">与搜索条件匹配的强类型 <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method is not recursive.</source>
          <target state="translated">此方法不是递归的。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">对于子目录，<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>此方法返回的对象可以强制转换为派生类<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>返回值<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>属性来确定是否<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>表示文件或目录。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wild cards are permitted.</source>
          <target state="translated">允许通配符。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*t" searches for all directory names in <ph id="ph2">`path`</ph> ending with the letter "t".</source>
          <target state="translated">例如，<ph id="ph1">`searchPattern`</ph>字符串"* t"中的所有目录名称搜索<ph id="ph2">`path`</ph>以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all directory names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有目录名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The string ".." can only be used in <ph id="ph1">`searchPattern`</ph> if it is specified as a part of a valid directory name, such as in the directory name "a..b".</source>
          <target state="translated">字符串".."仅可在<ph id="ph1">`searchPattern`</ph>如果它作为一部分有效目录名称，如中指定的目录名称"。。b"。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>It cannot be used to move up the directory hierarchy.</source>
          <target state="translated">它不能用于目录层次结构中向上移动。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>If there are no files or directories, or no files or directories that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">如果不有任何文件或目录，或任何文件或匹配的目录<ph id="ph1">`searchPattern`</ph>字符串中<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>，此方法返回一个空数组。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following example counts the files and directories that match the specified search pattern.</source>
          <target state="translated">下面的示例计算的文件和与指定的搜索模式匹配的目录。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路径无效（例如，它位于未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">用于读取从文件和目录和路径的访问权限。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories and filesa.</source>
          <target state="translated">要与目录和文件的名称匹配的搜索字符串。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">此参数可以包含有效文本路径和通配符（* 和 ?）的组合，但不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects that represent the files and subdirectories matching the specified search criteria.</source>
          <target state="translated">检索 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An array of file system entries that match the search criteria.</source>
          <target state="translated">与搜索条件匹配的文件系统项的数组。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 可以是文本和通配符字符的组合，但它不支持正则表达式。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">中允许有以下通配说明符<ph id="ph1">`searchPattern`</ph>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">通配符说明符</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">匹配</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*（星号）</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">在该位置的零个或多个字符。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">（问号）</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">在该位置的零个或一个字符。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">非通配符字符是原义字符。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">例如，字符串"* t"搜索所有中的名称以字母"t"结尾。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph>字符串"s<ph id="ph2">\*</ph>"中的所有名称搜索<ph id="ph3">`path`</ph>以字母"s"开头。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">对于子目录，<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>此方法返回的对象可以强制转换为派生类<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph>返回值<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph>属性来确定是否<ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph>表示文件或目录。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">此方法将预先填充的以下值<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 包含一个或多个 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 方法定义的无效字符。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路径无效（例如，它在未映射的驱动器上）。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The name and path to which to move this directory.</source>
          <target state="translated">要将此目录移动到的目标位置的名称和路径。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination cannot be another disk volume or a directory with the identical name.</source>
          <target state="translated">目标不能是另一个具有相同名称的磁盘卷或目录。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>It can be an existing directory to which you want to add this directory as a subdirectory.</source>
          <target state="translated">它可以是你要将此目录作为子目录添加到某个现有目录。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Moves a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance and its contents to a new path.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 实例及其内容移动到新路径。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method throws an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</source>
          <target state="translated">此方法将引发<ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>如果，例如，你尝试将 c:\mydir 移到 c:\public，并且 c:\public 已经存在。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You must specify "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir" as the <ph id="ph3">`destDirName`</ph> parameter, or specify a new directory name such as "c:<ph id="ph4">\\</ph>\newdir".</source>
          <target state="translated">必须指定"c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir"作为<ph id="ph3">`destDirName`</ph>参数，或指定新的目录名称，如"c:<ph id="ph4">\\</ph>\newdir"。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method permits moving a directory to a read-only directory.</source>
          <target state="translated">此方法允许将目录移动到只读的目录。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The read/write attribute of neither directory is affected.</source>
          <target state="translated">既不目录的读/写属性会受到影响。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The following example demonstrates moving a directory.</source>
          <target state="translated">下面的示例演示如何移动一个目录。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is an empty string (''").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> 是空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>An attempt was made to move a directory to a different volume.</source>
          <target state="translated">尝试将目录移动到不同的卷。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> 已存在。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You are not authorized to access this path.</source>
          <target state="translated">你没有访问此路径的权限。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The directory being moved and the destination directory have the same name.</source>
          <target state="translated">要移动的目录和目标目录具有相同的名称。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination directory cannot be found.</source>
          <target state="translated">找不到目标目录。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>for reading and writing files and directories and for access to the destination directory.</source>
          <target state="translated">用于读取和写入文件和目录以及用于访问目标目录。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Name">
          <source>Gets the name of this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 实例的名称。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The directory name.</source>
          <target state="translated">目录名称。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>This <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property returns only the name of the directory, such as "Bin".</source>
          <target state="translated">这<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph>属性返回仅目录，例如"Bin"的名称。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>To get the full path, such as "c:\public\Bin", use the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph> property.</source>
          <target state="translated">若要获取的完整路径，例如"c:\public\Bin"使用<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> requires no permission (beyond the read permission to the directory necessary to construct the <ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>) but can give out the directory name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>不需要任何权限 (超出对构造所需的目录的读取权限<ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>) 但可以透露的目录名称。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>If it is necessary to hand out a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</source>
          <target state="translated">如有必要移交 out<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>到受保护的目录具有加密性极安全的名称，为创建一个虚拟目录的不受信任的代码使用。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The following example displays the name of the current <ph id="ph1">`DirectoryInfo`</ph> instance only.</source>
          <target state="translated">下面的示例显示的当前名称<ph id="ph1">`DirectoryInfo`</ph>仅实例。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Gets the parent directory of a specified subdirectory.</source>
          <target state="translated">获取指定的子目录的父目录。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The parent directory, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the path is null or if the file path denotes a root (such as "<ph id="ph2">\\</ph>", "C:", or * "<ph id="ph3">\\</ph>\server\share").</source>
          <target state="translated">父目录，或<ph id="ph1">&lt;see langword="null" /&gt;</ph>如果路径为 null 或文件路径表示根 (如"<ph id="ph2">\\</ph>"，"c:"或 *"<ph id="ph3">\\</ph>\server\share")。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">通用 I/O 任务的列表，请参阅<bpt id="p1">[</bpt>通用 I/O 任务<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The following example demonstrates referring to the parent directory of a specified directory.</source>
          <target state="translated">下面的示例演示引用指定的目录的父目录。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">用于读取从文件和目录和路径的访问权限。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>Gets the root portion of the directory.</source>
          <target state="translated">获取目录的根部分。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>An object that represents the root of the directory.</source>
          <target state="translated">一个表示目录的根目录的对象。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>The following example displays root locations for specified directories.</source>
          <target state="translated">下面的示例显示对于指定的目录的根位置。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>The caller does not have the required permission.</source>
          <target state="translated">调用方没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">用于读取从文件和目录和路径的访问权限。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An object that describes an ACL entry to apply to the directory described by the <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">一个对象，描述要应用于 <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> 参数所描述的目录的 ACL 项。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object to the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 对象所描述的访问控制列表 (ACL) 项应用于当前 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 对象所描述的目录。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">访问控制列表 (ACL) 描述个人和/或组具有或没有执行到给定的文件或目录上的特定操作的权限。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何：添加或移除访问控制列表项<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method applies ACL entries to a file that represents the noninherited ACL list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>方法适用于表示非继承的 ACL 列表的文件的 ACL 条目。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The ACL specified for <ph id="ph1">`directorySecurity`</ph> replaces the existing ACL for the directory.</source>
          <target state="translated">为 ACL 指定<ph id="ph1">`directorySecurity`</ph>替换现有的目录 ACL。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, and modify it.</source>
          <target state="translated">若要添加的新用户的权限，请使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>方法可以获取现有的 ACL，并对其进行修改。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> objects that have been modified after object creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>方法仍然仅存在<ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>对象创建后已修改的对象。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>尚未修改对象，它不会保留到文件。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
          <target state="translated">因此，不能检索<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>对象从一个文件，并重新对同一对象应用到另一个文件。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To copy ACL information from one file to another:</source>
          <target state="translated">若要将 ACL 信息从一个文件复制到另一个：</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from the source file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>方法来检索<ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>源文件中的对象。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object for the destination file.</source>
          <target state="translated">创建一个新<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>目标文件的对象。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to retrieve the ACL information.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph>方法的源<ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>要检索 ACL 信息对象。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph>方法的信息复制到目标的步骤 3 中检索<ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">设置目标<ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph>到目标文件使用的对象<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph>方法添加，然后删除访问控制列表 (ACL) 项从一个目录。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The file could not be found or modified.</source>
          <target state="translated">未能找到或修改该文件。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">当前进程不具有打开该文件的权限。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">当前操作系统不是 Microsoft Windows 2000 或更高版本。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">表示枚举目录的访问控制列表 (ACL) 权限。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">返回用户所传递的原始路径。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">返回用户所传递的原始路径。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>