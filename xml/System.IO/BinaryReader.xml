<Type Name="BinaryReader" FullName="System.IO.BinaryReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7358d432a04b231fa5d09c8bc529d6f0c17a4389" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39987173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryReader" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryReader : IDisposable" />
  <TypeSignature Language="F#" Value="type BinaryReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="af416-101">用特定的编码将基元数据类型读作二进制值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="af416-101">Reads primitive data types as binary values in a specific encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-102"><xref:System.IO.BinaryReader>类提供了简化从流读取基元数据类型的方法。</span><span class="sxs-lookup"><span data-stu-id="af416-102">The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream.</span></span> <span data-ttu-id="af416-103">例如，可以使用<xref:System.IO.BinaryReader.ReadBoolean%2A>方法读取作为布尔值的下一个字节和流中的当前位置提升 1 个字节。</span><span class="sxs-lookup"><span data-stu-id="af416-103">For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.</span></span> <span data-ttu-id="af416-104">类包括支持不同的数据类型的读取的方法。</span><span class="sxs-lookup"><span data-stu-id="af416-104">The class includes read methods that support different data types.</span></span>  
  
 <span data-ttu-id="af416-105">当你创建的新实例<xref:System.IO.BinaryReader>类，提供要读取的流和 （可选） 指定的编码类型和释放后是否将流保留为打开<xref:System.IO.BinaryReader>对象。</span><span class="sxs-lookup"><span data-stu-id="af416-105">When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object.</span></span> <span data-ttu-id="af416-106">如果未指定编码类型，则使用 utf-8。</span><span class="sxs-lookup"><span data-stu-id="af416-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="af416-107">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="af416-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="af416-108">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="af416-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="af416-109">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="af416-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="af416-110">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="af416-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="af416-111">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="af416-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-112">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-112">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af416-113">初始化 <see cref="T:System.IO.BinaryReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-113">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="af416-114">输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-114">The input stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-115">基于所指定的流和特定的 UTF-8 编码，初始化 <see cref="T:System.IO.BinaryReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-115">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and using UTF-8 encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-116">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-116">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-117">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-117">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-118">该流不支持读取，为<see langword="null" /> 或已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-118">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream * System.Text.Encoding -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader (input, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="af416-119">输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-119">The input stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="af416-120">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-120">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-121">基于所指定的流和特定的字符编码，初始化 <see cref="T:System.IO.BinaryReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-121">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-122">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-122">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-123">该流不支持读取，为<see langword="null" /> 或已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-123">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="af416-124">
            <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-124">
              <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryReader : System.IO.Stream * System.Text.Encoding * bool -&gt; System.IO.BinaryReader" Usage="new System.IO.BinaryReader (input, encoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="af416-125">输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-125">The input stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="af416-126">要使用的字符编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-126">The character encoding to use.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="af416-127">如果在释放 <see cref="T:System.IO.BinaryReader" /> 对象后保持流处于打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-127">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryReader" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-128">基于所提供的流和特定的字符编码，初始化 <see cref="T:System.IO.BinaryReader" /> 类的新实例，有选择性的打开流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-128">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-129">该流不支持读取，为<see langword="null" /> 或已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-129">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="af416-130">
            <paramref name="encoding" /> 或 <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-130">
              <paramref name="encoding" /> or <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryReader.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.BinaryReader.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af416-131">公开对 <see cref="T:System.IO.BinaryReader" /> 的基础流的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-131">Exposes access to the underlying stream of the <see cref="T:System.IO.BinaryReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af416-132">与 <see langword="BinaryReader" /> 关联的基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-132">The underlying stream associated with the <see langword="BinaryReader" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="af416-133">使用基础流进行读取时或同时使用`BinaryReader`可能会导致数据丢失和损坏。</span><span class="sxs-lookup"><span data-stu-id="af416-133">Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption.</span></span> <span data-ttu-id="af416-134">例如，可能会超过一次读取的相同的字节数、 字节数可能会跳过，或字符的读取可能会变得不可预测。</span><span class="sxs-lookup"><span data-stu-id="af416-134">For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.</span></span>  
  
 <span data-ttu-id="af416-135">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-135">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-136">下面的代码示例演示如何读取和写入`Double`数据写到使用内存`BinaryReader`并<xref:System.IO.BinaryWriter>类的顶部<xref:System.IO.MemoryStream>类。</span><span class="sxs-lookup"><span data-stu-id="af416-136">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="af416-137">`MemoryStream` 仅读取和写入`Byte`数据。</span><span class="sxs-lookup"><span data-stu-id="af416-137">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="binaryReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-138">关闭当前阅读器及基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-138">Closes the current reader and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-139">此实现`Close`调用<xref:System.IO.BinaryReader.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="af416-139">This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="af416-140">除非显式调用，刷新该流不会刷新其基础编码器<xref:System.IO.Stream.Flush%2A>或`Close`。</span><span class="sxs-lookup"><span data-stu-id="af416-140">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="af416-141">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但编码器状态不会进行刷新。</span><span class="sxs-lookup"><span data-stu-id="af416-141">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="af416-142">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="af416-142">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="af416-143">这种情况下会影响 UTF8，UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="af416-143">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af416-144">释放 <see cref="T:System.IO.BinaryReader" /> 类使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-144">Releases the resources used by the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="binaryReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-145">释放 <see cref="T:System.IO.BinaryReader" /> 类的当前实例所使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-145">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-146">在完成使用 `Dispose` 后，应调用 <xref:System.IO.BinaryReader>。</span><span class="sxs-lookup"><span data-stu-id="af416-146">Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="af416-147">`Dispose` 方法使 <xref:System.IO.BinaryReader> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="af416-147">The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state.</span></span> <span data-ttu-id="af416-148">在调用`Dispose`，必须释放对所有引用<xref:System.IO.BinaryReader>这样垃圾回收器才能收回内存的<xref:System.IO.BinaryReader>占用。</span><span class="sxs-lookup"><span data-stu-id="af416-148">After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.</span></span>  
  
 <span data-ttu-id="af416-149">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-149">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af416-150">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.IO.BinaryReader>。</span><span class="sxs-lookup"><span data-stu-id="af416-150">Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="af416-151">否则，在垃圾回收器调用 <xref:System.IO.BinaryReader> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="af416-151">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="binaryReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="af416-152">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-152">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-153">释放 <see cref="T:System.IO.BinaryReader" /> 类使用的非托管资源，并可以选择释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-153">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryReader" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-154">调用此方法`Dispose`和<xref:System.Object.Finalize%2A>。</span><span class="sxs-lookup"><span data-stu-id="af416-154">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="af416-155">默认情况下，此方法指定`disposing`参数作为`true`。</span><span class="sxs-lookup"><span data-stu-id="af416-155">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="af416-156"><xref:System.Object.Finalize%2A> 指定`disposing`参数作为`false`。</span><span class="sxs-lookup"><span data-stu-id="af416-156"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="af416-157">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.BinaryReader> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="af416-157">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references.</span></span> <span data-ttu-id="af416-158">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="af416-158">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="af416-159">
            <para>
              <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /> 可以多次调用由其他对象。重写此方法时, 请小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。有关如何实现此方法的详细信息，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。有关详细信息<see cref="M:System.IDisposable.Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-159">
              <para>
                <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillBuffer">
      <MemberSignature Language="C#" Value="protected virtual void FillBuffer (int numBytes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillBuffer(int32 numBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.FillBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FillBuffer (numBytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FillBuffer(int numBytes);" />
      <MemberSignature Language="F#" Value="abstract member FillBuffer : int -&gt; unit&#xA;override this.FillBuffer : int -&gt; unit" Usage="binaryReader.FillBuffer numBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numBytes">
          <span data-ttu-id="af416-160">要读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-160">The number of bytes to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-161">用从流中读取的指定字节数填充内部缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-161">Fills the internal buffer with the specified number of bytes read from the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-162">内部缓冲区的大小为 16 和返回的值之间的较大值<xref:System.Text.Encoding.GetMaxByteCount%2A>为指定的编码。</span><span class="sxs-lookup"><span data-stu-id="af416-162">The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.</span></span>  
  
 <span data-ttu-id="af416-163">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-163">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-164">在可以读取 <paramref name="numBytes" /> 之前到达了流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-164">The end of the stream is reached before <paramref name="numBytes" /> could be read.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-165">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-165">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="af416-166">请求的 <paramref name="numBytes" /> 大于内部缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-166">Requested <paramref name="numBytes" /> is larger than the internal buffer size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PeekChar">
      <MemberSignature Language="C#" Value="public virtual int PeekChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PeekChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.PeekChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int PeekChar();" />
      <MemberSignature Language="F#" Value="abstract member PeekChar : unit -&gt; int&#xA;override this.PeekChar : unit -&gt; int" Usage="binaryReader.PeekChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-167">返回下一个可用的字符，并且不提升字节或字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-167">Returns the next available character and does not advance the byte or character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-168">下一个可用的字符，或者，如果没有可用字符或者流不支持查找时为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-168">The next available character, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-169">如果代理项字符可以出现在流使用<xref:System.IO.BinaryReader.ReadChars%2A>方法，然后将流设置回原始位置。</span><span class="sxs-lookup"><span data-stu-id="af416-169">If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.</span></span>  
  
 <span data-ttu-id="af416-170">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-170">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-171">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-171">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-172">当前字符无法通过使用为该流选择的 <see cref="T:System.Text.Encoding" /> 解码到内部字符缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-172">The current character cannot be decoded into the internal character buffer by using the <see cref="T:System.Text.Encoding" /> selected for the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af416-173">从基础流中读取字节，并将流的当前位置前移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-173">Reads bytes from the underlying stream and advances the current position of the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="binaryReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-174">从基础流中读取字符，并根据所使用的 <see langword="Encoding" /> 和从流中读取的特定字符，提升流的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-174">Reads characters from the underlying stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-175">输入流中的下一个字符，如果当前无可用字符则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-175">The next character from the input stream, or -1 if no characters are currently available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-176"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-176"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-177">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-177">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-178">下面的示例演示如何读取和写入将内存用作后备存储的数据。</span><span class="sxs-lookup"><span data-stu-id="af416-178">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="af416-179">本示例向控制台显示无效的文件路径字符的列表。</span><span class="sxs-lookup"><span data-stu-id="af416-179">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="af416-180">尽管该代码尝试显示无效的文件路径的所有字符的列表，但并非所有字符都可显示集内的字符。</span><span class="sxs-lookup"><span data-stu-id="af416-180">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="af416-181">因为无效字符列表可以因系统上，此代码的输出可能也会有所不同。</span><span class="sxs-lookup"><span data-stu-id="af416-181">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CPP/rwreadchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CS/rwreadchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/VB/rwreadchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-182">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-182">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-183">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-183">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;byte&gt; -&gt; int&#xA;override this.Read : Span&lt;byte&gt; -&gt; int" Usage="binaryReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="binaryReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int&#xA;override this.Read : byte[] * int * int -&gt; int" Usage="binaryReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="af416-184">将数据读入的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-184">The buffer to read data into.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af416-185">缓冲区中的起始点，在该处开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-185">The starting point in the buffer at which to begin reading into the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="af416-186">要读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-186">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-187">从字节数组中的指定点开始，从流中读取指定的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-187">Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-188">读入 <paramref name="buffer" /> 的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-188">The number of bytes read into <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="af416-189">如果可用的字节没有请求的那么多，此数可能小于所请求的字节数；如果到达了流的末尾，此数可能为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-189">This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-190"><xref:System.IO.BinaryReader> 读取操作失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-190"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="af416-191">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-191">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-192">下面的示例演示如何通过使用内存作为后备存储编写的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="af416-192">The following example shows how to write binary data by using memory as a backing store.</span></span> <span data-ttu-id="af416-193">它显示一条消息，指示数据是否已正确写入控制台。</span><span class="sxs-lookup"><span data-stu-id="af416-193">It displays a message to the console that indicates whether the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 <span data-ttu-id="af416-194">此示例读取文件的内容，并以 16 列格式显示每个字节的数字值。</span><span class="sxs-lookup"><span data-stu-id="af416-194">This example reads the contents of a file and displays each byte's numeric value in 16-column format.</span></span> <span data-ttu-id="af416-195">检测到正在读取的文件的末尾时<xref:System.IO.BinaryReader.Read%2A>方法将返回零字节。</span><span class="sxs-lookup"><span data-stu-id="af416-195">The end of the file that is being read is detected when the <xref:System.IO.BinaryReader.Read%2A> method returns zero bytes.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-196">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-196">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-197">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-197">-or-</span>
          </span>
          <span data-ttu-id="af416-198">要读取的解码字符数大于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-198">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-199">如果 Unicode 解码器返回回退字符或代理项对，则可能发生此情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-199">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="af416-200">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-200">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="af416-201">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-201">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-202">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-202">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-203">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-203">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="binaryReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="af416-204">将数据读入的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-204">The buffer to read data into.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="af416-205">缓冲区中的起始点，在该处开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-205">The starting point in the buffer at which to begin reading into the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="af416-206">要读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-206">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-207">从字符数组中的指定点开始，从流中读取指定的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-207">Reads the specified number of characters from the stream, starting from a specified point in the character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-208">读入缓冲区的总字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-208">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="af416-209">如果当前可用的字节没有请求的那么多，此数可能小于所请求的字符数；如果到达了流的末尾，此数可能为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-209">This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-210"><xref:System.IO.BinaryReader> 读取操作失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-210"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="af416-211">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-211">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-212">下面的示例演示如何读取和写入将内存用作后备存储的数据。</span><span class="sxs-lookup"><span data-stu-id="af416-212">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="af416-213">本示例向控制台显示无效的文件路径字符的列表。</span><span class="sxs-lookup"><span data-stu-id="af416-213">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="af416-214">尽管该代码尝试显示无效的文件路径的所有字符的列表，但并非所有字符都可显示集内的字符。</span><span class="sxs-lookup"><span data-stu-id="af416-214">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="af416-215">因为无效字符列表可以因系统上，此代码的输出可能也会有所不同。</span><span class="sxs-lookup"><span data-stu-id="af416-215">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-216">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-216">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-217">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-217">-or-</span>
          </span>
          <span data-ttu-id="af416-218">要读取的解码字符数大于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-218">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-219">如果 Unicode 解码器返回回退字符或代理项对，则可能发生此情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-219">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="af416-220">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-220">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="af416-221">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-221">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-222">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-222">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-223">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-223">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected internal int Read7BitEncodedInt ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance int32 Read7BitEncodedInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read7BitEncodedInt" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function Read7BitEncodedInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; int Read7BitEncodedInt();" />
      <MemberSignature Language="F#" Value="member this.Read7BitEncodedInt : unit -&gt; int" Usage="binaryReader.Read7BitEncodedInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-224">以压缩格式读入 32 位整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-224">Reads in a 32-bit integer in compressed format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-225">压缩格式的 32 位整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-225">A 32-bit integer in compressed format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-226"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-226"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-227">如果整数都适合以七位为单位，整数将仅使用一个字节的空间。</span><span class="sxs-lookup"><span data-stu-id="af416-227">If the integer will fit in seven bits, the integer takes only one byte of space.</span></span> <span data-ttu-id="af416-228">应为整数已写入通过<xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="af416-228">The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="af416-229">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-229">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-230">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-230">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-231">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-231">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-232">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-232">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="af416-233">流已损坏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-233">The stream is corrupted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadBoolean : unit -&gt; bool&#xA;override this.ReadBoolean : unit -&gt; bool" Usage="binaryReader.ReadBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-234">从当前流中读取 <see langword="Boolean" /> 值，并使该流的当前位置提升 1 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-234">Reads a <see langword="Boolean" /> value from the current stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-235">如果字节为非零则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-235">
              <see langword="true" /> if the byte is nonzero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-236"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-236"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-237">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-237">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-238">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-238">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-239">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-239">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-240">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-240">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-241">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-241">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual byte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Byte ReadByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; byte&#xA;override this.ReadByte : unit -&gt; byte" Usage="binaryReader.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-242">从当前流中读取下一个字节，并使流的当前位置提升 1 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-242">Reads the next byte from the current stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-243">从当前流中读取的下一个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-243">The next byte read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-244"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-244"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-245">由于数据格式设置冲突，不建议此方法中使用以下编码：</span><span class="sxs-lookup"><span data-stu-id="af416-245">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="af416-246">UTF-7</span><span class="sxs-lookup"><span data-stu-id="af416-246">UTF-7</span></span>  
  
-   <span data-ttu-id="af416-247">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="af416-247">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="af416-248">ISCII</span><span class="sxs-lookup"><span data-stu-id="af416-248">ISCII</span></span>  
  
 <span data-ttu-id="af416-249">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-249">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-250">下面的代码示例演示如何编写作为后备存储，使用内存的二进制数据，然后验证数据是否被正确写入。</span><span class="sxs-lookup"><span data-stu-id="af416-250">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-251">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-251">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-252">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-252">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-253">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-253">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadBytes (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadBytes(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBytes (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ReadBytes(int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBytes : int -&gt; byte[]&#xA;override this.ReadBytes : int -&gt; byte[]" Usage="binaryReader.ReadBytes count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="af416-254">要读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-254">The number of bytes to read.</span>
          </span>
          <span data-ttu-id="af416-255">此值必须为 0 或非负数字，否则将出现异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-255">This value must be 0 or a non-negative number or an exception will occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-256">从当前流中读取指定的字节数以写入字节数组中，并将当前位置前移相应的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-256">Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-257">包含从基础流中读取的数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-257">A byte array containing data read from the underlying stream.</span>
          </span>
          <span data-ttu-id="af416-258">如果到达了流的末尾，则该字节数组可能小于所请求的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-258">This might be less than the number of bytes requested if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-259"><xref:System.IO.BinaryReader> 读取操作失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-259"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="af416-260">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-260">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-261">下面的代码示例演示如何编写作为后备存储，使用内存的二进制数据，然后验证数据是否被正确写入。</span><span class="sxs-lookup"><span data-stu-id="af416-261">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 <span data-ttu-id="af416-262">此示例读取文件的内容，并将其显示为转储文本控制台。</span><span class="sxs-lookup"><span data-stu-id="af416-262">This example reads the contents of a file and displays it to the console as dump text.</span></span> <span data-ttu-id="af416-263">检测到正在读取的文件的末尾时的长度<xref:System.Byte>从返回的数组<xref:System.IO.BinaryReader.ReadBytes%2A>为零。</span><span class="sxs-lookup"><span data-stu-id="af416-263">The end of the file that is being read is detected when the length of the <xref:System.Byte> array returned from <xref:System.IO.BinaryReader.ReadBytes%2A> is zero.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-264">要读取的解码字符数大于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-264">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-265">如果 Unicode 解码器返回回退字符或代理项对，则可能发生此情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-265">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-266">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-266">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-267">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-267">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="af416-268">
            <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-268">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ReadChar();" />
      <MemberSignature Language="F#" Value="abstract member ReadChar : unit -&gt; char&#xA;override this.ReadChar : unit -&gt; char" Usage="binaryReader.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-269">从当前流中读取下一个字符，并根据所使用的 <see langword="Encoding" /> 和从流中读取的特定字符，提升流的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-269">Reads the next character from the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-270">从当前流中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-270">A character read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-271">如果<xref:System.IO.BinaryReader.ReadChar%2A>方法尝试读取流中的代理项字符异常将会引发和流中的位置将前进。</span><span class="sxs-lookup"><span data-stu-id="af416-271">If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.</span></span> <span data-ttu-id="af416-272">位置还原到之前的原始位置<xref:System.IO.BinaryReader.ReadChar%2A>如果调用流是查找; 但是，如果流是不可，位置将不会更正。</span><span class="sxs-lookup"><span data-stu-id="af416-272">The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.</span></span> <span data-ttu-id="af416-273">如果代理项字符可以出现在流中，使用<xref:System.IO.BinaryReader.ReadChars%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="af416-273">If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.</span></span>  
  
 <span data-ttu-id="af416-274">由于数据格式设置冲突，不建议此方法中使用以下编码：</span><span class="sxs-lookup"><span data-stu-id="af416-274">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="af416-275">UTF-7</span><span class="sxs-lookup"><span data-stu-id="af416-275">UTF-7</span></span>  
  
-   <span data-ttu-id="af416-276">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="af416-276">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="af416-277">ISCII</span><span class="sxs-lookup"><span data-stu-id="af416-277">ISCII</span></span>  
  
 <span data-ttu-id="af416-278">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-278">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-279">下面的代码示例演示如何读取和写入将内存用作后备存储的数据。</span><span class="sxs-lookup"><span data-stu-id="af416-279">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-280">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-280">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-281">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-281">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-282">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-282">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-283">读取了一个代理项字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-283">A surrogate character was read.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public virtual char[] ReadChars (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] ReadChars(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChars (count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ ReadChars(int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadChars : int -&gt; char[]&#xA;override this.ReadChars : int -&gt; char[]" Usage="binaryReader.ReadChars count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="af416-284">要读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-284">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af416-285">从当前流中读取指定的字符数，并以字符数组的形式返回数据，然后根据所使用的 <see langword="Encoding" /> 和从流中读取的特定字符，将当前位置前移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-285">Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-286">包含从基础流中读取的数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-286">A character array containing data read from the underlying stream.</span>
          </span>
          <span data-ttu-id="af416-287">如果到达了流的末尾，则该字符数组可能小于所请求的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-287">This might be less than the number of characters requested if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-288"><xref:System.IO.BinaryReader> 读取操作失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-288"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="af416-289">从网络流时，在某些极少数情况下，读取数据时<xref:System.IO.BinaryReader.ReadChars%2A>方法可能会从流读取一个额外字符，如果<xref:System.IO.BinaryReader>构造使用 Unicode 编码。</span><span class="sxs-lookup"><span data-stu-id="af416-289">When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding.</span></span> <span data-ttu-id="af416-290">如果发生这种情况，则可以使用<xref:System.IO.BinaryReader.ReadBytes%2A>方法来读取一个固定长度的字节数组，然后将传递到该数组<xref:System.IO.BinaryReader.ReadChars%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="af416-290">If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-291">下面的代码示例演示如何读取和写入将内存用作后备存储的数据。</span><span class="sxs-lookup"><span data-stu-id="af416-291">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="af416-292">要读取的解码字符数大于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-292">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="af416-293">如果 Unicode 解码器返回回退字符或代理项对，则可能发生此情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-293">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-294">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-294">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-295">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-295">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="af416-296">
            <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-296">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ReadDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadDecimal : unit -&gt; decimal&#xA;override this.ReadDecimal : unit -&gt; decimal" Usage="binaryReader.ReadDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-297">从当前流中读取十进制数值，并将该流的当前位置提升十六个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-297">Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-298">从当前流中读取的十进制数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-298">A decimal value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-299"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-299"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-300">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-300">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-301">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-301">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-302">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-302">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-303">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-303">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadDouble : unit -&gt; double&#xA;override this.ReadDouble : unit -&gt; double" Usage="binaryReader.ReadDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-304">从当前流中读取 8 字节浮点值，并使流的当前位置提升 8 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-304">Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-305">从当前流中读取的 8 字节浮点值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-305">An 8-byte floating point value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-306"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-306"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-307">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-307">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-308">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-308">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-309">下面的代码示例演示如何读取和写入`Double`数据写到使用内存`BinaryReader`并<xref:System.IO.BinaryWriter>类的顶部<xref:System.IO.MemoryStream>类。</span><span class="sxs-lookup"><span data-stu-id="af416-309">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="af416-310">`MemoryStream` 仅读取和写入`Byte`数据。</span><span class="sxs-lookup"><span data-stu-id="af416-310">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-311">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-311">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-312">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-312">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-313">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-313">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public virtual short ReadInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt16 () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual short ReadInt16();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt16 : unit -&gt; int16&#xA;override this.ReadInt16 : unit -&gt; int16" Usage="binaryReader.ReadInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-314">从当前流中读取 2 字节有符号整数，并使流的当前位置提升 2 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-314">Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-315">从当前流中读取的 2 字节有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-315">A 2-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-316"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-316"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-317">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-317">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-318">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-318">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-319">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-319">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-320">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-320">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-321">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-321">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public virtual int ReadInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadInt32();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt32 : unit -&gt; int&#xA;override this.ReadInt32 : unit -&gt; int" Usage="binaryReader.ReadInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-322">从当前流中读取 4 字节有符号整数，并使流的当前位置提升 4 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-322">Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-323">从当前流中读取的 2 字节有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-323">A 4-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-324"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-324"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-325"><xref:System.IO.BinaryReader> 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-325"><xref:System.IO.BinaryReader> reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-326">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-326">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-327">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-327">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-328">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-328">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-329">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-329">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-330">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-330">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public virtual long ReadInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadInt64();" />
      <MemberSignature Language="F#" Value="abstract member ReadInt64 : unit -&gt; int64&#xA;override this.ReadInt64 : unit -&gt; int64" Usage="binaryReader.ReadInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-331">从当前流中读取 8 字节有符号整数，并使流的当前位置提升 8 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-331">Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-332">从当前流中读取的 8 字节有符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-332">An 8-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-333"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-333"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-334">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-334">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-335">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-335">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-336">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-336">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-337">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-337">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-338">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-338">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSByte">
      <MemberSignature Language="C#" Value="public virtual sbyte ReadSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::SByte ReadSByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadSByte : unit -&gt; sbyte&#xA;override this.ReadSByte : unit -&gt; sbyte" Usage="binaryReader.ReadSByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-339">从此流中读取 1 个有符号字节，并使流的当前位置提升 1 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-339">Reads a signed byte from this stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-340">从当前流中读取的一个有符号字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-340">A signed byte read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-341"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-341"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-342">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-342">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-343">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-343">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-344">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-344">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-345">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-345">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSingle">
      <MemberSignature Language="C#" Value="public virtual float ReadSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSingle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadSingle();" />
      <MemberSignature Language="F#" Value="abstract member ReadSingle : unit -&gt; single&#xA;override this.ReadSingle : unit -&gt; single" Usage="binaryReader.ReadSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-346">从当前流中读取 4 字节浮点值，并使流的当前位置提升 4 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-346">Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-347">从当前流中读取的 4 字节浮点值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-347">A 4-byte floating point value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-348"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-348"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-349">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-349">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-350">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-350">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-351">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-351">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-352">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-352">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-353">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-353">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-354">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-354">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="abstract member ReadString : unit -&gt; string&#xA;override this.ReadString : unit -&gt; string" Usage="binaryReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-355">从当前流中读取一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-355">Reads a string from the current stream.</span>
          </span>
          <span data-ttu-id="af416-356">字符串有长度前缀，一次 7 位地被编码为整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-356">The string is prefixed with the length, encoded as an integer seven bits at a time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-357">正被读取的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-357">The string being read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-358"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-358"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-359">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-359">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af416-360">下面的代码示例演示了如何存储和检索文件中的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="af416-360">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-361">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-361">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-362">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-362">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-363">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-363">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt16">
      <MemberSignature Language="C#" Value="public virtual ushort ReadUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int16 ReadUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt16 () As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt16 ReadUInt16();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt16 : unit -&gt; uint16&#xA;override this.ReadUInt16 : unit -&gt; uint16" Usage="binaryReader.ReadUInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-364">使用 Little-Endian 编码从当前流中读取 2 字节无符号整数，并将流的位置提升 2 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-364">Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-365">从该流中读取的 2 字节无符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-365">A 2-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-366"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-366"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-367">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-367">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-368">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-369">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-369">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-370">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-370">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-371">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-371">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt32">
      <MemberSignature Language="C#" Value="public virtual uint ReadUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 ReadUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt32 ReadUInt32();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt32 : unit -&gt; uint32&#xA;override this.ReadUInt32 : unit -&gt; uint32" Usage="binaryReader.ReadUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-372">从当前流中读取 4 字节无符号整数并使流的当前位置提升 4 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-372">Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-373">从该流中读取的 4 字节无符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-373">A 4-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-374"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-374"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-375">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-375">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-376">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-376">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-377">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-377">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-378">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-378">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-379">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-379">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt64">
      <MemberSignature Language="C#" Value="public virtual ulong ReadUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int64 ReadUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt64 ReadUInt64();" />
      <MemberSignature Language="F#" Value="abstract member ReadUInt64 : unit -&gt; uint64&#xA;override this.ReadUInt64 : unit -&gt; uint64" Usage="binaryReader.ReadUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af416-380">从当前流中读取 8 字节无符号整数并使流的当前位置提升 8 个字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-380">Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="af416-381">从该流中读取的 8 字节无符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-381">An 8-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af416-382"><xref:System.IO.BinaryReader> 在读取失败后，不会还原的文件位置。</span><span class="sxs-lookup"><span data-stu-id="af416-382"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="af416-383">`BinaryReader` 读取 little-endian 格式中的使用此数据类型。</span><span class="sxs-lookup"><span data-stu-id="af416-383">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="af416-384">通用 I/O 任务的列表，请参阅[通用 I/O 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="af416-384">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="af416-385">已到达流的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-385">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="af416-386">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-386">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="af416-387">流已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="af416-387">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>