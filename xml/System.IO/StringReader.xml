<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1c739a402ae00dc98c30acb1f9740c9c401b542" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="67142-101">实现从字符串进行读取的 <see cref="T:System.IO.TextReader" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="67142-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-102"><xref:System.IO.StringReader> 使您能够同步或异步读取的字符串。</span><span class="sxs-lookup"><span data-stu-id="67142-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="67142-103">你可以使用的一次读取一个字符<xref:System.IO.StringReader.Read%2A>或<xref:System.IO.StringReader.ReadAsync%2A>方法，在时使用行<xref:System.IO.StringReader.ReadLine%2A>或<xref:System.IO.StringReader.ReadLineAsync%2A>方法和整个字符串使用<xref:System.IO.StringReader.ReadToEnd%2A>或<xref:System.IO.StringReader.ReadToEndAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="67142-104">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-105">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-105">To do this...</span></span>|<span data-ttu-id="67142-106">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-107">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-107">Create a text file.</span></span>|[<span data-ttu-id="67142-108">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-109">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-109">Write to a text file.</span></span>|[<span data-ttu-id="67142-110">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-111">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-111">Read from a text file.</span></span>|[<span data-ttu-id="67142-112">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-113">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-113">Append text to a file.</span></span>|[<span data-ttu-id="67142-114">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-115">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-116">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-117">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-118">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-119">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-119">Read from a binary file.</span></span>|[<span data-ttu-id="67142-120">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-121">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-121">Write to a binary file.</span></span>|[<span data-ttu-id="67142-122">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="67142-123">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="67142-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="67142-124">应将 <see cref="T:System.IO.StringReader" /> 初始化为的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67142-125">初始化从指定字符串进行读取的 <see cref="T:System.IO.StringReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-126">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-127">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-127">To do this...</span></span>|<span data-ttu-id="67142-128">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-129">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-129">Create a text file.</span></span>|[<span data-ttu-id="67142-130">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-131">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-131">Write to a text file.</span></span>|[<span data-ttu-id="67142-132">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-133">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-133">Read from a text file.</span></span>|[<span data-ttu-id="67142-134">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-135">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-135">Append text to a file.</span></span>|[<span data-ttu-id="67142-136">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-137">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-138">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-139">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-140">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-141">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-141">Read from a binary file.</span></span>|[<span data-ttu-id="67142-142">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-143">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-143">Write to a binary file.</span></span>|[<span data-ttu-id="67142-144">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="67142-145">此代码示例摘自更大的示例为提供<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="67142-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67142-146">
            <paramref name="s" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-146">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-147">关闭 <see cref="T:System.IO.StringReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-147">Closes the <see cref="T:System.IO.StringReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-148">创建一个文件并将文本写入文件的示例，请参阅[如何： 将文本写入到文件](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="67142-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="67142-149">从文件读取文本的示例，请参阅[如何： 从文件读取文本](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="67142-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="67142-150">读取和写入二进制文件的示例，请参阅[如何： 读取和写入到新创建数据文件](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="67142-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="67142-151">此方法将替代<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67142-152">此实现的`Close`调用<xref:System.IO.StringReader.Dispose%2A>方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="67142-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="67142-153">刷新流将不会刷新其基础的编码器，除非你明确地调用`Close`。</span><span class="sxs-lookup"><span data-stu-id="67142-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="67142-154">设置<xref:System.IO.StreamWriter.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="67142-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="67142-155">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="67142-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="67142-156">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="67142-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="67142-157">在调用`Close`，其他方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="67142-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="67142-158">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67142-159">释放由 <see cref="T:System.IO.StringReader" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-160">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StringReader> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="67142-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="67142-161">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="67142-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="67142-162">
            <para>
              <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 可以多次调用由其他对象。在重写<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />，请注意不要引用在以前调用之前释放对象<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-162">
              <para>
                <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-163">返回下一个可用字符，但不使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-163">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-164">一个表示下一个要读取的字符的整数；如果没有更多可读取的字符或该流不支持查找，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-164">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-165"><xref:System.IO.StringReader.Peek%2A>方法返回一个整数值，以便确定是否发生文件或另一个错误的末尾。</span><span class="sxs-lookup"><span data-stu-id="67142-165">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="67142-166">这使用户首先检查是否返回的值为-1 之前它强制转换为<xref:System.Char>类型。</span><span class="sxs-lookup"><span data-stu-id="67142-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="67142-167">此方法将替代<xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-167">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67142-168">当前位置`StringReader`此操作不会更改。</span><span class="sxs-lookup"><span data-stu-id="67142-168">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="67142-169">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-169">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-170">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-170">To do this...</span></span>|<span data-ttu-id="67142-171">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-171">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-172">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-172">Create a text file.</span></span>|[<span data-ttu-id="67142-173">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-173">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-174">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-174">Write to a text file.</span></span>|[<span data-ttu-id="67142-175">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-175">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-176">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-176">Read from a text file.</span></span>|[<span data-ttu-id="67142-177">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-177">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-178">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-178">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-179">当前读取器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-179">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67142-180">读取输入字符串中的下一个字符或下一组字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-180">Reads the next character or next set of characters from the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-181">读取输入字符串中的下一个字符并将该字符的位置提升一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-181">Reads the next character from the input string and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-182">基础字符串中的下一个字符，或者如果没有更多的可用字符，则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-182">The next character from the underlying string, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-183">此方法将替代<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-183">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67142-184">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-184">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-185">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-185">To do this...</span></span>|<span data-ttu-id="67142-186">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-186">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-187">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-187">Create a text file.</span></span>|[<span data-ttu-id="67142-188">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-189">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-189">Write to a text file.</span></span>|[<span data-ttu-id="67142-190">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-190">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-191">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-191">Read from a text file.</span></span>|[<span data-ttu-id="67142-192">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-192">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-193">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-193">Append text to a file.</span></span>|[<span data-ttu-id="67142-194">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-194">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-195">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-195">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-196">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-196">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-197">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-197">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-198">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-198">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-199">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-199">Read from a binary file.</span></span>|[<span data-ttu-id="67142-200">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-200">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-201">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-201">Write to a binary file.</span></span>|[<span data-ttu-id="67142-202">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-202">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="67142-203">此代码示例摘自更大的示例为提供<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="67142-203">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-204">当前读取器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-204">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="67142-205">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和 (<c>index</c> + <c>count</c> - 1) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-205">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="67142-206">缓存区中的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-206">The starting index in the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="67142-207">要读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-207">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67142-208">读取输入字符串中的字符块，并将字符位置提升 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-208">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-209">读入缓冲区的总字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-209">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="67142-210">如果当前没有那么多字符可用，则总字符数可能会少于所请求的字符数，或者如果已到达基础字符串的结尾，则总字符数为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-210">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-211">此方法重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="67142-211">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="67142-212">该方法将最多读取`count`字符从<xref:System.IO.StringReader>到`buffer`位置开始的字符数组`index`。</span><span class="sxs-lookup"><span data-stu-id="67142-212">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="67142-213">返回的实际字符数读取，或如果已达到字符串的末尾且未读取任何字符则为零。</span><span class="sxs-lookup"><span data-stu-id="67142-213">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="67142-214">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-214">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-215">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-215">To do this...</span></span>|<span data-ttu-id="67142-216">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-216">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-217">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-217">Create a text file.</span></span>|[<span data-ttu-id="67142-218">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-219">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-219">Write to a text file.</span></span>|[<span data-ttu-id="67142-220">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-220">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-221">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-221">Read from a text file.</span></span>|[<span data-ttu-id="67142-222">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-222">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-223">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-223">Append text to a file.</span></span>|[<span data-ttu-id="67142-224">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-224">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-225">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-225">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-226">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-226">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-227">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-227">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-228">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-228">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-229">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-229">Read from a binary file.</span></span>|[<span data-ttu-id="67142-230">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-231">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-231">Write to a binary file.</span></span>|[<span data-ttu-id="67142-232">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-232">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67142-233">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-233">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67142-234">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-234">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="67142-235">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-235">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-236">当前读取器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-236">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="67142-237">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和 (<c>index</c> + <c>count</c> - 1) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-237">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="67142-238">在 <c>buffer</c> 中开始写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-238">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="67142-239">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-239">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="67142-240">如果在写入指定数目的字符到缓冲区之前，就已经达到字符串的末尾，则方法返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-240">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67142-241">异步从当前字符串中读取指定数目的字符并从指定索引开始将该数据写入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-241">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-242">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-242">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="67142-243">
            <paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-243">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="67142-244">如果当前可用字节数少于所请求的字节数，则该结果值可能小于所请求的字节数，或者如果已到达字符串的末尾时，则为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-244">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-245">在任务完成后由指定的字符数`count`读取参数或连接字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="67142-245">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67142-246">下面的示例演示如何以异步方式读取一个字符串的第一次 23 个字符。</span><span class="sxs-lookup"><span data-stu-id="67142-246">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67142-247">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-247">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="67142-248">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-248">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67142-249">
            <paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-249">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-250">字符串读取器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-250">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="67142-251">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-251">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="67142-252">此方法返回时，包含指定字符数组，该数组的 <c>index</c> 和 (<c>index</c> + <c>count</c> - 1) 之间的值替换为从当前源中读取的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-252">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="67142-253">在 <c>buffer</c> 中开始写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-253">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="67142-254">要读取的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="67142-255">如果在写入指定数目的字符到缓冲区之前，就已经达到字符串的末尾，则方法返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-255">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67142-256">异步从当前字符串中读取指定数目的字符并从指定索引开始将该数据写入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-256">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-257">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="67142-258">
            <paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="67142-259">如果当前可用字节数少于所请求的字节数，则该结果值可能小于所请求的字节数，或者如果已到达字符串的末尾时，则为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-260">任务未完成之前由指定的字符数`count`读取参数，或已达到字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="67142-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67142-261">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="67142-262">
            <paramref name="index" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67142-263">
            <paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-264">字符串读取器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-264">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="67142-265">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-266">从当前字符串中读取一行字符并将数据作为字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-266">Reads a line of characters from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-267">当前字符串中的下一行；或为 <see langword="null" /> （如果到达了字符串的末尾）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-267">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-268">此方法将替代<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-268">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67142-269">将行定义为后面的字符后跟行序列： 换行符 ("\n")、 回车符 ("\r") 或一个回车符后面紧跟行换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="67142-269">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="67142-270">返回的字符串不包含终止回车或换行。</span><span class="sxs-lookup"><span data-stu-id="67142-270">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="67142-271">返回的值是`null`如果已到达字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="67142-271">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="67142-272">如果当前方法将引发<xref:System.OutOfMemoryException>，基础字符串中的读取器的位置的字符的方法是可以读取，但已读入内部的字符数表示高级<xref:System.IO.StringReader.ReadLine%2A>缓冲区将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="67142-272">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="67142-273">无法更改在字符串中读取器的位置，因为已经读取的字符是不可恢复，并可以访问仅通过重新初始化<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="67142-273">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="67142-274">若要避免这种情况，请使用<xref:System.IO.StringReader.Read%2A>只读方法和应用商店中预先分配的缓冲区的字符。</span><span class="sxs-lookup"><span data-stu-id="67142-274">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="67142-275">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-275">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-276">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-276">To do this...</span></span>|<span data-ttu-id="67142-277">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-277">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-278">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-278">Create a text file.</span></span>|[<span data-ttu-id="67142-279">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-279">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-280">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-280">Write to a text file.</span></span>|[<span data-ttu-id="67142-281">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-281">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-282">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-282">Read from a text file.</span></span>|[<span data-ttu-id="67142-283">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-283">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-284">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-284">Append text to a file.</span></span>|[<span data-ttu-id="67142-285">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-285">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-286">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-286">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-287">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-287">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-288">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-288">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-289">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-289">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-290">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-290">Read from a binary file.</span></span>|[<span data-ttu-id="67142-291">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-291">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-292">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-292">Write to a binary file.</span></span>|[<span data-ttu-id="67142-293">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-293">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="67142-294">此代码示例摘自更大的示例为提供<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="67142-294">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-295">当前读取器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-295">The current reader is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="67142-296">没有足够的内存来为返回的字符串分配缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-296">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-297">从当前字符串中异步读取一行字符并将数据作为字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-297">Reads a line of characters asynchronously from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-298">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-298">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="67142-299">
            <paramref name="TResult" /> 参数的值包含来自字符串读取器的下一行或为 <see langword="null" /> 如果读取所有字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-299">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67142-300">下面的示例演示如何以异步方式从字符串的一次读取一行。</span><span class="sxs-lookup"><span data-stu-id="67142-300">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="67142-301">下一行中的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-301">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-302">字符串读取器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-302">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="67142-303">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-303">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-304">读取从当前位置到字符串的结尾的所有字符并将它们作为单个字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-304">Reads all characters from the current position to the end of the string and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-305">从当前位置到基础字符串的结尾之间的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-305">The content from the current position to the end of the underlying string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67142-306">此方法将替代<xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="67142-306">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67142-307">如果当前方法将引发<xref:System.OutOfMemoryException>，基础字符串中的读取器的位置的字符的方法是可以读取，但已读入内部的字符数表示高级<xref:System.IO.StringReader.ReadToEnd%2A>缓冲区将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="67142-307">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="67142-308">无法更改在字符串中读取器的位置，因为已经读取的字符是不可恢复，并可以访问仅通过重新初始化<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="67142-308">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="67142-309">若要避免这种情况，请使用<xref:System.IO.StringReader.Read%2A>只读方法和应用商店中预先分配的缓冲区的字符。</span><span class="sxs-lookup"><span data-stu-id="67142-309">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="67142-310">下表列出的其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="67142-310">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="67142-311">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="67142-311">To do this...</span></span>|<span data-ttu-id="67142-312">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="67142-312">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="67142-313">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-313">Create a text file.</span></span>|[<span data-ttu-id="67142-314">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-315">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="67142-315">Write to a text file.</span></span>|[<span data-ttu-id="67142-316">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="67142-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="67142-317">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="67142-317">Read from a text file.</span></span>|[<span data-ttu-id="67142-318">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="67142-318">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="67142-319">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="67142-319">Append text to a file.</span></span>|[<span data-ttu-id="67142-320">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="67142-320">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-321">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="67142-321">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-322">获取文件特性。</span><span class="sxs-lookup"><span data-stu-id="67142-322">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-323">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="67142-323">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-324">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="67142-324">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="67142-325">从二进制文件读取。</span><span class="sxs-lookup"><span data-stu-id="67142-325">Read from a binary file.</span></span>|[<span data-ttu-id="67142-326">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-326">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="67142-327">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="67142-327">Write to a binary file.</span></span>|[<span data-ttu-id="67142-328">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="67142-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="67142-329">此代码示例摘自更大的示例为提供<xref:System.IO.TextReader>类。</span><span class="sxs-lookup"><span data-stu-id="67142-329">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="67142-330">没有足够的内存来为返回的字符串分配缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-330">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-331">当前读取器已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-331">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67142-332">异步读取从当前位置到字符串的结尾的所有字符并将它们作为单个字符串返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-332">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67142-333">表示异步读取操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-333">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="67142-334">
            <paramref name="TResult" /> 参数值包括字符串来自当前位置到结束字符串字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-334">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67142-335">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="67142-335">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="67142-336">字符数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-336">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="67142-337">字符串读取器已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-337">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="67142-338">以前的读取操作当前正在使用读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67142-338">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>