<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4674ec0950ec86b70206b1db0845f49482a19c0" /><Meta Name="ms.sourcegitcommit" Value="239d0111d1a083331e4fcfaa4719845f68e733e0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/01/2019" /><Meta Name="ms.locfileid" Value="64977282" /></Metadata><TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dd174-101">实现<see cref="T:System.IO.TextReader" />，它从字符串读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-102"><xref:System.IO.StringReader> 使您能够以同步方式还是以异步方式读取的字符串。</span><span class="sxs-lookup"><span data-stu-id="dd174-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="dd174-103">可以使用的一次读取一个字符<xref:System.IO.StringReader.Read%2A>或<xref:System.IO.StringReader.ReadAsync%2A>方法中，在时使用行<xref:System.IO.StringReader.ReadLine%2A>或<xref:System.IO.StringReader.ReadLineAsync%2A>方法和整个字符串使用<xref:System.IO.StringReader.ReadToEnd%2A>或<xref:System.IO.StringReader.ReadToEndAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="dd174-104">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-105">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-105">To do this...</span></span>|<span data-ttu-id="dd174-106">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-107">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-107">Create a text file.</span></span>|[<span data-ttu-id="dd174-108">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-109">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-109">Write to a text file.</span></span>|[<span data-ttu-id="dd174-110">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-111">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-111">Read from a text file.</span></span>|[<span data-ttu-id="dd174-112">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-113">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-113">Append text to a file.</span></span>|[<span data-ttu-id="dd174-114">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-115">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-116">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-117">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-118">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-119">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-119">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-120">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-121">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-121">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-122">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="dd174-123">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="dd174-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-124">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-124">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-125">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-125">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-126">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-126">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="dd174-127">字符串<see cref="T:System.IO.StringReader" />应进行初始化。</span><span class="sxs-lookup"><span data-stu-id="dd174-127">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span></span></param>
        <summary><span data-ttu-id="dd174-128">初始化的新实例<see cref="T:System.IO.StringReader" />读取指定的字符串中的类。</span><span class="sxs-lookup"><span data-stu-id="dd174-128">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-129">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-129">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-130">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-130">To do this...</span></span>|<span data-ttu-id="dd174-131">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-131">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-132">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-132">Create a text file.</span></span>|[<span data-ttu-id="dd174-133">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-133">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-134">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-134">Write to a text file.</span></span>|[<span data-ttu-id="dd174-135">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-135">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-136">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-136">Read from a text file.</span></span>|[<span data-ttu-id="dd174-137">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-137">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-138">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-138">Append text to a file.</span></span>|[<span data-ttu-id="dd174-139">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-139">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-140">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-140">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-141">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-141">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-142">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-142">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-143">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-143">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-144">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-144">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-145">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-145">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-146">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-146">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-147">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-147">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="dd174-148">此代码示例是为提供一个更大示例的一部分<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="dd174-148">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd174-149"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-149">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-150">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-150">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-151">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-152">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-153">关闭 <see cref="T:System.IO.StringReader" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-153">Closes the <see cref="T:System.IO.StringReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="dd174-154">创建文件和文本写入文件的示例，请参阅[如何：向文件写入文本](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="dd174-154">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="dd174-155">从文件读取文本的示例，请参阅[如何：从文件读取文本](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="dd174-155">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="dd174-156">读取和写入二进制文件的示例，请参阅[如何：对新创建的数据文件读取和写入](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="dd174-156">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
<span data-ttu-id="dd174-157">此方法重写<xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-157">This method overrides the <xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
<span data-ttu-id="dd174-158">此实现`Close`调用<xref:System.IO.StringReader.Dispose%2A>，方法并传递`true`值。</span><span class="sxs-lookup"><span data-stu-id="dd174-158">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A>, method passing a `true` value.</span></span> <span data-ttu-id="dd174-159">在调用`Close`，其他方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="dd174-159">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-160">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-160">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-161">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-161">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-162">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-162">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="dd174-163">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-163"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dd174-164">释放由 <see cref="T:System.IO.StringReader" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="dd174-164">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-165">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StringReader> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="dd174-165">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="dd174-166">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-166">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="dd174-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="dd174-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="dd174-168">重写时<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />，请小心不要引用在早期调用之前释放对象<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-168">When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-169">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-169">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-170">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-170">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-171">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-171">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-172">返回下一个可用字符，但不使用它。</span><span class="sxs-lookup"><span data-stu-id="dd174-172">Returns the next available character but does not consume it.</span></span></summary>
        <returns><span data-ttu-id="dd174-173">进行读取，表示下一个字符的整数或-1，如果不有可用的任何字符或者流不支持查找。</span><span class="sxs-lookup"><span data-stu-id="dd174-173">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-174"><xref:System.IO.StringReader.Peek%2A>方法返回一个整数值，以确定是否发生了该文件或另一种错误的末尾。</span><span class="sxs-lookup"><span data-stu-id="dd174-174">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="dd174-175">这样，用户首先检查是否返回的值为-1 之前它强制转换为<xref:System.Char>类型。</span><span class="sxs-lookup"><span data-stu-id="dd174-175">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="dd174-176">此方法重写<xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-176">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd174-177">当前位置`StringReader`此操作不会更改。</span><span class="sxs-lookup"><span data-stu-id="dd174-177">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="dd174-178">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-178">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-179">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-179">To do this...</span></span>|<span data-ttu-id="dd174-180">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-180">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-181">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-181">Create a text file.</span></span>|[<span data-ttu-id="dd174-182">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-183">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-183">Write to a text file.</span></span>|[<span data-ttu-id="dd174-184">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-184">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-185">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-185">Read from a text file.</span></span>|[<span data-ttu-id="dd174-186">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-186">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-187">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-188">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="dd174-188">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-189">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-189">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-190">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-190">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-191">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-191">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd174-192">从输入字符串中读取的下一个字符或下一组字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-192">Reads the next character or next set of characters from the input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-193">从输入字符串中读取的下一个字符和字符位置提升一个字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-193">Reads the next character from the input string and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="dd174-194">中的基础字符串，则为-1 如果没有更多字符可用的下一个字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-194">The next character from the underlying string, or -1 if no more characters are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-195">此方法重写<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-195">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd174-196">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-196">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-197">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-197">To do this...</span></span>|<span data-ttu-id="dd174-198">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-198">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-199">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-199">Create a text file.</span></span>|[<span data-ttu-id="dd174-200">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-200">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-201">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-201">Write to a text file.</span></span>|[<span data-ttu-id="dd174-202">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-202">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-203">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-203">Read from a text file.</span></span>|[<span data-ttu-id="dd174-204">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-204">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-205">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-205">Append text to a file.</span></span>|[<span data-ttu-id="dd174-206">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-206">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-207">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-207">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-208">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-208">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-209">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-209">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-210">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-210">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-211">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-211">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-212">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-212">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-213">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-213">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-214">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-214">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="dd174-215">此代码示例是为提供一个更大示例的一部分<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="dd174-215">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-216">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="dd174-216">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-217">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-217">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-218">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-218">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-219">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-219">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dd174-220">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="dd174-220">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="dd174-221">缓冲区中的起始索引。</span><span class="sxs-lookup"><span data-stu-id="dd174-221">The starting index in the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="dd174-222">要读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="dd174-222">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="dd174-223">输入字符串中读取的字符块，并通过将字符位置提升<paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-223">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span></span></summary>
        <returns><span data-ttu-id="dd174-224">读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="dd174-224">The total number of characters read into the buffer.</span></span> <span data-ttu-id="dd174-225">这可能会少于请求的字符数如果多个字符不是目前不可用，或零个如果已到达基础字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="dd174-225">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-226">此方法重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="dd174-226">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dd174-227">该方法将读取最多`count`从字符<xref:System.IO.StringReader>成`buffer`位置开始的字符数组`index`。</span><span class="sxs-lookup"><span data-stu-id="dd174-227">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="dd174-228">返回的实际字符数读取，或为零则到达字符串的末尾和未读取任何字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-228">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="dd174-229">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-229">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-230">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-230">To do this...</span></span>|<span data-ttu-id="dd174-231">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-231">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-232">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-232">Create a text file.</span></span>|[<span data-ttu-id="dd174-233">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-233">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-234">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-234">Write to a text file.</span></span>|[<span data-ttu-id="dd174-235">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-235">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-236">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-236">Read from a text file.</span></span>|[<span data-ttu-id="dd174-237">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-237">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-238">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-238">Append text to a file.</span></span>|[<span data-ttu-id="dd174-239">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-239">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-240">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-240">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-241">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-241">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-242">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-242">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-243">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-243">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-244">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-244">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-245">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-245">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-246">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-246">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-247">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-247">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd174-248"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-248"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dd174-249">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-249">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-250"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="dd174-250"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-251">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="dd174-251">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-252">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-252">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-253">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-253">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-254">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-254">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dd174-255">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="dd174-255">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="dd174-256">在 <paramref name="buffer" /> 中开始写入的位置。</span><span class="sxs-lookup"><span data-stu-id="dd174-256">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="dd174-257">最多读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="dd174-257">The maximum number of characters to read.</span></span> <span data-ttu-id="dd174-258">如果指定的数量的字符写入到缓冲区之前已到达字符串的末尾，该方法返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-258">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="dd174-259">从当前字符串中异步读取指定的最大字符数并将数据写入到缓冲区中，从指定索引处开始。</span><span class="sxs-lookup"><span data-stu-id="dd174-259">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="dd174-260">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="dd174-260">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dd174-261"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span><span class="sxs-lookup"><span data-stu-id="dd174-261">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="dd174-262">结果值可能小于如果当前可用的字节数小于所请求的数目，或者如果已到达字符串的末尾，它可以是 0 （零） 请求的字节数。</span><span class="sxs-lookup"><span data-stu-id="dd174-262">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-263">在任务完成后指定的字符数`count`读取参数或到达字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="dd174-263">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd174-264">下面的示例演示如何以异步方式读取一个字符串的第一次 23 个字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-264">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd174-265"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-265"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-266"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="dd174-266"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dd174-267"><paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="dd174-267">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-268">已释放字符串读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-268">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd174-269">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-269">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dd174-270">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="dd174-270">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="dd174-271">在 <paramref name="buffer" /> 中开始写入的位置。</span><span class="sxs-lookup"><span data-stu-id="dd174-271">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="dd174-272">最多读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="dd174-272">The maximum number of characters to read.</span></span> <span data-ttu-id="dd174-273">如果指定的数量的字符写入到缓冲区之前已到达字符串的末尾，该方法返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-273">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="dd174-274">从当前字符串中异步读取指定的最大字符数并将数据写入到缓冲区中，从指定索引处开始。</span><span class="sxs-lookup"><span data-stu-id="dd174-274">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="dd174-275">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="dd174-275">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dd174-276"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span><span class="sxs-lookup"><span data-stu-id="dd174-276">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="dd174-277">结果值可能小于如果当前可用的字节数小于所请求的数目，或者如果已到达字符串的末尾，它可以是 0 （零） 请求的字节数。</span><span class="sxs-lookup"><span data-stu-id="dd174-277">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-278">任务未完成之前指定的字符数`count`读取参数，或者已到达字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="dd174-278">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd174-279"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-279"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-280"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="dd174-280"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dd174-281"><paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="dd174-281">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-282">已释放字符串读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-282">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd174-283">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-283">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-284">从当前字符串中读取一行字符并将数据作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-284">Reads a line of characters from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="dd174-285">从当前字符串的下一行或<see langword="null" />如果已到达字符串的结尾。</span><span class="sxs-lookup"><span data-stu-id="dd174-285">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-286">此方法重写<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-286">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd174-287">行定义为一系列字符后跟换行符 ("\n")、 回车符 ("\r")、 回车符后紧接着是由换行符 ("\r\n") 或流结束标记。</span><span class="sxs-lookup"><span data-stu-id="dd174-287">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), a carriage return immediately followed by a line feed ("\r\n"), or the end-of-stream marker.</span></span> <span data-ttu-id="dd174-288">返回的字符串不包含终止回车或换行。</span><span class="sxs-lookup"><span data-stu-id="dd174-288">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="dd174-289">返回的值是`null`如果已到达流结尾标记。</span><span class="sxs-lookup"><span data-stu-id="dd174-289">The returned value is `null` if the end-of-stream marker has been reached.</span></span> <span data-ttu-id="dd174-290">也就是说，如果没有任何行读取的最后一个与流结束标记之间，则该方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="dd174-290">That is to say, if there is nothing between the last line read and the end-of-stream marker, the method returns `null`.</span></span>  
  
 <span data-ttu-id="dd174-291">如果当前方法将引发<xref:System.OutOfMemoryException>，基础字符串中的读取器的位置的字符的方法是可以读取，但到内部已读取的字符数高级<xref:System.IO.StringReader.ReadLine%2A>缓冲区将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="dd174-291">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="dd174-292">不能更改字符串中读取器的位置，因为已读取的字符是不可恢复，并且可访问只通过重新初始化<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="dd174-292">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="dd174-293">若要避免这种情况，请使用<xref:System.IO.StringReader.Read%2A>读取方法和应用商店中预先分配的缓冲区的字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-293">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="dd174-294">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-294">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-295">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-295">To do this...</span></span>|<span data-ttu-id="dd174-296">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-296">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-297">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-297">Create a text file.</span></span>|[<span data-ttu-id="dd174-298">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-298">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-299">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-299">Write to a text file.</span></span>|[<span data-ttu-id="dd174-300">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-300">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-301">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-301">Read from a text file.</span></span>|[<span data-ttu-id="dd174-302">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-302">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-303">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-303">Append text to a file.</span></span>|[<span data-ttu-id="dd174-304">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-304">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-305">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-305">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-306">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-306">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-307">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-307">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-308">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-308">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-309">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-309">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-310">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-310">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-311">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-311">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-312">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-312">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="dd174-313">此代码示例是为提供一个更大示例的一部分<xref:System.IO.StringReader>类。</span><span class="sxs-lookup"><span data-stu-id="dd174-313">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-314">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="dd174-314">The current reader is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="dd174-315">没有足够的内存来为返回的字符串分配缓冲区。</span><span class="sxs-lookup"><span data-stu-id="dd174-315">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-316">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-316">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-317">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-317">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-318">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-318">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-319">从当前字符串中异步读取一行字符并将数据作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-319">Reads a line of characters asynchronously from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="dd174-320">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="dd174-320">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dd174-321">值<paramref name="TResult" />参数包含来自字符串读取器的下一行或<see langword="null" />如果已读取所有字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-321">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-322">下面的示例演示如何以异步方式从一个字符串，一次读取一行。</span><span class="sxs-lookup"><span data-stu-id="dd174-322">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-323">下一行中的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-323">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-324">已释放字符串读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-324">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd174-325">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-325">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-326">读取从当前位置到字符串结尾的所有字符并将它们作为单个字符串返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-326">Reads all characters from the current position to the end of the string and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="dd174-327">从当前位置到基础字符串的末尾内容。</span><span class="sxs-lookup"><span data-stu-id="dd174-327">The content from the current position to the end of the underlying string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd174-328">此方法重写<xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="dd174-328">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd174-329">如果当前方法将引发<xref:System.OutOfMemoryException>，基础字符串中的读取器的位置的字符的方法是可以读取，但到内部已读取的字符数高级<xref:System.IO.StringReader.ReadToEnd%2A>缓冲区将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="dd174-329">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="dd174-330">不能更改字符串中读取器的位置，因为已读取的字符是不可恢复，并且可访问只通过重新初始化<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="dd174-330">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="dd174-331">若要避免这种情况，请使用<xref:System.IO.StringReader.Read%2A>读取方法和应用商店中预先分配的缓冲区的字符。</span><span class="sxs-lookup"><span data-stu-id="dd174-331">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="dd174-332">下表列出了其他典型或相关的 I/O 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="dd174-332">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="dd174-333">若要执行此操作...</span><span class="sxs-lookup"><span data-stu-id="dd174-333">To do this...</span></span>|<span data-ttu-id="dd174-334">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="dd174-334">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="dd174-335">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-335">Create a text file.</span></span>|[<span data-ttu-id="dd174-336">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-336">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-337">写入一个文本文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-337">Write to a text file.</span></span>|[<span data-ttu-id="dd174-338">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-338">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="dd174-339">从文本文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-339">Read from a text file.</span></span>|[<span data-ttu-id="dd174-340">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-340">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="dd174-341">将文本追加到文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-341">Append text to a file.</span></span>|[<span data-ttu-id="dd174-342">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="dd174-342">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-343">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="dd174-343">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-344">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-344">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-345">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="dd174-345">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-346">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="dd174-346">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="dd174-347">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="dd174-347">Read from a binary file.</span></span>|[<span data-ttu-id="dd174-348">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-348">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="dd174-349">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="dd174-349">Write to a binary file.</span></span>|[<span data-ttu-id="dd174-350">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="dd174-350">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="dd174-351">此代码示例是为提供一个更大示例的一部分<xref:System.IO.TextReader>类。</span><span class="sxs-lookup"><span data-stu-id="dd174-351">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="dd174-352">没有足够的内存来为返回的字符串分配缓冲区。</span><span class="sxs-lookup"><span data-stu-id="dd174-352">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-353">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="dd174-353">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="dd174-354">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="dd174-354">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="dd174-355">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="dd174-355">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="dd174-356">如何：将文本写入文件</span><span class="sxs-lookup"><span data-stu-id="dd174-356">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd174-357">异步读取所有字符从当前位置到字符串的末尾，并将它们作为单个字符串返回。</span><span class="sxs-lookup"><span data-stu-id="dd174-357">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="dd174-358">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="dd174-358">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="dd174-359">值<paramref name="TResult" />参数包含从当前位置到字符串的末尾的字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="dd174-359">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd174-360">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="dd174-360">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd174-361">字符数大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="dd174-361">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="dd174-362">已释放字符串读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-362">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dd174-363">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="dd174-363">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>