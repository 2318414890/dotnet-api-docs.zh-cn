<Type Name="Route" FullName="System.Web.Routing.Route">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d3f0cc42d0b710e90cb52188d8d38bb8e88a3a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Route : System.Web.Routing.RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Route extends System.Web.Routing.RouteBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.Route" />
  <TypeSignature Language="VB.NET" Value="Public Class Route&#xA;Inherits RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Route : System::Web::Routing::RouteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.RouteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d674c-101">提供用于定义路由和获取有关路由的信息的属性和方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d674c-101">Provides properties and methods for defining a route and for obtaining information about the route.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d674c-102"><xref:System.Web.Routing.Route>类，可指定如何路由在 ASP.NET 应用程序中处理。</span><span class="sxs-lookup"><span data-stu-id="d674c-102">The <xref:System.Web.Routing.Route> class enables you to specify how routing is processed in an ASP.NET application.</span></span> <span data-ttu-id="d674c-103">你创建<xref:System.Web.Routing.Route>对象每个你想要将映射到可以处理的类的 URL 模式请求对应于该模式。</span><span class="sxs-lookup"><span data-stu-id="d674c-103">You create a <xref:System.Web.Routing.Route> object for each URL pattern that you want to map to a class that can handle requests that correspond to that pattern.</span></span> <span data-ttu-id="d674c-104">然后，你添加到的路由<xref:System.Web.Routing.RouteTable.Routes%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="d674c-104">You then add the route to the <xref:System.Web.Routing.RouteTable.Routes%2A> collection.</span></span> <span data-ttu-id="d674c-105">当应用程序收到请求时，ASP.NET 路由循环访问中的路由<xref:System.Web.Routing.RouteTable.Routes%2A>集合以找到与 URL 模式匹配的第一个路由。</span><span class="sxs-lookup"><span data-stu-id="d674c-105">When the application receives a request, ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> collection to find the first route that matches the pattern of the URL.</span></span>  
  
 <span data-ttu-id="d674c-106">设置<xref:System.Web.Routing.Route.Url%2A>URL 模式的属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-106">Set the <xref:System.Web.Routing.Route.Url%2A> property to a URL pattern.</span></span> <span data-ttu-id="d674c-107">URL 模式由 HTTP 请求中的应用程序名称之后的段组成。</span><span class="sxs-lookup"><span data-stu-id="d674c-107">The URL pattern consists of segments that come after the application name in an HTTP request.</span></span> <span data-ttu-id="d674c-108">例如，在 URL 中`http://www.contoso.com/products/show/beverages`，模式将应用于`products/show/beverages`。</span><span class="sxs-lookup"><span data-stu-id="d674c-108">For example, in the URL `http://www.contoso.com/products/show/beverages`, the pattern applies to `products/show/beverages`.</span></span> <span data-ttu-id="d674c-109">有三个模式网段，如`{controller}/{action}/{id}`，与 URL 匹配`http://www.contoso.com/products/show/beverages`。</span><span class="sxs-lookup"><span data-stu-id="d674c-109">A pattern with three segments, such as `{controller}/{action}/{id}`, matches the URL `http://www.contoso.com/products/show/beverages`.</span></span> <span data-ttu-id="d674c-110">由分隔每个段`/`字符。</span><span class="sxs-lookup"><span data-stu-id="d674c-110">Each segment is delimited by the `/` character.</span></span> <span data-ttu-id="d674c-111">当将一个段括在大括号 (`{`和`}`)，该分段是 URL 参数。</span><span class="sxs-lookup"><span data-stu-id="d674c-111">When a segment is enclosed in braces (`{` and `}`), the segment is referred to a URL parameter.</span></span> <span data-ttu-id="d674c-112">ASP.NET 路由请求中检索值，并将其分配给 URL 参数。</span><span class="sxs-lookup"><span data-stu-id="d674c-112">ASP.NET routing retrieves the value from the request and assigns it to the URL parameter.</span></span> <span data-ttu-id="d674c-113">在前面的示例中，URL 参数`action`分配的值`show`。</span><span class="sxs-lookup"><span data-stu-id="d674c-113">In the previous example, the URL parameter `action` is assigned the value `show`.</span></span> <span data-ttu-id="d674c-114">如果段不括在大括号，则值视为文字值。</span><span class="sxs-lookup"><span data-stu-id="d674c-114">If the segment is not enclosed in braces, the value is treated as a literal value.</span></span>  
  
 <span data-ttu-id="d674c-115">设置<xref:System.Web.Routing.Route.Defaults%2A>属性<xref:System.Web.Routing.RouteValueDictionary>包括在从 URL 或设置不参数化的其他值在 URL 中缺少参数，则使用值的对象。</span><span class="sxs-lookup"><span data-stu-id="d674c-115">Set the <xref:System.Web.Routing.Route.Defaults%2A> property to a <xref:System.Web.Routing.RouteValueDictionary> object that includes values that are used if a parameter is missing from the URL or to set additional values that are not parameterized in the URL.</span></span> <span data-ttu-id="d674c-116">设置<xref:System.Web.Routing.Route.Constraints%2A>属性<xref:System.Web.Routing.RouteValueDictionary>对象，其中包含为正则表达式的值或<xref:System.Web.Routing.IRouteConstraint>对象。</span><span class="sxs-lookup"><span data-stu-id="d674c-116">Set the <xref:System.Web.Routing.Route.Constraints%2A> property to a <xref:System.Web.Routing.RouteValueDictionary> object that contains values that are either regular expressions or <xref:System.Web.Routing.IRouteConstraint> objects.</span></span> <span data-ttu-id="d674c-117">这些值用于确定参数值是否有效。</span><span class="sxs-lookup"><span data-stu-id="d674c-117">These values are used to determine whether a parameter value is valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d674c-118">下面的示例演示如何创建<xref:System.Web.Routing.Route>对象，并将其添加到<xref:System.Web.Routing.RouteTable.Routes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-118">The following example shows how to create a <xref:System.Web.Routing.Route> object and add it to the <xref:System.Web.Routing.RouteTable.Routes%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-119">初始化 <see cref="T:System.Web.Routing.Route" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-119">Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d674c-120">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-120">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="routeHandler">
          <span data-ttu-id="d674c-121">处理路由请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-121">The object that processes requests for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-122">使用指定的 URL 模式和处理程序类初始化 <see cref="T:System.Web.Routing.Route" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-122">Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern and handler class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d674c-123">下面的示例演示如何创建<xref:System.Web.Routing.Route>对象，并将其添加到<xref:System.Web.Routing.RouteTable.Routes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-123">The following example shows how to create a <xref:System.Web.Routing.Route> object and add it to the <xref:System.Web.Routing.RouteTable.Routes%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d674c-124">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-124">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d674c-125">可用于 URL 中缺少的任何参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-125">The values to use for any parameters that are missing in the URL.</span>
          </span>
        </param>
        <param name="routeHandler">
          <span data-ttu-id="d674c-126">处理路由请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-126">The object that processes requests for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-127">使用指定的 URL 模式、默认参数值和处理程序类初始化 <see cref="T:System.Web.Routing.Route" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-127">Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, and handler class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d674c-128">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-128">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d674c-129">要在 URL 不包含所有参数时使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-129">The values to use if the URL does not contain all the parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="d674c-130">一个用于指定 URL 参数的有效值的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-130">A regular expression that specifies valid values for a URL parameter.</span>
          </span>
        </param>
        <param name="routeHandler">
          <span data-ttu-id="d674c-131">处理路由请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-131">The object that processes requests for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-132">使用指定的 URL 模式、默认参数值、约束和处理程序类初始化 <see cref="T:System.Web.Routing.Route" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-132">Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, constraints, and handler class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d674c-133">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-133">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d674c-134">要在 URL 不包含所有参数时使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-134">The values to use if the URL does not contain all the parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="d674c-135">一个用于指定 URL 参数的有效值的正则表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-135">A regular expression that specifies valid values for a URL parameter.</span>
          </span>
        </param>
        <param name="dataTokens">
          <span data-ttu-id="d674c-136">传递到路由处理程序但未用于确定该路由是否与特定 URL 模式匹配的自定义值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-136">Custom values that are passed to the route handler, but which are not used to determine whether the route matches a specific URL pattern.</span>
          </span>
          <span data-ttu-id="d674c-137">这些值会传递到路由处理程序，以便用于处理请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-137">These values are passed to the route handler, where they can be used for processing the request.</span>
          </span>
        </param>
        <param name="routeHandler">
          <span data-ttu-id="d674c-138">处理路由请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-138">The object that processes requests for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-139">使用指定的 URL 模式、默认参数值、约束、自定义值和处理程序类初始化 <see cref="T:System.Web.Routing.Route" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-139">Initializes a new instance of the <see cref="T:System.Web.Routing.Route" /> class, by using the specified URL pattern, default parameter values, constraints, custom values, and handler class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.DataTokens" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Constraints { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-140">获取或设置表达式字典，用于指定 URL 参数的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-140">Gets or sets a dictionary of expressions that specify valid values for a URL parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d674c-141">包含参数名称和表达式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-141">An object that contains the parameter names and expressions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d674c-142"><xref:System.Web.Routing.Route.Constraints%2A>属性使您能够限制可接受的处理的路由的 URL 参数值。</span><span class="sxs-lookup"><span data-stu-id="d674c-142">The <xref:System.Web.Routing.Route.Constraints%2A> property enables you to limit acceptable values for a URL parameter that is processed by a route.</span></span> <span data-ttu-id="d674c-143">你分配<xref:System.Web.Routing.RouteValueDictionary>对象传递给<xref:System.Web.Routing.Route.Constraints%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-143">You assign a <xref:System.Web.Routing.RouteValueDictionary> object to the <xref:System.Web.Routing.Route.Constraints%2A> property.</span></span> <span data-ttu-id="d674c-144">在每个元素<xref:System.Web.Routing.RouteValueDictionary>对象包含的名称的参数和以下项之一：</span><span class="sxs-lookup"><span data-stu-id="d674c-144">Each element in the <xref:System.Web.Routing.RouteValueDictionary> object contains the name of a parameter and one of the following:</span></span>  
  
-   <span data-ttu-id="d674c-145">一个定义正则表达式的字符串。</span><span class="sxs-lookup"><span data-stu-id="d674c-145">A string that defines a regular expression.</span></span> <span data-ttu-id="d674c-146">正则表达式不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="d674c-146">The regular expression is case-insensitive.</span></span>  
  
-   <span data-ttu-id="d674c-147">实现的对象<xref:System.Web.Routing.IRouteConstraint>接口，并且包括<xref:System.Web.Routing.IRouteConstraint.Match%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d674c-147">An object that implements the <xref:System.Web.Routing.IRouteConstraint> interface and that includes a <xref:System.Web.Routing.IRouteConstraint.Match%2A> method.</span></span>  
  
 <span data-ttu-id="d674c-148"><xref:System.Web.Routing.HttpMethodConstraint> 类实现 <xref:System.Web.Routing.IRouteConstraint> 接口。</span><span class="sxs-lookup"><span data-stu-id="d674c-148">The <xref:System.Web.Routing.HttpMethodConstraint> class implements the <xref:System.Web.Routing.IRouteConstraint> interface.</span></span> <span data-ttu-id="d674c-149">你可以包含的实例<xref:System.Web.Routing.HttpMethodConstraint>类作为约束以指定的 HTTP 谓词的可接受的路由。</span><span class="sxs-lookup"><span data-stu-id="d674c-149">You can include an instance of the <xref:System.Web.Routing.HttpMethodConstraint> class as a constraint to specify which HTTP verbs are acceptable for the route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d674c-150">下面的示例演示如何创建<xref:System.Web.Routing.Route>对象，并将<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-150">The following example shows how to create a <xref:System.Web.Routing.Route> object and set the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties.</span></span>  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 <span data-ttu-id="d674c-151">下面的示例演示<xref:System.Web.Routing.Route>对象，其<xref:System.Web.Routing.Route.Constraints%2A>属性包含一个名为参数`httpMethod`与实例<xref:System.Web.Routing.HttpMethodConstraint>的值的类。</span><span class="sxs-lookup"><span data-stu-id="d674c-151">The following example shows a <xref:System.Web.Routing.Route> object whose <xref:System.Web.Routing.Route.Constraints%2A> property contains a parameter named `httpMethod` with an instance of the <xref:System.Web.Routing.HttpMethodConstraint> class for the value.</span></span>  
  
 [!code-csharp[System.Web.Routing.Route.Constraints#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Constraints#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTokens">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary DataTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary DataTokens" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.DataTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTokens As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ DataTokens { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-152">获取或设置传递到路由处理程序但未用于确定该路由是否与 URL 模式匹配的自定义值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-152">Gets or sets custom values that are passed to the route handler, but which are not used to determine whether the route matches a URL pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d674c-153">包含自定义值的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-153">An object that contains custom values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d674c-154">你使用<xref:System.Web.Routing.RouteData.DataTokens%2A>检索或分配未用于确定路由是否与 URL 模式匹配的值与路由关联的属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-154">You use the <xref:System.Web.Routing.RouteData.DataTokens%2A> property to retrieve or assign values associated with the route that are not used to determine whether a route matches a URL pattern.</span></span> <span data-ttu-id="d674c-155">这些值会传递到路由处理程序，以便用于处理请求。</span><span class="sxs-lookup"><span data-stu-id="d674c-155">These values are passed to the route handler, where they can be used for processing the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d674c-156">下面的示例演示如何创建<xref:System.Web.Routing.Route>对象，并将<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-156">The following example shows how to create a <xref:System.Web.Routing.Route> object and set the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties.</span></span>  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Defaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Defaults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public Property Defaults As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Defaults { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-157">获取或设置要在 URL 不包含所有参数时使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-157">Gets or sets the values to use if the URL does not contain all the parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d674c-158">包含参数名称和默认值的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-158">An object that contains the parameter names and default values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d674c-159"><xref:System.Web.Routing.Route.Defaults%2A>属性使您能够设置 URL 参数的值，如果 URL 不包含为该参数的段。</span><span class="sxs-lookup"><span data-stu-id="d674c-159">The <xref:System.Web.Routing.Route.Defaults%2A> property enables you to set the value for a URL parameter if the URL does not contain a segment for that parameter.</span></span> <span data-ttu-id="d674c-160">你分配<xref:System.Web.Routing.RouteValueDictionary>对象传递给<xref:System.Web.Routing.Route.Defaults%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-160">You assign a <xref:System.Web.Routing.RouteValueDictionary> object to the <xref:System.Web.Routing.Route.Defaults%2A> property.</span></span> <span data-ttu-id="d674c-161">在每个元素<xref:System.Web.Routing.RouteValueDictionary>对象包含的参数和要使用如果参数是缺少的值的名称。</span><span class="sxs-lookup"><span data-stu-id="d674c-161">Each element in the <xref:System.Web.Routing.RouteValueDictionary> object contains the name of a parameter and the value to use if the parameter is missing.</span></span>  
  
 <span data-ttu-id="d674c-162">你可以包括中未定义的参数的默认值<xref:System.Web.Routing.Route.Url%2A>作为段的属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-162">You can include a default value for a parameter that is not defined in the <xref:System.Web.Routing.Route.Url%2A> property as a segment.</span></span> <span data-ttu-id="d674c-163">当 ASP.NET 路由处理请求时，此默认值是始终传递给路由处理程序。</span><span class="sxs-lookup"><span data-stu-id="d674c-163">When ASP.NET routing handles a request, this default value is always passed to the route handler.</span></span> <span data-ttu-id="d674c-164">构造的 URL 并将包含未作为段定义的默认参数的值，路由将仅被视为匹配如果你提供的值与匹配的路由的默认值。</span><span class="sxs-lookup"><span data-stu-id="d674c-164">When you construct a URL and you include a value for a default parameter that is not defined as a segment, the route will only be considered a match if the value that you provided matches the default value for the route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d674c-165">下面的示例演示如何创建<xref:System.Web.Routing.Route>对象，并将<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-165">The following example shows how to create a <xref:System.Web.Routing.Route> object and set the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties.</span></span>  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 <span data-ttu-id="d674c-166">下面的示例演示<xref:System.Web.Routing.Route>对象，其<xref:System.Web.Routing.Route.Defaults%2A>属性包含一个参数，不是中的模式的一部分<xref:System.Web.Routing.Route.Url%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-166">The following example shows a <xref:System.Web.Routing.Route> object whose <xref:System.Web.Routing.Route.Defaults%2A> property contains a parameter that is not part of the pattern in the <xref:System.Web.Routing.Route.Url%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Routing.Route.Defaults#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Defaults#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="d674c-167">一个对象，该对象封装有关 HTTP 请求的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-167">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-168">返回有关请求的路由的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-168">Returns information about the requested route.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d674c-169">一个对象，其中包含路由定义中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-169">An object that contains the values from the route definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="d674c-170">一个对象，封装有关所请求的路由的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-170">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d674c-171">一个包含路由的参数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-171">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-172">返回与路由关联的 URL 的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-172">Returns information about the URL that is associated with the route.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d674c-173">一个对象，它包含与路由关联的 URL 的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-173">An object that contains information about the URL that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessConstraint">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessConstraint (System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessConstraint(class System.Web.HttpContextBase httpContext, object constraint, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessConstraint(System::Web::HttpContextBase ^ httpContext, System::Object ^ constraint, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="constraint" Type="System.Object" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="d674c-174">一个对象，该对象封装有关 HTTP 请求的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-174">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <param name="constraint">
          <span data-ttu-id="d674c-175">将用于测试 <c>parameterName</c> 的正则表达式或对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-175">The regular expression or object to use to test <c>parameterName</c>.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="d674c-176">要测试的参数的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-176">The name of the parameter to test.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d674c-177">要测试的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-177">The values to test.</span>
          </span>
        </param>
        <param name="routeDirection">
          <span data-ttu-id="d674c-178">指定 URL 路由是在处理传入请求还是在构建 URL 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-178">A value that specifies whether URL routing is processing an incoming request or constructing a URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d674c-179">确定参数值是否与该参数的约束相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-179">Determines whether a parameter value matches the constraint for that parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d674c-180">如果参数值与约束匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-180">
              <see langword="true" /> if the parameter value matches the constraint; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d674c-181">
            <paramref name="constraint" /> 不是包含正则表达式的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-181">
              <paramref name="constraint" /> is not a string that contains a regular expression.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.Routing.IRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.IRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As IRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::IRouteHandler ^ RouteHandler { System::Web::Routing::IRouteHandler ^ get(); void set(System::Web::Routing::IRouteHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.IRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-182">获取或设置处理路由的请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-182">Gets or sets the object that processes requests for the route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d674c-183">用于处理请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-183">The object that processes the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d674c-184">获取或设置路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-184">Gets or sets the URL pattern for the route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d674c-185">用于匹配到 URL 的路由的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-185">The pattern for matching the route to a URL.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d674c-186">当你将值赋给<xref:System.Web.Routing.Route.Url%2A>属性，`/`字符被解释为分隔符时分析该 URL。</span><span class="sxs-lookup"><span data-stu-id="d674c-186">When you assign a value to the <xref:System.Web.Routing.Route.Url%2A> property, the `/` character is interpreted as a delimiter when the URL is parsed.</span></span> <span data-ttu-id="d674c-187">使用大括号 (`{}`) 来定义变量被称为*URL 参数*。</span><span class="sxs-lookup"><span data-stu-id="d674c-187">Use braces (`{}`) to define a variable that is referred to as a *URL parameter*.</span></span> <span data-ttu-id="d674c-188">从 URL 中的匹配段的值分配给 URL 参数。</span><span class="sxs-lookup"><span data-stu-id="d674c-188">The value from the matching segment in the URL is assigned to the URL parameter.</span></span> <span data-ttu-id="d674c-189">中的任何值<xref:System.Web.Routing.Route.Url%2A>不括在大括号中的属性将被视为文字的常量。</span><span class="sxs-lookup"><span data-stu-id="d674c-189">Any values in the <xref:System.Web.Routing.Route.Url%2A> property that are not enclosed in braces are treated as literal constants.</span></span>  
  
 <span data-ttu-id="d674c-190">`?`中不允许使用字符<xref:System.Web.Routing.Route.Url%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-190">The `?` character is not allowed in the <xref:System.Web.Routing.Route.Url%2A> property.</span></span> <span data-ttu-id="d674c-191">必须按分隔符或文本常量分隔每个 URL 段。</span><span class="sxs-lookup"><span data-stu-id="d674c-191">Each URL segment must be separated by either a delimiter or literal constant.</span></span> <span data-ttu-id="d674c-192">你可以使用`{{`或`}}`为转义大括号字符的字符。</span><span class="sxs-lookup"><span data-stu-id="d674c-192">You can use `{{` or `}}` as escape characters for a brace character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d674c-193">下面的示例演示如何设置<xref:System.Web.Routing.Route.Url%2A>类构造函数中的属性。</span><span class="sxs-lookup"><span data-stu-id="d674c-193">The following example shows how to set the <xref:System.Web.Routing.Route.Url%2A> property in the class constructor.</span></span> <span data-ttu-id="d674c-194">模式的第一条线段和接下来的两段的 URL 参数包含的文本值"类别"。</span><span class="sxs-lookup"><span data-stu-id="d674c-194">The pattern contains the literal value "Category" for the first segment and URL parameters for the next two segments.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d674c-195">以下任何项：</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-195">Any of the following:</span>
          </span>  
  
-   <span data-ttu-id="d674c-196">以 <c>~</c> 或 <c>/</c> 开头的值。</span><span class="sxs-lookup"><span data-stu-id="d674c-196">The value starts with <c>~</c> or <c>/</c>.</span></span>  
  
-   <span data-ttu-id="d674c-197">该值包含 <c>?</c></span><span class="sxs-lookup"><span data-stu-id="d674c-197">The value contains a <c>?</c></span></span><span data-ttu-id="d674c-198">字符。</span><span class="sxs-lookup"><span data-stu-id="d674c-198">character.</span></span>  
  
-   <span data-ttu-id="d674c-199">“全部捕捉”参数不在末尾。</span><span class="sxs-lookup"><span data-stu-id="d674c-199">The catch-all parameter is not last.</span></span></exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="d674c-200">URL 段不使用分隔符或文本常量进行分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d674c-200">URL segments are not separated by a delimiter or a literal constant.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>