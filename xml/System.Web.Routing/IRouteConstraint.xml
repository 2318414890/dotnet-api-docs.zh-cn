<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a9282664eaba3ced642eebe12b8ecd9940e6f8e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义类必须实现才能检查某个 URL 参数值是否对约束有效的协定。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当路由定义中包含针对 URL 参数的约束时，必须在作为其中某一字符串或实现的对象，表示约束<xref:System.Web.Routing.IRouteConstraint>接口。 如果约束是字符串，则将它视为正则表达式。 创建一个类以实现<xref:System.Web.Routing.IRouteConstraint>时，不能表示轻松地为正则表达式的验证逻辑。 添加中的验证逻辑<xref:System.Web.Routing.IRouteConstraint.Match%2A>方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Web::HttpContextBase ^ httpContext, System::Web::Routing::Route ^ route, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">一个对象，该对象封装有关 HTTP 请求的信息。</param>
        <param name="route">此约束所属的对象。</param>
        <param name="parameterName">要检查的参数的名称。</param>
        <param name="values">一个包含 URL 的参数的对象。</param>
        <param name="routeDirection">一个对象，指示在处理传入请求或生成 URL 时，是否正在执行约束检查。</param>
        <summary>确定 URL 参数是否包含此约束的有效值。</summary>
        <returns>
          如果 URL 参数包含有效值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你使用<xref:System.Web.Routing.IRouteConstraint.Match%2A>方法以添加该约束验证逻辑。 处理传入请求时和构造 URL 时，将通过路由框架调用此方法。 你可以通过检查来确定当前的应用场景`routeDirection`参数。  
  
 处理请求时，路由框架将确定是否的模式和传入请求的值与模式匹配的路由约束。 当构造 URL 时，路由框架会确定提供的值是否时<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>调用方法的路由约束与模式匹配。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>