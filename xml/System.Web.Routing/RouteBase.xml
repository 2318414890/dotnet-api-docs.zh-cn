<Type Name="RouteBase" FullName="System.Web.Routing.RouteBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce0722b952c6e5a3990418b83ee1c8269497442b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37544903" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RouteBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteBase abstract" />
  <TypeSignature Language="F#" Value="type RouteBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f1c46-101">用作表示 ASP.NET 路由的所有类的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1c46-101">Serves as the base class for all classes that represent an ASP.NET route.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1c46-102"><xref:System.Web.Routing.RouteBase>类，可创建自定义的类，用于在应用程序中定义的路由。</span><span class="sxs-lookup"><span data-stu-id="f1c46-102">The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application.</span></span> <span data-ttu-id="f1c46-103">通常情况下，将使用<xref:System.Web.Routing.Route>类时定义的路由。</span><span class="sxs-lookup"><span data-stu-id="f1c46-103">Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes.</span></span> <span data-ttu-id="f1c46-104"><xref:System.Web.Routing.Route> 类是从 <xref:System.Web.Routing.RouteBase> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="f1c46-104">The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class.</span></span> <span data-ttu-id="f1c46-105">但是，如果你想要提供不同的功能比所提供的内容<xref:System.Web.Routing.Route>类，您创建派生一个类<xref:System.Web.Routing.RouteBase>和实现的属性和所需的方法。</span><span class="sxs-lookup"><span data-stu-id="f1c46-105">However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RouteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RouteBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1c46-106">初始化该类供继承的类实例使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-106">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="f1c46-107">此构造函数只能由继承的类调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-107">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public abstract System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="abstract member GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeBase.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="f1c46-108">一个对象，封装有关 HTTP 请求的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-108">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1c46-109">当在派生类中重写时，会返回有关请求的路由信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-109">When overridden in a derived class, returns route information about the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1c46-110">一个对象，包含路由定义的值（如果该路由与当前请求匹配）或 <see langword="null" />（如果该路由与请求不匹配）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-110">An object that contains the values from the route definition if the route matches the current request, or <see langword="null" /> if the route does not match the request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public abstract System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeBase.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="f1c46-111">一个对象，封装有关所请求的路由的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-111">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="f1c46-112">一个包含路由参数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-112">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1c46-113">当在派生类中重写时，会检查路由是否与指定值匹配，如果匹配，则生成一个 URL，然后检索有关该路由的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-113">When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1c46-114">一个对象（包含生成的 URL 和有关路由的信息）或 <see langword="null" />（如果路由与 <paramref name="values" /> 不匹配）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-114">An object that contains the generated URL and information about the route, or <see langword="null" /> if the route does not match <paramref name="values" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1c46-115">若要生成的 URL，请使用<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法的<xref:System.Web.Routing.RouteCollection>类。</span><span class="sxs-lookup"><span data-stu-id="f1c46-115">To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class.</span></span> <span data-ttu-id="f1c46-116">该方法将调用<xref:System.Web.Routing.RouteBase.GetVirtualPath%2A>方法来确定该路由是否与中的值相匹配的集合中每个路由`values`，因此可以生成 URL。</span><span class="sxs-lookup"><span data-stu-id="f1c46-116">That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteBase.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteBase.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1c46-117">获取或设置一个值，该值指示 ASP.NET 路由操作是否应处理与现有文件匹配的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-117">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1c46-118">如果 ASP.NET 路由操作处理所有请求（甚至包括与现有文件匹配的请求），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-118">
              <see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1c46-119">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1c46-119">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>