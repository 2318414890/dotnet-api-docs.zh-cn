<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5ddffb41db3e1edcd0591a5abd1027692cd10e8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48757680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <TypeSignature Language="F#" Value="type Registry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f8acc-101">提供表示 Windows 注册表中的根项的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象，并提供访问项/值对的 <see langword="static" /> 方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8acc-101">Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-102">此类提供在运行 Windows 的计算机上的注册表中找到的标准的根键集。</span><span class="sxs-lookup"><span data-stu-id="f8acc-102">This class provides the set of standard root keys found in the registry on machines running Windows.</span></span> <span data-ttu-id="f8acc-103">注册表是有关应用程序、 用户和默认的系统设置的信息存储设施。</span><span class="sxs-lookup"><span data-stu-id="f8acc-103">The registry is a storage facility for information about applications, users, and default system settings.</span></span> <span data-ttu-id="f8acc-104">例如，应用程序可以使用注册表来存储需要关闭应用程序后, 保留的信息以及重新加载应用程序时访问相同的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-104">For example, applications can use the registry for storing information that needs to be preserved after the application is closed, and access that same information when the application is reloaded.</span></span> <span data-ttu-id="f8acc-105">例如，可以将颜色首选项、 屏幕位置或窗口的大小。</span><span class="sxs-lookup"><span data-stu-id="f8acc-105">For instance, you can store color preferences, screen locations, or the size of the window.</span></span> <span data-ttu-id="f8acc-106">可以通过将信息存储在注册表中的其他位置来控制此数据为每个用户。</span><span class="sxs-lookup"><span data-stu-id="f8acc-106">You can control this data for each user by storing the information in a different location in the registry.</span></span>  
  
 <span data-ttu-id="f8acc-107">基本或根<xref:Microsoft.Win32.RegistryKey>实例公开的`Registry`类描述子项和注册表中的值的基本存储机制。</span><span class="sxs-lookup"><span data-stu-id="f8acc-107">The base, or root <xref:Microsoft.Win32.RegistryKey> instances that are exposed by the `Registry` class delineate the basic storage mechanism for subkeys and values in the registry.</span></span> <span data-ttu-id="f8acc-108">所有键都是只读的因为注册表取决于其存在。</span><span class="sxs-lookup"><span data-stu-id="f8acc-108">All keys are read-only because the registry depends on their existence.</span></span> <span data-ttu-id="f8acc-109">公开的项`Registry`是：</span><span class="sxs-lookup"><span data-stu-id="f8acc-109">The keys exposed by `Registry` are:</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 <span data-ttu-id="f8acc-110">存储用户首选项有关的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-110">Stores information about user preferences.</span></span>  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 <span data-ttu-id="f8acc-111">存储在本地计算机的配置信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-111">Stores configuration information for the local machine.</span></span>  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 <span data-ttu-id="f8acc-112">类型 （和类） 的相关信息存储和其属性。</span><span class="sxs-lookup"><span data-stu-id="f8acc-112">Stores information about types (and classes) and their properties.</span></span>  
  
 <xref:Microsoft.Win32.Registry.Users>  
 <span data-ttu-id="f8acc-113">存储有关默认用户配置的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-113">Stores information about the default user configuration.</span></span>  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 <span data-ttu-id="f8acc-114">存储的软件组件的性能信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-114">Stores performance information for software components.</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 <span data-ttu-id="f8acc-115">存储非用户特定的硬件信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-115">Stores non-user-specific hardware information.</span></span>  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 <span data-ttu-id="f8acc-116">将动态数据存储。</span><span class="sxs-lookup"><span data-stu-id="f8acc-116">Stores dynamic data.</span></span>  
  
 <span data-ttu-id="f8acc-117">一旦您确定要在其下存储/检索信息从注册表根项，可以使用<xref:Microsoft.Win32.RegistryKey>类来添加或删除子项，并处理给定密钥的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-117">Once you have identified the root key under which you want to store/retrieve information from the registry, you can use the <xref:Microsoft.Win32.RegistryKey> class to add or remove subkeys, and manipulate the values for a given key.</span></span>  
  
 <span data-ttu-id="f8acc-118">硬件设备可以将信息放在自动使用插接口注册表中。</span><span class="sxs-lookup"><span data-stu-id="f8acc-118">Hardware devices can place information in the registry automatically using the Plug and Play interface.</span></span> <span data-ttu-id="f8acc-119">安装设备驱动程序软件可以通过写入到标准 Api 在注册表中放的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-119">Software for installing device drivers can place information in the registry by writing to standard APIs.</span></span>  
  
## <a name="static-methods-for-getting-and-setting-values"></a><span data-ttu-id="f8acc-120">用于获取和设置值的静态方法</span><span class="sxs-lookup"><span data-stu-id="f8acc-120">Static Methods for Getting and Setting Values</span></span>  
 <span data-ttu-id="f8acc-121">在.NET Framework 2.0 版中，<xref:Microsoft.Win32.Registry>类还包含`static`<xref:Microsoft.Win32.Registry.GetValue%2A>和<xref:Microsoft.Win32.Registry.SetValue%2A>用于设置和检索从注册表项值的方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-121">In the .NET Framework version 2.0, the <xref:Microsoft.Win32.Registry> class also contains `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods for setting and retrieving values from registry keys.</span></span> <span data-ttu-id="f8acc-122">这些方法打开和关闭注册表项的每个它们使用，因此它们不会执行的时间以及中的类似方法<xref:Microsoft.Win32.RegistryKey>类，当您访问大量的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-122">These methods open and close registry keys each time they are used, so they do not perform as well as analogous methods in the <xref:Microsoft.Win32.RegistryKey> class, when you access a large number of values.</span></span>  
  
 <span data-ttu-id="f8acc-123"><xref:Microsoft.Win32.RegistryKey>类还提供了可以设置注册表项，来检索它之前, 测试一个值的数据类型和删除项的 Windows 访问控制安全性的方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-123">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to set Windows access control security for registry keys, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-124">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-124">This section contains two code examples.</span></span> <span data-ttu-id="f8acc-125">第一个示例演示根项，第二个示例演示`static`<xref:Microsoft.Win32.Registry.GetValue%2A>和<xref:Microsoft.Win32.Registry.SetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-125">The first example demonstrates root keys, and the second example demonstrates the `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods.</span></span>  
  
 <span data-ttu-id="f8acc-126">示例 1</span><span class="sxs-lookup"><span data-stu-id="f8acc-126">Example 1</span></span>  
  
 <span data-ttu-id="f8acc-127">下面的代码示例演示如何检索的 HKEY_USERS 项、 子项和打印它们在屏幕上的名称。</span><span class="sxs-lookup"><span data-stu-id="f8acc-127">The following code example demonstrates how to retrieve the subkeys of the HKEY_USERS key, and print their names to the screen.</span></span> <span data-ttu-id="f8acc-128">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-128">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-129">然后，可以使用中的其他操作`RegistryKey`来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-129">You can then use other operations in `RegistryKey` to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f8acc-130">示例 2</span><span class="sxs-lookup"><span data-stu-id="f8acc-130">Example 2</span></span>  
  
 <span data-ttu-id="f8acc-131">下面的代码示例将多个数据类型的值存储在一个示例密钥，创建密钥，因为它会检索并显示的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-131">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="f8acc-132">该示例演示如何存储和检索默认 （无名） 的名称/值对，以及如何使用`defaultValue`不存在名称/值对时。</span><span class="sxs-lookup"><span data-stu-id="f8acc-132">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.ClassesRoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-133">定义文档的类型（或类）以及与那些类型关联的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-133">Defines the types (or classes) of documents and the properties associated with those types.</span>
          </span>
          <span data-ttu-id="f8acc-134">该字段读取 Windows 注册表基项 HKEY_CLASSES_ROOT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-134">This field reads the Windows registry base key HKEY_CLASSES_ROOT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-135">常规应用程序和 OLE 应用程序使用此项下存储的数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-135">Both conventional applications and OLE applications use data that is stored under this key.</span></span> <span data-ttu-id="f8acc-136">此密钥还可以提供向后的兼容性 Windows 3.1 注册数据库存储 DDE 和 OLE 支持的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-136">This key also provides backward compatibility with the Windows 3.1 registration database by storing information for DDE and OLE support.</span></span> <span data-ttu-id="f8acc-137">文件查看器和用户界面扩展将其 OLE 类标识符存储在此项，并在此注册表注册处理服务器。</span><span class="sxs-lookup"><span data-stu-id="f8acc-137">File viewers and user interface extensions store their OLE class identifiers in this key, and processing servers are registered in this key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-138">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-138">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-139">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-139">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-140">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-140">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-141">包含有关非用户特定的硬件的配置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-141">Contains configuration information pertaining to the hardware that is not specific to the user.</span>
          </span>
          <span data-ttu-id="f8acc-142">该字段读取 Windows 注册表基项 HKEY_CURRENT_CONFIG。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-142">This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-143">此成员映射到中的子项<xref:Microsoft.Win32.Registry.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="f8acc-143">This member is mapped to a subkey within <xref:Microsoft.Win32.Registry.LocalMachine>.</span></span>  
  
 <span data-ttu-id="f8acc-144">使用此成员的示例是存储其数据，具体取决于是否在系统连接到网络的不同的服务器名称的应用程序。</span><span class="sxs-lookup"><span data-stu-id="f8acc-144">An example of using this member is an application that stores a different server name for its data depending on whether the system is attached to a network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-145">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-145">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-146">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-146">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-147">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-147">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-148">包含有关当前用户首选项的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-148">Contains information about the current user preferences.</span>
          </span>
          <span data-ttu-id="f8acc-149">该字段读取 Windows 注册表基项 HKEY_CURRENT_USER</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-149">This field reads the Windows registry base key HKEY_CURRENT_USER</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-150">存储在此项的信息包括环境变量和程序组、 颜色、 打印机、 网络连接和应用程序首选项有关的数据的设置。</span><span class="sxs-lookup"><span data-stu-id="f8acc-150">Information stored in this key includes the settings of environment variables and data about program groups, colors, printers, network connections, and application preferences.</span></span> <span data-ttu-id="f8acc-151">此密钥，可以更轻松地建立当前用户的设置。</span><span class="sxs-lookup"><span data-stu-id="f8acc-151">This key makes it easier to establish the current user's settings.</span></span> <span data-ttu-id="f8acc-152">在此项时，软件供应商存储要在其应用程序中使用的当前特定于用户的首选项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-152">In this key, software vendors store the current user-specific preferences to be used within their applications.</span></span> <span data-ttu-id="f8acc-153">Microsoft，例如，创建要用于每个应用程序创建其自己的 Microsoft 密钥下的子项及其应用程序 HKEY_CURRENT_USER\Software\Microsoft 项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-153">Microsoft, for example, creates the HKEY_CURRENT_USER\Software\Microsoft key for its applications to use, with each application creating its own subkey under the Microsoft key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-154">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-154">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-155">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-155">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-156">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-156">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberSignature Language="F#" Value=" staticval mutable DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.DynData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key only works on Win9x, which is no longer supported by the CLR.  On NT-based operating systems, use the PerformanceData registry key instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-157">包含动态注册表数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-157">Contains dynamic registry data.</span>
          </span>
          <span data-ttu-id="f8acc-158">该字段读取 Windows 注册表基项 HKEY_DYN_DATA。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-158">This field reads the Windows registry base key HKEY_DYN_DATA.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-159">Windows 98/Windows Me 注册表支持静态数据 （这存储在注册表中的磁盘上） 和动态数据 （如性能统计信息需要经常更改）。</span><span class="sxs-lookup"><span data-stu-id="f8acc-159">The Windows 98/Windows Me registry supports both static data (which is stored on disk in the registry) and dynamic data (which changes frequently, such as performance statistics).</span></span> <span data-ttu-id="f8acc-160">此动态数据区域可以远程和本地运行的 Win32 应用程序是允许虚拟设备驱动程序 (VxDs) 提供实时数据的机制。</span><span class="sxs-lookup"><span data-stu-id="f8acc-160">This dynamic data area is the mechanism that allows Virtual Device Drivers (VxDs) to provide real-time data to Win32 applications that can run remotely as well as locally.</span></span> <span data-ttu-id="f8acc-161">它还允许系统监视器在远程 Windows 98/Windows Me 系统上提供性能统计信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-161">It also allows the system monitor to provide performance statistics on remote Windows 98/Windows Me systems.</span></span>  
  
 <span data-ttu-id="f8acc-162">Vxd 不限于性能数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-162">VxDs are not limited to performance data.</span></span> <span data-ttu-id="f8acc-163">他们可以提供他们想要将从传递 Ring 0 到 3 环高效而无需占用 CPU 的任何数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-163">They can provide any data they want to pass from Ring 0 to Ring 3 efficiently without monopolizing the CPU.</span></span> <span data-ttu-id="f8acc-164">注册表支持通过存储指向一个函数，返回一个值 （或多个值） 的动态数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-164">The registry supports dynamic data by storing a pointer to a function that returns a value (or many values).</span></span> <span data-ttu-id="f8acc-165">当注册表调用查询值与动态键关联，将调用该函数返回的所需的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-165">When a Registry call queries values associated with a dynamic key, that function is called to return the desired value or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-166">动态密钥引入了在 Microsoft Windows 95 中以处理动态注册表数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-166">Dynamic keys were introduced in Microsoft Windows 95 to handle dynamic Registry data.</span></span> <span data-ttu-id="f8acc-167">支持仅在 Windows 98/Windows me 一起提供。</span><span class="sxs-lookup"><span data-stu-id="f8acc-167">They are supported only in Windows 98/Windows Me.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-168">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-168">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-169">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-169">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-170">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-170">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="f8acc-171">请注意，此示例中可能不返回任何结果，因为可能没有可用的动态数据，或者你可能未运行 Windows 98 / me 一起提供。</span><span class="sxs-lookup"><span data-stu-id="f8acc-171">Note that this example can return no results, since there might not be dynamic data available, or you might not be running Windows 98/ME.</span></span> <span data-ttu-id="f8acc-172">在其他系统上，使用此密钥可能会导致错误。</span><span class="sxs-lookup"><span data-stu-id="f8acc-172">Using this key may cause an error on other systems.</span></span>  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f8acc-173">操作系统不支持动态数据，即操作系统非 Windows 98、Windows 98 Second Edition 或 Windows Millennium Edition。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-173">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValue : string * string * obj -&gt; obj" Usage="Microsoft.Win32.Registry.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="f8acc-174">以有效注册表根（如“HKEY_CURRENT_USER”）开头的键的完整注册表路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-174">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="f8acc-175">名称/值对的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-175">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="f8acc-176">当 <c>valueName</c> 不存在时要返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-176">The value to return if <c>valueName</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8acc-177">检索与指定的注册表项中的指定名称关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-177">Retrieves the value associated with the specified name, in the specified registry key.</span>
          </span>
          <span data-ttu-id="f8acc-178">如果在指定的项中未找到该名称，则返回您提供的默认值；或者，如果指定的项不存在，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-178">If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8acc-179">如果由 <paramref name="keyName" /> 指定的子项不存在，则返回 <see langword="null" />；否则，返回与 <paramref name="valueName" /> 关联的值；或者，如果未找到 <paramref name="defaultValue" />，则返回 <paramref name="valueName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-179">
              <see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-180">字符串`valueName`不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f8acc-180">The string `valueName` is not case-sensitive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-181">注册表项可以包含一个不与任何名称相关联的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-181">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="f8acc-182">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="f8acc-182">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="f8acc-183">若要检索此未命名的值，指定`null`或空字符串 ("") 为`valuName`。</span><span class="sxs-lookup"><span data-stu-id="f8acc-183">To retrieve this unnamed value, specify either `null` or the empty string ("") for `valuName`.</span></span>  
  
 <span data-ttu-id="f8acc-184">有效的根名称是 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT，HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="f8acc-184">Valid root names are HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span> <span data-ttu-id="f8acc-185">例如，在 Visual Basic 中的字符串"HKEY_CURRENT_USER\MyTestKey"访问子项"MyTestKey"HKEY_CURRENT_USER 根目录中的键/值对。</span><span class="sxs-lookup"><span data-stu-id="f8acc-185">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" accesses key/value pairs for the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span>  
  
 <span data-ttu-id="f8acc-186">当<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法检索可扩充字符串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它将展开使用本地环境中的数据的环境字符串。</span><span class="sxs-lookup"><span data-stu-id="f8acc-186">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="f8acc-187">如果已存储为一个字符串值，该值包含对环境变量的可展开引用 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可扩展字符串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，<xref:Microsoft.Win32.RegistryKey.GetValue%2A>不会展开它。</span><span class="sxs-lookup"><span data-stu-id="f8acc-187">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="f8acc-188">检索通过调用后，可以扩展此类字符串<xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-188">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-189">从 HKEY_PERFORMANCE_DATA 中检索数据的建议的方法是使用<xref:System.Diagnostics.PerformanceCounter>类而不是<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-189">The recommended way to retrieve data from HKEY_PERFORMANCE_DATA is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f8acc-190"><xref:Microsoft.Win32.Registry.GetValue%2A>并<xref:Microsoft.Win32.Registry.SetValue%2A>方法打开和关闭注册表项的方法以及它们使用，因此它们不会执行每次<xref:Microsoft.Win32.RegistryKey>类如果访问大量的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-190">The <xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods open and close registry keys each time they are used, so they do not perform as well as the methods of the <xref:Microsoft.Win32.RegistryKey> class if you access a large number of values.</span></span>  
  
 <span data-ttu-id="f8acc-191"><xref:Microsoft.Win32.RegistryKey> 此外提供允许您将访问控制列表 (ACL) 添加到注册表项，来检索它之前, 测试一个值的数据类型和删除项的方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-191"><xref:Microsoft.Win32.RegistryKey> also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-192">下面的代码示例将多个数据类型的值存储在一个示例密钥，创建密钥，因为它会检索并显示的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-192">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="f8acc-193">该示例演示如何存储和检索默认 （无名） 的名称/值对，以及如何使用`defaultValue`不存在名称/值对时。</span><span class="sxs-lookup"><span data-stu-id="f8acc-193">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f8acc-194">该用户没有读取注册表项所需的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-194">The user does not have the permissions required to read from the registry key.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f8acc-195">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-195">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8acc-196">
            <paramref name="keyName" /> 未以有效注册表根开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-196">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="f8acc-197">若要从注册表中读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-197">to read from the registry.</span>
          </span>
          <span data-ttu-id="f8acc-198">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-198">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="f8acc-199">若要读取注册表项的类型 REG_EXPAND_SZ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-199">to read a registry key of type REG_EXPAND_SZ.</span>
          </span>
          <span data-ttu-id="f8acc-200">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-200">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.LocalMachine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-201">包含本地计算机的配置数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-201">Contains the configuration data for the local machine.</span>
          </span>
          <span data-ttu-id="f8acc-202">该字段读取 Windows 注册表基项 HKEY_LOCAL_MACHINE。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-202">This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-203">`LocalMachine` 包含五个密钥：</span><span class="sxs-lookup"><span data-stu-id="f8acc-203">`LocalMachine` contains five keys:</span></span>  
  
 <span data-ttu-id="f8acc-204">硬件</span><span class="sxs-lookup"><span data-stu-id="f8acc-204">Hardware</span></span>  
 <span data-ttu-id="f8acc-205">介绍在计算机中的物理硬件设备驱动程序使用该硬件，并映射和链接，用户模式代码的内核模式驱动程序的相关的数据的方法。</span><span class="sxs-lookup"><span data-stu-id="f8acc-205">Describes the physical hardware in the computer, the way device drivers use that hardware, and mappings and related data that link kernel-mode drivers with user-mode code.</span></span> <span data-ttu-id="f8acc-206">此密钥中的所有数据将重新都创建每次启动系统。</span><span class="sxs-lookup"><span data-stu-id="f8acc-206">All data in this key is recreated each time the system is started.</span></span> <span data-ttu-id="f8acc-207">说明子项介绍实际的计算机硬件。</span><span class="sxs-lookup"><span data-stu-id="f8acc-207">The Description subkey describes the actual computer hardware.</span></span> <span data-ttu-id="f8acc-208">DeviceMap 子项包含格式特定于驱动程序的特定类的其他数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-208">The DeviceMap subkey contains miscellaneous data in formats specific to particular classes of drivers.</span></span> <span data-ttu-id="f8acc-209">ResourceMap 子项描述的设备驱动程序声明的硬件资源。</span><span class="sxs-lookup"><span data-stu-id="f8acc-209">The ResourceMap subkey describes which device drivers claim which hardware resources.</span></span> <span data-ttu-id="f8acc-210">Windows NT 诊断程序 (Winmsdp.exe) 可以报告其内容的易读的窗体中。</span><span class="sxs-lookup"><span data-stu-id="f8acc-210">The Windows NT Diagnostics program (Winmsdp.exe) can report on its contents in an easy-to-read form.</span></span>  
  
 <span data-ttu-id="f8acc-211">SAM</span><span class="sxs-lookup"><span data-stu-id="f8acc-211">SAM</span></span>  
 <span data-ttu-id="f8acc-212">目录服务数据库的用户和组帐户，以及在 Windows 2000 Server 域的安全信息 （SAM 是安全帐户管理器，名为目录服务数据库）。</span><span class="sxs-lookup"><span data-stu-id="f8acc-212">The directory services database of security information for user and group accounts, and for the domains in Windows 2000 Server (SAM is the Security Account Manager, known as the directory services database).</span></span>  
  
 <span data-ttu-id="f8acc-213">安全性</span><span class="sxs-lookup"><span data-stu-id="f8acc-213">Security</span></span>  
 <span data-ttu-id="f8acc-214">包含的本地安全策略，例如，特定的用户权限。</span><span class="sxs-lookup"><span data-stu-id="f8acc-214">Contains the local security policy, such as specific user rights.</span></span> <span data-ttu-id="f8acc-215">只能由 Windows 2000 安全子系统使用此密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-215">This key is used only by the Windows 2000 security subsystem.</span></span>  
  
 <span data-ttu-id="f8acc-216">软件</span><span class="sxs-lookup"><span data-stu-id="f8acc-216">Software</span></span>  
 <span data-ttu-id="f8acc-217">每台计算机软件数据库。</span><span class="sxs-lookup"><span data-stu-id="f8acc-217">The per-computer software database.</span></span> <span data-ttu-id="f8acc-218">此项包含有关与各种项的其他配置数据一起在本地计算机上安装软件的数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-218">This key contains data about software installed on the local computer, along with various items of miscellaneous configuration data.</span></span>  
  
 <span data-ttu-id="f8acc-219">系统</span><span class="sxs-lookup"><span data-stu-id="f8acc-219">System</span></span>  
 <span data-ttu-id="f8acc-220">控制系统启动、 设备驱动程序加载、 Windows 2000 服务和操作系统的行为。</span><span class="sxs-lookup"><span data-stu-id="f8acc-220">Controls system startup, device driver loading, Windows 2000 services, and operating system behavior.</span></span>  
  
 <span data-ttu-id="f8acc-221">按照约定，如果在存在相似的数据<xref:Microsoft.Win32.Registry.CurrentUser>并在列表视图<xref:Microsoft.Win32.Registry.LocalMachine>中的数据<xref:Microsoft.Win32.Registry.CurrentUser>优先。</span><span class="sxs-lookup"><span data-stu-id="f8acc-221">By convention, if similar data exists under <xref:Microsoft.Win32.Registry.CurrentUser> and under <xref:Microsoft.Win32.Registry.LocalMachine>, the data in <xref:Microsoft.Win32.Registry.CurrentUser> takes precedence.</span></span> <span data-ttu-id="f8acc-222">但是，在此项的值可以还扩展 （而不是替换） Registry.LocalMachine 中的数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-222">However, values in this key can also extend (rather than replace) data in Registry.LocalMachine.</span></span> <span data-ttu-id="f8acc-223">此外，某些项 （如设备驱动程序加载项） 是外部 Registry.LocalMachine 它们出现的情况下没有意义。</span><span class="sxs-lookup"><span data-stu-id="f8acc-223">Also, some items (such as device driver loading entries) are meaningless if they occur outside of Registry.LocalMachine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-224">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-224">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-225">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-225">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-226">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-226">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.PerformanceData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-227">包含软件组件的性能信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-227">Contains performance information for software components.</span>
          </span>
          <span data-ttu-id="f8acc-228">该字段读取 Windows 注册表基项 HKEY_PERFORMANCE_DATA。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-228">This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-229">每个软件组件创建其对象计数器时它在安装，并在执行时将计数器数据写入的项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-229">Each software component creates keys for its objects, counters when it is installed, and writes counter data while it is executing.</span></span> <span data-ttu-id="f8acc-230">可以访问此数据，如可访问任何其他注册表数据，使用<xref:Microsoft.Win32.RegistryKey>函数。</span><span class="sxs-lookup"><span data-stu-id="f8acc-230">You can access this data as you would access any other registry data, using the <xref:Microsoft.Win32.RegistryKey> functions.</span></span>  
  
 <span data-ttu-id="f8acc-231">尽管使用注册表收集性能数据，但数据不会存储在注册表数据库。</span><span class="sxs-lookup"><span data-stu-id="f8acc-231">Although you use the registry to collect performance data, the data is not stored in the registry database.</span></span> <span data-ttu-id="f8acc-232">相反，使用此密钥访问注册表会导致系统从相应的系统对象管理器收集的数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-232">Instead, accessing the registry with this key causes the system to collect the data from the appropriate system object managers.</span></span>  
  
 <span data-ttu-id="f8acc-233">若要从本地系统获取性能数据，请使用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法，与 Registry.PerformanceData 键。</span><span class="sxs-lookup"><span data-stu-id="f8acc-233">To obtain performance data from the local system, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method, with the Registry.PerformanceData key.</span></span> <span data-ttu-id="f8acc-234">第一次调用将打开 （您不必显式首次打开此项） 的密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-234">The first call opens the key (you do not need to explicitly open the key first).</span></span> <span data-ttu-id="f8acc-235">但是，务必使用<xref:Microsoft.Win32.RegistryKey.Close%2A>方法关闭该密钥的句柄完成后获取性能数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-235">However, be sure to use the <xref:Microsoft.Win32.RegistryKey.Close%2A> method to close the handle to the key when you are finished obtaining performance data.</span></span> <span data-ttu-id="f8acc-236">用户不能安装或删除的软件组件，其性能数据正在使用中。</span><span class="sxs-lookup"><span data-stu-id="f8acc-236">The user cannot install or remove a software component while its performance data is in use.</span></span>  
  
 <span data-ttu-id="f8acc-237">若要从远程系统获取性能数据，必须使用<xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A>方法，与远程系统和 Registry.PerformanceData 密钥的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="f8acc-237">To obtain performance data from a remote system, you must use the <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> method, with the computer name of the remote system and the Registry.PerformanceData key.</span></span> <span data-ttu-id="f8acc-238">此调用会检索表示远程系统的性能数据的密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-238">This call retrieves a key representing the performance data for the remote system.</span></span> <span data-ttu-id="f8acc-239">若要检索的数据，调用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>使用此密钥，而不是 Registry.PerformanceData 密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-239">To retrieve the data, call <xref:Microsoft.Win32.RegistryKey.GetValue%2A> using this key, rather than the Registry.PerformanceData key.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-240">在 Windows Server 2003 中，用户必须至少属于 Performance Monitor Users 组才能访问此基项的子项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-240">On Windows Server 2003, a user must at least belong to the Performance Monitor Users group in order to access subkeys of this base key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-241">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-241">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-242">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-242">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-243">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-243">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="f8acc-244">请注意此示例中通常可以返回任何结果，因为可能会不有任何性能数据。</span><span class="sxs-lookup"><span data-stu-id="f8acc-244">Note that this example can often return no results, since there might be no performance data.</span></span>  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-245">设置注册表项中的名称/值对的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-245">Sets the value of a name/value pair in a registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8acc-246">下面的代码示例将多个数据类型的值存储在一个示例密钥，创建密钥，因为它会检索并显示的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-246">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="f8acc-247">该示例演示如何存储和检索默认 （无名） 的名称/值对，以及如何使用`defaultValue`不存在名称/值对时。</span><span class="sxs-lookup"><span data-stu-id="f8acc-247">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="f8acc-248">以有效注册表根（如“HKEY_CURRENT_USER”）开头的键的完整注册表路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-248">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="f8acc-249">名称/值对的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-249">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f8acc-250">要存储的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-250">The value to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8acc-251">设置指定的注册表项的指定名称/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-251">Sets the specified name/value pair on the specified registry key.</span>
          </span>
          <span data-ttu-id="f8acc-252">如果指定的项不存在，则创建该项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-252">If the specified key does not exist, it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-253">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，则`valueName`参数将不再限制为最多 255 个字符; 但是，`keyName`参数仍具有 255 个字符限制。</span><span class="sxs-lookup"><span data-stu-id="f8acc-253">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues to have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="f8acc-254">由于许多值可以存储在注册表中的每个项，必须使用`valueName`参数来指定你想要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-254">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-255">注册表项可以包含一个不与任何名称相关联的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-255">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="f8acc-256">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="f8acc-256">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="f8acc-257">若要设置此未命名的值，指定`null`或空字符串 ("") 为`valueName`。</span><span class="sxs-lookup"><span data-stu-id="f8acc-257">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="f8acc-258">如果`valueName`不存在的项中创建和关联的值设置为`value`。</span><span class="sxs-lookup"><span data-stu-id="f8acc-258">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="f8acc-259">如果`keyName`指定子项不存在，在指定的根中创建子项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-259">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="f8acc-260">例如，在 Visual Basic 中的字符串"HKEY_CURRENT_USER\MyTestKey"创建子项"MyTestKey"在 HKEY_CURRENT_USER 根目录。</span><span class="sxs-lookup"><span data-stu-id="f8acc-260">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="f8acc-261">字符串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"创建"MyTestKey"、"MyTestKey\Key2"和"MyTestKey\Key2\Key3"嵌套的子项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-261">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="f8acc-262">有效的根名称包含 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT，HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="f8acc-262">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-263"><xref:Microsoft.Win32.Registry.SetValue%2A>方法打开注册表项、 设置的值，并关闭该密钥每次调用它。</span><span class="sxs-lookup"><span data-stu-id="f8acc-263">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="f8acc-264">如果您需要修改大量值，<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>方法可能会提供更好的性能。</span><span class="sxs-lookup"><span data-stu-id="f8acc-264">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="f8acc-265"><xref:Microsoft.Win32.RegistryKey>类还提供了方法，您可以将访问控制列表 (ACL) 添加到注册表项，以检索它之前, 测试一个值的数据类型并删除密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-265">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="f8acc-266">此重载<xref:Microsoft.Win32.Registry.SetValue%2A>将 64 位整数存储为字符串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="f8acc-266">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="f8acc-267">若要存储为 64 位数字<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>值，请使用<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="f8acc-267">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="f8acc-268">此重载<xref:Microsoft.Win32.Registry.SetValue%2A>存储所有字符串值作为<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>对象，即使它们包含对环境变量可展开的引用。</span><span class="sxs-lookup"><span data-stu-id="f8acc-268">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> objects, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="f8acc-269">若要保存为可展开的字符串的字符串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，使用<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="f8acc-269">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="f8acc-270">此重载是等效于调用<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法的重载<xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f8acc-270">This overload is equivalent to calling the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload with <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-271">在 Windows 98 和 Windows Millennium Edition (Windows Me)，注册表不是 Unicode，并不是所有 Unicode 字符都是有效的所有代码页。</span><span class="sxs-lookup"><span data-stu-id="f8acc-271">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="f8acc-272">最佳的匹配项都替换为对当前代码页无效的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="f8acc-272">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="f8acc-273">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="f8acc-273">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-274">下面的代码示例将多个数据类型的值存储在一个示例密钥，创建密钥，因为它会检索并显示的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-274">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="f8acc-275">该示例演示如何存储和检索默认 （无名） 的名称/值对，以及如何使用`defaultValue`不存在名称/值对时。</span><span class="sxs-lookup"><span data-stu-id="f8acc-275">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f8acc-276">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-276">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8acc-277">
            <paramref name="keyName" /> 未以有效注册表根开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-277">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
          <span data-ttu-id="f8acc-278">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-278">-or-</span>
          </span>
          <span data-ttu-id="f8acc-279">
            <paramref name="keyName" /> 的长度超过了允许的最大长度（255 个字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-279">
              <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f8acc-280">
            <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的，因此无法对其写入；例如，它是根级节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-280">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f8acc-281">用户没有创建或修改注册表项所需的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-281">The user does not have the permissions required to create or modify registry keys.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="f8acc-282">若要修改指定的注册表项，如果存在，或创建注册表项，如果尚不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-282">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span>
          </span>
          <span data-ttu-id="f8acc-283">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-283">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="f8acc-284">以有效注册表根（如“HKEY_CURRENT_USER”）开头的键的完整注册表路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-284">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="f8acc-285">名称/值对的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-285">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f8acc-286">要存储的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-286">The value to be stored.</span>
          </span>
        </param>
        <param name="valueKind">
          <span data-ttu-id="f8acc-287">在存储数据时使用的注册表数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-287">The registry data type to use when storing the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8acc-288">通过使用指定的注册表数据类型，设置该指定的注册表项的名称/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-288">Sets the name/value pair on the specified registry key, using the specified registry data type.</span>
          </span>
          <span data-ttu-id="f8acc-289">如果指定的项不存在，则创建该项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-289">If the specified key does not exist, it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-290">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，则`valueName`参数将不再限制为最多 255 个字符; 但是，`keyName`参数将继续具有 255 个字符限制。</span><span class="sxs-lookup"><span data-stu-id="f8acc-290">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="f8acc-291">由于许多值可以存储在注册表中的每个项，必须使用`valueName`参数来指定你想要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-291">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-292">注册表项可以包含一个不与任何名称相关联的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-292">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="f8acc-293">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="f8acc-293">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="f8acc-294">若要设置此未命名的值，指定`null`或空字符串 ("") 为`valueName`。</span><span class="sxs-lookup"><span data-stu-id="f8acc-294">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="f8acc-295">如果`valueName`不存在的项中创建和关联的值设置为`value`。</span><span class="sxs-lookup"><span data-stu-id="f8acc-295">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="f8acc-296">如果`keyName`指定子项不存在，在指定的根中创建子项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-296">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="f8acc-297">例如，在 Visual Basic 中的字符串"HKEY_CURRENT_USER\MyTestKey"创建子项"MyTestKey"在 HKEY_CURRENT_USER 根目录。</span><span class="sxs-lookup"><span data-stu-id="f8acc-297">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="f8acc-298">字符串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"创建"MyTestKey"、"MyTestKey\Key2"和"MyTestKey\Key2\Key3"嵌套的子项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-298">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="f8acc-299">有效的根名称包含 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT，HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="f8acc-299">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-300"><xref:Microsoft.Win32.Registry.SetValue%2A>方法打开注册表项、 设置的值，并关闭该密钥每次调用它。</span><span class="sxs-lookup"><span data-stu-id="f8acc-300">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="f8acc-301">如果您需要修改大量值，<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>方法可能会提供更好的性能。</span><span class="sxs-lookup"><span data-stu-id="f8acc-301">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="f8acc-302"><xref:Microsoft.Win32.RegistryKey>类还提供了方法，您可以将访问控制列表 (ACL) 添加到注册表项，以检索它之前, 测试一个值的数据类型并删除密钥。</span><span class="sxs-lookup"><span data-stu-id="f8acc-302">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="f8acc-303">如果指定的类型`value`不匹配指定`valueKind`，且不能为数据转换，<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="f8acc-303">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="f8acc-304">例如，可以存储<xref:System.Int64?displayProperty=nameWithType>作为<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>，但前提是其值小于最大值<xref:System.Int32?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f8acc-304">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f8acc-305">不能存储作为单个字符串值<xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f8acc-305">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-306">如果已装箱的值将传递进行<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>，执行该转换使用固定区域性。</span><span class="sxs-lookup"><span data-stu-id="f8acc-306">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8acc-307">在 Windows 98 和 Windows Millennium Edition (Windows Me)，注册表不是 Unicode，并不是所有 Unicode 字符都是有效的所有代码页。</span><span class="sxs-lookup"><span data-stu-id="f8acc-307">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="f8acc-308">最佳的匹配项都替换为对当前代码页无效的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="f8acc-308">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="f8acc-309">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="f8acc-309">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-310">下面的代码示例将多个数据类型的值存储在一个示例密钥，创建密钥，因为它会检索并显示的值。</span><span class="sxs-lookup"><span data-stu-id="f8acc-310">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="f8acc-311">该示例演示如何存储和检索默认 （无名） 的名称/值对，以及如何使用`defaultValue`不存在名称/值对时。</span><span class="sxs-lookup"><span data-stu-id="f8acc-311">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f8acc-312">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-312">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8acc-313">
            <paramref name="keyName" /> 未以有效注册表根开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-313">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
          <span data-ttu-id="f8acc-314">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-314">-or-</span>
          </span>
          <span data-ttu-id="f8acc-315">
            <paramref name="keyName" /> 的长度超过了允许的最大长度（255 个字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-315">
              <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          </span>
          <span data-ttu-id="f8acc-316">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-316">-or-</span>
          </span>
          <span data-ttu-id="f8acc-317">
            <paramref name="value" /> 的类型与 <paramref name="valueKind" /> 指定的注册表数据类型不匹配，因此，未能正确转换该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-317">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="f8acc-318">
            <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的，因此无法对其写入（例如，它是根级节点，或者未用写访问权限打开该项）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-318">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f8acc-319">用户没有创建或修改注册表项所需的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-319">The user does not have the permissions required to create or modify registry keys.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="f8acc-320">若要修改指定的注册表项，如果存在，或创建注册表项，如果尚不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-320">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span>
          </span>
          <span data-ttu-id="f8acc-321">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-321">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberSignature Language="F#" Value=" staticval mutable Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.Users" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8acc-322">包含有关默认用户配置的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-322">Contains information about the default user configuration.</span>
          </span>
          <span data-ttu-id="f8acc-323">该字段读取 Windows 注册表基项 HKEY_USERS。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8acc-323">This field reads the Windows registry base key HKEY_USERS.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8acc-324">此密钥包含为每个用户的计算机的分支。</span><span class="sxs-lookup"><span data-stu-id="f8acc-324">This key contains a branch for each user of the computer.</span></span> <span data-ttu-id="f8acc-325">默认配置被提供本地计算机上为新用户并为默认值当前用户，如果用户未更改首选项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-325">The default configuration is supplied for new users on the local computer and for the default current user if the user has not changed preferences.</span></span> <span data-ttu-id="f8acc-326">因为 Windows 98 / 我还支持 Registry.Users，应用程序可以在它们在 Windows 2000 的相同方式访问特定于用户的信息。</span><span class="sxs-lookup"><span data-stu-id="f8acc-326">Because Windows 98/ME also supports Registry.Users, applications can access the user-specific information the same way they do under Windows 2000.</span></span> <span data-ttu-id="f8acc-327">每个用户的信息存储在单独的文件，可以存储在本地或网络服务器上。</span><span class="sxs-lookup"><span data-stu-id="f8acc-327">Each user's information is stored in a separate file, which can be stored locally or on a network server.</span></span> <span data-ttu-id="f8acc-328">Windows 98 / 我可以将此文件复制到用户的当前系统，以便设置可以在一台计算机之间移动使用的用户。</span><span class="sxs-lookup"><span data-stu-id="f8acc-328">Windows 98/ME can copy this file to the user's current system so that settings can move from one computer to another with the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8acc-329">下面的示例演示如何检索此项的子项，并将其名称在屏幕上的打印。</span><span class="sxs-lookup"><span data-stu-id="f8acc-329">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="f8acc-330">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法来创建感兴趣的特定子项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="f8acc-330">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="f8acc-331">然后，可以使用中的其他操作<xref:Microsoft.Win32.RegistryKey>来操作该注册表项。</span><span class="sxs-lookup"><span data-stu-id="f8acc-331">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>