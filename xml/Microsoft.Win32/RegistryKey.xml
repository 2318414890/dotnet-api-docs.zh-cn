<Type Name="RegistryKey" FullName="Microsoft.Win32.RegistryKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47fc51297296f9c09c20b3e8f0f463293a648882" /><Meta Name="ms.sourcegitcommit" Value="112ca25eddde8ac8b788d67c406b7745ba914261" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/15/2019" /><Meta Name="ms.locfileid" Value="54312733" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryKey : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegistryKey extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.RegistryKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryKey&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryKey sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type RegistryKey = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3c0c1-101">表示 Windows 注册表中的项级节点。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-101">Represents a key-level node in the Windows registry.</span></span> <span data-ttu-id="3c0c1-102">此类是注册表封装。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-102">This class is a registry encapsulation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-103">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-103">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 <span data-ttu-id="3c0c1-104">在注册表的作用好似一台计算机上的操作系统和应用程序信息的中央存储库。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-104">The registry acts as a central repository of information for the operating system and the applications on a computer.</span></span> <span data-ttu-id="3c0c1-105">注册表组织层次结构格式，基于存储在它的元素的逻辑顺序 (请参阅<xref:Microsoft.Win32.Registry>此层次结构中的基本项)。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-105">The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy).</span></span> <span data-ttu-id="3c0c1-106">当将信息存储在注册表中，选择相应的位置所存储信息的类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-106">When storing information in the registry, select the appropriate location based on the type of information being stored.</span></span> <span data-ttu-id="3c0c1-107">请务必避免破坏其他应用程序创建的因为这可能会导致出现意外的行为，这些应用程序，还可以在自己的应用程序时产生不利影响的信息。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-107">Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c0c1-108">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="3c0c1-109">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="3c0c1-110">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="3c0c1-111">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="3c0c1-112">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="3c0c1-113">注册表项是在注册表中，组织的基本单元，并可以在文件资源管理器中的文件夹进行比较。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-113">Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer.</span></span> <span data-ttu-id="3c0c1-114">特定密钥可以有子项，就像一个文件夹可以拥有子文件夹。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-114">A particular key can have subkeys, just as a folder can have subfolders.</span></span> <span data-ttu-id="3c0c1-115">每个键可以删除，只要用户具有适当权限来执行此操作，并且不是基项或直接下面这些基项的位置。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-115">Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys.</span></span> <span data-ttu-id="3c0c1-116">每个密钥还可以有多个与其相关的值 （值可以比较到一个文件），用于存储信息-例如，在计算机上安装的应用程序有关的信息。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-116">Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information - for example, information about an application installed on the computer.</span></span> <span data-ttu-id="3c0c1-117">每个值存储信息，从而可以检索或更新时所需的一个特定的部分。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-117">Each value holds one particular piece of information, which can be retrieved or updated when required.</span></span> <span data-ttu-id="3c0c1-118">例如，可以创建<xref:Microsoft.Win32.RegistryKey>公司，在下找到密钥 HKEY_LOCAL_MACHINE\Software，然后一个用于你的公司创建每个应用程序的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-118">For instance, you can create a <xref:Microsoft.Win32.RegistryKey> for your company, under the key HKEY_LOCAL_MACHINE\Software, and then a subkey for each application that your company creates.</span></span> <span data-ttu-id="3c0c1-119">每个子项包含的信息特定于该应用程序，如颜色设置、 屏幕位置和大小，或识别文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-119">Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.</span></span>  
  
 <span data-ttu-id="3c0c1-120">请注意，存储在注册表中的信息可供其他应用程序和用户，因此不应存储安全数据或关键应用程序信息。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-120">Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-121">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-121">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-122">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-122">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="3c0c1-123">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，注册表项的长度不再限制为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-123">Starting in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the length of a registry key is no longer limited to 255 characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-124">下面的代码示例演示如何 HKEY_CURRENT_USER 下创建子项、 操作其内容，并删除的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-124">The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="registryKey.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-125">关闭该项，如果其内容已修改，则将其刷新到磁盘。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-125">Closes the key and flushes it to disk if its contents have been modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-126">在系统键上调用此方法不会影响，因为永远不会关闭系统密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-126">Calling this method on system keys will have no effect, because system keys are never closed.</span></span>  
  
 <span data-ttu-id="3c0c1-127">此方法不执行任何操作的实例上调用`RegistryKey`已关闭。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-127">This method does nothing if you call it on an instance of `RegistryKey` that is already closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-128">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-128">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Flush" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-129">创建一个新子项或打开一个现有子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-129">Creates a new subkey or opens an existing subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-130">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-130">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="3c0c1-131">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-131">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="3c0c1-132">创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-132">Creates a new subkey or opens an existing subkey for write access.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-133">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-133">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="3c0c1-134">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-134">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-135">若要执行此操作，用户必须具有注册表层次结构中的权限在此级别和更低版本。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-135">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-136">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-136">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-137">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-137">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-138">下面的代码示例演示如何 HKEY_CURRENT_USER 下创建子项、 操作其内容，并删除的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-138">The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-139"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-139"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-140">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-140">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-141">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-141">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-142">无法写入 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它不是作为可写入项打开的，或者用户没有必需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-142">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-143">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-143">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-144">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-144">-or-</span></span> 
<span data-ttu-id="3c0c1-145">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-145">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-146">无法修改指定的注册表项，如果存在，或创建注册表键如果的功能它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-146">for the ability to modify the specified registry key if it exists, or for the ability to create the registry key if it does not already exist.</span></span> <span data-ttu-id="3c0c1-147">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-147">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-148">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-148">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-149">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-150">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-150">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="3c0c1-151">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-151">This string is not case-sensitive.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-152">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-152">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <summary><span data-ttu-id="3c0c1-153">使用指定的权限检查选项创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-153">Creates a new subkey or opens an existing subkey for write access, using the specified permission check option.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-154">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-154">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="3c0c1-155">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-155">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-156">若要执行此操作，用户必须具有注册表层次结构中的权限在此级别和更低版本。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-156">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-157">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-157">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-158">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-158">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="3c0c1-159">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-159">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-160">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-160">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-161"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-161"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-162">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-162">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-163"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-163"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-164">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-164">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-165">无法写入 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它不是作为可写入项打开的，或者用户没有必需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-165">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-166">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-166">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-167">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-167">-or-</span></span> 
<span data-ttu-id="3c0c1-168">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-168">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-169">无法修改指定的注册表项，如果存在，或创建注册表键如果的功能它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-169">for the ability to modify the specified registry key if it exists, or for the ability to create the registry key if it does not already exist.</span></span> <span data-ttu-id="3c0c1-170">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-170">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-171">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-171">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-172">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-172">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-173">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-173">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="3c0c1-174">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-174">This string is not case-sensitive.</span></span></param>
        <param name="writable"><span data-ttu-id="3c0c1-175">如果新子项可写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-175"><see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3c0c1-176">创建一个新子项或打开具有指定访问权限的现有子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-176">Creates a new subkey or opens an existing subkey with the specified access.</span></span> <span data-ttu-id="3c0c1-177">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-177">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-178">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-178">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="3c0c1-179">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-179">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-180">若要执行此操作，用户必须具有注册表层次结构中的权限在此级别和更低版本。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-180">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-181">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-181">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-182">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-182">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="3c0c1-183">若要使用<xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-183">In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-184">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-184">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-185"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-185"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-186">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-186">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-187">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-187">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-188">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-188">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-189">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-189">-or-</span></span> 
<span data-ttu-id="3c0c1-190">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-190">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registrySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-191">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-191">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="3c0c1-192">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-192">This string is not case-sensitive.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-193">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-193">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="registrySecurity"><span data-ttu-id="3c0c1-194">新项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-194">The access control security for the new key.</span></span></param>
        <summary><span data-ttu-id="3c0c1-195">使用指定的权限检查选项和注册表安全性创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-195">Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-196">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-196">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="3c0c1-197">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-197">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-198"><xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法创建一个具有指定的访问控制的注册表项`registrySecurity`参数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-198">The <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method creates a registry key that has the access control specified by the `registrySecurity` parameter.</span></span> <span data-ttu-id="3c0c1-199"><xref:Microsoft.Win32.RegistryKey>返回对象表示的注册表项，但该对象不受中指定的访问控制`registrySecurity`参数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-199">The <xref:Microsoft.Win32.RegistryKey> object that is returned represents the registry key, but that object is not restricted by the access control specified in the `registrySecurity` parameter.</span></span>  
  
 <span data-ttu-id="3c0c1-200">如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，为读/写访问打开项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-200">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for read/write access.</span></span> <span data-ttu-id="3c0c1-201">如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>，为读取访问权限打开项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-201">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>, the key is opened for read access.</span></span>  
  
 <span data-ttu-id="3c0c1-202">为了向后兼容的项打开用于读取和写入如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>和父项也有<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-202">For backward compatibility, the key is opened for reading and writing if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> and the parent key also has <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-203">如果父项有任何其他设置，读/写状态是由父项的设置控制。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-203">If the parent key has any other setting, read/write status is controlled by the parent key's setting.</span></span>  
  
 <span data-ttu-id="3c0c1-204">若要执行此操作，用户必须具有注册表层次结构中的权限在此级别和更低版本。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-204">In order to perform this action, the user must have permissions at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-205">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-205">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-206">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-206">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="3c0c1-207">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-207">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-208">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-208">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-209"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-209"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-210">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-210">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-211"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-211"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-212">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-212">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-213">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-213">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-214">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-214">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-215">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-215">-or-</span></span> 
<span data-ttu-id="3c0c1-216">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-216">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-217">无法修改指定的注册表项，如果存在，或创建注册表键如果的功能它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-217">for the ability to modify the specified registry key if it exists, or for the ability to create the registry key if it does not already exist.</span></span> <span data-ttu-id="3c0c1-218">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-218">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-219">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-219">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-220">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-220">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable, valuetype Microsoft.Win32.RegistryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-221">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-221">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="3c0c1-222">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-222">This string is not case-sensitive.</span></span></param>
        <param name="writable"><span data-ttu-id="3c0c1-223">如果新子项可写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-223"><see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</span></span></param>
        <param name="options"><span data-ttu-id="3c0c1-224">要使用的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-224">The registry option to use.</span></span></param>
        <summary><span data-ttu-id="3c0c1-225">创建一个新子项或打开具有指定访问权限的现有子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-225">Creates a new subkey or opens an existing subkey with the specified access.</span></span> <span data-ttu-id="3c0c1-226">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-226">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-227">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-227">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="3c0c1-228">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-228">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-229">若要执行此操作，用户必须具有注册表层次结构中的权限在此级别和更低版本。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-229">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-230">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-230">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-231">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-231">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="3c0c1-232">若要使用<xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-232">In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-233">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-233">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-234"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-234"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-235"><paramref name="options" /> 未指定有效的选项</span><span class="sxs-lookup"><span data-stu-id="3c0c1-235"><paramref name="options" /> does not specify a valid Option</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-236">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-236">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-237">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-237">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-238">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-238">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-239">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-239">-or-</span></span> 
<span data-ttu-id="3c0c1-240">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-240">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions options) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions);" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.0;netframework-4.8" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-241">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-241">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-242">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-242">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="options"><span data-ttu-id="3c0c1-243">要使用的注册表选项；例如，用于创建可变键的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-243">The registry option to use; for example, that creates a volatile key.</span></span></param>
        <param name="registryOptions"><span data-ttu-id="3c0c1-244">要使用的注册表选项；例如，用于创建可变键的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-244">The registry option to use; for example, that creates a volatile key.</span></span></param>
        <summary><span data-ttu-id="3c0c1-245">使用指定的权限检查和注册表选项，创建或打开一个用于写访问的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-245">Creates a subkey or opens a subkey for write access, using the specified permission check and registry options.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-246">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-246">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-247">若要获取当前<xref:Microsoft.Win32.RegistryKey>对象，指定一个空字符串 ("") 为`subkey`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-247">To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-248"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-248"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-249">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-249">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-250">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象；例如，它未作为可写入项打开，或用户不具有所需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-250">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-251">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-251">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-252">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-252">-or-</span></span> 
<span data-ttu-id="3c0c1-253">发生系统错误，例如，删除了项，或者尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-253">A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-254">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-254">The user does not have the permissions required to create or open the registry key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions registryOptions, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registryOptions, registrySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-255">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-255">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-256">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-256">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="registryOptions"><span data-ttu-id="3c0c1-257">要使用的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-257">The registry option to use.</span></span></param>
        <param name="registrySecurity"><span data-ttu-id="3c0c1-258">新子项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-258">The access control security for the new subkey.</span></span></param>
        <summary><span data-ttu-id="3c0c1-259">使用指定的权限检查选项、注册表选项和注册表安全性，创建或打开一个用于写访问的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-259">Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-260">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-260">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-261">若要获取当前<xref:Microsoft.Win32.RegistryKey>对象，指定一个空字符串 ("") 为`subkey`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-261">To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-262"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-262"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-263">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象被关闭。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-263">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed.</span></span> <span data-ttu-id="3c0c1-264">无法访问已关闭的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-264">Closed keys cannot be accessed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-265">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象；例如，它未作为可写入项打开，或用户不具有所需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-265">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-266">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-266">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="3c0c1-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-267">-or-</span></span> 
<span data-ttu-id="3c0c1-268">发生系统错误，例如，删除了项，或者尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-268">A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-269">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-269">The user does not have the permissions required to create or open the registry key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-270">删除指定子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-270">Deletes the specified subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string -&gt; unit" Usage="registryKey.DeleteSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-271">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-271">The name of the subkey to delete.</span></span> <span data-ttu-id="3c0c1-272">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-272">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="3c0c1-273">删除指定子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-273">Deletes the specified subkey.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-274">若要删除子级子项，请使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-274">To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</span></span>  
  
 <span data-ttu-id="3c0c1-275">删除注册表项时要格外小心。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-275">Use caution when deleting registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-276">下面的示例演示如何使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-276">The following example demonstrates how to use <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source2.cpp#5)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source2.cs#5)]
 [!code-vb[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c0c1-277"><paramref name="subkey" /> 有子级子项</span><span class="sxs-lookup"><span data-stu-id="3c0c1-277">The <paramref name="subkey" /> has child subkeys</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-278"><paramref name="subkey" /> 参数未指定有效的注册表项</span><span class="sxs-lookup"><span data-stu-id="3c0c1-278">The <paramref name="subkey" /> parameter does not specify a valid registry key</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-279"><paramref name="subkey" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-279"><paramref name="subkey" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-280">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-280">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-281">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-281">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-282">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-282">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-283">有关修改指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-283">for the ability to modify the specified registry key.</span></span> <span data-ttu-id="3c0c1-284">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-284">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-285">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-285">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-286">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string * bool -&gt; unit" Usage="registryKey.DeleteSubKey (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-287">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-287">The name of the subkey to delete.</span></span> <span data-ttu-id="3c0c1-288">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-288">This string is not case-sensitive.</span></span></param>
        <param name="throwOnMissingSubKey"><span data-ttu-id="3c0c1-289">指示在找不到指定子项的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-289">Indicates whether an exception should be raised if the specified subkey cannot be found.</span></span> <span data-ttu-id="3c0c1-290">如果该参数为 <see langword="true" />，并且指定的子项不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-290">If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised.</span></span> <span data-ttu-id="3c0c1-291">如果该参数为 <see langword="false" />，并且指定的子项不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-291">If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="3c0c1-292">删除指定的子项，并指定在找不到该子项时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-292">Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-293">若要删除子级子项，请使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-293">To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</span></span>  
  
 <span data-ttu-id="3c0c1-294">删除注册表项时要格外小心。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-294">Use caution when deleting registry keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c0c1-295"><paramref name="subkey" /> 有子级子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-295"><paramref name="subkey" /> has child subkeys.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-296"><paramref name="subkey" /> 未指定有效的注册表项，并且 <paramref name="throwOnMissingSubKey" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-296"><paramref name="subkey" /> does not specify a valid registry key, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-297"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-297"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-298">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-298">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-299">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-299">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-300">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-300">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-301">有关修改指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-301">for the ability to modify the specified registry key.</span></span> <span data-ttu-id="3c0c1-302">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-302">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-303">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-303">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-304">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-304">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKeyTree">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-305">使用可选的异常处理方以递归方式删除一个子项以及任何子级子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-305">Deletes a subkey and any child subkeys recursively, with optional exception handling.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string -&gt; unit" Usage="registryKey.DeleteSubKeyTree subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-306">要删除的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-306">The subkey to delete.</span></span> <span data-ttu-id="3c0c1-307">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-307">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="3c0c1-308">递归删除子项和任何子级子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-308">Deletes a subkey and any child subkeys recursively.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-309">必须具有适当权限才能删除子项，并且其树。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-309">You must have appropriate permissions to delete the subkey and its tree.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-310">删除特定密钥将在树中删除该密钥下的所有项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-310">Deleting a particular key will remove all entries below the key in the tree.</span></span> <span data-ttu-id="3c0c1-311">将不提供任何警告。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-311">No warning will be provided.</span></span> <span data-ttu-id="3c0c1-312">如果你想要删除一个子项，仅在不必须使用任何子级子项时<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-312">If you want to delete a subkey only when it has no child subkeys, use the <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-313">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-313">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-314"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-314"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-315">尝试删除根配置单元。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-315">Deletion of a root hive is attempted.</span></span>  
  
<span data-ttu-id="3c0c1-316">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-316">-or-</span></span> 
 <span data-ttu-id="3c0c1-317"><paramref name="subkey" /> 未指定有效的注册表子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-317"><paramref name="subkey" /> does not specify a valid registry subkey.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-318">发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-318">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-319">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-319">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-320">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-320">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-321">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-321">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-322">有关修改指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-322">for the ability to modify the specified registry key.</span></span> <span data-ttu-id="3c0c1-323">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-323">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-324">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-324">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-325">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-325">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string * bool -&gt; unit" Usage="registryKey.DeleteSubKeyTree (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="3c0c1-326">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-326">The name of the subkey to delete.</span></span> <span data-ttu-id="3c0c1-327">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-327">This string is not case-sensitive.</span></span></param>
        <param name="throwOnMissingSubKey"><span data-ttu-id="3c0c1-328">指示在找不到指定子项的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-328">Indicates whether an exception should be raised if the specified subkey cannot be found.</span></span> <span data-ttu-id="3c0c1-329">如果该参数为 <see langword="true" />，并且指定的子项不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-329">If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised.</span></span> <span data-ttu-id="3c0c1-330">如果该参数为 <see langword="false" />，并且指定的子项不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-330">If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="3c0c1-331">以递归方式删除指定的子项和任何子级子项，并指定在找不到子项时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-331">Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-332">尝试删除树的根配置单元。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-332">An attempt was made to delete the root hive of the tree.</span></span>  
  
<span data-ttu-id="3c0c1-333">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-333">-or-</span></span> 
 <span data-ttu-id="3c0c1-334"><paramref name="subkey" /> 未指定有效的注册表子项，并且 <paramref name="throwOnMissingSubKey" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-334"><paramref name="subkey" /> does not specify a valid registry subkey, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-335"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-335"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-336"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-336">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-337">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-337">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-338">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-338">The user does not have the permissions required to delete the key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-339">有关修改指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-339">for the ability to modify the specified registry key.</span></span> <span data-ttu-id="3c0c1-340">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-340">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-341">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-341">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-342">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-342">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-343">从此项中删除指定的值，并在找不到该值时引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-343">Deletes the specified value from this key, and throws an exception if the value is not found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string -&gt; unit" Usage="registryKey.DeleteValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-344">要删除的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-344">The name of the value to delete.</span></span></param>
        <summary><span data-ttu-id="3c0c1-345">从此项中删除指定值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-345">Deletes the specified value from this key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-346">在 Windows 95、 Windows 98、 Windows 98 Second Edition 和 Windows Millennium Edition 上，指定空字符串作为`name`参数不会删除默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-346">On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-347">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-347">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#3)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#3)]
 [!code-vb[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-348"><paramref name="name" /> 不是对值的有效引用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-348"><paramref name="name" /> is not a valid reference to a value.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-349">用户没有删除该值所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-349">The user does not have the permissions required to delete the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-350">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-350">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-351">正在处理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-351">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-352">用于删除指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-352">for the ability to delete the specified registry key.</span></span> <span data-ttu-id="3c0c1-353">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-353">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name, bool throwOnMissingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name, bool throwOnMissingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String, throwOnMissingValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name, bool throwOnMissingValue);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string * bool -&gt; unit" Usage="registryKey.DeleteValue (name, throwOnMissingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnMissingValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-354">要删除的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-354">The name of the value to delete.</span></span></param>
        <param name="throwOnMissingValue"><span data-ttu-id="3c0c1-355">指示在找不到指定值的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-355">Indicates whether an exception should be raised if the specified value cannot be found.</span></span> <span data-ttu-id="3c0c1-356">如果该参数为 <see langword="true" />，并且指定的值不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-356">If this argument is <see langword="true" /> and the specified value does not exist, an exception is raised.</span></span> <span data-ttu-id="3c0c1-357">如果该参数为 <see langword="false" />，并且指定的值不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-357">If this argument is <see langword="false" /> and the specified value does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="3c0c1-358">从此项中删除指定的值，并指定在找不到该值时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-358">Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-359">如果`throwOnMissingValue`是`false`，没有办法指示如果已成功删除，而无需随后尝试访问刚刚删除的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-359">If `throwOnMissingValue` is `false`, there is no way to tell if the deletion was successful, without subsequently trying to access the value just deleted.</span></span> <span data-ttu-id="3c0c1-360">因此，这种方式在注册表中删除值时要小心。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-360">Therefore, use caution when deleting values from the registry in this manner.</span></span>  
  
 <span data-ttu-id="3c0c1-361">在 Windows 95、 Windows 98、 Windows 98 Second Edition 和 Windows Millennium Edition 上，指定空字符串作为`name`参数不会删除默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-361">On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-362"><paramref name="name" /> 不是对值的有效引用，并且 <paramref name="throwOnMissingValue" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-362"><paramref name="name" /> is not a valid reference to a value and <paramref name="throwOnMissingValue" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="3c0c1-363">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-363">-or-</span></span> 
 <span data-ttu-id="3c0c1-364"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-364"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-365">用户没有删除该值所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-365">The user does not have the permissions required to delete the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-366">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-366">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-367">正在处理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-367">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-368">用于删除指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-368">for the ability to delete the specified registry key.</span></span> <span data-ttu-id="3c0c1-369">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-369">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="registryKey.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-370">释放 <see cref="T:Microsoft.Win32.RegistryKey" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-370">Releases all resources used by the current instance of the <see cref="T:Microsoft.Win32.RegistryKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-371">在完成使用 `Dispose` 后，应调用 <xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-371">Call `Dispose` when you are finished using the <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="3c0c1-372">`Dispose` 方法使 <xref:Microsoft.Win32.RegistryKey> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-372">The `Dispose` method leaves the <xref:Microsoft.Win32.RegistryKey> in an unusable state.</span></span> <span data-ttu-id="3c0c1-373">在调用`Dispose`，必须释放对所有引用<xref:Microsoft.Win32.RegistryKey>这样垃圾回收器才能收回内存的<xref:Microsoft.Win32.RegistryKey>占用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-373">After calling `Dispose`, you must release all references to the <xref:Microsoft.Win32.RegistryKey> so the garbage collector can reclaim the memory that the <xref:Microsoft.Win32.RegistryKey> was occupying.</span></span>  
  
 <span data-ttu-id="3c0c1-374">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-374">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-375">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-375">Always call `Dispose` before you release your last reference to the <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="3c0c1-376">否则，在垃圾回收器调用 <xref:Microsoft.Win32.RegistryKey> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-376">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:Microsoft.Win32.RegistryKey> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~RegistryKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!RegistryKey ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="registryKey.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="registryKey.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-377">将指定的打开注册表项的全部特性写到注册表中。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-377">Writes all the attributes of the specified open registry key into the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-378">不需要调用`Flush`写出对项的更改。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-378">It is not necessary to call `Flush` to write out changes to a key.</span></span> <span data-ttu-id="3c0c1-379">注册表更改刷新到磁盘时注册表使用其惰性刷新器。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-379">Registry changes are flushed to disk when the registry uses its lazy flusher.</span></span> <span data-ttu-id="3c0c1-380">惰性刷新会自动地定期系统指定的时间间隔后。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-380">Lazy flushing occurs automatically and regularly after a system-specified time interval.</span></span> <span data-ttu-id="3c0c1-381">注册表更改也会刷新到磁盘上的系统关闭。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-381">Registry changes are also flushed to disk at system shutdown.</span></span>  
  
 <span data-ttu-id="3c0c1-382">与不同<xref:Microsoft.Win32.RegistryKey.Close%2A>，则`Flush`函数将返回仅当所有数据都写入注册表。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-382">Unlike <xref:Microsoft.Win32.RegistryKey.Close%2A>, the `Flush` function returns only when all the data has been written to the registry.</span></span>  
  
 <span data-ttu-id="3c0c1-383">`Flush`函数还可能写出的部分或所有其他密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-383">The `Flush` function might also write out parts of or all of the other keys.</span></span> <span data-ttu-id="3c0c1-384">过度调用此函数可以具有负面影响应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-384">Calling this function excessively can have a negative effect on an application's performance.</span></span>  
  
 <span data-ttu-id="3c0c1-385">应用程序应只调用`Flush`如果它必须是绝对某些注册表更改记录到磁盘。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-385">An application should only call `Flush` if it must be absolute certain that registry changes are recorded to disk.</span></span> <span data-ttu-id="3c0c1-386">一般情况下，`Flush`很少需要使用即使有的话。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-386">In general, `Flush` rarely, if ever, need be used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHandle">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-387">根据指定的句柄创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-387">Creates a registry key from a specified handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="3c0c1-388">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-388">The handle to the registry key.</span></span></param>
        <summary><span data-ttu-id="3c0c1-389">根据指定的句柄创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-389">Creates a registry key from a specified handle.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-390">注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-390">A registry key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-391"><paramref name="handle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-391"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-392">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-392">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-393">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-393">The user does not have the permissions required to perform this action.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="3c0c1-394">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-394">requires full trust for the immediate caller.</span></span> <span data-ttu-id="3c0c1-395">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-395">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-396">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-396">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-397">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-397">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle (handle, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="3c0c1-398">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-398">The handle to the registry key.</span></span></param>
        <param name="view"><span data-ttu-id="3c0c1-399">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-399">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="3c0c1-400">利用指定的句柄和注册表视图设置创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-400">Creates a registry key from a specified handle and registry view setting.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-401">注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-401">A registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-402">`view`后续操作，例如打开子项中使用此方法的参数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-402">The `view` parameter for this method is used in subsequent operations, such as opening subkeys.</span></span>  
  
 <span data-ttu-id="3c0c1-403">如果`view`是<xref:Microsoft.Win32.RegistryView.Registry64>但是计算机正在运行 32 位操作系统，则返回的键将使用<xref:Microsoft.Win32.RegistryView.Registry32>视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-403">If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-404"><paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-404"><paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-405"><paramref name="handle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-405"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-406">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-406">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-407">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-407">The user does not have the permissions required to perform this action.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="3c0c1-408">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-408">requires full trust for the immediate caller.</span></span> <span data-ttu-id="3c0c1-409">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-409">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-410">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-410">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-411">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-411">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-412">返回当前注册表项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-412">Returns the access control security for the current registry key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-413">返回当前注册表项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-413">Returns the access control security for the current registry key.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-414">一个对象，该对象描述针对由当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 表示的注册表项的访问控制权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-414">An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-415">此方法的重载是等效于调用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29>方法的重载下列标志的按位组合： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>， <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>，和<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-415">This method overload is equivalent to calling the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> method overload with the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-416">该重载可用于搜索的其他权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-416">You can use that overload to search for other permissions.</span></span>  
  
 <span data-ttu-id="3c0c1-417">用户必须具有<xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType>权限才能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-417">The user must have <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> rights to call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-418">用户没有必要的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-418">The user does not have the necessary permissions.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-419">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-419">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c0c1-420">当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-420">The current key has been deleted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="3c0c1-421">枚举值的按位组合，它指定要获取的安全信息类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-421">A bitwise combination of enumeration values that specifies the type of security information to get.</span></span></param>
        <summary><span data-ttu-id="3c0c1-422">返回当前注册表项的访问控制安全性的指定部分。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-422">Returns the specified sections of the access control security for the current registry key.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-423">一个对象，该对象描述针对由当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 表示的注册表项的访问控制权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-423">An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-424">若要请求当前向用户授予的访问权限，指定以下标志的按位组合： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>， <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>，和<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-424">To request the access permissions currently granted to users, specify the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-425">或者，可以使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl>方法重载，它指定确切的值的组合。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-425">Alternatively, you can use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl> method overload, which specifies exactly that combination of values.</span></span>  
  
 <span data-ttu-id="3c0c1-426">用户必须具有<xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType>权限才能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-426">The user must have <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> rights to call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-427">用户没有必要的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-427">The user does not have the necessary permissions.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-428">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-428">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c0c1-429">当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-429">The current key has been deleted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubKeyNames">
      <MemberSignature Language="C#" Value="public string[] GetSubKeyNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSubKeyNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubKeyNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetSubKeyNames();" />
      <MemberSignature Language="F#" Value="member this.GetSubKeyNames : unit -&gt; string[]" Usage="registryKey.GetSubKeyNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-430">检索包含所有子项名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-430">Retrieves an array of strings that contains all the subkey names.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-431">包含当前项的子项名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-431">An array of strings that contains the names of the subkeys for the current key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-432">此方法执行不是以递归方式查找名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-432">This method does not recursively find names.</span></span> <span data-ttu-id="3c0c1-433">它调用它的基级上返回的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-433">It returns the names on the base level from which it was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-434">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-434">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-435">用户没有读取该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-435">The user does not have the permissions required to read from the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-436">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-436">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-437">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-437">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-438">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-438">A system error occurred, for example the current key has been deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-439">有关从注册表中读取的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-439">for the ability to read from the registry.</span></span> <span data-ttu-id="3c0c1-440">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-440">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-441">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-441">Retrieves the value associated with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string -&gt; obj" Usage="registryKey.GetValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-442">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-442">The name of the value to retrieve.</span></span> <span data-ttu-id="3c0c1-443">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-443">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="3c0c1-444">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-444">Retrieves the value associated with the specified name.</span></span> <span data-ttu-id="3c0c1-445">如果注册表中不存在名称/值对，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-445">Returns <see langword="null" /> if the name/value pair does not exist in the registry.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-446">与 <paramref name="name" /> 关联的值；如果未找到 <paramref name="name" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-446">The value associated with <paramref name="name" />, or <see langword="null" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-447">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-447">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-448">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-448">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-449">若要检索此未命名的值，指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-449">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="3c0c1-450">当<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法检索可扩充字符串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它将展开使用本地环境中的数据的环境字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-450">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="3c0c1-451">若要从远程计算机上的注册表中检索可扩充字符串值，请使用<xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>方法重载来指定不希望扩展的环境字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-451">To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29> method overload to specify that you do not want environment strings expanded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-452">如果已存储为一个字符串值，该值包含对环境变量的可展开引用 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可扩展字符串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，<xref:Microsoft.Win32.RegistryKey.GetValue%2A>不会展开它。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-452">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="3c0c1-453">检索通过调用后，可以扩展此类字符串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-453">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-454">要从中检索数据的建议<xref:Microsoft.Win32.Registry.PerformanceData>密钥是使用<xref:System.Diagnostics.PerformanceCounter>类而不是<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-454">The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
>   
>  <span data-ttu-id="3c0c1-455"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持类型为 REG_NONE 或 REG_LINK 中读取的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-455"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="3c0c1-456">在这两种情况下，默认值 (`null`) 返回而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-456">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-457">下面的代码示例创建一个测试项，并将不同的数据类型的值添加到该密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-457">The following code example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="3c0c1-458">该示例然后读取名称/值对，并将其显示在控制台中，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法来检索相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-458">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-459">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-459">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-460">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-460">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-461">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-461">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-462">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-462">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-463">若要从注册表中读取。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-463">to read from the registry.</span></span> <span data-ttu-id="3c0c1-464">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-464">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="3c0c1-465">若要读取注册表项的类型 REG_EXPAND_SZ。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-465">to read a registry key of type REG_EXPAND_SZ.</span></span> <span data-ttu-id="3c0c1-466">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-466">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj -&gt; obj" Usage="registryKey.GetValue (name, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-467">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-467">The name of the value to retrieve.</span></span> <span data-ttu-id="3c0c1-468">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-468">This string is not case-sensitive.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="3c0c1-469">当 <paramref name="name" /> 不存在时返回的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-469">The value to return if <paramref name="name" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="3c0c1-470">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-470">Retrieves the value associated with the specified name.</span></span> <span data-ttu-id="3c0c1-471">如果未找到名称，则返回你提供的默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-471">If the name is not found, returns the default value that you provide.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-472">与 <paramref name="name" /> 关联的值，不展开嵌入的任何环境变量；如果未找到 <paramref name="defaultValue" />，则为 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-472">The value associated with <paramref name="name" />, with any embedded environment variables left unexpanded, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-473">请使用此重载<xref:Microsoft.Win32.RegistryKey.GetValue%2A>以处理在尚未-不存在名称的情况，第一次你的应用程序运行。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-473">Use this overload of <xref:Microsoft.Win32.RegistryKey.GetValue%2A> to handle the case where a name does not exist yet - for example, the first time your application is run.</span></span> <span data-ttu-id="3c0c1-474">只要调用此重载，可使用`defaultValue`参数来指定要返回的值`name`不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-474">Whenever you call this overload, use the `defaultValue` parameter to specify the value to return if `name` does not exist.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-475">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-475">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-476">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-476">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-477">若要检索此未命名的值，指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-477">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="3c0c1-478">当<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法检索可扩充字符串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它将展开使用本地环境中的数据的环境字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-478">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="3c0c1-479">若要从远程计算机上的注册表中检索可扩充字符串值，请使用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>重载来指定不希望扩展的环境字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-479">To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> overload to specify that you do not want environment strings expanded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-480">如果已存储为一个字符串值，该值包含对环境变量的可展开引用 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可扩展字符串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，则<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法不会展开。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-480">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method does not expand it.</span></span> <span data-ttu-id="3c0c1-481">检索通过调用后，可以扩展此类字符串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-481">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-482">要从中检索数据的建议<xref:Microsoft.Win32.Registry.PerformanceData>密钥是使用<xref:System.Diagnostics.PerformanceCounter>类而不是<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-482">The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
>   
>  <span data-ttu-id="3c0c1-483"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持类型为 REG_NONE 或 REG_LINK 中读取的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-483"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="3c0c1-484">在这两种情况下，默认值 (`null`) 返回而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-484">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-485">下面的代码示例将创建一个测试项具有值，并检索该值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-485">The following code example creates a test key with a value and retrieves that value.</span></span> <span data-ttu-id="3c0c1-486">然后，此示例尝试检索该密钥; 不存在的值在这种情况下<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法将返回指定的默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-486">The example then attempts to retrieve a nonexistent value from the key; in this case the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method returns the specified default value.</span></span>  
  
 [!code-cpp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CS/source.cs#1)]
 [!code-vb[Classic RegistryKey.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-487">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-487">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-488">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-488">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-489">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-489">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-490">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-490">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-491">若要从注册表中读取。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-491">to read from the registry.</span></span> <span data-ttu-id="3c0c1-492">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-492">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="3c0c1-493">若要读取注册表项的类型 REG_EXPAND_SZ。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-493">to read a registry key of type REG_EXPAND_SZ.</span></span> <span data-ttu-id="3c0c1-494">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-494">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue, valuetype Microsoft.Win32.RegistryValueOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object, options As RegistryValueOptions) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue, Microsoft::Win32::RegistryValueOptions options);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj * Microsoft.Win32.RegistryValueOptions -&gt; obj" Usage="registryKey.GetValue (name, defaultValue, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryValueOptions" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-495">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-495">The name of the value to retrieve.</span></span> <span data-ttu-id="3c0c1-496">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-496">This string is not case-sensitive.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="3c0c1-497">当 <paramref name="name" /> 不存在时返回的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-497">The value to return if <paramref name="name" /> does not exist.</span></span></param>
        <param name="options"><span data-ttu-id="3c0c1-498">枚举值之一，它指定对所检索值的可选处理方式。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-498">One of the enumeration values that specifies optional processing of the retrieved value.</span></span></param>
        <summary><span data-ttu-id="3c0c1-499">检索与指定的名称和检索选项关联的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-499">Retrieves the value associated with the specified name and retrieval options.</span></span> <span data-ttu-id="3c0c1-500">如果未找到名称，则返回你提供的默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-500">If the name is not found, returns the default value that you provide.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-501">与 <paramref name="name" /> 关联的值，按指定的 <paramref name="options" /> 对其进行处理；如果未找到 <paramref name="defaultValue" />，则为 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-501">The value associated with <paramref name="name" />, processed according to the specified <paramref name="options" />, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-502">此重载用于指定所检索值的特殊处理。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-502">Use this overload to specify special processing of the retrieved value.</span></span> <span data-ttu-id="3c0c1-503">例如，可以指定<xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType>检索类型的注册表值时<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>要检索的字符串而不展开嵌入的环境变量。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-503">For example, you can specify <xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType> when retrieving a registry value of type <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> to retrieve the string without expanding embedded environment variables.</span></span>  
  
 <span data-ttu-id="3c0c1-504">使用`defaultValue`参数来指定要返回的值`name`不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-504">Use the `defaultValue` parameter to specify the value to return if `name` does not exist.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-505">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-505">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-506">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-506">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-507">若要检索此未命名的值，指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-507">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
>   
>  <span data-ttu-id="3c0c1-508"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持类型为 REG_NONE 或 REG_LINK 中读取的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-508"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="3c0c1-509">在这两种情况下，默认值 (`null`) 返回而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-509">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-510">下面的代码示例创建一个测试项、 添加具有嵌入式的环境变量的值并且检索扩展和非扩展窗体中的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-510">The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.</span></span>  
  
 [!code-cpp[RegistryValueOptions#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryValueOptions/CPP/RegistryValueOptions.cpp#1)]
 [!code-csharp[RegistryValueOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryValueOptions/CS/source.cs#1)]
 [!code-vb[RegistryValueOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryValueOptions/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-511">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-511">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-512">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-512">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-513">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-513">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-514"><paramref name="options" /> 不是有效的 <see cref="T:Microsoft.Win32.RegistryValueOptions" /> 值；例如，无效值将强制转换为 <see cref="T:Microsoft.Win32.RegistryValueOptions" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-514"><paramref name="options" /> is not a valid <see cref="T:Microsoft.Win32.RegistryValueOptions" /> value; for example, an invalid value is cast to <see cref="T:Microsoft.Win32.RegistryValueOptions" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-515">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-515">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-516">若要从注册表中读取。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-516">to read from the registry.</span></span> <span data-ttu-id="3c0c1-517">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-517">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="3c0c1-518">若要读取注册表项的类型 REG_EXPAND_SZ。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-518">to read a registry key of type REG_EXPAND_SZ.</span></span> <span data-ttu-id="3c0c1-519">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-519">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueOptions" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValueKind">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryValueKind GetValueKind (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Win32.RegistryValueKind GetValueKind(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueKind (name As String) As RegistryValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryValueKind GetValueKind(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValueKind : string -&gt; Microsoft.Win32.RegistryValueKind" Usage="registryKey.GetValueKind name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryValueKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-520">要检索其注册表数据类型的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-520">The name of the value whose registry data type is to be retrieved.</span></span> <span data-ttu-id="3c0c1-521">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-521">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="3c0c1-522">检索与指定名称关联的值的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-522">Retrieves the registry data type of the value associated with the specified name.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-523">与 <paramref name="name" /> 关联的值的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-523">The registry data type of the value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-524">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-524">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-525">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-525">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-526">若要检索此未命名的值的注册表数据类型，请指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-526">To retrieve the registry data type of this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="3c0c1-527">有关受支持的注册表数据类型的说明，请参阅<xref:Microsoft.Win32.RegistryValueKind>枚举。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-527">For a description of supported registry data types, please see the <xref:Microsoft.Win32.RegistryValueKind> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-528">下面的代码示例创建一个测试项，并将不同的数据类型的值添加到该密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-528">The following code example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="3c0c1-529">该示例然后读取名称/值对，并将其显示在控制台中，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法来检索相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-529">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-530">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-530">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-531">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-531">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-532">包含指定值的子项不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-532">The subkey that contains the specified value does not exist.</span></span>  
  
<span data-ttu-id="3c0c1-533">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-533">-or-</span></span> 
<span data-ttu-id="3c0c1-534">由 <paramref name="name" /> 指定的名称/值对不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-534">The name/value pair specified by <paramref name="name" /> does not exist.</span></span>  
  
<span data-ttu-id="3c0c1-535">在 Windows 95、Windows 98 或 Windows Millennium Edition 中不引发此异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-535">This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-536">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-536">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-537">若要从注册表中读取。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-537">to read from the registry.</span></span> <span data-ttu-id="3c0c1-538">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-538">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="GetValueNames">
      <MemberSignature Language="C#" Value="public string[] GetValueNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetValueNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetValueNames();" />
      <MemberSignature Language="F#" Value="member this.GetValueNames : unit -&gt; string[]" Usage="registryKey.GetValueNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-539">检索包含与此项关联的所有值名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-539">Retrieves an array of strings that contains all the value names associated with this key.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-540">包含当前项的值名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-540">An array of strings that contains the value names for the current key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-541">如果找到该密钥没有值名称，则返回空数组。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-541">If no value names for the key are found, an empty array is returned.</span></span>  
  
 <span data-ttu-id="3c0c1-542">注册表项可以具有默认值-即，在其中名称是空字符串的名称/值对 ("")。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-542">A registry key can have a default value - that is, a name/value pair in which the name is the empty string ("").</span></span> <span data-ttu-id="3c0c1-543">如果已为注册表项设置默认值，返回的数组<xref:Microsoft.Win32.RegistryKey.GetValueNames%2A>方法包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-543">If a default value has been set for a registry key, the array returned by the <xref:Microsoft.Win32.RegistryKey.GetValueNames%2A> method includes the empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-544">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-544">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-545">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-545">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-546">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-546">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-547">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-547">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-548">发生系统错误；例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-548">A system error occurred; for example, the current key has been deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-549">有关从注册表中读取的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-549">for the ability to read from the registry.</span></span> <span data-ttu-id="3c0c1-550">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-550">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeRegistryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : Microsoft.Win32.SafeHandles.SafeRegistryHandle" Usage="Microsoft.Win32.RegistryKey.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeRegistryHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0c1-551">获取一个 <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> 对象，该对象表示当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象封装的注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-551">Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> object that represents the registry key that the current <see cref="T:Microsoft.Win32.RegistryKey" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="3c0c1-552">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-552">The handle to the registry key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-553">注册表项已关闭。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-553">The registry key is closed.</span></span> <span data-ttu-id="3c0c1-554">无法访问已关闭的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-554">Closed keys cannot be accessed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-555">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-555">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-556">发生系统错误，例如，删除了当前项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-556">A system error occurred, such as deletion of the current key.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-557">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-557">The user does not have the permissions required to read the key.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="3c0c1-558">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-558">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="3c0c1-559">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-559">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-560">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-560">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-561">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-561">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Win32.RegistryKey.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0c1-562">检索项的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-562">Retrieves the name of the key.</span></span></summary>
        <value><span data-ttu-id="3c0c1-563">项的绝对（限定）名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-563">The absolute (qualified) name of the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-564">密钥的名称在注册表中，开始时始终在基项 HKEY_LOCAL_MACHINE 中包括此项的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-564">The name of the key includes the absolute path of this key in the registry, always starting at a base key, for example, HKEY_LOCAL_MACHINE.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-565">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-565">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-566"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-566">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.ToString" />
      </Docs>
    </Member>
    <Member MemberName="OpenBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenBaseKey (hKey As RegistryHive, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenBaseKey(Microsoft::Win32::RegistryHive hKey, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenBaseKey : Microsoft.Win32.RegistryHive * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenBaseKey (hKey, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="3c0c1-567">要打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-567">The HKEY to open.</span></span></param>
        <param name="view"><span data-ttu-id="3c0c1-568">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-568">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="3c0c1-569">打开一个新的 <see cref="T:Microsoft.Win32.RegistryKey" />，它使用指定的视图在本地计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-569">Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on the local machine with the specified view.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-570">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-570">The requested registry key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-571"><paramref name="hKey" /> 或 <paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-571"><paramref name="hKey" /> or <paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-572">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-572">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-573">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-573">The user does not have the permissions required to perform this action.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRemoteBaseKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-574">打开一个新的 T:Microsoft.Win32.RegistryKey，它使用指定的注册表视图选项在远程计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-574">Opens a new T:Microsoft.Win32.RegistryKey that represents the requested key on a remote machine, with the option of specified registry view.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="3c0c1-575">要从 <see cref="T:Microsoft.Win32.RegistryHive" /> 枚举中打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-575">The HKEY to open, from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</span></span></param>
        <param name="machineName"><span data-ttu-id="3c0c1-576">远程计算机。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-576">The remote machine.</span></span></param>
        <summary><span data-ttu-id="3c0c1-577">打开一个新的 <see cref="T:Microsoft.Win32.RegistryKey" />，它表示远程计算机上的请求的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-577">Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on a remote machine.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-578">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-578">The requested registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-579">如果打开本地计算机注册表`machineName`是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-579">The local machine registry is opened if `machineName` is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-580">请求的项必须是远程计算机上的根项，并由相应标识<xref:Microsoft.Win32.RegistryHive>值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-580">The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.</span></span>  
  
 <span data-ttu-id="3c0c1-581">为了使远程打开的密钥，服务器和客户端计算机必须是运行远程注册表服务，而且必须启用远程管理。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-581">In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-582">下面的代码示例显示如何打开远程计算机上的注册表项和枚举密钥的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-582">The following code example shows how to open a registry key on a remote computer and enumerate the values of the key.</span></span> <span data-ttu-id="3c0c1-583">远程计算机必须运行远程注册表服务。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-583">The remote computer must be running the remote registry service.</span></span> <span data-ttu-id="3c0c1-584">调用该程序时，远程计算机的名称指定为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-584">Specify the name of the remote computer as a command-line argument when invoking the program.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-585"><paramref name="hKey" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-585"><paramref name="hKey" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-586"><paramref name="machineName" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-586"><paramref name="machineName" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-587"><paramref name="machineName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-587"><paramref name="machineName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-588">用户不具有执行该操作的适当权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-588">The user does not have the proper permissions to perform this operation.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-589">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-589">The user does not have the necessary registry rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-590">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-590">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-591">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-591">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:Microsoft.Win32.RegistryHive" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="3c0c1-592">要从 <see cref="T:Microsoft.Win32.RegistryHive" /> 枚举中打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-592">The HKEY to open from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</span></span></param>
        <param name="machineName"><span data-ttu-id="3c0c1-593">远程计算机。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-593">The remote machine.</span></span></param>
        <param name="view"><span data-ttu-id="3c0c1-594">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-594">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="3c0c1-595">打开一个新的注册表项，它使用指定的视图在远程计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-595">Opens a new registry key that represents the requested key on a remote machine with the specified view.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-596">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-596">The requested registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-597">如果打开本地计算机注册表`machineName`是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-597">The local machine registry is opened if `machineName` is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-598">请求的项必须是远程计算机上的根项，并由相应标识<xref:Microsoft.Win32.RegistryHive>值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-598">The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.</span></span>  
  
 <span data-ttu-id="3c0c1-599">为了使远程打开的密钥，服务器和客户端计算机必须是运行远程注册表服务，而且必须启用远程管理。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-599">In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</span></span>  
  
 <span data-ttu-id="3c0c1-600">在 64 位版本的 Windows，对于 32 位和 64 位应用程序可以单独存储的注册表部分。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-600">On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</span></span> <span data-ttu-id="3c0c1-601">没有 32 位应用程序的 32 位视图和 64 位应用程序的 64 位视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-601">There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</span></span> <span data-ttu-id="3c0c1-602">如果`view`是<xref:Microsoft.Win32.RegistryView.Registry64>但远程计算机正在运行 32 位操作系统，则返回的键将使用<xref:Microsoft.Win32.RegistryView.Registry32>视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-602">If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the remote machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-603"><paramref name="hKey" /> 或 <paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-603"><paramref name="hKey" /> or <paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-604"><paramref name="machineName" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-604"><paramref name="machineName" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-605"><paramref name="machineName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-605"><paramref name="machineName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-606">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-606">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-607">用户不具有执行该操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-607">The user does not have the required permissions to perform this operation.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-608">检索指定的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-608">Retrieves the specified subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-609">要以只读方式打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-609">The name or path of the subkey to open as read-only.</span></span></param>
        <summary><span data-ttu-id="3c0c1-610">以只读方式检索子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-610">Retrieves a subkey as read-only.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-611">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-611">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-612">它可以使用其他方法和属性操作之前，必须打开的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-612">You must open a key before it can be manipulated with other methods and properties.</span></span> <span data-ttu-id="3c0c1-613">若要修改键，必须打开的重载与它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可用于指定写访问权限，如<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29>重载或<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29>重载。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-613">To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access, such as the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> overload or the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> overload.</span></span>  
  
 <span data-ttu-id="3c0c1-614">如果没有找到指定的子项，然后`null`返回。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-614">If the specified subkey cannot be found, then `null` is returned.</span></span>  
  
 <span data-ttu-id="3c0c1-615">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-615">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="3c0c1-616">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员的一个<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-616">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use the one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-617">下面的代码示例创建一个测试项，并使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法打开它，演示这两种方法的重载。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-617">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.</span></span>  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-618"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-618"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-619"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-619">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-620">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-620">The user does not have the permissions required to read the registry key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-621">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-621">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-622">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-622">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-623">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-623">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-624">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-624">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-625">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-625">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-626">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-626">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <summary><span data-ttu-id="3c0c1-627">检索指定的子项以进行读取或读/写访问。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-627">Retrieves the specified subkey for read or read/write access.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-628">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-628">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-629">而不是引发异常，此方法返回`null`如果所需的键不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-629">Rather than throwing an exception, this method returns `null` if the requested key does not exist.</span></span>  
  
 <span data-ttu-id="3c0c1-630">如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，该密钥打开用于读取和写入; 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>，为读取除非通过打开父项打开项<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-630">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3c0c1-631">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-631">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-632">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-632">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-633">下面的代码示例创建一个包含 100 键/值对的子项，并将其关闭。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-633">The following code example creates a subkey containing 100 key/value pairs and closes it.</span></span> <span data-ttu-id="3c0c1-634">该示例打开与子项<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>，记录它读取所有值，并关闭该子项的时间。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-634">The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>, records the time it takes to read all the values, and closes the subkey.</span></span> <span data-ttu-id="3c0c1-635">该示例打开与子项<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree>并记录读取所有值所用的时间。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-635">The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree> and records the time it takes to read all the values.</span></span> <span data-ttu-id="3c0c1-636">最后，该示例计算并显示提高百分比。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-636">Finally, the example computes and displays the percentage improvement.</span></span>  
  
 [!code-csharp[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/cs/source.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-637"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-637"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-638"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-638"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-639"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-639">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-640">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-640">The user does not have the permissions required to read the registry key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-641">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-641">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-642">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-642">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-643">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-643">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-644">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-644">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, bool writable);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, writable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-645">要打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-645">Name or path of the subkey to open.</span></span></param>
        <param name="writable"><span data-ttu-id="3c0c1-646">如果需要项的写访问权限，则设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-646">Set to <see langword="true" /> if you need write access to the key.</span></span></param>
        <summary><span data-ttu-id="3c0c1-647">检索指定的子项，并指定是否将写访问权限应用于该项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-647">Retrieves a specified subkey, and specifies whether write access is to be applied to the key.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-648">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-648">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-649">如果所需的键不存在，此方法返回`null`而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-649">If the requested key does not exist, this method returns `null` instead of throwing an exception.</span></span>  
  
 <span data-ttu-id="3c0c1-650">如果`writable`是`true`、 的项将打开用于读取和写入，否则，将以只读方式打开密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-650">If `writable` is `true`, the key will be opened for reading and writing, otherwise, the key will be opened as read-only.</span></span>  
  
 <span data-ttu-id="3c0c1-651">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>方法。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-651">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> method.</span></span> <span data-ttu-id="3c0c1-652">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-652">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-653">下面的代码示例创建一个测试项，并使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法打开它，演示这两种方法的重载。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-653">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.</span></span>  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-654"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-654"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-655"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-655">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-656">用户没有在指定模式下访问注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-656">The user does not have the permissions required to access the registry key in the specified mode.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-657">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-657">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-658">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-658">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-659">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-659">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-660">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-660">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-661">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-661">The name or path of the subkey to create or open.</span></span></param>
        <param name="rights"><span data-ttu-id="3c0c1-662">注册表项的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-662">The rights for the registry key.</span></span></param>
        <summary><span data-ttu-id="3c0c1-663">检索具有指定名称和访问权限的子项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-663">Retrieves a subkey with the specified name and access rights.</span></span> <span data-ttu-id="3c0c1-664">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-664">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-665">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-665">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-666">它可以使用其他方法和属性操作之前，必须打开的项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-666">You must open a key before it can be manipulated with other methods and properties.</span></span> <span data-ttu-id="3c0c1-667">若要修改键，必须打开的重载与它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可用于指定写入访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-667">To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-668"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-668"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-669"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-669">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-670">用户没有在指定模式下访问注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-670">The user does not have the permissions required to access the registry key in the specified mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-671">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-671">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="3c0c1-672">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-672">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="rights"><span data-ttu-id="3c0c1-673">枚举值的按位组合，它指定所需的安全访问。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-673">A bitwise combination of enumeration values that specifies the desired security access.</span></span></param>
        <summary><span data-ttu-id="3c0c1-674">检索指定的子项以进行读取或读/写访问，请求指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-674">Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-675">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-675">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-676">而不是引发异常，此方法返回`null`如果所需的键不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-676">Rather than throwing an exception, this method returns `null` if the requested key does not exist.</span></span>  
  
 <span data-ttu-id="3c0c1-677">如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，该密钥打开用于读取和写入; 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>，为读取除非通过打开父项打开项<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-677">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3c0c1-678">为指定的访问权限`permissionCheck`为指定的访问权限的优先级高于`rights`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-678">The access specified for `permissionCheck` takes precedence over the access specified for `rights`.</span></span> <span data-ttu-id="3c0c1-679">例如，如果您指定<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>有关`permissionCheck`并<xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType>为`rights`，写入到子项的尝试会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-679">For example, if you specify <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> for `permissionCheck` and <xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType> for `rights`, an attempt to write to the subkey throws an exception.</span></span>  
  
 <span data-ttu-id="3c0c1-680">若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必须拥有的实例<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-680">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="3c0c1-681">若要获取的实例<xref:Microsoft.Win32.RegistryKey>，使用的静态成员之一<xref:Microsoft.Win32.Registry>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-681">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-682"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-682"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-683"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-683"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-684"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-684">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-685"><paramref name="rights" /> 包含无效的注册表权限值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-685"><paramref name="rights" /> includes invalid registry rights values.</span></span>  
  
<span data-ttu-id="3c0c1-686">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-686">-or-</span></span> 
<span data-ttu-id="3c0c1-687">用户没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-687">The user does not have the requested permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-688">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-688">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-689">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-689">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-690">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-690">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-691">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-691">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.RegistrySecurity -&gt; unit" Usage="registryKey.SetAccessControl registrySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="registrySecurity"><span data-ttu-id="3c0c1-692">要应用于当前子项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-692">The access control security to apply to the current subkey.</span></span></param>
        <summary><span data-ttu-id="3c0c1-693">向现有注册表项应用 Windows 访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-693">Applies Windows access control security to an existing registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-694">若要修改的注册表项的权限，请使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法来获取<xref:System.Security.AccessControl.RegistrySecurity>对象表示的现有 Windows 访问控制安全性，请修改该<xref:System.Security.AccessControl.RegistrySecurity>对象，以及如何将<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A>方法来更新的安全性键。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-694">To modify permissions for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain a <xref:System.Security.AccessControl.RegistrySecurity> object representing the existing Windows access control security, modify that <xref:System.Security.AccessControl.RegistrySecurity> object, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A> method to update security for the key.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-695"><xref:System.Security.AccessControl.RegistrySecurity>对象指定的用于`registrySecurity`替换现有的注册表项的安全性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-695">The <xref:System.Security.AccessControl.RegistrySecurity> object specified for `registrySecurity` replaces the existing security for the registry key.</span></span> <span data-ttu-id="3c0c1-696">若要添加新用户的权限，请使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法来获取现有的访问控制安全性，然后再修改它。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-696">To add permissions for a new user, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain the existing access control security, and then modify it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-697">下面的代码示例创建一个测试项。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-697">The following code example creates a test key.</span></span> <span data-ttu-id="3c0c1-698">允许当前用户<xref:System.Security.AccessControl.RegistryRights.ReadKey>并<xref:System.Security.AccessControl.RegistryRights.Delete>但拒绝权限<xref:System.Security.AccessControl.RegistryRights.ChangePermissions>和<xref:System.Security.AccessControl.RegistryRights.WriteKey>权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-698">The current user is allowed <xref:System.Security.AccessControl.RegistryRights.ReadKey> and <xref:System.Security.AccessControl.RegistryRights.Delete> rights but denied <xref:System.Security.AccessControl.RegistryRights.ChangePermissions> and <xref:System.Security.AccessControl.RegistryRights.WriteKey> rights.</span></span> <span data-ttu-id="3c0c1-699">后续尝试操作密钥成功或失败，具体取决于这些权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-699">Subsequent attempts to manipulate the key succeed or fail depending on these permissions.</span></span>  
  
 <span data-ttu-id="3c0c1-700">删除密钥之前，代码就会暂停。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-700">Before the key is deleted, the code pauses.</span></span> <span data-ttu-id="3c0c1-701">您可以切换到注册表编辑器并验证使用注册表编辑器中访问该密钥时，应用相同的访问权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-701">You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor.</span></span> <span data-ttu-id="3c0c1-702">(此效果最佳，如果您使用**RunAs**从命令行运行注册表编辑器和示例代码而无需管理员权限的本地用户。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-702">(This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights.</span></span> <span data-ttu-id="3c0c1-703">注册表编辑器中始终允许管理员才能更改权限，即使特定管理员已拒绝这些权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-703">The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights.</span></span> <span data-ttu-id="3c0c1-704">如果已定义一个名为 TestUser，该命令的本地用户`runas /user:TestUser cmd`打开一个命令窗口，可以从其运行注册表编辑器，然后选择示例代码。)</span><span class="sxs-lookup"><span data-stu-id="3c0c1-704">If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)</span></span>  
  
 [!code-cpp[RegistrySecurity101#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistrySecurity101/cpp/source.cpp#1)]
 [!code-csharp[RegistrySecurity101#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistrySecurity101/CS/source.cs#1)]
 [!code-vb[RegistrySecurity101#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistrySecurity101/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-705">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示一个具有访问控制安全性的项，并且调用方没有 <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-705">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a key with access control security, and the caller does not have <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> rights.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-706"><paramref name="registrySecurity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-706"><paramref name="registrySecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-707">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-707">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c0c1-708">设置注册表项中的名称/值对的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-708">Sets the value of a name/value pair in the registry key.</span></span> <span data-ttu-id="3c0c1-709">从所存储数据的类型或指定的 <see cref="T:Microsoft.Win32.RegistryValueKind" /> 确定注册表数据类型，具体取决于重载。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-709">Depending on the overload, the registry data type is determined from the type of data being stored or from a specified <see cref="T:Microsoft.Win32.RegistryValueKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj -&gt; unit" Usage="registryKey.SetValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-710">要存储的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-710">The name of the value to store.</span></span></param>
        <param name="value"><span data-ttu-id="3c0c1-711">要存储的数据。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-711">The data to be stored.</span></span></param>
        <summary><span data-ttu-id="3c0c1-712">设置指定的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-712">Sets the specified name/value pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-713">由于许多值可以存储在注册表中的每个项，必须使用`name`参数来指定你想要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-713">Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-714">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-714">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-715">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-715">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-716">若要设置此未命名的值，指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-716">To set this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="3c0c1-717">若要设置某个项中的值，必须具有写访问权限来打开密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-717">In order to set values in a key, you must open the key with write access.</span></span> <span data-ttu-id="3c0c1-718">具有写访问权限打开一个键后，您可以更改任何该注册表项中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-718">After you have opened a key with write access, you can change any of the name/value pairs in that key.</span></span>  
  
 <span data-ttu-id="3c0c1-719">如果指定`name`不存在的项中创建和关联的值设置为`value`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-719">If the specified `name` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="3c0c1-720">此重载<xref:Microsoft.Win32.RegistryKey.SetValue%2A>将 64 位整数存储为字符串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-720">This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="3c0c1-721">若要存储为 64 位数字<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>值，请使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>重载，指定<xref:Microsoft.Win32.RegistryValueKind>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-721">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.</span></span>  
  
 <span data-ttu-id="3c0c1-722">此重载<xref:Microsoft.Win32.RegistryKey.SetValue%2A>存储所有字符串值作为<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>，即使它们包含对环境变量可展开的引用。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-722">This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="3c0c1-723">若要保存为可展开的字符串的字符串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>重载，指定<xref:Microsoft.Win32.RegistryValueKind>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-723">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.</span></span>  
  
 <span data-ttu-id="3c0c1-724">此方法的重载数字类型，而不是 32 位整数存储为字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-724">Numeric types other than 32-bit integers are stored as strings by this method overload.</span></span> <span data-ttu-id="3c0c1-725">枚举元素存储为包含的元素名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-725">Enumeration elements are stored as strings containing the element names.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-726">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-726">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-727">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-727">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-728">在 Windows 98 和 Windows Millennium Edition 上注册表不是 Unicode，而不是所有 Unicode 字符都是有效的所有代码页。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-728">On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="3c0c1-729">最佳的匹配项都替换为对当前代码页无效的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-729">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="3c0c1-730">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-730">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-731">下面的代码示例演示如何将<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法确定注册表数据类型时设置值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-731">The following code example shows how the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method determines the registry data type when it sets values.</span></span> <span data-ttu-id="3c0c1-732">该示例创建一个测试项，并向该项添加不同数据类型的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-732">The example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="3c0c1-733">该示例然后读取名称/值对，并将其显示在控制台中，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法来显示相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-733">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-734"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-734"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-735"><paramref name="value" /> 不是受支持的数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-735"><paramref name="value" /> is an unsupported data type.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-736">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-736">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-737"><see cref="T:Microsoft.Win32.RegistryKey" /> 只读，因此无法写入；例如，项不是用写访问权限打开的。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-737">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.</span></span>  
  
<span data-ttu-id="3c0c1-738">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-738">-or-</span></span> 
<span data-ttu-id="3c0c1-739"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows Millennium Edition 或 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-739">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-740">用户没有创建或修改注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-740">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-741"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows 2000、Windows XP 或 Windows Server 2003。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-741">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-742">若要修改指定的注册表项，如果存在，或创建注册表项，如果尚不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-742">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="3c0c1-743">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-743">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-744">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-744">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-745">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-745">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryKey.SetValue (name, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3c0c1-746">要存储的值的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-746">The name of the value to be stored.</span></span></param>
        <param name="value"><span data-ttu-id="3c0c1-747">要存储的数据。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-747">The data to be stored.</span></span></param>
        <param name="valueKind"><span data-ttu-id="3c0c1-748">在存储数据时要使用的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-748">The registry data type to use when storing the data.</span></span></param>
        <summary><span data-ttu-id="3c0c1-749">使用指定的注册表数据类型设置注册表项中的名称/值对的值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-749">Sets the value of a name/value pair in the registry key, using the specified registry data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-750">由于许多值可以存储在注册表中的每个项，必须使用`name`参数来指定你想要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-750">Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-751">注册表项可以具有不与任何名称相关联的一个值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-751">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-752">在注册表编辑器中显示此未命名的值时，而不是名称将显示字符串"(Default)"。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-752">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="3c0c1-753">若要设置此未命名的值，指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-753">To set this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="3c0c1-754">若要设置某个项中的值，必须具有写访问权限来打开密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-754">In order to set values in a key, you must open the key with write access.</span></span> <span data-ttu-id="3c0c1-755">具有写访问权限打开一个键后，您可以更改任何该注册表项中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-755">After you have opened a key with write access, you can change any of the name/value pairs in that key.</span></span>  
  
 <span data-ttu-id="3c0c1-756">如果指定`name`不存在键，它创建，并且相关联的值设置为`value`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-756">If the specified `name` does not exist in the key, it is created, and the associated value is set to `value`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-757">指定的注册表数据类型<xref:Microsoft.Win32.RegistryValueKind.Unknown>等同于使用<xref:Microsoft.Win32.RegistryKey.SetValue%2A>重载。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-757">Specifying the registry data type <xref:Microsoft.Win32.RegistryValueKind.Unknown> is the same as using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> overload.</span></span>  
  
 <span data-ttu-id="3c0c1-758">如果指定的类型`value`不匹配指定`valueKind`，且不能为数据转换，<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-758">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="3c0c1-759">例如，可以存储<xref:System.Int64?displayProperty=nameWithType>作为<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>，但前提是其值小于最大值<xref:System.Int32?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-759">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3c0c1-760">不能存储作为单个字符串值<xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-760">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-761">如果已装箱的值将传递进行<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>，执行该转换使用固定区域性。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-761">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c0c1-762">不会公开<xref:Microsoft.Win32.RegistryKey>，恶意程序无法创建数千个无意义的子项或键/值对的方式中的对象。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-762">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="3c0c1-763">例如，不允许调用方可以输入任意键或值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-763">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c0c1-764">在 Windows 98 和 Windows Millennium Edition 上注册表不是 Unicode，而不是所有 Unicode 字符都是有效的所有代码页。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-764">On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="3c0c1-765">最佳的匹配项都替换为对当前代码页无效的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-765">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="3c0c1-766">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-766">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-767">下面的代码示例创建一个测试项，并使用<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法来存储多个值，指定每个值的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-767">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value.</span></span> <span data-ttu-id="3c0c1-768">该示例然后读取名称/值对，并将其显示在控制台中，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法来显示相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-768">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c0c1-769"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-769"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3c0c1-770"><paramref name="value" /> 的类型与 <paramref name="valueKind" /> 指定的注册表数据类型不匹配，因此，未能正确转换该数据。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-770">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-771">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-771">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-772"><see cref="T:Microsoft.Win32.RegistryKey" /> 只读，因此无法写入；例如，项不是用写访问权限打开的。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-772">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.</span></span>  
  
<span data-ttu-id="3c0c1-773">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-773">-or-</span></span> 
<span data-ttu-id="3c0c1-774"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows Millennium Edition 或 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-774">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-775">用户没有创建或修改注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-775">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-776"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows 2000、Windows XP 或 Windows Server 2003。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-776">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-777">若要修改指定的注册表项，如果存在，或创建注册表项，如果尚不存在。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-777">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="3c0c1-778">关联枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-778">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c0c1-779">它能够访问指定的注册表密钥如果它是一个远程的密钥。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-779">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="3c0c1-780">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-780">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="SubKeyCount">
      <MemberSignature Language="C#" Value="public int SubKeyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubKeyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubKeyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubKeyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubKeyCount : int" Usage="Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0c1-781">检索当前项的子项计数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-781">Retrieves the count of subkeys of the current key.</span></span></summary>
        <value><span data-ttu-id="3c0c1-782">当前项的子项的数目。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-782">The number of subkeys of the current key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-783">此属性执行而不是以递归方式计数名称。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-783">This property does not recursively count names.</span></span> <span data-ttu-id="3c0c1-784">它仅返回从中调用基本级别上的名称的计数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-784">It only returns the count of names on the base level from which it was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-785">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-785">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-786">用户没有该项的读取权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-786">The user does not have read permission for the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-787">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-787">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-788">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-788">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-789">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-789">A system error occurred, for example the current key has been deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-790">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-790">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-791">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-791">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-792">对当前密钥执行 <see cref="M:Microsoft.Win32.RegistryKey.Close" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-792">Performs a <see cref="M:Microsoft.Win32.RegistryKey.Close" /> on the current key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="3c0c1-793">此方法具有相同的效果与调用<xref:Microsoft.Win32.RegistryKey.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-793">This method has the same effect as calling <xref:Microsoft.Win32.RegistryKey.Close%2A>.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="registryKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0c1-794">检索此项的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-794">Retrieves a string representation of this key.</span></span></summary>
        <returns><span data-ttu-id="3c0c1-795">表示此项的字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-795">A string representing the key.</span></span> <span data-ttu-id="3c0c1-796">如果指定的项无效（找不到），则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-796">If the specified key is invalid (cannot be found) then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-797">返回值包含指定的密钥和密钥的十六进制值的注册表路径。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-797">The return value includes the registry path of the specified key and the hexadecimal value for the key.</span></span> <span data-ttu-id="3c0c1-798">注册表路径包含指定键的绝对根，始终从 1 开始的基键的注册表中，例如，HKEY_LOCAL_MACHINE。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-798">The registry path includes the absolute root of the specified key, always starts at one of the base keys for the registry, for example, HKEY_LOCAL_MACHINE.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-799">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-799">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-800">访问的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-800">The <see cref="T:Microsoft.Win32.RegistryKey" /> being accessed is closed (closed keys cannot be accessed).</span></span></exception>
        <altmember cref="P:Microsoft.Win32.RegistryKey.Name" />
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ValueCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueCount : int" Usage="Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0c1-801">检索项中值的计数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-801">Retrieves the count of values in the key.</span></span></summary>
        <value><span data-ttu-id="3c0c1-802">项中的名称/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-802">The number of name/value pairs in the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-803">每个注册表项具有未与任何名称关联的默认值。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-803">Each registry key has a default value that is not associated with any name.</span></span> <span data-ttu-id="3c0c1-804">此未命名的值可以通过设置<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法，并指定`null`或空字符串 ("") 为`name`。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-804">This unnamed value can be set by using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method and specifying either `null` or the empty string ("") for `name`.</span></span> <span data-ttu-id="3c0c1-805">如果将永远不会设置默认值，它不计入返回的总计数<xref:Microsoft.Win32.RegistryKey.ValueCount%2A>属性; 后已设置，但是，它始终计数。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-805">If the default value has never been set, it does not contribute to the total count returned by the <xref:Microsoft.Win32.RegistryKey.ValueCount%2A> property; once it has been set, however, it is always counted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c0c1-806">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.RegistryKey>类。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-806">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3c0c1-807">用户没有该项的读取权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-807">The user does not have read permission for the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3c0c1-808">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-808">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3c0c1-809">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-809">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3c0c1-810">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-810">A system error occurred, for example the current key has been deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="3c0c1-811">用于读取指定的注册表项的功能。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-811">for the ability to read the specified registry key.</span></span> <span data-ttu-id="3c0c1-812">关联的枚举： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="3c0c1-812">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryView View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Win32.RegistryView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As RegistryView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryView View { Microsoft::Win32::RegistryView get(); };" />
      <MemberSignature Language="F#" Value="member this.View : Microsoft.Win32.RegistryView" Usage="Microsoft.Win32.RegistryKey.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0c1-813">获取用于创建注册表项的视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-813">Gets the view that was used to create the registry key.</span></span></summary>
        <value><span data-ttu-id="3c0c1-814">用于创建注册表项的视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-814">The view that was used to create the registry key.</span></span>  
  
<span data-ttu-id="3c0c1-815">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3c0c1-815">-or-</span></span> 
 <span data-ttu-id="3c0c1-816">如果未使用视图，则为 <see cref="F:Microsoft.Win32.RegistryView.Default" />。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-816"><see cref="F:Microsoft.Win32.RegistryView.Default" />, if no view was used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0c1-817">在 64 位版本的 Windows，对于 32 位和 64 位应用程序可以单独存储的注册表部分。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-817">On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</span></span> <span data-ttu-id="3c0c1-818">没有 32 位应用程序的 32 位视图和 64 位应用程序的 64 位视图。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-818">There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</span></span>  
  
 <span data-ttu-id="3c0c1-819">不要假定视图始终对应的实际视图<xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="3c0c1-819">Do not assume that the view always corresponds to the actual view of the <xref:Microsoft.Win32.RegistryKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>