<Type Name="SystemEvents" FullName="Microsoft.Win32.SystemEvents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="747b741b14ca1c1c4215b08c1bcd371740cad132" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52911618" /></Metadata><TypeSignature Language="C#" Value="public sealed class SystemEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SystemEvents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemEvents sealed" />
  <TypeSignature Language="F#" Value="type SystemEvents = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d34d0-101">提供对系统事件通知的访问。</span><span class="sxs-lookup"><span data-stu-id="d34d0-101">Provides access to system event notifications.</span></span> <span data-ttu-id="d34d0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="d34d0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34d0-103"><xref:Microsoft.Win32.SystemEvents>类提供对特定类型的系统事件做出响应的能力。</span><span class="sxs-lookup"><span data-stu-id="d34d0-103">The <xref:Microsoft.Win32.SystemEvents> class provides the ability to respond to specific types of system events.</span></span>  
  
 <span data-ttu-id="d34d0-104">当引发系统事件时，使用的系统事件的线程，用于监视称为任何委托附加到该事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-104">When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events.</span></span> <span data-ttu-id="d34d0-105">因此，你应使从在事件处理程序线程安全的任何调用。</span><span class="sxs-lookup"><span data-stu-id="d34d0-105">Therefore, you should make any calls from your event handlers thread-safe.</span></span> <span data-ttu-id="d34d0-106">如果你需要调用不作为此类的成员公开的系统事件，则可以使用<xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d34d0-106">If you need to call a system event that is not exposed as a member of this class, you can use the <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-107">不要引发系统事件处理程序，因为它可能会阻止其他应用程序的正常运行的线程上执行耗时的处理。</span><span class="sxs-lookup"><span data-stu-id="d34d0-107">Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-108">某些系统事件可能不会引发上[!INCLUDE[windowsver](~/includes/windowsver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d34d0-108">Some system events might not be raised on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span> <span data-ttu-id="d34d0-109">请务必验证你的应用程序上按预期工作[!INCLUDE[windowsver](~/includes/windowsver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d34d0-109">Be sure to verify that your application works as expected on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d34d0-110">本部分包含两个示例。</span><span class="sxs-lookup"><span data-stu-id="d34d0-110">This section contains two examples.</span></span> <span data-ttu-id="d34d0-111">第一个示例演示如何使用普通的应用程序中的系统事件和第二个示例演示如何使用 Windows 服务中的系统事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-111">The first example shows how to use system events in an ordinary application, and the second example shows how to use system events in a Windows service.</span></span>  
  
 <span data-ttu-id="d34d0-112">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="d34d0-112">**Example 1**</span></span>  
  
 <span data-ttu-id="d34d0-113">下面的代码示例注册某些系统事件感兴趣，然后等待任何这些事件发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-113">The following code example registers interest in some system events and then waits for any of those events to occur.</span></span> <span data-ttu-id="d34d0-114">如果用户更改显示分辨率，则会发生所示的输出。</span><span class="sxs-lookup"><span data-stu-id="d34d0-114">The output shown occurs if the user changes the display resolution.</span></span>  
  
 [!code-cpp[SystemEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#1)]
 [!code-csharp[SystemEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#1)]
 [!code-vb[SystemEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#1)]  
  
 <span data-ttu-id="d34d0-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="d34d0-115">**Example 2**</span></span>  
  
 <span data-ttu-id="d34d0-116">下面的代码示例演示一个非常简单的 Windows 服务处理<xref:Microsoft.Win32.SystemEvents.TimeChanged>和<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-116">The following code example demonstrates a very simple Windows service that handles the <xref:Microsoft.Win32.SystemEvents.TimeChanged> and <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> events.</span></span> <span data-ttu-id="d34d0-117">该示例包含一个名为服务`SimpleService`，名为窗体`HiddenForm`，和一个安装程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-117">The example includes a service named `SimpleService`, a form named `HiddenForm`, and an installer.</span></span> <span data-ttu-id="d34d0-118">该窗体提供所需的系统事件的消息循环。</span><span class="sxs-lookup"><span data-stu-id="d34d0-118">The form provides the message loop that is required by system events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-119">服务没有消息循环时，除非他们权与桌面交互。</span><span class="sxs-lookup"><span data-stu-id="d34d0-119">Services do not have message loops, unless they are allowed to interact with the desktop.</span></span> <span data-ttu-id="d34d0-120">如果隐藏窗体不提供消息循环，如本示例中，必须本地系统帐户下运行服务并启用与桌面的交互所需的手动干预。</span><span class="sxs-lookup"><span data-stu-id="d34d0-120">If the message loop is not provided by a hidden form, as in this example, the service must be run under the local system account, and manual intervention is required to enable interaction with the desktop.</span></span> <span data-ttu-id="d34d0-121">管理员必须手动检查，即**允许服务与桌面交互**上的复选框**Log On**选项卡的服务属性对话框。</span><span class="sxs-lookup"><span data-stu-id="d34d0-121">That is, the administrator must manually check the **Allow service to interact with desktop** check box on the **Log On** tab of the service properties dialog box.</span></span> <span data-ttu-id="d34d0-122">在这种情况下，会自动提供一个消息循环。</span><span class="sxs-lookup"><span data-stu-id="d34d0-122">In that case, a message loop is automatically provided.</span></span> <span data-ttu-id="d34d0-123">仅当本地系统帐户下运行服务时，此选项才可用。</span><span class="sxs-lookup"><span data-stu-id="d34d0-123">This option is available only when the service is run under the local system account.</span></span> <span data-ttu-id="d34d0-124">不能以编程方式启用与桌面的交互。</span><span class="sxs-lookup"><span data-stu-id="d34d0-124">Interaction with the desktop cannot be enabled programmatically.</span></span>  
  
 <span data-ttu-id="d34d0-125">在此示例在服务启动运行的实例的线程`HiddenForm`。</span><span class="sxs-lookup"><span data-stu-id="d34d0-125">The service in this example starts a thread that runs an instance of `HiddenForm`.</span></span> <span data-ttu-id="d34d0-126">将事件挂钩，并在窗体中处理。</span><span class="sxs-lookup"><span data-stu-id="d34d0-126">The events are hooked up and handled in the form.</span></span> <span data-ttu-id="d34d0-127">必须在窗体，以确定已首先; 完全加载窗体的 load 事件挂接事件否则不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-127">The events must be hooked up in the load event of the form, to make sure that the form is completely loaded first; otherwise the events will not be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-128">该示例提供所有必要的代码，包括通常由 Visual Studio 设计器生成的窗体初始化代码。</span><span class="sxs-lookup"><span data-stu-id="d34d0-128">The example provides all the necessary code, including the form initialization code typically generated by Visual Studio designers.</span></span> <span data-ttu-id="d34d0-129">如果你正在开发你的服务在 Visual Studio 中，可以省略第二个分部类并使用**属性**窗口设置的高度和宽度为零，该边框样式的隐藏窗体<xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>，和的窗口状态<xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d34d0-129">If you are developing your service in Visual Studio, you can omit the second partial class and use the **Properties** window to set the height and width of the hidden form to zero, the border style to <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>, and the window state to <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d34d0-130">若要运行示例：</span><span class="sxs-lookup"><span data-stu-id="d34d0-130">To run the example:</span></span>  
  
1.  <span data-ttu-id="d34d0-131">编译命令行中的代码。</span><span class="sxs-lookup"><span data-stu-id="d34d0-131">Compile the code from the command line.</span></span> <span data-ttu-id="d34d0-132">用于源文件的名称并不重要。</span><span class="sxs-lookup"><span data-stu-id="d34d0-132">The name that you use for the source file is not important.</span></span>  
  
2.  <span data-ttu-id="d34d0-133">从命令行中使用安装服务[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)实用程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-133">Install the service from the command line using the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) utility.</span></span> <span data-ttu-id="d34d0-134">例如，`InstallUtil example.exe`源代码文件名称是否`example.cs`或`example.vb`。</span><span class="sxs-lookup"><span data-stu-id="d34d0-134">For example, `InstallUtil example.exe` if the source file name is `example.cs` or `example.vb`.</span></span> <span data-ttu-id="d34d0-135">必须是管理员才能安装该服务。</span><span class="sxs-lookup"><span data-stu-id="d34d0-135">You must be an administrator to install the service.</span></span>  
  
3.  <span data-ttu-id="d34d0-136">使用服务控制台启动该服务。</span><span class="sxs-lookup"><span data-stu-id="d34d0-136">Use the Services console to start the service.</span></span>  
  
4.  <span data-ttu-id="d34d0-137">更改系统时间，或更改用户首选项，如鼠标属性。</span><span class="sxs-lookup"><span data-stu-id="d34d0-137">Change the system time, or change user preferences, such as mouse properties.</span></span>  
  
5.  <span data-ttu-id="d34d0-138">查看中的消息**应用程序**类别的事件查看器。</span><span class="sxs-lookup"><span data-stu-id="d34d0-138">View the messages in the **Application** category of Event Viewer.</span></span>  
  
6.  <span data-ttu-id="d34d0-139">使用服务控制台停止服务。</span><span class="sxs-lookup"><span data-stu-id="d34d0-139">Use the Services console to stop the service.</span></span>  
  
7.  <span data-ttu-id="d34d0-140">通过从命令行卸载服务`/u`选项。</span><span class="sxs-lookup"><span data-stu-id="d34d0-140">Uninstall the service from the command line by using the `/u` option.</span></span> <span data-ttu-id="d34d0-141">例如 `InstallUtil /u example.exe`。</span><span class="sxs-lookup"><span data-stu-id="d34d0-141">For example, `InstallUtil /u example.exe`.</span></span>  
  
 [!code-csharp[ManagedWindowsService#1](~/samples/snippets/csharp/VS_Snippets_CLR/ManagedWindowsService/cs/source.cs#1)]
 [!code-vb[ManagedWindowsService#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ManagedWindowsService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="d34d0-142">对系统资源的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="d34d0-142">for full access to system resources.</span></span> <span data-ttu-id="d34d0-143">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="d34d0-143">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="d34d0-144">关联的状态：</span><span class="sxs-lookup"><span data-stu-id="d34d0-144">Associated state:</span></span></permission>
    <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
    <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static IntPtr CreateTimer (int interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateTimer(int32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimer (interval As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateTimer(int interval);" />
      <MemberSignature Language="F#" Value="static member CreateTimer : int -&gt; nativeint" Usage="Microsoft.Win32.SystemEvents.CreateTimer interval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="d34d0-145">指定计时器通知之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="d34d0-145">Specifies the interval between timer notifications, in milliseconds.</span></span></param>
        <summary><span data-ttu-id="d34d0-146">创建一个与系统事件窗口相关联的新窗口计时器。</span><span class="sxs-lookup"><span data-stu-id="d34d0-146">Creates a new window timer associated with the system events window.</span></span></summary>
        <returns><span data-ttu-id="d34d0-147">新计时器的 ID。</span><span class="sxs-lookup"><span data-stu-id="d34d0-147">The ID of the new timer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d34d0-148">间隔小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="d34d0-148">The interval is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-149">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-149">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-150">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-150">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-151">创建系统事件窗口线程的尝试未成功，或创建计时器的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-151">The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanged : EventHandler " Usage="member this.DisplaySettingsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-152">当用户更改显示设置时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-152">Occurs when the user changes the display settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-153">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-153">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d34d0-154">下面的代码示例演示了如何监视<xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-154">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> event.</span></span> <span data-ttu-id="d34d0-155">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-155">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-156">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-156">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-157">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-157">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-158">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-158">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanging">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanging : EventHandler " Usage="member this.DisplaySettingsChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-159">更改显示设置时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-159">Occurs when the display settings are changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-160">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-160">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-161">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-161">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-162">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-162">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-163">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-163">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      </Docs>
    </Member>
    <Member MemberName="EventsThreadShutdown">
      <MemberSignature Language="C#" Value="public static event EventHandler EventsThreadShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventsThreadShutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EventsThreadShutdown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EventsThreadShutdown;" />
      <MemberSignature Language="F#" Value="member this.EventsThreadShutdown : EventHandler " Usage="member this.EventsThreadShutdown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-164">在侦听系统事件的线程终止前发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-164">Occurs before the thread that listens for system events is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34d0-165">因为侦听系统事件的线程即将终止，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-165">This event is raised as the thread that listens for system events is about to be terminated.</span></span> <span data-ttu-id="d34d0-166">使用侦听系统事件的线程调用系统事件委托。</span><span class="sxs-lookup"><span data-stu-id="d34d0-166">System event delegates are invoked using the thread that listens for system events.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-167">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-167">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-168">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-168">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-169">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-169">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-170">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-170">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledFontsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler InstalledFontsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InstalledFontsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event InstalledFontsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ InstalledFontsChanged;" />
      <MemberSignature Language="F#" Value="member this.InstalledFontsChanged : EventHandler " Usage="member this.InstalledFontsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-171">当用户在系统中添加或移除字体时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-171">Occurs when the user adds fonts to or removes fonts from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-172">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-172">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-173">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-173">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-174">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-174">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-175">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-175">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnEventsThread">
      <MemberSignature Language="C#" Value="public static void InvokeOnEventsThread (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeOnEventsThread(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeOnEventsThread (method As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeOnEventsThread(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="static member InvokeOnEventsThread : Delegate -&gt; unit" Usage="Microsoft.Win32.SystemEvents.InvokeOnEventsThread method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d34d0-176">要使用侦听系统事件的线程调用的委托。</span><span class="sxs-lookup"><span data-stu-id="d34d0-176">A delegate to invoke using the thread that listens for system events.</span></span></param>
        <summary><span data-ttu-id="d34d0-177">使用侦听系统事件的线程调用指定的委托。</span><span class="sxs-lookup"><span data-stu-id="d34d0-177">Invokes the specified delegate using the thread that listens for system events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34d0-178">可以使用此方法需要处理的系统事件由否则不公开任何时间<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-178">You can use this method any time that you need to handle a system event that is not exposed otherwise by the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 <span data-ttu-id="d34d0-179">当调用此方法时，将由你的应用程序使用来处理系统事件的线程调用指定的委托。</span><span class="sxs-lookup"><span data-stu-id="d34d0-179">When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-180">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-180">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-181">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-181">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-182">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-182">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KillTimer">
      <MemberSignature Language="C#" Value="public static void KillTimer (IntPtr timerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KillTimer(native int timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KillTimer (timerId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KillTimer(IntPtr timerId);" />
      <MemberSignature Language="F#" Value="static member KillTimer : nativeint -&gt; unit" Usage="Microsoft.Win32.SystemEvents.KillTimer timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="d34d0-183">要终止的计时器的 ID。</span><span class="sxs-lookup"><span data-stu-id="d34d0-183">The ID of the timer to terminate.</span></span></param>
        <summary><span data-ttu-id="d34d0-184">终止由给定 ID 指定的计时器。</span><span class="sxs-lookup"><span data-stu-id="d34d0-184">Terminates the timer specified by the given id.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-185">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-185">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-186">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-186">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-187">创建系统事件窗口线程的尝试未成功，或终止计时器的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-187">The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LowMemory">
      <MemberSignature Language="C#" Value="public static event EventHandler LowMemory;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LowMemory" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.LowMemory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LowMemory As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LowMemory;" />
      <MemberSignature Language="F#" Value="member this.LowMemory : EventHandler " Usage="member this.LowMemory : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This event has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-188">当系统用完可用 RAM 时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-188">Occurs when the system is running out of available RAM.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34d0-189">此事件包装 WM_COMPACTING 消息。</span><span class="sxs-lookup"><span data-stu-id="d34d0-189">This event wraps the WM_COMPACTING message.</span></span> <span data-ttu-id="d34d0-190">当系统检测到多个 12.5 %30 到 60 秒间隔内的系统时间花费了压缩内存时，此消息发送给所有顶级窗口。</span><span class="sxs-lookup"><span data-stu-id="d34d0-190">This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory.</span></span> <span data-ttu-id="d34d0-191">这表明系统内存不足。</span><span class="sxs-lookup"><span data-stu-id="d34d0-191">This indicates that system memory is low.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-192">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-192">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-193">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-193">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-194">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-194">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-195">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-195">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-196">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-196">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-197">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-197">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-198">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-198">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d34d0-199">此消息仅用于使用 16 位基于 Windows 的应用程序兼容性。</span><span class="sxs-lookup"><span data-stu-id="d34d0-199">This message is provided only for compatibility with 16-bit Windows-based applications.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PaletteChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler PaletteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaletteChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PaletteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PaletteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ PaletteChanged;" />
      <MemberSignature Language="F#" Value="member this.PaletteChanged : EventHandler " Usage="member this.PaletteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-200">当用户切换到使用其他调色板的应用程序时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-200">Occurs when the user switches to an application that uses a different palette.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-201">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-201">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-202">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-202">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-203">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-203">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-204">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-204">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d34d0-205">下面的代码示例演示了如何监视<xref:Microsoft.Win32.SystemEvents.PaletteChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-205">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.PaletteChanged> event.</span></span> <span data-ttu-id="d34d0-206">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-206">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-207">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-207">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-208">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-208">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-209">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-209">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PowerModeChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PowerModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PowerModeChanged As PowerModeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::PowerModeChangedEventHandler ^ PowerModeChanged;" />
      <MemberSignature Language="F#" Value="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " Usage="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.PowerModeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-210">当用户挂起或继续系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-210">Occurs when the user suspends or resumes the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-211">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-211">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-212">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-212">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-213">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-213">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-214">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-214">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-215">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-215">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-216">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-216">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-217">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-217">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.PowerModes" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnded">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndedEventHandler SessionEnded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnded" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnded As SessionEndedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndedEventHandler ^ SessionEnded;" />
      <MemberSignature Language="F#" Value="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " Usage="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-218">当用户注销或关闭系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-218">Occurs when the user is logging off or shutting down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-219">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-219">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-220">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-220">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-221">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-221">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-222">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-222">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-223">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-223">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-224">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-224">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-225">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-225">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndedEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndingEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnding As SessionEndingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndingEventHandler ^ SessionEnding;" />
      <MemberSignature Language="F#" Value="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " Usage="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-226">当用户尝试注销或关闭系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-226">Occurs when the user is trying to log off or shut down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34d0-227">这是一个可取消事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-227">This is a cancelable event.</span></span> <span data-ttu-id="d34d0-228">设置<xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>属性设置为`true`将请求会话仍将继续运行。</span><span class="sxs-lookup"><span data-stu-id="d34d0-228">Setting the <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> property to `true` will request that the session continues to run.</span></span> <span data-ttu-id="d34d0-229">它提供了不能保证不会结束该会话。</span><span class="sxs-lookup"><span data-stu-id="d34d0-229">It provides no guarantee that the session will not end.</span></span>  
  
 <span data-ttu-id="d34d0-230">如果使用的<xref:Microsoft.Win32.SystemEvents.SessionEnding>在 Windows 窗体来检测系统注销或重新启动，没有确定性方法来决定是否<xref:System.Windows.Forms.Form.Closing>事件将激发此事件之前。</span><span class="sxs-lookup"><span data-stu-id="d34d0-230">If you are using <xref:Microsoft.Win32.SystemEvents.SessionEnding> in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <xref:System.Windows.Forms.Form.Closing> event will fire before this event.</span></span>  
  
 <span data-ttu-id="d34d0-231">如果你想要执行一些特殊任务，然后<xref:System.Windows.Forms.Form.Closing>是触发，需要确保<xref:Microsoft.Win32.SystemEvents.SessionEnding>之前激发<xref:System.Windows.Forms.Form.Closing>。</span><span class="sxs-lookup"><span data-stu-id="d34d0-231">If you want to perform some special tasks before <xref:System.Windows.Forms.Form.Closing> is fired, you need to ensure that <xref:Microsoft.Win32.SystemEvents.SessionEnding> fires before <xref:System.Windows.Forms.Form.Closing>.</span></span> <span data-ttu-id="d34d0-232">若要执行此操作，需要捕获`WM_QUERYENDSESSION`通过重写的形式`WndProc`函数。</span><span class="sxs-lookup"><span data-stu-id="d34d0-232">To do this, you need to trap the `WM_QUERYENDSESSION` in the form by overriding the `WndProc` function.</span></span>  <span data-ttu-id="d34d0-233">此示例演示如何执行此操作。</span><span class="sxs-lookup"><span data-stu-id="d34d0-233">This example demonstrates how to do this.</span></span>  
  
```vb  
Private Shared WM_QUERYENDSESSION As Integer = &H11  
 Private Shared systemShutdown As Boolean = False  
 Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  
     If m.Msg = WM_QUERYENDSESSION Then  
         MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot")  
         systemShutdown = True  
     End If  
     ' If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  
     MyBase.WndProc(m)  
 End Sub 'WndProc   
 Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  
     If (systemShutdown) Then  
     ' Reset the variable because the user might cancel the shutdown.  
         systemShutdown = False  
         If (System.Windows.Forms.DialogResult.Yes = _  
                 MessageBox.Show("My application", "Do you want to save your work before logging off?", MessageBoxButtons.YesNo)) Then  
                 e.Cancel = True  
         Else  
                 e.Cancel = False  
         End If  
     End If  
 End Sub  
  
```  
  
```csharp  
private static int WM_QUERYENDSESSION = 0x11;  
private static bool systemShutdown = false;  
protected override void WndProc(ref System.Windows.Forms.Message m)  
{  
    if (m.Msg==WM_QUERYENDSESSION)  
    {  
        MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot");  
        systemShutdown = true;  
    }  
  
    // If this is WM_QUERYENDSESSION, the closing event should be  
    // raised in the base WndProc.  
    base.WndProc(ref m);  
  
} //WndProc   
  
private void Form1_Closing(  
    System.Object sender,   
    System.ComponentModel.CancelEventArgs e)  
{  
    if (systemShutdown)  
        // Reset the variable because the user might cancel the   
        // shutdown.  
    {  
        systemShutdown = false;  
        if (DialogResult.Yes==MessageBox.Show("My application",   
            "Do you want to save your work before logging off?",   
            MessageBoxButtons.YesNo))  
        {  
            e.Cancel = true;  
        }  
        else  
        {  
            e.Cancel = false;  
        }  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="d34d0-234">控制台应用程序不会引发<xref:Microsoft.Win32.SystemEvents.SessionEnding>事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-234">Console applications do not raise the <xref:Microsoft.Win32.SystemEvents.SessionEnding> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-235">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-235">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-236">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-236">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-237">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-237">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-238">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-238">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-239">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-239">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-240">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-240">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-241">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-241">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndingEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionSwitch">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionSwitchEventHandler SessionSwitch" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionSwitch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionSwitch As SessionSwitchEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionSwitchEventHandler ^ SessionSwitch;" />
      <MemberSignature Language="F#" Value="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " Usage="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionSwitchEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-242">更改当前登录的用户时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-242">Occurs when the currently logged-in user has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-243">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-243">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-244">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-244">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-245">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-245">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-246">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-246">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-247">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-247">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-248">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-248">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-249">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-249">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TimeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TimeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TimeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TimeChanged;" />
      <MemberSignature Language="F#" Value="member this.TimeChanged : EventHandler " Usage="member this.TimeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-250">当用户更改系统时钟上的时间时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-250">Occurs when the user changes the time on the system clock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-251">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-251">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-252">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-252">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-253">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-253">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-254">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-254">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-255">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-255">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-256">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-256">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-257">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-257">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="P:System.DateTime.Now" />
      </Docs>
    </Member>
    <Member MemberName="TimerElapsed">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.TimerElapsedEventHandler TimerElapsed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimerElapsed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimerElapsed As TimerElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::TimerElapsedEventHandler ^ TimerElapsed;" />
      <MemberSignature Language="F#" Value="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " Usage="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.TimerElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-258">在窗口计时器间隔过期时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-258">Occurs when a windows timer interval has expired.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-259">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-259">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-260">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-260">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-261">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-261">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-262">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-262">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-263">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-263">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-264">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-264">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-265">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-265">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventArgs" />
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanged As UserPreferenceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangedEventHandler ^ UserPreferenceChanged;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " Usage="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-266">在用户首选项更改后发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-266">Occurs when a user preference has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-267">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-267">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-268">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-268">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-269">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-269">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-270">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-270">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-271">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-271">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-272">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-272">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-273">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-273">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanging">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanging As UserPreferenceChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangingEventHandler ^ UserPreferenceChanging;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " Usage="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d34d0-274">当用户首选项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="d34d0-274">Occurs when a user preference is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d34d0-275">如果运行的消息泵，只被引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-275">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d34d0-276">在 Windows 服务中，除非使用隐藏的窗体或手动启动消息泵引发此事件将不会。</span><span class="sxs-lookup"><span data-stu-id="d34d0-276">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d34d0-277">有关演示如何通过使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-277">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d34d0-278">由于这是一个静态事件，必须释放你的应用程序，或会导致内存泄漏时分离事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d34d0-278">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d34d0-279">下面的代码示例演示了如何监视<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="d34d0-279">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> event.</span></span> <span data-ttu-id="d34d0-280">此代码示例是为提供一个更大示例的一部分<xref:Microsoft.Win32.SystemEvents>类。</span><span class="sxs-lookup"><span data-stu-id="d34d0-280">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d34d0-281">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-281">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d34d0-282">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d34d0-282">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d34d0-283">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d34d0-283">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
  </Members>
</Type>