<Type Name="QualificationDataItem" FullName="System.AddIn.Hosting.QualificationDataItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f1d66d0271cf2645ad9234541243065f0b539f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct QualificationDataItem" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit QualificationDataItem extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.QualificationDataItem" />
  <TypeSignature Language="VB.NET" Value="Public Structure QualificationDataItem" />
  <TypeSignature Language="C++ CLI" Value="public value class QualificationDataItem" />
  <TypeSignature Language="F#" Value="type QualificationDataItem = struct" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示管线段的开发人员提供给宿主使用的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 限定数据的每个项包含已通过使用应用到管道段的名称/值对<xref:System.AddIn.Pipeline.QualificationDataAttribute>特性，来提供信息来限定段 （例如，段的建议的隔离级别） 的使用。 <xref:System.AddIn.Hosting.QualificationDataItem>结构包含一个名称/值对和它已应用到管道段的类型。  
  
 使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=nameWithType>属性来获取一组嵌套的字典，其中包含<xref:System.AddIn.Hosting.QualificationDataItem>结构与关联的管道段<xref:System.AddIn.Hosting.AddInToken>。  
  
 或者，使用<xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=nameWithType>方法以获取的枚举数<xref:System.AddIn.Hosting.QualificationDataItem>令牌中，也可以只使用与关联的管道段结构`foreach`语句 (`For Each`在 Visual Basic 中， `for each` Visual c + +) 到将该令牌视为它是一套<xref:System.AddIn.Hosting.QualificationDataItem>结构。  
  
   
  
## Examples  
 下面的示例列出与每个关联的管道段的限定数据<xref:System.AddIn.Hosting.AddInToken>集合中的令牌。  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="qualificationDataItem.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要比较的对象。</param>
        <summary>确定指定的对象是否等于当前的限定数据项。</summary>
        <returns>如果 <paramref name="obj" /> 等于当前实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="qualificationDataItem.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取此限定数据项的哈希代码。</summary>
        <returns>哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取限定数据项的名称。</summary>
        <value>限定数据项的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 限定数据的每个项包含已通过使用应用到管道段的名称/值对<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性，以向外接程序的使用者提供信息。 <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A>属性获取的名称。 使用<xref:System.AddIn.Hosting.QualificationDataItem.Value%2A>属性来获取的值。  
  
   
  
## Examples  
 下面的示例列出与每个关联的管道段的限定数据<xref:System.AddIn.Hosting.AddInToken>集合中的令牌。 <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A>属性用来显示每个项的名称。  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="item1 = item2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">要比较的第一个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" />。</param>
        <param name="item2">要比较的第二个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" />。</param>
        <summary>确定两个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> 结构是否相等。</summary>
        <returns>如果 <paramref name="item1" /> 和 <paramref name="item2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="System.AddIn.Hosting.QualificationDataItem.op_Inequality (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">要比较的第一个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" />。</param>
        <param name="item2">要比较的第二个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" />。</param>
        <summary>确定两个 <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> 结构是否不同。</summary>
        <returns>如果 <paramref name="item1" /> 和 <paramref name="item2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInSegmentType Segment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.AddInSegmentType Segment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segment As AddInSegmentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInSegmentType Segment { System::AddIn::Hosting::AddInSegmentType get(); };" />
      <MemberSignature Language="F#" Value="member this.Segment : System.AddIn.Hosting.AddInSegmentType" Usage="System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInSegmentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值标识限定数据项所应用到的管线段。</summary>
        <value>数据项所应用到的管线段的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在枚举限定数据时，使用此属性来标识属于管道的特定数据段的限定数据。  
  
> [!NOTE]
>  外接程序模型不使用限定数据应用于的外接程序的主机视图。 因此，当枚举限定数据不会查找操作时的任何项<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性是<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn>。  
  
   
  
## Examples  
 下面的示例列出与每个关联的管道段的限定数据<xref:System.AddIn.Hosting.AddInToken>集合中的令牌。 <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性用于显示的段类型。  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取限定数据项的值。</summary>
        <value>项的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 限定数据的每个项包含已通过使用应用到管道段的名称/值对<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性，以向外接程序的使用者提供信息。 <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A>属性获取的值。 使用<xref:System.AddIn.Hosting.QualificationDataItem.Name%2A>属性来获取的名称。  
  
   
  
## Examples  
 下面的示例列出与每个关联的管道段的限定数据<xref:System.AddIn.Hosting.AddInToken>集合中的令牌。 <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A>属性用来显示项的值。  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>