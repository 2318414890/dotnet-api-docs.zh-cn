<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AddInController.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52b3f32bf19fb42d6ed9b44cc27fc1c1f11d60c99.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b3f32bf19fb42d6ed9b44cc27fc1c1f11d60c99</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Hosting.AddInController">
          <source>Provides access to an add-in for a variety of tasks.</source>
          <target state="translated">提供用于执行各种任务的外接程序的访问权限。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Use this class to perform the following tasks:</source>
          <target state="translated">此类用于执行以下任务：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt;</ph> property to obtain an <ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object for an add-in.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt;</ph>属性来获取<ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph>外接程序对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Then use that object to activate other add-ins in the same application domain and process as the original add-in.</source>
          <target state="translated">然后使用该对象激活相同的应用程序域和与原始外接程序的进程中的其他外接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.AppDomain%2A&gt;</ph> property to obtain an <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> object for an add-in.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.AppDomain%2A&gt;</ph>属性来获取<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>外接程序对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Then use that object to activate other add-ins in the same application domain as the original add-in.</source>
          <target state="translated">然后使用该对象激活在与原始外接程序相同的应用程序域中的其他外接。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.</source>
          <target state="translated">请注意，由于跨进程远程处理中的限制，这种情况下不会使用在单独的进程中激活的外接程序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Token%2A&gt;</ph> property to obtain an <ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object that represents an add-in.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Token%2A&gt;</ph>属性来获取<ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph>表示外接程序的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>Shut down an add-in with the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method.</source>
          <target state="translated">关闭外接程序与<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>To obtain the controller for an add-in, call the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.GetAddInController%2A&gt;</ph> method and pass an instance of the add-in as its parameter.</source>
          <target state="translated">若要获取外接程序中的控制器，请调用<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.GetAddInController%2A&gt;</ph>方法并传入实例的外接程序作为其参数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Hosting.AddInController">
          <source>The following example activates an add-in within the same environment as a previously activated add-in by using an <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph> object.</source>
          <target state="translated">下面的示例通过使用外接程序之前激活外接程序的相同环境中激活<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.AddIn.Hosting.AddInController.AddInEnvironment">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.AddIn.Hosting.AddInEnvironment" /&gt;</ph> object.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Hosting.AddInEnvironment" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AddInEnvironment">
          <source>An object that can be used to activate other add-ins in the same environment as the original add-in.</source>
          <target state="translated">一个对象，可用于激活与原始外接程序在同一环境中的其他外接程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AddInEnvironment">
          <source>Use this property to get the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object for an add-in.</source>
          <target state="translated">使用此属性来获取<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph>外接程序对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AddInEnvironment">
          <source>Then use that object to activate other add-ins in the same application domain and process as the original add-in.</source>
          <target state="translated">然后使用该对象激活相同的应用程序域和与原始外接程序的进程中的其他外接。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AddInEnvironment">
          <source>The following example activates a second add-in within the same environment as the first add-in.</source>
          <target state="translated">下面的示例的第二个外接程序的第一个外接程序的相同环境中激活。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.AddIn.Hosting.AddInController.AppDomain">
          <source>Gets the application domain that contains an add-in.</source>
          <target state="translated">获取包含外接程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AppDomain">
          <source>The application domain of the add-in.</source>
          <target state="translated">外接程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AppDomain">
          <source>Use this property to obtain an add-in's <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> object and to activate other add-ins in the same application domain.</source>
          <target state="translated">此属性用于获取外接程序的<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>对象并激活相同的应用程序域中其他外接程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.AppDomain">
          <source>The following example activates a second add-in in the same application domain as the first add-in.</source>
          <target state="translated">下面的示例的第二个外接程序中与第一个外接程序相同的应用程序域激活。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)">
          <source>The host view of the add-in.</source>
          <target state="translated">外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)">
          <source>Obtains the controller for an add-in.</source>
          <target state="translated">获取外接程序的控制器。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)">
          <source>The controller for the add-in.</source>
          <target state="translated">外接程序的控制器。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> methods return an object that represents the host's view of the add-in.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph>方法返回一个对象，表示的外接程序的主机的视图。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>Disables an add-in.</source>
          <target state="translated">禁用外接程序。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>This method breaks the communication pipeline between an add-in and its host.</source>
          <target state="translated">此方法将中断外接程序与其主机之间的通信管道。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>If the add-in was activated in an automatically generated application domain by using the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29&gt;</ph> methods, the <ph id="ph3">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method also unloads the application domain.</source>
          <target state="translated">如果外接程序已激活，自动生成的应用程序域中使用<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt;</ph>或<ph id="ph2">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29&gt;</ph>方法，<ph id="ph3">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph>方法也将卸载应用程序域。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>If the add-in was loaded into its own application domain, the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method also unloads the application domain.</source>
          <target state="translated">如果外接程序加载到其自己的应用程序域，<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph>方法也将卸载应用程序域。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.</source>
          <target state="translated">如果外接程序加载到现有的应用程序域，主机和管道段将不再具有对该外接程序的任何引用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>In this case, the add-in will be eligible to be reclaimed by garbage collection.</source>
          <target state="translated">在这种情况下外, 接程序将有资格通过垃圾回收来回收。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>You can also use this class to shut down an add-in that is activated in an external process.</source>
          <target state="translated">此类还可用于关闭的情况下在外部进程激活的外接程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Hosting.AddInController.Shutdown">
          <source>The following example obtains the <ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph> object for a host view named <ph id="ph2">`manager`</ph> and then shuts down the add-in.</source>
          <target state="translated">下面的示例获取<ph id="ph1">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph>名为主机视图的对象<ph id="ph2">`manager`</ph>，然后关闭外接程序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.AddIn.Hosting.AddInController.Token">
          <source>Gets the token that represents the add-in.</source>
          <target state="translated">获取表示外接程序的标记。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.Token">
          <source>An object that represents the add-in.</source>
          <target state="translated">一个表示外接程序的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Hosting.AddInController.Token">
          <source>Typically, you use this property to obtain a token to activate an add-in at a later time.</source>
          <target state="translated">通常情况下，你可以使用此属性来获取用于在更高版本时激活外接程序的令牌。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>