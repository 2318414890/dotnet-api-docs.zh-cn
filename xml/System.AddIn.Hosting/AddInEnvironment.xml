<Type Name="AddInEnvironment" FullName="System.AddIn.Hosting.AddInEnvironment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3d1ece8081e47d1fa4d23ecf7a985941c450347" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AddInEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInEnvironment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInEnvironment" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInEnvironment sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8fcdb-101">提供外接程序的应用程序域和进程的访问权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fcdb-101">Provides access to the application domain and process of an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcdb-102">此类用于将外接程序加载到所需的环境，可以是以下项之一：</span><span class="sxs-lookup"><span data-stu-id="8fcdb-102">Use this class to load add-ins into a desired environment, which can be one of the following:</span></span>  
  
-   <span data-ttu-id="8fcdb-103">现有应用程序域必须为其<xref:System.AppDomain>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-103">An existing application domain for which you have the <xref:System.AppDomain> object.</span></span>  
  
-   <span data-ttu-id="8fcdb-104">若要激活外接程序已自动生成应用程序域。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-104">An application domain that was automatically generated to activate an add-in.</span></span>  
  
-   <span data-ttu-id="8fcdb-105">现有的外部进程。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-105">An existing external process.</span></span>  
  
 <span data-ttu-id="8fcdb-106">若要获取<xref:System.AddIn.Hosting.AddInEnvironment>对象外接程序，请将传递外接程序的应用程序域到<xref:System.AddIn.Hosting.AddInEnvironment>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-106">To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor.</span></span> <span data-ttu-id="8fcdb-107">或者，可以使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性<xref:System.AddIn.Hosting.AddInController>类来获取外接程序的<xref:System.AddIn.Hosting.AddInEnvironment>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-107">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
 <span data-ttu-id="8fcdb-108">获取之后<xref:System.AddIn.Hosting.AddInEnvironment>对象，你可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="8fcdb-108">After you obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object, you can do the following:</span></span>  
  
-   <span data-ttu-id="8fcdb-109">传递<xref:System.AddIn.Hosting.AddInEnvironment>到相应的对象<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-109">Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.</span></span> <span data-ttu-id="8fcdb-110">外接程序将在中激活的应用程序域和进程，由表示<xref:System.AddIn.Hosting.AddInEnvironment>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-110">The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
-   <span data-ttu-id="8fcdb-111">使用<xref:System.AddIn.Hosting.AddInEnvironment.Process%2A>属性来获取<xref:System.AddIn.Hosting.AddInProcess>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-111">Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object.</span></span> <span data-ttu-id="8fcdb-112">然后将该对象传递给相应<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-112">Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.</span></span> <span data-ttu-id="8fcdb-113">外接程序将激活在由进程中<xref:System.AddIn.Hosting.AddInProcess>对象但新的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-113">The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInEnvironment (AppDomain appDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AppDomain appDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInEnvironment(AppDomain ^ appDomain);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appDomain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="appDomain">
          <span data-ttu-id="8fcdb-114">包含外接程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-114">The application domain that contains the add-in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fcdb-115">初始化 <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-115">Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcdb-116">如果可以访问包含你需要的外接程序的应用程序域，你可以使用此构造函数获取外接程序的<xref:System.AddIn.Hosting.AddInEnvironment>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-116">If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span> <span data-ttu-id="8fcdb-117">否则，你可以使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性<xref:System.AddIn.Hosting.AddInController>类来获取<xref:System.AddIn.Hosting.AddInEnvironment>对象。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-117">Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fcdb-118">
            <paramref name="appDomain" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-118">
              <paramref name="appDomain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8fcdb-119">需要完全信任权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-119">Full-trust permission is demanded.</span>
          </span>
          <span data-ttu-id="8fcdb-120">调用链中的调用方没有足够权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-120">A caller in the call chain does not have sufficient permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInProcess Process { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInProcess Process" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Process As AddInProcess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInProcess ^ Process { System::AddIn::Hosting::AddInProcess ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInProcess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fcdb-121">获取 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 对象，该对象表示在其中运行外接程序的进程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-121">Gets the <see cref="T:System.AddIn.Hosting.AddInProcess" /> object that represents the process in which the add-in is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fcdb-122">在其中运行外接程序的进程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fcdb-122">The process in which the add-in is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcdb-123">此属性可用于激活多个外接程序在同一进程中但在不同的域。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-123">You can use this property to activate multiple add-ins in the same process but in different domains.</span></span>  
  
 <span data-ttu-id="8fcdb-124">传递<xref:System.AddIn.Hosting.AddInProcess>获取与此属性设置为相应的对象<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-124">Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.</span></span>  
  
 <span data-ttu-id="8fcdb-125">如果你想要激活它们在相同域中外部进程应传递<xref:System.AddIn.Hosting.AddInEnvironment>对象直接<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=nameWithType>方法重载。</span><span class="sxs-lookup"><span data-stu-id="8fcdb-125">If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>