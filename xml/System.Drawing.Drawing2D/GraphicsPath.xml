<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48f97ffe482a3a50a56b3455b430e12b8f86a2b1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8d0fa-101">表示一系列相互连接的直线和曲线。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d0fa-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="8d0fa-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d0fa-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-103">应用程序使用路径来绘制形状的轮廓、 填充的形状，内部和创建剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="8d0fa-104">图形引擎维护世界坐标空间中的路径中的几何形状的坐标。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="8d0fa-105">路径可能组成的任意数量的图形 （子路径）。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="8d0fa-106">每个图或者组成一系列相互连接的直线和曲线或几何形状基元。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="8d0fa-107">图形的起点是序列中的连接的直线和曲线的第一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="8d0fa-108">结束点是在序列中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="8d0fa-109">由基元规范定义几何形状基元的起始和结束点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="8d0fa-110">一个图，它包含一系列相互连接的直线和曲线 （其开始和结束点可以是同一） 是开放的图形，除非它被显式关闭。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="8d0fa-111">可以通过使用显式地关闭图<xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A>方法，这会关闭当前图形通过连接一条从终结点到起始点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="8d0fa-112">包含几何形状基元图是闭合的图。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="8d0fa-113">用于填充和剪辑的目的 (例如，如果使用呈现路径<xref:System.Drawing.Graphics.FillPath%2A>)、 所有打开图通过将行从图中的第一个点添加到其终结点已关闭。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="8d0fa-114">创建路径时或图形已关闭隐式启动一个新图形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="8d0fa-115">一个新图形时显式创建<xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="8d0fa-116">几何形状基元添加到路径，它将添加图形包含几何形状，并还将隐式开始一个新图形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="8d0fa-117">因此，没有始终在当前图形路径中。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="8d0fa-118">时的直线和曲线将添加到路径中，根据需要连接到的新的直线和曲线以形成一系列相互连接的直线和曲线的起始点的当前图形的结束点被添加隐式行。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="8d0fa-119">图中描述直线和曲线的段的起点和终点之间的跟踪方式的方向。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="8d0fa-120">中的直线和曲线添加到图中，或定义的几何形状基元的顺序定义了方向。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="8d0fa-121">方向是在确定剪辑以及填充的路径内部使用。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-122">使用 <see langword="Alternate" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 枚举初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-123">用 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 值初始化 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="8d0fa-124">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它确定填充此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内部的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-125">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 枚举初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="8d0fa-126">
            <see cref="T:System.Drawing.Point" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="8d0fa-127">
            <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <c>pts</c> 数组中各相应点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-128">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组初始化 <see cref="T:System.Drawing.Point" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="8d0fa-129">
            <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="8d0fa-130">
            <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <c>pts</c> 数组中各相应点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-131">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组初始化 <see cref="T:System.Drawing.PointF" /> 数组的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="8d0fa-132">
            <see cref="T:System.Drawing.Point" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="8d0fa-133">
            <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <c>pts</c> 数组中各相应点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="8d0fa-134">一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-135">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组以及指定的 <see cref="T:System.Drawing.Point" /> 枚举元素初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="8d0fa-136">
            <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="8d0fa-137">
            <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <c>pts</c> 数组中各相应点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="8d0fa-138">一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-139">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组以及指定的 <see cref="T:System.Drawing.PointF" /> 枚举元素初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 数组的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-140">向当前图形追加一段椭圆弧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-140">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-141">一个 <see cref="T:System.Drawing.Rectangle" />，表示从中截取弧线的椭圆的矩形边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-142">弧线的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-143">
            <c>startAngle</c> 和弧线末尾之间的角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-143">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-144">向当前图形追加一段椭圆弧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-144">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-145">如果以前的行或在图中的曲线的行被添加上一个段的终结点连接到弧线的开头。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="8d0fa-146">圆弧轨迹沿着由指定矩形绑定的椭圆的周界。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="8d0fa-147">通过从 （0 度角） 椭圆的 x 轴沿顺时针方向度量的中的开始角度度数确定弧线的起始点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="8d0fa-148">通过从起始点沿顺时针方向度量的中的扫描角度度数位于同样到终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="8d0fa-149">如果大于 360 度或小于-360 度的扫描角度，是分别将弧线扫过完全 360 度或-360 度。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-150">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-151">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-152">创建一个矩形，从中定义圆弧。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="8d0fa-153">创建一个路径`myPath`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="8d0fa-154">定义 180 度椭圆弧扫过从 0 度到 180 度，并将其追加到的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-155">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-156">一个 <see cref="T:System.Drawing.RectangleF" />，表示从中截取弧线的椭圆的矩形边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-157">弧线的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-158">
            <c>startAngle</c> 和弧线末尾之间的角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-158">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-159">向当前图形追加一段椭圆弧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-159">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-160">如果以前的行或在图中的曲线的行被添加上一个段的终结点连接到弧线的开头。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="8d0fa-161">圆弧轨迹沿着由指定矩形绑定的椭圆的周界。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="8d0fa-162">通过从 （0 度角） 椭圆的 x 轴沿顺时针方向度量的中的开始角度度数确定弧线的起始点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="8d0fa-163">通过从起始点沿顺时针方向度量的中的扫描角度度数位于同样到终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="8d0fa-164">如果大于 360 度或小于-360 度的扫描角度，是分别将弧线扫过完全 360 度或-360 度。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-165">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-166">矩形区域左上角的 X 坐标，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-167">矩形区域左上角的 Y 坐标，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-168">矩形区域的宽度，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-169">矩形区域的高度，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-170">弧线的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-171">
            <c>startAngle</c> 和弧线末尾之间的角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-171">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-172">向当前图形追加一段椭圆弧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-172">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-173">如果以前的行或在图中的曲线的行被添加上一个段的终结点连接到弧线的开头。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="8d0fa-174">圆弧轨迹沿着由指定矩形绑定的椭圆的周界。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="8d0fa-175">通过从 （0 度角） 椭圆的 x 轴沿顺时针方向度量的中的开始角度度数确定弧线的起始点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="8d0fa-176">通过从起始点沿顺时针方向度量的中的扫描角度度数位于同样到终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="8d0fa-177">如果大于 360 度或小于-360 度的扫描角度，是分别将弧线扫过完全 360 度或-360 度。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-178">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-179">矩形区域左上角的 X 坐标，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-180">矩形区域左上角的 Y 坐标，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-181">矩形区域的宽度，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-182">矩形区域的高度，该区域定义将要从中绘制弧线的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-183">弧线的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-184">
            <c>startAngle</c> 和弧线末尾之间的角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-184">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-185">向当前图形追加一段椭圆弧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-185">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-186">如果以前的行或在图中的曲线的行被添加上一个段的终结点连接到弧线的开头。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="8d0fa-187">圆弧轨迹沿着由指定矩形绑定的椭圆的周界。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="8d0fa-188">通过从 （0 度角） 椭圆的 x 轴沿顺时针方向度量的中的开始角度度数确定弧线的起始点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="8d0fa-189">通过从起始点沿顺时针方向度量的中的扫描角度度数位于同样到终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="8d0fa-190">如果大于 360 度或小于-360 度的扫描角度，是分别将弧线扫过完全 360 度或-360 度。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-191">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-192">在当前图形中添加一段立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-192">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="8d0fa-193">表示曲线起始点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="8d0fa-194">表示曲线第一个控制点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="8d0fa-195">表示曲线第二个控制点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="8d0fa-196">表示曲线终结点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-197">在当前图形中添加一段立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-197">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-198">三次曲线控制点为使用第二个和第三个点构造从第一个点到第四个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="8d0fa-199">如果没有上一个行或在图中的曲线段，添加一条线连接到三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-200">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="8d0fa-201">表示曲线起始点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="8d0fa-202">表示曲线第一个控制点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="8d0fa-203">表示曲线第二个控制点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="8d0fa-204">表示曲线终结点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-205">在当前图形中添加一段立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-205">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-206">三次曲线控制点为使用第二个和第三个点构造从第一个点到第四个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="8d0fa-207">如果没有上一个行或在图中的曲线段，添加一条线连接到三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-208">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="8d0fa-209">曲线起始点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-209">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="8d0fa-210">曲线起始点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-210">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="8d0fa-211">曲线第一个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-211">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="8d0fa-212">曲线第一个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-212">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="8d0fa-213">曲线第二个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-213">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="8d0fa-214">曲线第二个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-214">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="8d0fa-215">曲线终结点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-215">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="8d0fa-216">曲线终结点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-216">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-217">在当前图形中添加一段立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-217">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-218">三次曲线控制点为使用第二个和第三个点构造从第一个点到第四个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="8d0fa-219">如果没有上一个行或在图中的曲线段，添加一条线连接到三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-220">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-221">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-222">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-223">添加由点 （50，50），定义一条三次方贝塞尔曲线 （70，0），（100，120） 和 （150，50） 的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-224">闭合曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="8d0fa-225">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="8d0fa-226">曲线起始点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-226">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="8d0fa-227">曲线起始点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-227">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="8d0fa-228">曲线第一个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-228">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="8d0fa-229">曲线第一个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-229">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="8d0fa-230">曲线第二个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-230">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="8d0fa-231">曲线第二个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-231">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="8d0fa-232">曲线终结点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-232">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="8d0fa-233">曲线终结点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-233">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-234">在当前图形中添加一段立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-234">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-235">三次曲线控制点为使用第二个和第三个点构造从第一个点到第四个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="8d0fa-236">如果没有上一个行或在图中的曲线段，添加一条线连接到三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-237">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-238">在当前图形中添加一系列相互连接的立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-239">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-240">在当前图形中添加一系列相互连接的立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-241">`points`参数指定终结点的数组和已连接的曲线的控制点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="8d0fa-242">第一条曲线的第一个点从构造中的第四个点`points`作为管理点使用的第二个和第三个点的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="8d0fa-243">除了前一条曲线的终结点，在序列中的每个后续曲线需要完全三个点： 序列中的接下来两个点是控点和第三个是添加曲线的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="8d0fa-244">如果以前的行或在图中的曲线，添加一条线连接到序列中第一个三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-245">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-246">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-247">创建七个点 （表示两个已连接的贝塞尔曲线） 的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="8d0fa-248">创建一个路径，并将贝塞尔曲线点的一系列添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-249">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-250">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-251">在当前图形中添加一系列相互连接的立方贝塞尔曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-252">`points`参数指定终结点的数组和已连接的曲线的控制点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="8d0fa-253">第一条曲线的第一个点从构造中的第四个点`points`作为管理点使用的第二个和第三个点的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="8d0fa-254">除了前一条曲线的终结点，在序列中的每个后续曲线需要完全三个点： 序列中的接下来两个点是控点和第三个是添加曲线的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="8d0fa-255">如果以前的行或在图中的曲线，添加一条线连接到序列中第一个三次曲线的起始点的上一个段的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-256">有关示例，请参阅：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-257">向此路径添加一个闭合曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-257">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="8d0fa-258">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-259">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-260">向此路径添加一个闭合曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-260">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="8d0fa-261">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-262">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-263">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="8d0fa-264">如果第一个点和中的最后一个点`points`数组不是相同的点，通过连接这两个点来闭合曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="8d0fa-265">张力值不能设置为此方法，默认值为等效于 0.5 的值。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-266">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-267">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-268">向此路径添加一个闭合曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-268">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="8d0fa-269">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-270">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-271">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="8d0fa-272">如果第一个点和中的最后一个点`points`数组不是相同的点，通过连接这两个点来闭合曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="8d0fa-273">张力值不能设置为此方法，默认值为等效于 0.5 的值。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-274">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-275">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-276">介于 0 到 1 之间的一个值，它指定曲线在点与点之间弯曲的程度，0 表示最小弯曲（最锐拐角），1 表示最平滑弯曲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-277">向此路径添加一个闭合曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-277">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="8d0fa-278">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-279">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-280">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="8d0fa-281">如果第一个点和中的最后一个点`points`数组不是相同的点，通过连接这两个点来闭合曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-282">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-283">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-284">创建六个点 （表示基数样条） 的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="8d0fa-285">创建一个路径，并将闭合基数样条曲线添加到 （关闭从终结点到起始点） 的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="8d0fa-286">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="8d0fa-287">请注意，使用 0.5 的张力。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-288">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-289">介于 0 到 1 之间的一个值，它指定曲线在点与点之间弯曲的程度，0 表示最小弯曲（最锐拐角），1 表示最平滑弯曲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-290">向此路径添加一个闭合曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-290">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="8d0fa-291">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-292">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-293">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="8d0fa-294">如果第一个点和中的最后一个点`points`数组不是相同的点，通过连接这两个点来闭合曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-295">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-296">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-296">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="8d0fa-297">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-298">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-299">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-299">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="8d0fa-300">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-301">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-302">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-303">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-304">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-305">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-305">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="8d0fa-306">由于曲线经过数组中的每个点，因此使用基数样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-307">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-308">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-309">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-310">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-311">指定曲线在控制点间弯曲程度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-311">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="8d0fa-312">大于 1 的值将产生不可预知的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-312">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-313">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-313">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-314">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-315">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-316">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-317">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-318">指定曲线在控制点间弯曲程度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-318">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="8d0fa-319">大于 1 的值将产生不可预知的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-319">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-320">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-320">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-321">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-322">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-323">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-324">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8d0fa-325">
            <c>points</c> 数组中某元素的索引，该元素将用作曲线的第一个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="8d0fa-326">指定曲线在控制点间弯曲程度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-326">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="8d0fa-327">大于 1 的值将产生不可预知的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-327">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-328">指定曲线在控制点间弯曲程度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-328">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="8d0fa-329">大于 1 的值将产生不可预知的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-329">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-330">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-330">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-331">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-332">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="8d0fa-333">指定的数组中的点开始曲线`offset`参数并包含指定的点 （段） 数`numberOfSegments`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-334">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-335">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-336">创建四个点 （表示基数样条） 的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="8d0fa-337">创建一个路径，并使用点的数组，向该路径添加曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-338">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-339">请注意，尽管数组具有四个点，只有三个段，这是对的调用的第三个参数中指定的数字<xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-340">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8d0fa-341">
            <c>points</c> 数组中某元素的索引，该元素将用作曲线的第一个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="8d0fa-342">用于绘制曲线的线段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-342">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="8d0fa-343">线段可被视为连接两点的直线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-343">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="8d0fa-344">指定曲线在控制点间弯曲程度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-344">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="8d0fa-345">大于 1 的值将产生不可预知的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-345">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-346">向当前图形添加一段样条曲线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-346">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-347">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-348">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="8d0fa-349">指定的数组中的点开始曲线`offset`，并包含指定的点 （段） 数`numberOfSegments`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-350">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-351">向当前路径添加一个椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-351">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-352">一个 <see cref="T:System.Drawing.Rectangle" />，表示定义椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-353">向当前路径添加一个椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-353">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-354">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-355">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="8d0fa-356">创建定义椭圆的边框。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="8d0fa-357">创建一个路径，并向该路径添加椭圆。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="8d0fa-358">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-359">一个 <see cref="T:System.Drawing.RectangleF" />，表示定义椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-360">向当前路径添加一个椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-360">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-361">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-362">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-363">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-364">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-364">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-365">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-365">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-366">向当前路径添加一个椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-366">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-367">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-368">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-369">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-370">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-370">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-371">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-371">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-372">向当前路径添加一个椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-372">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-373">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-374">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="8d0fa-375">表示直线起始点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="8d0fa-376">表示直线终结点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-377">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-378">此方法将添加指定的指向此实例的末尾所定义的线段<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="8d0fa-379">如果存在以前的行或中的曲线<xref:System.Drawing.Drawing2D.GraphicsPath>，绘制一条线段以连接到新的直线线段的第一个点的路径中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-380">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="8d0fa-381">表示直线起始点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="8d0fa-382">表示直线终结点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-383">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-384">此方法将添加指定的指向此实例的末尾所定义的线段<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="8d0fa-385">如果存在以前的行或中的曲线<xref:System.Drawing.Drawing2D.GraphicsPath>，绘制一条线段以连接到新的直线线段的第一个点的路径中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-386">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="8d0fa-387">直线起始点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-387">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="8d0fa-388">直线起始点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-388">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="8d0fa-389">直线终结点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-389">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="8d0fa-390">直线终结点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-390">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-391">向当前图形追加一条线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-391">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-392">此方法将添加指定的点到当前图末尾所定义的线段。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="8d0fa-393">如果存在以前的行或中的曲线<xref:System.Drawing.Drawing2D.GraphicsPath>，绘制一条线段以连接到新的直线线段的第一个点的路径中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-394">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-395">该代码创建一个路径，添加形成一个三角形的三行，然后在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="8d0fa-396">直线起始点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-396">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="8d0fa-397">直线起始点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-397">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="8d0fa-398">直线终结点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-398">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="8d0fa-399">直线终结点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-399">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-400">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-401">此方法将添加指定的指向此实例的末尾所定义的线段<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="8d0fa-402">如果存在以前的行或中的曲线<xref:System.Drawing.Drawing2D.GraphicsPath>，绘制一条线段以连接到新的直线线段的第一个点的路径中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-403">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-404">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 末尾追加一系列相互连接的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-405">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义要添加的线段的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-406">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 末尾追加一系列相互连接的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-407">如果以前的行或在图中的曲线，添加一条线连接的上一段直线起始点的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="8d0fa-408">`points`参数指定终结点的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="8d0fa-409">前两个指定的第一个行。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-409">The first two specify the first line.</span></span> <span data-ttu-id="8d0fa-410">每个其他点指定的起始点是前一行的终结点的线段的端点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-411">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-412">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-413">创建一个描述一个三角形的四个点的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="8d0fa-414">创建一个路径，并将添加的行的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="8d0fa-415">向屏幕中绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="8d0fa-416">请注意，每行后的第一个点作为终结点作为起始点和新点使用以前的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-417">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义要添加的线段的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-418">向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 末尾追加一系列相互连接的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-419">如果以前的行或在图中的曲线，添加一条线连接的上一段直线起始点的终结点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="8d0fa-420">`points`参数指定终结点的数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="8d0fa-421">前两个指定的第一个行。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-421">The first two specify the first line.</span></span> <span data-ttu-id="8d0fa-422">每个其他点指定的起始点是前一行的终结点的线段的端点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-423">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="8d0fa-424">要相加的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="8d0fa-425">一个布尔值，它指定添加的路径中的第一个图形是否是该路径中最后一个图形的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="8d0fa-426">
            <see langword="true" /> 的值指定（如果可能）添加的路径中的第一个图形是该路径中最后一个图形的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="8d0fa-427">
            <see langword="false" /> 的值指定添加的路径中的第一个图形与该路径中最后一个图形不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-428">将指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加到该路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-429">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-430">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-431">将创建两个路径一个右端向上三角形和另一个向上端向下三角形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="8d0fa-432">将第二个路径添加到第一个。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="8d0fa-433">在屏幕上绘制产生的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-434">向此路径添加一个扇形轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-434">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-435">一个 <see cref="T:System.Drawing.Rectangle" />，表示定义要从其绘制扇形的椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-436">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-437">
            <c>startAngle</c> 与扇形区末尾之间的角度，以度为单位从 <c>startAngle</c> 顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-438">向此路径添加一个扇形轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-438">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-439">扇形的椭圆和两条射线相交的部分轮廓的终结点的部分轮廓由定义。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="8d0fa-440">处开头部分的轮廓`startAngle`（从 x 轴顺时针测量），结尾处`startAngle`  +  `sweepAngle`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-441">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-442">边框左上角的 X 坐标，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-443">边框左上角的 Y 坐标，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-444">边框的宽度，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-445">边框的高度，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-446">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-447">
            <c>startAngle</c> 与扇形区末尾之间的角度，以度为单位从 <c>startAngle</c> 顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-448">向此路径添加一个扇形轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-448">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-449">扇形的椭圆和两条射线相交的部分轮廓的终结点的部分轮廓由定义。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="8d0fa-450">处开头部分的轮廓`startAngle`（从 x 轴顺时针测量），结尾处`startAngle`  +  `sweepAngle`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-451">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-452">该代码创建一个图形路径、 添加扇形，，然后在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-453">边框左上角的 X 坐标，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-454">边框左上角的 Y 坐标，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="8d0fa-455">边框的宽度，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="8d0fa-456">边框的高度，该边框定义将要从中绘制扇形的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="8d0fa-457">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="8d0fa-458">
            <c>startAngle</c> 与扇形区末尾之间的角度，以度为单位从 <c>startAngle</c> 顺时针测量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-459">向此路径添加一个扇形轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-459">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-460">扇形的椭圆和两条射线相交的部分轮廓的终结点的部分轮廓由定义。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="8d0fa-461">处开头部分的轮廓`startAngle`（从 x 轴顺时针测量），结尾处`startAngle`  +  `sweepAngle`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-462">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-463">向此路径添加多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-463">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-464">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它定义要添加的多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-465">向此路径添加多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-465">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-466">中的点`points`数组指定的多边形的顶点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="8d0fa-467">如果数组中的第一个点不是最后一个点相同，将连接这两个点来闭合该多边形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-468">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-469">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-470">创建定义多边形的点数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="8d0fa-471">创建一个路径，并向该路径添加多边形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-472">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="8d0fa-473">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义要添加的多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-474">向此路径添加多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-474">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-475">中的点`points`数组指定的多边形的顶点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="8d0fa-476">如果数组中的第一个点不是最后一个点相同，将连接这两个点来闭合该多边形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-477">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-478">向此路径添加一个矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-478">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-479">表示要添加的矩形的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-480">向此路径添加一个矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-480">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-481">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-482">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-483">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-484">创建一个矩形并将该矩形添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-485">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="8d0fa-486">表示要添加的矩形的 <see cref="T:System.Drawing.RectangleF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-487">向此路径添加一个矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-487">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-488">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-489">向此路径添加一系列矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-489">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="8d0fa-490">一个 <see cref="T:System.Drawing.Rectangle" /> 结构的数组，它表示要添加的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-491">向此路径添加一系列矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-491">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-492">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-493">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-494">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-495">创建的矩形的数组，并向该路径添加矩形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-496">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="8d0fa-497">一个 <see cref="T:System.Drawing.RectangleF" /> 结构的数组，它表示要添加的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-498">向此路径添加一系列矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-498">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-499">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-500">向此路径添加文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-500">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="8d0fa-501">要相加的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-501">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8d0fa-502">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="8d0fa-503">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="8d0fa-504">它必须为整数（请参见本节后面的代码示例）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-504">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="8d0fa-505">限定字符的 Em（字体大小）方框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-505">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="8d0fa-506">一个 <see cref="T:System.Drawing.Point" />，它表示文本从其起始的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="8d0fa-507">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-508">向此路径添加文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-508">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-509">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-510">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-511">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-512">设置字符串和字体自变量。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="8d0fa-513">将字符串添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-514">在屏幕上绘制的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-515">有两个需要前面所指出的重要事项。首先，请注意，`fontStyle`参数转换为整数。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="8d0fa-516"><xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A>这样的两个或多个方法都将需要这<xref:System.Drawing.FontStyle>成员可以组合起来，以创建所需的字体样式 (在这种情况下，<xref:System.Drawing.FontStyle.Italic>和<xref:System.Drawing.FontStyle.Underline>)。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="8d0fa-517">其次，注意<xref:System.Drawing.Graphics.FillPath%2A>使用方法而不是<xref:System.Drawing.Graphics.DrawPath%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="8d0fa-518">如果<xref:System.Drawing.Graphics.FillPath%2A>使用时，呈现实心文字，而如果<xref:System.Drawing.Graphics.DrawPath%2A>是使用，该文本则为轮廓样式。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="8d0fa-519">要相加的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-519">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8d0fa-520">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="8d0fa-521">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="8d0fa-522">它必须为整数（请参见本节后面的代码示例）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-522">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="8d0fa-523">限定字符的 Em（字体大小）方框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-523">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="8d0fa-524">一个 <see cref="T:System.Drawing.PointF" />，它表示文本从其起始的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="8d0fa-525">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-526">向此路径添加文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-526">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-527">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="8d0fa-528">要相加的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-528">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8d0fa-529">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="8d0fa-530">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="8d0fa-531">它必须为整数（请参见本节后面的代码示例）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-531">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="8d0fa-532">限定字符的 Em（字体大小）方框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-532">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="8d0fa-533">表示限定文本的矩形的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="8d0fa-534">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-535">向此路径添加文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-535">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-536">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="8d0fa-537">要相加的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-537">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8d0fa-538">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="8d0fa-539">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="8d0fa-540">它必须为整数（请参见本节后面的代码示例）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-540">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="8d0fa-541">限定字符的 Em（字体大小）方框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-541">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="8d0fa-542">表示限定文本的矩形的 <see cref="T:System.Drawing.RectangleF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="8d0fa-543">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-544">向此路径添加文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-544">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-545">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-546">清除此路径的所有标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-546">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-547">使用<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>方法中的当前位置处创建一个标记<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="8d0fa-548">使用<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>方法来循环访问路径中的现有标记。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="8d0fa-549">标记用于分隔的子路径的组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="8d0fa-550">一个或多个子路径可以包含两个标记之间。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-551">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-552">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-553">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-554">将多个对象添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-555">将标记添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-556">清除路径中的所有标记。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-557">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-558">创建此路径的一个精确副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-558">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-559">该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-560">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-561">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-562">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-563">向路径添加几个图形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-564">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-565">克隆一份该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="8d0fa-566">在屏幕上绘制新的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-567">请注意，在调用<xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A>方法必须强制转换为<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-568">闭合此路径中所有开放的图形并开始一个新图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-568">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="8d0fa-569">它通过连接一条从图形的终结点到起始点的直线，闭合每一开放的图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-570">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-571">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-572">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-573">向路径添加几个开放图形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-574">关闭所有图形路径中。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-575">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-576">闭合当前图形并开始新的图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-576">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="8d0fa-577">如果当前图形包含一系列相互连接的直线和曲线，该方法通过连接一条从终结点到起始点的直线，闭合该环回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-578">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-579">该代码创建一个三角形： 创建一个新的路径，指定图形的起点，将两个相交行添加到图中，然后关闭该图形以形成一个三角形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="8d0fa-580">然后在屏幕上绘制的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-581">释放由 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-582">调用<xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A>允许使用的资源<xref:System.Drawing.Drawing2D.GraphicsPath>重新分配用于其他目的。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-583">获取或设置一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，确定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d0fa-584">一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-585">允许对象在“垃圾回收”回收之前尝试释放资源并执行其他清理操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-586">将此路径中的各段曲线转换成相连的线段序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-586">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-587">将此路径中的各段曲线转换成相连的线段序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-588">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="8d0fa-589">用来在展平前对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-590">应用指定的变换，然后将此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的各段曲线转换成相连的线段的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-591">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="8d0fa-592">用来在展平前对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="8d0fa-593">指定曲线和其展平的近似直线之间的最大允许误差。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="8d0fa-594">值 0.25 是默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-594">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="8d0fa-595">降低该展平值将增加近似直线中线段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-595">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-596">将此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的各段曲线转换成相连的线段序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-597">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-598">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-599">创建图形路径和平移矩阵。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="8d0fa-600">向使用四个点的路径添加曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="8d0fa-601">将路径 （曲线） 绘制到屏幕上，使用黑色的笔。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="8d0fa-602">将该曲线下移 10 个像素并将它。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="8d0fa-603">使用红色笔在屏幕上绘制曲线。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="8d0fa-604">请注意，红色曲线具有平展连接点的行。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-605">返回限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-606">返回限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-607">一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-608">返回边框的大小会影响端帽、 笔的宽度和笔斜联接限制的类型，并因此生成"松配合"于被限定路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="8d0fa-609">近似公式是： 初始边框放大通过笔的宽度，并且此结果乘以斜角限制，加上一些额外边距以容纳端帽。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-610">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-611">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-612">创建图形路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="8d0fa-613">向其添加一个椭圆 （圆圈） 并将其绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-614">检索调用带圆圈的边界矩形<xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A>并将该矩形绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-615">创建第二个图形路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="8d0fa-616">添加一个圆形和扩大的宽度为 10 的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="8d0fa-617">在屏幕上绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-618">检索第二个圆圈的边界矩形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="8d0fa-619">在屏幕上绘制的边框。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-620">在对话框中显示的矩形大小。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="8d0fa-621">请注意，在右侧的边界矩形 （到行的附加宽度的帐户） 更大。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="8d0fa-622">
            <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在计算边框前要应用于此路径的变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="8d0fa-623">此路径并非被永久变换；仅在计算边框的进程中使用变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-624">返回当由指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对该路径进行变换时，限定此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-625">一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-626">返回边框的大小会影响端帽、 笔的宽度和笔斜联接限制的类型，并因此生成"松配合"于被限定路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="8d0fa-627">近似公式是： 初始边框放大通过笔的宽度，并且此结果乘以斜角限制，加上一些额外边距以容纳端帽。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-628">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="8d0fa-629">
            <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在计算边框前要应用于此路径的变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="8d0fa-630">此路径并非被永久变换；仅在计算边框的进程中使用变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-631">
            <see cref="T:System.Drawing.Pen" />，用于绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-632">返回当由指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对当前路径进行变换并且用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 绘制该路径时，限定此 <see cref="T:System.Drawing.Pen" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-633">一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-634">返回边框的大小会影响端帽、 笔的宽度和笔斜联接限制的类型，并因此生成"松配合"于被限定路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="8d0fa-635">近似公式是： 初始边框放大通过笔的宽度，并且此结果乘以斜角限制，加上一些额外边距以容纳端帽。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-636">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-637">获取此 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 数组中的最后的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-638">一个 <see cref="T:System.Drawing.PointF" />，表示此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的最后的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-639">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-640">代码创建一个路径，将行添加到路径，然后获取路径中最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-641">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="8d0fa-642">指定测试位置的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-643">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-643">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-644">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-645">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-646">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-647">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="8d0fa-648">指定测试位置的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-649">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-649">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-650">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-651">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-652">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-653">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="8d0fa-654">指定测试位置的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-655">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-655">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-656">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-657">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Graphics" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-658">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者轮廓内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-659">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="8d0fa-660">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-661">转换矩阵的`graphics`在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-662">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="8d0fa-663">指定测试位置的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-664">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-664">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-665">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-666">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Graphics" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-667">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内（下），则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-668">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="8d0fa-669">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-670">转换矩阵的`graphics`在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-671">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-672">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-672">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-673">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-673">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-674">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-674">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-675">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-676">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-677">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-678">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-679">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-679">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-680">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-680">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-681">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-681">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-682">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-683">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-684">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-685">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-686">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-686">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-687">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-687">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-688">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-688">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-689">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-690">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Graphics" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-691">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者轮廓内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-692">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="8d0fa-693">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-694">转换矩阵的`graphics`在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-695">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="8d0fa-696">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-697">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-698">向路径添加一个矩形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-699">创建一个宽钢笔和使用 （以便更清晰的示例） 的笔，加宽路径</span><span class="sxs-lookup"><span data-stu-id="8d0fa-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="8d0fa-700">测试点 （100，50） 以查看它是否位于内 （下） 是一个矩形的边缘通过调用<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="8d0fa-701">（在这种情况下，true），结果显示在消息框中。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="8d0fa-702">换而言之边缘呈现该点上。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-703">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-703">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-704">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-704">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="8d0fa-705">要测试的 <see cref="T:System.Drawing.Pen" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-705">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-706">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-707">指示当使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Graphics" /> 时，指定点是否包含在后者的轮廓内（下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-708">如果使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制此 <see cref="T:System.Drawing.Pen" /> 时，指定点包含在后者的轮廓内（下），则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-709">此方法测试以查看是否给定路径的轮廓的呈现可见指定点处。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="8d0fa-710">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-711">转换矩阵的`graphics`参数在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-712">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-713">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="8d0fa-714">表示测试点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-715">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-716">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-717">有关示例，请参见`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="8d0fa-718">表示测试点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-719">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-720">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-721">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="8d0fa-722">表示测试点的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-723">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-724">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-725">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-726">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-727">转换矩阵的`graphics`参数在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-728">有关示例，请参见`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="8d0fa-729">表示测试点的 <see cref="T:System.Drawing.PointF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-730">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-731">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-732">如果指定点包含在此对象内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-733">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-734">转换矩阵的`graphics`参数在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-735">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-736">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-736">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-737">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-737">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-738">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-739">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-740">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-741">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-741">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-742">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-742">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-743">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-744">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-745">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-746">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-746">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-747">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-747">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-748">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-749">使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，指示指定点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-750">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-751">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-752">转换矩阵的`graphics`在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-753">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-754">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-755">创建一个路径，并向该路径添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-756">测试是否指定的点包含在该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-757">在对话框中显示的结果。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d0fa-758">测试点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-758">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d0fa-759">测试点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-759">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="8d0fa-760">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-761">指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，它位于指定的 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d0fa-762">如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-763">世界坐标给出了点的坐标，以进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="8d0fa-764">转换矩阵的`graphics`参数在临时应用之前测试可见性。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-765">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-766">获取一个 <see cref="T:System.Drawing.Drawing2D.PathData" />，它封装此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点（<paramref name="points" />）和类型（<paramref name="types" />）的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d0fa-767">一个 <see cref="T:System.Drawing.Drawing2D.PathData" />，封装此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点和类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-768">获取路径中的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-768">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d0fa-769">表示路径的 <see cref="T:System.Drawing.PointF" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-770">获取 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 数组中相应点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d0fa-771">指定路径中相应点的类型的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-771">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-772">返回由字节数组<xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A>属性路径中指定点类型和数据点的标志。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="8d0fa-773">对于每个点，位 0 到 2 指示一个点的类型和 3 到 7 位保留一组指定的点的属性的标志。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="8d0fa-774">下表显示了可能的值以及它们的含义。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="8d0fa-775">值</span><span class="sxs-lookup"><span data-stu-id="8d0fa-775">Value</span></span>|<span data-ttu-id="8d0fa-776">含义</span><span class="sxs-lookup"><span data-stu-id="8d0fa-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="8d0fa-777">0</span><span class="sxs-lookup"><span data-stu-id="8d0fa-777">0</span></span>|<span data-ttu-id="8d0fa-778">指示该点是图形的开头。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="8d0fa-779">1</span><span class="sxs-lookup"><span data-stu-id="8d0fa-779">1</span></span>|<span data-ttu-id="8d0fa-780">指示该点是一条线的两个终结点之一。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="8d0fa-781">3</span><span class="sxs-lookup"><span data-stu-id="8d0fa-781">3</span></span>|<span data-ttu-id="8d0fa-782">指示该点的三次方贝塞尔样条的终结点或管理点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="8d0fa-783">0x7</span><span class="sxs-lookup"><span data-stu-id="8d0fa-783">0x7</span></span>|<span data-ttu-id="8d0fa-784">屏蔽指示的 point 类型的三个低顺序位之外的所有位。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="8d0fa-785">0x20</span><span class="sxs-lookup"><span data-stu-id="8d0fa-785">0x20</span></span>|<span data-ttu-id="8d0fa-786">指定点是一个标记。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="8d0fa-787">0x80</span><span class="sxs-lookup"><span data-stu-id="8d0fa-787">0x80</span></span>|<span data-ttu-id="8d0fa-788">指定点已关闭的子路径 （图） 中的最后一个点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-789">获取 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d0fa-790">一个整数，它指定 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-791">清空 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组并将 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 设置为 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-792">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-793">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-794">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-795">将多个基元添加到它。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="8d0fa-796">将路径的点数组绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-797">将路径重置为一个空状态。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="8d0fa-798">重新获取该 points 数组 （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="8d0fa-799">将数组绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-800">请注意它找到重置调用之后没有数组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-801">反转此 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 数组中各点的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-802">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-803">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-804">创建一个路径，并将几个基元添加到路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-805">将路径的点数组绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-806">将反转后的点数组绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-807">请注意，从第一个点的第二个列表是按相反的顺序。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-808">在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 上设置标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-809">此方法可用于单独的部分路径的路径上创建一个标记。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="8d0fa-810">然后，可以使用<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>方法来循环访问路径中的标记。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="8d0fa-811">标记用于分隔的子路径的组。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="8d0fa-812">可以在路径中的两个标记之间包含一个或多个子路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-813">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-814">该代码创建一个路径和将几个基元添加到由标记分隔的路径并绘制到屏幕的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-815">不闭合当前图形即开始一个新图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-815">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="8d0fa-816">后面添加到该路径的所有点都被添加到此新图形中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-816">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-817">如果需要则用户必须保留原始的点。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="8d0fa-818">原始点可以转换为三次方贝塞尔曲线的控制点在内部，因此没有用于返回原始点机制。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="8d0fa-819">此方法启动新的子路径的路径中。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="8d0fa-820">子路径使您可以将一个路径部分，并使用<xref:System.Drawing.Drawing2D.GraphicsPathIterator>类循环访问子路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-821">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-822">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-823">创建一个路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="8d0fa-824">将添加两个集的数字。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-824">Adds two sets of figures.</span></span> <span data-ttu-id="8d0fa-825">第一组数字将合并到的两个图形的四个基元。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="8d0fa-826">第二组数字将合并相同的四个基元 （不过，它们在 y 轴偏移量） 到三个数字。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="8d0fa-827">将所有图形都绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-828">请注意，两个数字组之间出现差异。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="8d0fa-829">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，表示要应用的变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-830">将变换矩阵应用到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-831">转换可以缩放、 转换、 旋转或倾斜<xref:System.Drawing.Drawing2D.GraphicsPath>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-832">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-833">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-834">创建一个路径，并向该路径添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-835">在屏幕上绘制路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="8d0fa-836">创建一个转换矩阵来转换路径 100 个单位 x 轴方向。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="8d0fa-837">在屏幕上绘制的已转换的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="8d0fa-838">请注意，已转换的椭圆绘制红色，原始椭圆绘制黑色。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-839">对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="8d0fa-840">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组定义由 <c>srcRect</c> 定义的矩形将变换为的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="8d0fa-841">该数组可以包含三个或四个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-841">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="8d0fa-842">如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="8d0fa-843">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <c>destPoints</c> 定义的平行四边形的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-844">对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-845">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="8d0fa-846">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组定义由 <c>srcRect</c> 定义的矩形将变换为的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="8d0fa-847">该数组可以包含三个或四个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-847">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="8d0fa-848">如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="8d0fa-849">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <c>destPoints</c> 定义的平行四边形的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="8d0fa-850">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-851">对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-852">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="8d0fa-853">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组定义由 <c>srcRect</c> 定义的矩形将变换为的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="8d0fa-854">该数组可以包含三个或四个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-854">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="8d0fa-855">如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="8d0fa-856">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <c>destPoints</c> 定义的平行四边形的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="8d0fa-857">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="8d0fa-858">一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，它指定此扭曲操作是使用透视模式还是双线性模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-859">对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-860">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="8d0fa-861">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组定义由 <c>srcRect</c> 定义的矩形将变换为的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="8d0fa-862">该数组可以包含三个或四个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-862">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="8d0fa-863">如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="8d0fa-864">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <c>destPoints</c> 定义的平行四边形的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="8d0fa-865">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="8d0fa-866">一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，它指定此扭曲操作是使用透视模式还是双线性模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="8d0fa-867">一个介于 0 到 1 之间的值，它指定如何展平最终路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-867">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="8d0fa-868">有关更多信息，请参见 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-869">对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d0fa-870">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-871">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-872">创建一个路径，并向该路径添加一个矩形。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-873">将该矩形绘制到屏幕以黑色。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="8d0fa-874">个 warp 使用透视环绕的路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="8d0fa-875">绘制到屏幕以红色弯曲的矩形 （路径）。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d0fa-876">在用指定的钢笔绘制此路径时，用包含所填充区域的曲线代替此路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="8d0fa-877">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-878">向该路径添加附加轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-878">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-879">此方法在此创建原始行四周的轮廓<xref:System.Drawing.Drawing2D.GraphicsPath>，与现有行的新轮廓之间距离等于的宽度<xref:System.Drawing.Pen>对调用中使用<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="8d0fa-880">如果你想要填充的线条间空间必须使用<xref:System.Drawing.Graphics.FillPath%2A>而不是<xref:System.Drawing.Graphics.DrawPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-881">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="8d0fa-882">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="8d0fa-883">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定扩展前应用于路径的变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-884">向该 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 添加附加轮廓。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-885">此方法在此创建原始行四周的轮廓<xref:System.Drawing.Drawing2D.GraphicsPath>，与现有行的新轮廓之间距离等于的宽度<xref:System.Drawing.Pen>对调用中使用<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="8d0fa-886">如果你想要填充的线条间空间必须使用<xref:System.Drawing.Graphics.FillPath%2A>而不是<xref:System.Drawing.Graphics.DrawPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-887">有关示例，请参见<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="8d0fa-888">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="8d0fa-889">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定扩展前应用于路径的变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="8d0fa-890">指定曲线展平的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-890">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d0fa-891">在用指定的钢笔绘制此路径时，用包含所填充区域的曲线代替此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d0fa-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d0fa-892">此方法在此创建原始行四周的轮廓<xref:System.Drawing.Drawing2D.GraphicsPath>，与现有行的新轮廓之间距离等于的宽度<xref:System.Drawing.Pen>对调用中使用<xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="8d0fa-893">如果你想要填充的线条间空间必须使用<xref:System.Drawing.Graphics.FillPath%2A>而不是<xref:System.Drawing.Graphics.DrawPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d0fa-894">下面的代码示例设计为使用 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>事件对象。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="8d0fa-895">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="8d0fa-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8d0fa-896">创建一个路径，并向该路径添加两个椭圆。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-897">用黑色绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="8d0fa-898">将加宽路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="8d0fa-899">用红色绘制该路径。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="8d0fa-900">请注意，使用第二个呈现<xref:System.Drawing.Graphics.FillPath%2A>而不是<xref:System.Drawing.Graphics.DrawPath%2A>，因此呈现的图具有填充的轮廓。</span><span class="sxs-lookup"><span data-stu-id="8d0fa-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>