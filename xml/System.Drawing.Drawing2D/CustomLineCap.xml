<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomLineCap.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f5c75a608ce54c941da40e7941b926a057ce5265.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5c75a608ce54c941da40e7941b926a057ce5265</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Encapsulates a custom user-defined line cap.</source>
          <target state="translated">封装自定义的用户定义的线帽。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objects.</source>
          <target state="translated">线帽使用的起始和结束行或曲线绘制 GDI +<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</source>
          <target state="translated">GDI + 支持几个预定义的线帽样式，并还允许用户定义其自己的线帽样式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>This class is used to create custom cap styles.</source>
          <target state="translated">此类用于创建自定义线帽样式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> class.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>To run this example paste, the code into a Windows Form.</source>
          <target state="translated">若要运行此示例粘贴到 Windows 窗体的代码。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">处理窗体的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件并调用<ph id="ph2">`DrawCaps`</ph>从窗体的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理方法，并传递<ph id="ph4">`e`</ph>作为<ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">使用指定的轮廓和填充初始化 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">定义自定义线帽填充内容的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">定义自定义线帽轮廓的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">使用指定的轮廓和填充初始化 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> 无论为操作指定的填充模式中使用"缠绕"的填充模式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph>和<ph id="ph2">`strokePath`</ph>参数不能在同一时间。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">必须将一个参数传递 null 值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">如果这两个参数传递 null 值，<ph id="ph1">`fillPath`</ph>将被忽略。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">如果<ph id="ph1">`strokePath`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">`fillPath`</ph>应截获负 y 轴。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">若要运行此示例，请将代码粘贴到 Windows 窗体。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">处理窗体的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件并调用<ph id="ph2">`DrawCaps`</ph>从窗体的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理方法，并传递<ph id="ph4">`e`</ph>作为<ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">定义自定义线帽填充内容的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">定义自定义线帽轮廓的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">创建自定义线帽时所基于的线帽。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline and fill.</source>
          <target state="translated">通过指定的轮廓和填充从指定的现有 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 枚举初始化 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> 无论为操作指定的填充模式中使用"缠绕"的填充模式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph>和<ph id="ph2">`strokePath`</ph>参数不能在同一时间。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">必须将一个参数传递 null 值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">如果这两个参数传递 null 值，<ph id="ph1">`fillPath`</ph>将被忽略。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">如果<ph id="ph1">`strokePath`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">`fillPath`</ph>应截获负 y 轴。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">定义自定义线帽填充内容的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">定义自定义线帽轮廓的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">创建自定义线帽时所基于的线帽。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The distance between the cap and the line.</source>
          <target state="translated">线帽和直线之间的距离。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline, fill, and inset.</source>
          <target state="translated">通过指定的轮廓、填充和嵌入从指定的现有 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 枚举初始化 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> 无论为操作指定的填充模式中使用"缠绕"的填充模式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated"><ph id="ph1">`fillPath`</ph>和<ph id="ph2">`strokePath`</ph>参数不能在同一时间。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">必须将一个参数传递 null 值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">如果这两个参数传递 null 值，<ph id="ph1">`fillPath`</ph>将被忽略。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">如果<ph id="ph1">`strokePath`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">`fillPath`</ph>应截获负 y 轴。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">获取或设置该 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 所基于的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">该 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 所基于的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>Gets or sets the distance between the cap and the line.</source>
          <target state="translated">获取或设置线帽和直线之间的距离。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>The distance between the beginning of the cap and the end of the line.</source>
          <target state="translated">线帽的起始处和直线的结束处之间的距离。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</source>
          <target state="translated">创建此 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 的一个精确副本。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated">该方法创建的、强制转换为对象的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">下面的示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a custom line cap by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">通过创建自定义线帽<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object, <ph id="ph2">`firstCap`</ph>,using the <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object just created.</source>
          <target state="translated">创建<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph>对象， <ph id="ph2">`firstCap`</ph>，使用<ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>刚创建的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a clone of <ph id="ph1">`firstCap`</ph> by using the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph> method.</source>
          <target state="translated">创建的克隆<ph id="ph1">`firstCap`</ph>使用<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Sets up the <ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> object, and uses that pen to draw a line and the custom caps to the screen.</source>
          <target state="translated">将设置<ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>对象，并使用该钢笔到屏幕绘制直线和自定义线帽。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object.</source>
          <target state="translated">释放由此 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 对象使用的所有资源。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>允许使用的资源<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph>对象可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
          <source>Allows an <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">允许 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 在"垃圾回收"回收 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 之前尝试释放资源并执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">此线帽内直线开始处所用的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">此线帽内直线结尾处所用的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Gets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">获取用于构成此自定义线帽的起始直线和结束直线的线帽。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">若要运行此示例，请将代码粘贴到 Windows 窗体。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">处理窗体的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件并调用<ph id="ph2">`DrawCaps`</ph>从窗体的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理方法，并传递<ph id="ph4">`e`</ph>作为<ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">此线帽内直线开始处所用的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">此线帽内直线结尾处所用的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Sets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">设置用于构成此自定义线帽的起始直线和结束直线的线帽。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">若要运行此示例，请将代码粘贴到 Windows 窗体。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">处理窗体的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件并调用<ph id="ph2">`DrawCaps`</ph>从窗体的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理方法，并传递<ph id="ph4">`e`</ph>作为<ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration that determines how lines that compose this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object are joined.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> 枚举，该枚举确定如何联接构成此 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 对象的直线。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object uses to join lines.</source>
          <target state="translated">该 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> 对象用来联接直线的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>This property specifies a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumeration that is used to join lines and curves that make up the stroked path of this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object.</source>
          <target state="translated">此属性指定<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph>可用于联接直线和曲线构成的绘制的路径的枚举<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Gets or sets the amount by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> Class object with respect to the width of the <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> object.</source>
          <target state="translated">获取或设置相对于 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> 对象的宽度此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类对象的缩放量。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>The amount by which to scale the cap.</source>
          <target state="translated">此线帽的缩放量。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</source>
          <target state="translated">此属性指定用来乘的自定义线帽大小钢笔的宽度的倍数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</source>
          <target state="translated">例如，如果此属性等于 1，自定义线帽宽度为 10，自定义线帽高度为 5，并且用宽度为 3 钢笔绘制一条线，然后达到上限为绘制 30 个单位宽、 15 个单位高。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</source>
          <target state="translated">将此属性设置为 3，则会导致绘制 90 个单位宽且 45 个单位高达到上限。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>