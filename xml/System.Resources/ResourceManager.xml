<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="621ffd2c5b5e5acab1b4620cb97287cd2ec3b307" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37640572" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <TypeSignature Language="F#" Value="type ResourceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="06019-101">Represents a resource manager that provides convenient access to culture-specific resources at run time.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06019-101">Represents a resource manager that provides convenient access to culture-specific resources at run time.</span>
      </span>
      <span data-ttu-id="06019-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06019-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="06019-103">Call the methods in the class only with trusted data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06019-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="06019-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      <span class="sxs-lookup">
        <span data-stu-id="06019-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-105"><xref:System.Resources.ResourceManager>类检索资源嵌入程序集中的二进制.resources 文件或从独立.resources 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-105">The <xref:System.Resources.ResourceManager> class retrieves resources from a binary .resources file that is embedded in an assembly or from a standalone .resources file.</span></span> <span data-ttu-id="06019-106">如果应用已进行了本地化，并且已在部署已本地化的资源[附属程序集](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)，它会查找特定于区域性的资源，资源回退时提供本地化的资源不存在，并且支持资源序列化。</span><span class="sxs-lookup"><span data-stu-id="06019-106">If an app has been localized and localized resources have been deployed in [satellite assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), it looks up culture-specific resources, provides resource fallback when a localized resource does not exist, and supports resource serialization.</span></span>  
  
 <span data-ttu-id="06019-107">有关创建和管理桌面应用中的资源的详细信息和[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，请参阅以下部分：</span><span class="sxs-lookup"><span data-stu-id="06019-107">For more information about creating and managing resources in desktop apps and [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, see the following sections:</span></span>  
  
-   [<span data-ttu-id="06019-108">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-108">Desktop Apps</span></span>](#desktop)  
  
    -   [<span data-ttu-id="06019-109">创建资源</span><span class="sxs-lookup"><span data-stu-id="06019-109">Creating Resources</span></span>](#creating_resources)  
  
    -   [<span data-ttu-id="06019-110">实例化 ResourceManager 对象</span><span class="sxs-lookup"><span data-stu-id="06019-110">Instantiating a ResourceManager Object</span></span>](#instantiating)  
  
    -   [<span data-ttu-id="06019-111">ResourceManager 和特定于区域性的资源</span><span class="sxs-lookup"><span data-stu-id="06019-111">ResourceManager and Culture-Specific Resources</span></span>](#CultureSpecific)  
  
    -   [<span data-ttu-id="06019-112">检索资源</span><span class="sxs-lookup"><span data-stu-id="06019-112">Retrieving Resources</span></span>](#retrieving)  
  
    -   [<span data-ttu-id="06019-113">处理 MissingManifestResourceException 和 MissingSatelliteAssemblyException 异常</span><span class="sxs-lookup"><span data-stu-id="06019-113">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</span></span>](#exception)  
  
    -   [<span data-ttu-id="06019-114">资源版本控制</span><span class="sxs-lookup"><span data-stu-id="06019-114">Resource Versioning</span></span>](#versioning)  
  
    -   [<span data-ttu-id="06019-115">\<可以 > 配置文件节点</span><span class="sxs-lookup"><span data-stu-id="06019-115">\<satelliteassemblies> Configuration File Node</span></span>](#config)  
  
-   [<span data-ttu-id="06019-116">Windows 应用商店应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-116">Windows Store Apps</span></span>](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a><span data-ttu-id="06019-117">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-117">Desktop Apps</span></span>  
 <span data-ttu-id="06019-118">对于桌面应用，<xref:System.Resources.ResourceManager>类从二进制资源 (.resources) 文件中检索资源。</span><span class="sxs-lookup"><span data-stu-id="06019-118">For desktop apps, the <xref:System.Resources.ResourceManager> class retrieves resources from binary resource (.resources) files.</span></span> <span data-ttu-id="06019-119">通常情况下，语言编译器或[程序集链接器 (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md)这些资源文件嵌入程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-119">Typically, a language compiler or the  [Assembly Linker (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) embeds these resource files in an assembly.</span></span> <span data-ttu-id="06019-120">此外可以使用<xref:System.Resources.ResourceManager>对象来直接从程序集中未通过调用嵌入的.resources 文件中检索资源<xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-120">You can also use a <xref:System.Resources.ResourceManager> object to retrieve resources directly from a .resources file that is not embedded in an assembly, by calling the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-121">使用独立.resources 文件在 ASP.NET 应用程序将中断 XCOPY 部署，因为资源保持锁定状态，直到它们被显式释放由<xref:System.Resources.ResourceManager.ReleaseAllResources%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-121">Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method.</span></span> <span data-ttu-id="06019-122">如果你想要使用 ASP.NET 应用程序部署资源，你应在.resources 文件编译到附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-122">If you want to deploy resources with your ASP.NET apps, you should compile your .resources files into satellite assemblies.</span></span>  
  
 <span data-ttu-id="06019-123">在基于资源的应用中，一个.resources 文件包含将使用其资源，如果找不到任何特定于区域性的资源的默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-123">In a resource-based app, one .resources file contains the resources of the default culture whose resources are used if no culture-specific resources can be found.</span></span> <span data-ttu-id="06019-124">例如，如果应用程序的默认区域性为英语 (en)，只要已本地化的资源不能找到有关特定区域性，例如英语 （美国） （英文） 或法语 （法国） (FR-FR) 使用英语语言资源。</span><span class="sxs-lookup"><span data-stu-id="06019-124">For example, if an app's default culture is English (en), the English language resources are used whenever localized resources cannot be found for a specific culture, such as English (United States) (en-US) or French (France) (fr-FR).</span></span> <span data-ttu-id="06019-125">通常情况下，默认区域性的资源嵌入主应用程序集，并为其他本地化区域性的资源嵌入在附属程序集中。</span><span class="sxs-lookup"><span data-stu-id="06019-125">Typically, the resources for the default culture are embedded in the main app assembly, and resources for other localized cultures are embedded in satellite assemblies.</span></span> <span data-ttu-id="06019-126">附属程序集只能包含资源。</span><span class="sxs-lookup"><span data-stu-id="06019-126">Satellite assemblies contain only resources.</span></span> <span data-ttu-id="06019-127">它们具有相同根文件名与主程序集和的扩展。 resources.dll。</span><span class="sxs-lookup"><span data-stu-id="06019-127">They have the same root file name as the main assembly and an extension of .resources.dll.</span></span> <span data-ttu-id="06019-128">对于应用程序不在全局程序集缓存中注册的程序集，附属程序集存储在其名称与程序集的区域性相对应的应用程序子目录中。</span><span class="sxs-lookup"><span data-stu-id="06019-128">For apps whose assemblies are not registered in the global assembly cache, satellite assemblies are stored in an app subdirectory whose name corresponds to the assembly's culture.</span></span>  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a><span data-ttu-id="06019-129">创建资源</span><span class="sxs-lookup"><span data-stu-id="06019-129">Creating Resources</span></span>  
 <span data-ttu-id="06019-130">要开发基于资源的应用，存储资源信息文本文件 （.txt 或.restext 扩展名的文件） 或 XML 文件 （扩展名为.resx 的文件） 中。</span><span class="sxs-lookup"><span data-stu-id="06019-130">When you develop a resource-based app, you store resource information in text files (files that have a .txt or .restext extension) or XML files (files that have a .resx extension).</span></span> <span data-ttu-id="06019-131">然后编译的文本或 XML 文件，而[资源文件生成器 (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)创建二进制.resources 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-131">You then compile the text or XML files with the  [Resource File Generator (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to create a binary .resources file.</span></span> <span data-ttu-id="06019-132">你可以然后嵌入生成的.resources 文件中的可执行文件或库使用编译器选项类似于`/resources`的 C# 和 Visual Basic 编译器，也可以将其嵌入附属程序集使用。</span><span class="sxs-lookup"><span data-stu-id="06019-132">You can then embed the resulting .resources file in an executable or library by using a compiler option such as `/resources` for the C# and Visual Basic compilers, or you can embed it in a satellite assembly by using the .</span></span> <span data-ttu-id="06019-133">如果 Visual Studio 项目中包括的.resx 文件，Visual Studio 处理在编译和嵌入的默认和已本地化的资源自动生成过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="06019-133">If you include a .resx file in your Visual Studio project, Visual Studio handles the compilation and embedding of default and localized resources automatically as part of the build process.</span></span>  
  
 <span data-ttu-id="06019-134">理想情况下，应创建您的应用程序为每种语言的资源支持，或至少意义的每种语言子集。</span><span class="sxs-lookup"><span data-stu-id="06019-134">Ideally, you should create resources for every language your app supports, or at least for a meaningful subset of each language.</span></span> <span data-ttu-id="06019-135">二进制.resources 文件名称遵循命名约定*basename*。*cultureName*.resources，其中*basename*是应用的名称或类，具体取决于所需的详细级别的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-135">The binary .resources file names follow the naming convention *basename*.*cultureName*.resources, where *basename* is the name of the app or the name of a class, depending on the level of detail you want.</span></span> <span data-ttu-id="06019-136"><xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>属性用于确定*cultureName*。</span><span class="sxs-lookup"><span data-stu-id="06019-136">The <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property is used to determine *cultureName*.</span></span> <span data-ttu-id="06019-137">应用程序的默认区域性的资源应命名为*basename*.resources。</span><span class="sxs-lookup"><span data-stu-id="06019-137">A resource for the app's default culture should be named *basename*.resources.</span></span>  
  
 <span data-ttu-id="06019-138">例如，假设程序集具有 MyResources 的基名称的资源文件中包含多个资源。</span><span class="sxs-lookup"><span data-stu-id="06019-138">For example, suppose that an assembly has several resources in a resource file that has the base name MyResources.</span></span> <span data-ttu-id="06019-139">这些资源文件应采用 MyResources.ja JP.resources 如对于日语 （日本） 区域性，对于德语区域性，MyResources.zh CHS.resources 简化的中文区域性 MyResources.de.resources 的名称和法语 （比利时） 区域性 MyResources.fr BE.resources。</span><span class="sxs-lookup"><span data-stu-id="06019-139">These resource files should have names such as MyResources.ja-JP.resources for the Japan (Japanese) culture, MyResources.de.resources for the German culture, MyResources.zh-CHS.resources for the simplified Chinese culture, and MyResources.fr-BE.resources for the French (Belgium) culture.</span></span> <span data-ttu-id="06019-140">默认资源文件应命名为 MyResources.resources。</span><span class="sxs-lookup"><span data-stu-id="06019-140">The default resource file should be named MyResources.resources.</span></span> <span data-ttu-id="06019-141">特定于区域性的资源文件中的每个区域性附属程序集通常打包。</span><span class="sxs-lookup"><span data-stu-id="06019-141">The culture-specific resource files are commonly packaged in satellite assemblies for each culture.</span></span> <span data-ttu-id="06019-142">默认资源文件应嵌入应用的主程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-142">The default resource file should be embedded in the app's main assembly.</span></span>  
  
 <span data-ttu-id="06019-143">请注意，允许资源将被标记为私有的但您应始终将它们标记为公共以便它们可以访问由其他程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-143">Note that  allows resources to be marked as private, but you should always mark them as public so they can be accessed by other assemblies.</span></span> <span data-ttu-id="06019-144">（附属程序集不包含代码，因为标记为专用的资源是通过任何机制向应用不可用。）</span><span class="sxs-lookup"><span data-stu-id="06019-144">(Because a satellite assembly contains no code, resources that are marked as private are unavailable to your app through any mechanism.)</span></span>  
  
 <span data-ttu-id="06019-145">有关创建的详细信息，打包和部署资源，请参阅文章[创建资源文件](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md)，[创建附属程序集](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)，和[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-145">For more information about creating, packaging, and deploying resources, see the articles [Creating Resource Files](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a><span data-ttu-id="06019-146">实例化 ResourceManager 对象</span><span class="sxs-lookup"><span data-stu-id="06019-146">Instantiating a ResourceManager Object</span></span>  
 <span data-ttu-id="06019-147">实例化<xref:System.Resources.ResourceManager>通过调用其类构造函数重载从嵌入的.resources 文件中检索资源的对象。</span><span class="sxs-lookup"><span data-stu-id="06019-147">You instantiate a <xref:System.Resources.ResourceManager> object that retrieves resources from an embedded .resources file by calling one of its class constructor overloads.</span></span> <span data-ttu-id="06019-148">此紧密耦合<xref:System.Resources.ResourceManager>对象与特定的.resources 文件和任何关联本地化附属程序集中的.resources 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-148">This tightly couples a <xref:System.Resources.ResourceManager> object with a particular .resources file and with any associated localized .resources files in satellite assemblies.</span></span>  
  
 <span data-ttu-id="06019-149">两个最常调用的构造函数是：</span><span class="sxs-lookup"><span data-stu-id="06019-149">The two most commonly called constructors are:</span></span>  
  
-   <span data-ttu-id="06019-150"><xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> 查找资源根据您提供的信息的两个部分：.resources 文件，并在其中驻留的默认.resources 文件的程序集的基名称。</span><span class="sxs-lookup"><span data-stu-id="06019-150"><xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> looks up resources based on two pieces of information that you supply: the base name of the .resources file, and the assembly in which the default .resources file resides.</span></span> <span data-ttu-id="06019-151">基名称包括命名空间和根名称的.resources 文件，而无需其区域性或扩展。</span><span class="sxs-lookup"><span data-stu-id="06019-151">The base name includes the namespace and root name of the .resources file, without its culture or extension.</span></span> <span data-ttu-id="06019-152">请注意，通常从命令行编译的.resources 文件不包括命名空间名称，而在 Visual Studio 环境中创建的.resources 文件执行操作。</span><span class="sxs-lookup"><span data-stu-id="06019-152">Note that .resources files that are compiled from the command line typically do not include a namespace name, whereas .resources files that are created in the Visual Studio environment do.</span></span> <span data-ttu-id="06019-153">例如，如果一个资源文件命名为 MyCompany.StringResources.resources 并<xref:System.Resources.ResourceManager>从名为的静态方法调用构造函数`Example.Main`，下面的代码实例化<xref:System.Resources.ResourceManager>可以检索从资源的对象。资源文件：</span><span class="sxs-lookup"><span data-stu-id="06019-153">For example, if a resource file is named MyCompany.StringResources.resources and the <xref:System.Resources.ResourceManager> constructor is called from a static method named `Example.Main`, the following code instantiates a <xref:System.Resources.ResourceManager> object that can retrieve resources from the .resources file:</span></span>  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <span data-ttu-id="06019-154"><xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> 查找基于从类型对象的信息的附属程序集中的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-154"><xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> looks up resources in satellite assemblies based on information from a type object.</span></span> <span data-ttu-id="06019-155">该类型的完全限定的名称对应于.resources 文件，而不进行其文件扩展名的基名称。</span><span class="sxs-lookup"><span data-stu-id="06019-155">The type's fully qualified name corresponds to the base name of the .resources file without its file name extension.</span></span> <span data-ttu-id="06019-156">在使用 Visual Studio 资源设计器创建的桌面应用程序，Visual Studio 创建一个包装器类，其完全限定的名称是.resources 文件的根名称相同。</span><span class="sxs-lookup"><span data-stu-id="06019-156">In desktop apps that are created by using the Visual Studio Resource Designer, Visual Studio creates a wrapper class whose fully qualified name is the same as the root name of the .resources file.</span></span> <span data-ttu-id="06019-157">例如，如果一个资源文件命名为 MyCompany.StringResources.resources 并且没有名为的包装器类`MyCompany.StringResources`，下面的代码实例化<xref:System.Resources.ResourceManager>可以从.resources 文件中检索资源的对象：</span><span class="sxs-lookup"><span data-stu-id="06019-157">For example, if a resource file is named MyCompany.StringResources.resources and there is a wrapper class named `MyCompany.StringResources`, the following code instantiates a <xref:System.Resources.ResourceManager> object that can retrieve resources from the .resources file:</span></span>  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="06019-158">如果找不到相应的资源，构造函数调用将创建一个有效<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-158">If the appropriate resources cannot be found, the constructor call creates a valid <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="06019-159">但是，尝试检索的资源将引发<xref:System.Resources.MissingManifestResourceException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-159">However, the attempt to retrieve a resource throws a <xref:System.Resources.MissingManifestResourceException> exception.</span></span> <span data-ttu-id="06019-160">有关如何处理异常有关的信息，请参阅[处理 MissingManifestResourceException 和 MissingSatelliteAssembly 异常](#exception)本文后面的部分。</span><span class="sxs-lookup"><span data-stu-id="06019-160">For information about dealing with the exception, see the [Handling MissingManifestResourceException and MissingSatelliteAssembly Exceptions](#exception) section later in this article.</span></span>  
  
 <span data-ttu-id="06019-161">下面的示例演示如何实例化<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-161">The following example shows how to instantiate a <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="06019-162">它包含名为 ShowTime.exe 的可执行文件的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-162">It contains the source code for an executable named ShowTime.exe.</span></span> <span data-ttu-id="06019-163">它还包括名为 Strings.txt 的包含一个单个字符串的资源的以下文本文件`TimeHeader`:</span><span class="sxs-lookup"><span data-stu-id="06019-163">It also includes the following text file named Strings.txt that contains a single string resource, `TimeHeader`:</span></span>  
  
```  
TimeHeader=The current time is  
```  
  
 <span data-ttu-id="06019-164">批处理文件可用于生成资源文件，并将其嵌入到可执行文件。</span><span class="sxs-lookup"><span data-stu-id="06019-164">You can use a batch file to generate the resource file and embed it into the executable.</span></span> <span data-ttu-id="06019-165">下面是批处理文件，以便使用 C# 编译器生成可执行文件：</span><span class="sxs-lookup"><span data-stu-id="06019-165">Here's the batch file to generate an executable by using the C# compiler:</span></span>  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 <span data-ttu-id="06019-166">对于 Visual Basic 编译器，可以使用以下批处理文件：</span><span class="sxs-lookup"><span data-stu-id="06019-166">For the Visual Basic compiler, you can use the following batch file:</span></span>  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a><span data-ttu-id="06019-167">ResourceManager 和特定于区域性的资源</span><span class="sxs-lookup"><span data-stu-id="06019-167">ResourceManager and Culture-Specific Resources</span></span>  
 <span data-ttu-id="06019-168">本地化的应用需要要部署资源，如文章中讨论[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-168">A localized app requires resources to be deployed, as discussed in the article [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span> <span data-ttu-id="06019-169">如果正确配置程序集，资源管理器将确定哪些资源检索基于当前线程的<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-169">If the assemblies are properly configured, the resource manager determines which resources to retrieve based on the current thread's <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06019-170">（该属性还返回当前线程的 UI 区域性。）例如，如果使用编译的应用程序默认英语语言中的资源的主程序集以及法语和俄罗斯语语言资源附属程序集中两个，和<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性设置为 FR-FR，则资源管理器检索法语资源。</span><span class="sxs-lookup"><span data-stu-id="06019-170">(That property also returns the current thread's UI culture.) For example, if an app is compiled with default English language resources in the main assembly and with French and Russian language resources in two satellite assemblies, and the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property is set to fr-FR, the resource manager retrieves the French resources.</span></span>  
  
 <span data-ttu-id="06019-171">可以设置<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性显式或隐式。</span><span class="sxs-lookup"><span data-stu-id="06019-171">You can set the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property explicitly or implicitly.</span></span> <span data-ttu-id="06019-172">将其设置的方式确定如何<xref:System.Resources.ResourceManager>对象检索基于区域性的资源：</span><span class="sxs-lookup"><span data-stu-id="06019-172">The way you set it determines how the <xref:System.Resources.ResourceManager> object retrieves resources based on culture:</span></span>  
  
-   <span data-ttu-id="06019-173">如果显式设置<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性设置为特定区域性，资源管理器始终检索该区域性，而不考虑用户的浏览器或操作系统语言的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-173">If you explicitly set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property to a specific culture, the resource manager always retrieves the resources for that culture, regardless of the user's browser or operating system language.</span></span> <span data-ttu-id="06019-174">请考虑使用默认英语语言资源编译的应用和英语 （美国）、 法语 （法国） 和俄语 （俄罗斯） 包含资源的三个附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-174">Consider an app that is compiled with default English language resources and three satellite assemblies that contain resources for English (United States), French (France), and Russian (Russia).</span></span> <span data-ttu-id="06019-175">如果<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性设置为 FR-FR，<xref:System.Resources.ResourceManager>对象始终检索法语 （法国） 资源，即使用户的操作系统语言不是法语。</span><span class="sxs-lookup"><span data-stu-id="06019-175">If the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is set to fr-FR, the <xref:System.Resources.ResourceManager> object always retrieves the French (France) resources, even if the user's operating system language is not French.</span></span> <span data-ttu-id="06019-176">请确保这是所需的行为，然后再显式设置该属性。</span><span class="sxs-lookup"><span data-stu-id="06019-176">Make sure that this is the desired behavior before you set the property explicitly.</span></span>  
  
     <span data-ttu-id="06019-177">在 ASP.NET 应用中，您必须设置<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性明确，因为它是不太可能在服务器上的设置将匹配传入客户端请求。</span><span class="sxs-lookup"><span data-stu-id="06019-177">In ASP.NET apps, you must set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property explicitly, because it is unlikely that the setting on the server will match incoming client requests.</span></span> <span data-ttu-id="06019-178">ASP.NET 应用程序可以设置<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性显式为用户的浏览器接受的语言。</span><span class="sxs-lookup"><span data-stu-id="06019-178">An ASP.NET app can set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property explicitly to the user's browser accept language.</span></span>  
  
     <span data-ttu-id="06019-179">显式设置<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>属性定义该线程的当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-179">Explicitly setting the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property defines the current UI culture for that thread.</span></span> <span data-ttu-id="06019-180">它不会影响应用程序中的任何其他线程的当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-180">It does not affect the current UI culture of any other threads in an app.</span></span>  
  
-   <span data-ttu-id="06019-181">可以通过将分配应用程序域中设置的所有线程 UI 区域性<xref:System.Globalization.CultureInfo>对象，表示该区域性对静态<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-181">You can set the UI culture of all threads in an app domain by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the static <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="06019-182">如果未显式设置当前 UI 区域性，并且未定义当前的应用程序域中，默认区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>隐式设置属性由 Windows`GetUserDefaultUILanguage`函数。</span><span class="sxs-lookup"><span data-stu-id="06019-182">If you do not explicitly set the current UI culture and you do not define a default culture for the current app domain, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is set implicitly by the Windows `GetUserDefaultUILanguage` function.</span></span> <span data-ttu-id="06019-183">提供此函数是通过多语言用户界面 (MUI)，这使用户能够设置默认语言。</span><span class="sxs-lookup"><span data-stu-id="06019-183">This function is provided by the Multilingual User Interface (MUI), which enables the user to set the default language.</span></span> <span data-ttu-id="06019-184">如果用户未设置的 UI 语言，则默认为系统安装的语言，它是操作系统资源的语言。</span><span class="sxs-lookup"><span data-stu-id="06019-184">If the UI language is not set by the user, it defaults to the system-installed language, which is the language of operating system resources.</span></span>  
  
 <span data-ttu-id="06019-185">下面的简单"Hello world"示例显式设置当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-185">The following simple "Hello world" example sets the current UI culture explicitly.</span></span> <span data-ttu-id="06019-186">它包含三种区域性的资源： 英语 （美国） 或 EN-US、 法语 （法国） FR-FR 和俄语 （俄罗斯） 或 ru RU。</span><span class="sxs-lookup"><span data-stu-id="06019-186">It contains resources for three cultures: English (United States) or en-US, French (France) or fr-FR, and Russian (Russia) or ru-RU.</span></span> <span data-ttu-id="06019-187">在一个名为 Greetings.txt 文本文件中包含 EN-US 资源：</span><span class="sxs-lookup"><span data-stu-id="06019-187">The en-US resources are contained in a text file named Greetings.txt:</span></span>  
  
```  
HelloString=Hello world!  
```  
  
 <span data-ttu-id="06019-188">-FR 资源都包含在一个名为 Greetings.fr 文本文件-FR.txt:</span><span class="sxs-lookup"><span data-stu-id="06019-188">The fr-FR resources are contained in a text file named Greetings.fr-FR.txt:</span></span>  
  
```  
HelloString=Salut tout le monde!  
```  
  
 <span data-ttu-id="06019-189">Ru RU 资源都包含在一个名为 Greetings.ru 文本文件-RU.txt:</span><span class="sxs-lookup"><span data-stu-id="06019-189">The ru-RU resources are contained in a text file named Greetings.ru-RU.txt:</span></span>  
  
```  
HelloString=Всем привет!  
```  
  
 <span data-ttu-id="06019-190">下面是示例 (Visual Basic 版本 Example.vb) 或 Example.cs 对于 C# 版本的源代码：</span><span class="sxs-lookup"><span data-stu-id="06019-190">Here's the source code for the example (Example.vb for the Visual Basic version or Example.cs for the C# version):</span></span>  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 <span data-ttu-id="06019-191">若要编译此示例，请创建包含以下命令，从命令提示符运行它的批处理 (.bat) 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-191">To compile this example, create a batch (.bat) file that contains the following commands and run it from the command prompt.</span></span> <span data-ttu-id="06019-192">如果你正在使用 C#，指定`csc`而不是`vbc`并`Example.cs`而不是`Example.vb`。</span><span class="sxs-lookup"><span data-stu-id="06019-192">If you're using C#, specify `csc` instead of `vbc` and `Example.cs` instead of `Example.vb`.</span></span>  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a><span data-ttu-id="06019-193">检索资源</span><span class="sxs-lookup"><span data-stu-id="06019-193">Retrieving Resources</span></span>  
 <span data-ttu-id="06019-194">在调用<xref:System.Resources.ResourceManager.GetObject%28System.String%29>和<xref:System.Resources.ResourceManager.GetString%28System.String%29>方法来访问特定资源。</span><span class="sxs-lookup"><span data-stu-id="06019-194">You call the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> and <xref:System.Resources.ResourceManager.GetString%28System.String%29> methods to access a specific resource.</span></span> <span data-ttu-id="06019-195">您还可以调用<xref:System.Resources.ResourceManager.GetStream%28System.String%29>方法来检索非字符串资源，作为字节数组。</span><span class="sxs-lookup"><span data-stu-id="06019-195">You can also call the <xref:System.Resources.ResourceManager.GetStream%28System.String%29> method to retrieve non-string resources as a byte array.</span></span> <span data-ttu-id="06019-196">默认情况下，在应用的已本地化的资源，这些方法都返回由执行调用的线程的当前 UI 区域性的区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-196">By default, in an app that has localized resources, these methods return the resource for the culture determined by the current UI culture of the thread that made the call.</span></span> <span data-ttu-id="06019-197">请参阅上一节[ResourceManager 和特定于区域性的资源](#CultureSpecific)，详细了解如何定义一个线程的当前 UI 区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-197">See the previous section, [ResourceManager and Culture-Specific Resources](#CultureSpecific), for more information about how the current UI culture of a thread is defined.</span></span> <span data-ttu-id="06019-198">如果资源管理器找不到当前线程的 UI 区域性的资源，它使用回退过程来检索指定的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-198">If the resource manager cannot find the resource for the current thread's UI culture, it uses a fallback process to retrieve the specified resource.</span></span> <span data-ttu-id="06019-199">如果资源管理器找不到任何本地化的资源，则使用默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-199">If the resource manager cannot find any localized resources, it uses the resources of the default culture.</span></span> <span data-ttu-id="06019-200">有关资源回退规则的详细信息，请参阅文章的"资源回退进程"部分[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-200">For more information about resource fallback rules, see the "Resource Fallback Process" section of the article [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-201">如果在指定的.resources 文件<xref:System.Resources.ResourceManager>找不到类构造函数，则尝试检索的资源将引发<xref:System.Resources.MissingManifestResourceException>或<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-201">If the .resources file specified in the <xref:System.Resources.ResourceManager> class constructor cannot be found, the attempt to retrieve a resource throws a <xref:System.Resources.MissingManifestResourceException> or <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-202">有关如何处理异常有关的信息，请参阅[处理 MissingManifestResourceException 和 MissingSatelliteAssemblyException 异常](#exception)本主题后面的部分。</span><span class="sxs-lookup"><span data-stu-id="06019-202">For information about dealing with the exception, see the [Handling  MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions](#exception) section later in this topic.</span></span>  
  
 <span data-ttu-id="06019-203">下面的示例使用<xref:System.Resources.ResourceManager.GetString%2A>方法来检索特定于区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-203">The following example uses the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="06019-204">针对英语 (en)、 法语 （法国） (FR-FR) 和俄语 （俄罗斯） (RU-RU).txt 文件中编译的资源组成的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-204">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="06019-205">该示例将当前区域性和当前 UI 区域性更改为英语 （美国）、 法语 （法国）、 俄语 （俄罗斯） 和瑞典语 （瑞典）。</span><span class="sxs-lookup"><span data-stu-id="06019-205">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="06019-206">然后，它调用<xref:System.Resources.ResourceManager.GetString%2A>方法来检索它的当前日期和月份一起显示的本地化的字符串。</span><span class="sxs-lookup"><span data-stu-id="06019-206">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve the localized string, which it displays along with the current day and month.</span></span> <span data-ttu-id="06019-207">请注意，输出会显示除了当前 UI 区域性是瑞典语 （瑞典） 之外的相应本地化的字符串。</span><span class="sxs-lookup"><span data-stu-id="06019-207">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden).</span></span> <span data-ttu-id="06019-208">瑞典语语言资源不可用，因为该应用将改为使用的是英语的默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-208">Because Swedish language resources are unavailable, the app instead uses the resources of the default culture, which is English.</span></span>  
  
 <span data-ttu-id="06019-209">该示例需要下表中列出的基于文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="06019-209">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="06019-210">每个都有一个名为的单个字符串资源`DateStart`。</span><span class="sxs-lookup"><span data-stu-id="06019-210">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="06019-211">culture</span><span class="sxs-lookup"><span data-stu-id="06019-211">Culture</span></span>|<span data-ttu-id="06019-212">文件名</span><span class="sxs-lookup"><span data-stu-id="06019-212">File name</span></span>|<span data-ttu-id="06019-213">资源名称</span><span class="sxs-lookup"><span data-stu-id="06019-213">Resource name</span></span>|<span data-ttu-id="06019-214">资源值</span><span class="sxs-lookup"><span data-stu-id="06019-214">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="06019-215">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-215">en-US</span></span>|<span data-ttu-id="06019-216">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="06019-216">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="06019-217">假设今天是</span><span class="sxs-lookup"><span data-stu-id="06019-217">Today is</span></span>|  
|<span data-ttu-id="06019-218">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-218">fr-FR</span></span>|<span data-ttu-id="06019-219">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-219">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="06019-220">Aujourd'hui，c'est le</span><span class="sxs-lookup"><span data-stu-id="06019-220">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="06019-221">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-221">ru-RU</span></span>|<span data-ttu-id="06019-222">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-222">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="06019-223">Сегодня</span><span class="sxs-lookup"><span data-stu-id="06019-223">Сегодня</span></span>|  
  
 <span data-ttu-id="06019-224">下面是示例 (Visual Basic 版本 ShowDate.vb) 或 ShowDate.cs 代码的 C# 版本的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-224">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version of the code).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 <span data-ttu-id="06019-225">若要编译此示例，请创建包含以下命令，从命令提示符运行它的批处理文件。</span><span class="sxs-lookup"><span data-stu-id="06019-225">To compile this example, create a batch file that contains the following commands and run it from the command prompt.</span></span> <span data-ttu-id="06019-226">如果你正在使用 C#，指定`csc`而不是`vbc`并`showdate.cs`而不是`showdate.vb`。</span><span class="sxs-lookup"><span data-stu-id="06019-226">If you're using C#, specify `csc` instead of `vbc` and `showdate.cs` instead of `showdate.vb`.</span></span>  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 <span data-ttu-id="06019-227">有两种方法来检索当前 UI 区域性非特定区域性的资源：</span><span class="sxs-lookup"><span data-stu-id="06019-227">There are two ways to retrieve the resources of a specific culture other than the current UI culture:</span></span>  
  
-   <span data-ttu-id="06019-228">您可以调用<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>， <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>，或<xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29>方法来检索特定区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-228">You can call the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>,  <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, or <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> method to retrieve a resource for a specific culture.</span></span> <span data-ttu-id="06019-229">如果找不到已本地化的资源，资源管理器使用资源回退进程找到适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-229">If a localized resource cannot be found, the resource manager uses the resource fallback process to locate an appropriate resource.</span></span>  
  
-   <span data-ttu-id="06019-230">您可以调用<xref:System.Resources.ResourceManager.GetResourceSet%2A>方法来获取<xref:System.Resources.ResourceSet>对象，表示特定区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-230">You can call the <xref:System.Resources.ResourceManager.GetResourceSet%2A> method to obtain a <xref:System.Resources.ResourceSet> object that represents the resources for a particular culture.</span></span> <span data-ttu-id="06019-231">在方法调用中，您可以确定是否资源管理器探测的父区域性如果找不到本地化的资源，或是否它只需将回退到默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-231">In the method call, you can determine whether the resource manager probes for parent cultures if it is unable to find localized resources, or whether it simply falls back to the resources of the default culture.</span></span> <span data-ttu-id="06019-232">然后，可以使用<xref:System.Resources.ResourceSet>方法来访问资源 （已本地化为该区域性） 的名称，或枚举集内的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-232">You can then use the <xref:System.Resources.ResourceSet> methods to access the resources (localized for that culture) by name, or to enumerate the resources in the set.</span></span>  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a><span data-ttu-id="06019-233">处理 MissingManifestResourceException 和 MissingSatelliteAssemblyException 异常</span><span class="sxs-lookup"><span data-stu-id="06019-233">Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions</span></span>  
 <span data-ttu-id="06019-234">如果您尝试检索特定的资源，但资源管理器找不到，已定义资源和任一没有默认区域性或默认区域性的资源找不到，资源管理器将引发<xref:System.Resources.MissingManifestResourceException>异常如果它需要在主程序集中查找的资源或<xref:System.Resources.MissingSatelliteAssemblyException>如果期望的附属程序集中找到资源。</span><span class="sxs-lookup"><span data-stu-id="06019-234">If you try to retrieve a specific resource, but the resource manager cannot find that resource and either no default culture has been defined or the resources of the default culture cannot be located, the resource manager throws a <xref:System.Resources.MissingManifestResourceException> exception if it expects to find the resources in the main assembly or a <xref:System.Resources.MissingSatelliteAssemblyException> if it expects to find the resources in a satellite assembly.</span></span> <span data-ttu-id="06019-235">请注意时如调用资源检索方法将引发异常<xref:System.Resources.ResourceManager.GetString%2A>或<xref:System.Resources.ResourceManager.GetObject%2A>，并不在实例<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-235">Note that the exception is thrown when you call a resource retrieval method such as <xref:System.Resources.ResourceManager.GetString%2A> or <xref:System.Resources.ResourceManager.GetObject%2A>, and not when you instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="06019-236">在以下情况下，通常会引发异常：</span><span class="sxs-lookup"><span data-stu-id="06019-236">The exception is typically thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="06019-237">相应的资源文件或附属程序集不存在。</span><span class="sxs-lookup"><span data-stu-id="06019-237">The appropriate resource file or satellite assembly does not exist.</span></span> <span data-ttu-id="06019-238">如果资源管理器预期要在主应用程序集中嵌入的应用程序的默认资源，它们没有显示。</span><span class="sxs-lookup"><span data-stu-id="06019-238">If the resource manager expects the app's default resources to be embedded in the main app assembly, they are absent.</span></span> <span data-ttu-id="06019-239">如果<xref:System.Resources.NeutralResourcesLanguageAttribute>属性指示应用程序的默认资源位于附属程序集中，找不到程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-239">If the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute indicates that the app's default resources reside in a satellite assembly, that assembly cannot be found.</span></span> <span data-ttu-id="06019-240">在编译您的应用程序时，请确保资源嵌入在主程序集中或必要的附属程序集生成，适当地命名。</span><span class="sxs-lookup"><span data-stu-id="06019-240">When you compile your app, make sure that resources are embedded in the main assembly or that the necessary satellite assembly is generated and is named appropriately.</span></span> <span data-ttu-id="06019-241">其名称应采用以下形式*appName*。 resources.dll，并且它应位于名为后它包含了资源的区域性的目录。</span><span class="sxs-lookup"><span data-stu-id="06019-241">Its name should take the form *appName*.resources.dll, and it should be located in a directory named after the culture whose resources it contains.</span></span>  
  
-   <span data-ttu-id="06019-242">您的应用程序没有默认值或定义的非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-242">Your app doesn't have a default or neutral culture defined.</span></span> <span data-ttu-id="06019-243">添加<xref:System.Resources.NeutralResourcesLanguageAttribute>属性到源代码文件或项目信息文件 (Visual Basic 应用程序的 AssemblyInfo.vb) 或 C# 应用程序的 AssemblyInfo.cs 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-243">Add the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute to a source code file or to the project information file (AssemblyInfo.vb for a Visual Basic app or AssemblyInfo.cs for a C# app) file.</span></span>  
  
-   <span data-ttu-id="06019-244">`baseName`中的参数<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>构造函数没有指定的.resources 文件的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-244">The `baseName` parameter in the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor does not specify the name of a .resources file.</span></span> <span data-ttu-id="06019-245">该名称应包含资源文件的完全限定命名空间，但不是其文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="06019-245">The name should include the resource file's fully qualified namespace but not its file name extension.</span></span> <span data-ttu-id="06019-246">通常情况下，在 Visual Studio 中创建的资源文件包含命名空间名称，但创建并在命令提示符下编译的资源文件不这样做。</span><span class="sxs-lookup"><span data-stu-id="06019-246">Typically, resource files that are created in Visual Studio include namespace names, but resource files that are created and compiled at the command prompt do not.</span></span> <span data-ttu-id="06019-247">您可以通过编译并运行以下实用程序确定的嵌入的.resources 文件的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-247">You can determine the names of embedded .resources files by compiling and running the following utility.</span></span> <span data-ttu-id="06019-248">这是一个控制台应用，接受主程序集或附属程序集作为命令行参数的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-248">This is a console app that accepts the name of a main assembly or satellite assembly as a command-line parameter.</span></span> <span data-ttu-id="06019-249">它将显示的字符串，应作为提供`baseName`参数，以便资源管理器可以正确识别的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-249">It displays the strings that should be provided as the `baseName` parameter so that the resource manager can correctly identify the resource.</span></span>  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 <span data-ttu-id="06019-250">如果要显式更改你的应用程序的当前区域性，您还应该记住，资源管理器检索值的基础的资源集<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性，而不<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-250">If you are changing the current culture of your application explicitly, you should also remember that the resource manager retrieves a resource set based on the value of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property, and not the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06019-251">通常情况下，如果更改一个值，您还应更改其他。</span><span class="sxs-lookup"><span data-stu-id="06019-251">Typically, if you change one value, you should also change the other.</span></span>  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a><span data-ttu-id="06019-252">资源版本控制</span><span class="sxs-lookup"><span data-stu-id="06019-252">Resource Versioning</span></span>  
 <span data-ttu-id="06019-253">因为主程序集，它包含应用程序的默认资源是独立于应用程序的附属程序集，您可以发布主程序集的新版本，无需重新部署附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-253">Because the main assembly that contains an app's default resources is separate from the app's satellite assemblies, you can release a new version of your main assembly without redeploying the satellite assemblies.</span></span> <span data-ttu-id="06019-254">您使用<xref:System.Resources.SatelliteContractVersionAttribute>属性以使用现有附属程序集，并指示资源管理器无法重新部署它们使用新版本的主程序集，</span><span class="sxs-lookup"><span data-stu-id="06019-254">You use the <xref:System.Resources.SatelliteContractVersionAttribute> attribute to use existing satellite assemblies and instruct the resource manager not to redeploy them with a new version of your main assembly,</span></span>  
  
 <span data-ttu-id="06019-255">有关版本控制支持附属程序集的详细信息，请参阅文章[中检索资源](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-255">For more information about versioning support for satellite assemblies, see the article [Retrieving Resources](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).</span></span>  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a><span data-ttu-id="06019-256">\<可以 > 配置文件节点</span><span class="sxs-lookup"><span data-stu-id="06019-256">\<satelliteassemblies> Configuration File Node</span></span>  
 <span data-ttu-id="06019-257">对可执行文件的部署和运行网站 （HREF.exe 文件） 从<xref:System.Resources.ResourceManager>对象可能通过 web，可能会损害您的应用程序性能探测附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-257">For executables that are deployed and run from a website (HREF .exe files), the <xref:System.Resources.ResourceManager> object may probe for satellite assemblies over the web, which can hurt your app's performance.</span></span> <span data-ttu-id="06019-258">若要消除的性能问题，您可以限制此探测到已部署了您的应用程序的附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-258">To eliminate the performance problem, you can limit this probing to the satellite assemblies that you have deployed with your app.</span></span> <span data-ttu-id="06019-259">若要执行此操作，创建`<satelliteassemblies>`应用程序的配置文件来指定在为您的应用程序，并且部署了一组特定的区域性中的节点<xref:System.Resources.ResourceManager>对象不应尝试在该节点中未列出任何区域性探测。</span><span class="sxs-lookup"><span data-stu-id="06019-259">To do this, you create a `<satelliteassemblies>` node in your app's configuration file to specify that you have deployed a specific set of cultures for your app, and that the <xref:System.Resources.ResourceManager> object should not try to probe for any culture that is not listed in that node.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-260">创建的首选的备用`<satelliteassemblies>`节点是使用[ClickOnce 部署清单](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)功能。</span><span class="sxs-lookup"><span data-stu-id="06019-260">The preferred alternative to creating a `<satelliteassemblies>` node is to use the [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) feature.</span></span>  
  
 <span data-ttu-id="06019-261">在您的应用程序配置文件中，创建一个部分类似于下面：</span><span class="sxs-lookup"><span data-stu-id="06019-261">In your app's configuration file, create a section similar to the following:</span></span>  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 <span data-ttu-id="06019-262">按如下所示编辑此配置信息：</span><span class="sxs-lookup"><span data-stu-id="06019-262">Edit this configuration information as follows:</span></span>  
  
-   <span data-ttu-id="06019-263">指定一个或多个`<assembly>`节点的每个主要的程序集的部署，其中每个节点指定完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="06019-263">Specify one or more `<assembly>` nodes for each main assembly that you deploy, where each node specifies a fully qualified assembly name.</span></span> <span data-ttu-id="06019-264">指定名称的主程序集来代替*MainAssemblyName*，并指定`Version`， `PublicKeyToken`，和`Culture`到主程序集的属性相对应的值。</span><span class="sxs-lookup"><span data-stu-id="06019-264">Specify the name of your main assembly in place of *MainAssemblyName*, and specify the `Version`, `PublicKeyToken`, and `Culture` attribute values that correspond to your main assembly.</span></span>  
  
     <span data-ttu-id="06019-265">有关`Version`属性，指定您的程序集的版本号。</span><span class="sxs-lookup"><span data-stu-id="06019-265">For the `Version` attribute, specify the version number of your assembly.</span></span> <span data-ttu-id="06019-266">例如，您的程序集的第一个版本可能是 1.0.0.0 的版本号。</span><span class="sxs-lookup"><span data-stu-id="06019-266">For example, the first release of your assembly might be version number 1.0.0.0.</span></span>  
  
     <span data-ttu-id="06019-267">有关`PublicKeyToken`属性，请指定关键字`null`如果未签名程序集具有强名称，或如果您已签名程序集指定公钥标记。</span><span class="sxs-lookup"><span data-stu-id="06019-267">For the `PublicKeyToken` attribute, specify the keyword `null` if you have not signed your assembly with a strong name, or specify your public key token if you have signed your assembly.</span></span>  
  
     <span data-ttu-id="06019-268">有关`Culture`属性，请指定关键字`neutral`指定主程序集，从而使<xref:System.Resources.ResourceManager>类来探测程序中列出的区域性只有`<culture>`节点。</span><span class="sxs-lookup"><span data-stu-id="06019-268">For the `Culture` attribute, specify the keyword `neutral` to designate the main assembly and cause the <xref:System.Resources.ResourceManager> class to probe only for the cultures listed in the `<culture>` nodes.</span></span>  
  
     <span data-ttu-id="06019-269">有关完全限定的程序集名称的详细信息，请参阅文章[程序集名称](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-269">For more information about fully qualified assembly names, see the article [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span> <span data-ttu-id="06019-270">有关强名称的程序集的详细信息，请参阅文章[创建和使用具有强名称程序集](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="06019-270">For more information about strong-named assemblies, see the article [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).</span></span>  
  
-   <span data-ttu-id="06019-271">指定一个或多个`<culture>`具有特定的区域性名称，如"FR-FR"或一个非特定区域性名称，例如"fr"的节点。</span><span class="sxs-lookup"><span data-stu-id="06019-271">Specify one or more `<culture>` nodes with a specific culture name, such as "fr-FR", or a neutral culture name, such as "fr".</span></span>  
  
 <span data-ttu-id="06019-272">如果所需的任何程序集下未列出的资源`<satelliteassemblies>`节点，<xref:System.Resources.ResourceManager>类探测器，以便使用标准的探测规则的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-272">If resources are needed for any assembly not listed under the `<satelliteassemblies>` node, the <xref:System.Resources.ResourceManager> class probes for cultures using standard probing rules.</span></span>  
  
<a name="ws"></a>   
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="06019-273"> 应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-273"> Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-274">尽管<xref:System.Resources.ResourceManager>类支持在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，我们不建议使用。</span><span class="sxs-lookup"><span data-stu-id="06019-274">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="06019-275">仅在开发时使用此类[!INCLUDE[net_portable](~/includes/net-portable-md.md)]可用于项目[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="06019-275">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="06019-276">用于从检索资源[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，使用[Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182)类。</span><span class="sxs-lookup"><span data-stu-id="06019-276">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="06019-277">有关[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，<xref:System.Resources.ResourceManager>类从包资源索引 (PRI) 文件中检索资源。</span><span class="sxs-lookup"><span data-stu-id="06019-277">For [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager> class retrieves resources from package resource index (PRI) files.</span></span> <span data-ttu-id="06019-278">单个 PRI 文件 （应用程序包 PRI 文件） 都包含默认区域性和任何资源本地化的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-278">A single PRI file (the application package PRI file) contains the resources for both the default culture and any localized cultures.</span></span> <span data-ttu-id="06019-279">MakePRI 实用工具用于从一个或多个资源文件为 XML 资源 (.resw) 格式创建 PRI 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-279">You use the MakePRI utility to create a PRI file from one or more resource files that are in XML resource (.resw) format.</span></span> <span data-ttu-id="06019-280">对于 Visual Studio 项目中包含的资源，Visual Studio 处理过程： 创建和自动打包 PRI 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-280">For resources that are included in a Visual Studio project, Visual Studio handles the process of creating and packaging the PRI file automatically.</span></span> <span data-ttu-id="06019-281">然后，可以使用.NET Framework<xref:System.Resources.ResourceManager>类来访问应用程序或库的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-281">You can then use the .NET Framework <xref:System.Resources.ResourceManager> class to access the app's or library's resources.</span></span>  
  
 <span data-ttu-id="06019-282">可以实例化<xref:System.Resources.ResourceManager>对象[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]中的桌面应用程序执行的相同方式应用。</span><span class="sxs-lookup"><span data-stu-id="06019-282">You can instantiate a <xref:System.Resources.ResourceManager> object for a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app in the same way that you do for a desktop app.</span></span>  
  
 <span data-ttu-id="06019-283">然后可以访问特定区域性的资源，并传递要检索到的资源名称<xref:System.Resources.ResourceManager.GetString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-283">You can then access the resources for a particular culture by passing the name of the resource to be retrieved to the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method.</span></span> <span data-ttu-id="06019-284">默认情况下，此方法返回由执行调用的线程的当前 UI 区域性的区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-284">By default, this method returns the resource for the culture determined by the current UI culture of the thread that made the call.</span></span> <span data-ttu-id="06019-285">此外可以通过传递的资源名称检索特定区域性的资源和一个<xref:System.Globalization.CultureInfo>对象，表示要检索到其资源区域性<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-285">You can also retrieve the resources for a specific culture by passing the name of the resource and a <xref:System.Globalization.CultureInfo> object that represents the culture whose resource is to be retrieved to the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method.</span></span> <span data-ttu-id="06019-286">如果找不到当前 UI 区域性或指定的区域性的资源，资源管理器将使用用户界面语言回退列表以找到合适的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-286">If the resource for the current UI culture or the specified culture cannot be found, the resource manager uses a UI language fallback list to locate a suitable resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-287">下面的示例演示如何使用显式区域性和隐式的当前 UI 区域性获取从主程序集和附属程序集的字符串资源。</span><span class="sxs-lookup"><span data-stu-id="06019-287">The following example demonstrates how to use an explicit culture and the implicit current UI culture to obtain string resources from a main assembly and a satellite assembly.</span></span> <span data-ttu-id="06019-288">有关详细信息，请参阅的"目录位置的附属程序集未安装在全局程序集缓存"部分[创建附属程序集](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md)主题。</span><span class="sxs-lookup"><span data-stu-id="06019-288">For more information, see the "Directory Locations for Satellite Assemblies Not Installed in the Global Assembly Cache" section of the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) topic.</span></span>  
  
 <span data-ttu-id="06019-289">若要运行此示例：</span><span class="sxs-lookup"><span data-stu-id="06019-289">To run this example:</span></span>  
  
1.  <span data-ttu-id="06019-290">在 app 目录中，创建名为 rmc.txt，其中包含以下资源字符串的文件：</span><span class="sxs-lookup"><span data-stu-id="06019-290">In the app directory, create a file named rmc.txt that contains the following resource strings:</span></span>  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  <span data-ttu-id="06019-291">使用[资源文件生成器](~/docs/framework/tools/resgen-exe-resource-file-generator.md)从 rmc.txt 输入文件中，如下所示生成 rmc.resources 资源文件：</span><span class="sxs-lookup"><span data-stu-id="06019-291">Use the  [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to generate the rmc.resources resource file from the rmc.txt input file as follows:</span></span>  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  <span data-ttu-id="06019-292">创建应用程序目录的子目录并将其"ES-MX"命名。</span><span class="sxs-lookup"><span data-stu-id="06019-292">Create a subdirectory of the app directory and name it "es-MX".</span></span> <span data-ttu-id="06019-293">这是将在接下来三个步骤中创建的附属程序集的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="06019-293">This is the culture name of the satellite assembly that you will create in the next three steps.</span></span>  
  
4.  <span data-ttu-id="06019-294">创建名为 rmc.es MX.txt ES-MX 目录，其中包含以下资源字符串中的文件：</span><span class="sxs-lookup"><span data-stu-id="06019-294">Create a file named rmc.es-MX.txt in the es-MX directory that contains the following resource strings:</span></span>  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  <span data-ttu-id="06019-295">使用[资源文件生成器](~/docs/framework/tools/resgen-exe-resource-file-generator.md)从 rmc.es MX.txt 输入文件中，如下所示生成 rmc.es MX.resources 资源文件：</span><span class="sxs-lookup"><span data-stu-id="06019-295">Use the  [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) to generate the rmc.es-MX.resources resource file from the rmc.es-MX.txt input file as follows:</span></span>  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  <span data-ttu-id="06019-296">假定此示例中的文件名是 rmc.vb 或 rmc.cs。</span><span class="sxs-lookup"><span data-stu-id="06019-296">Assume that the filename for this example is rmc.vb or rmc.cs.</span></span> <span data-ttu-id="06019-297">将以下源代码复制到一个文件。</span><span class="sxs-lookup"><span data-stu-id="06019-297">Copy the following source code into a file.</span></span> <span data-ttu-id="06019-298">然后对其进行编译并 rmc.resources 的主程序集资源文件嵌入可执行程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-298">Then compile it and embed the main assembly resource file, rmc.resources, in the executable assembly.</span></span> <span data-ttu-id="06019-299">如果使用 Visual Basic 编译器，语法为：</span><span class="sxs-lookup"><span data-stu-id="06019-299">If you are using the Visual Basic compiler, the syntax is:</span></span>  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     <span data-ttu-id="06019-300">C# 编译器的相应语法是：</span><span class="sxs-lookup"><span data-stu-id="06019-300">The corresponding syntax for the C# compiler is:</span></span>  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  <span data-ttu-id="06019-301">使用[程序集链接器](~/docs/framework/tools/al-exe-assembly-linker.md)创建附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-301">Use the  [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) to create a satellite assembly.</span></span> <span data-ttu-id="06019-302">如果应用程序的基名称，rmc 附属程序集名称必须是 rmc.resources.dll。</span><span class="sxs-lookup"><span data-stu-id="06019-302">If the base name of the app is rmc, the satellite assembly name must be rmc.resources.dll.</span></span> <span data-ttu-id="06019-303">应在 ES-MX 目录中创建附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-303">The satellite assembly should be created in the es-MX directory.</span></span> <span data-ttu-id="06019-304">如果 ES-MX 当前目录，请使用此命令：</span><span class="sxs-lookup"><span data-stu-id="06019-304">If es-MX is the current directory, use this command:</span></span>  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  <span data-ttu-id="06019-305">运行 rmc.exe 来获取并显示嵌入的资源字符串。</span><span class="sxs-lookup"><span data-stu-id="06019-305">Run rmc.exe to obtain and display the embedded resource strings.</span></span>  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="06019-306">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="06019-306">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="06019-307">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-307">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06019-308">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class with default values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-308">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-309">此构造函数是仅在编写您自己的类派生自<xref:System.Resources.ResourceManager>类。</span><span class="sxs-lookup"><span data-stu-id="06019-309">This constructor is useful only if you write your own class that derives from  the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager resourceSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource">
          <span data-ttu-id="06019-310">A type from which the resource manager derives all information for finding .resources files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-310">A type from which the resource manager derives all information for finding .resources files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-311">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources in satellite assemblies based on information from the specified type object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-311">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources in satellite assemblies based on information from the specified type object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="06019-312">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-312">Desktop Apps</span></span>  
 <span data-ttu-id="06019-313">在桌面应用中，资源管理器使用`resourceSource`参数加载特定的资源文件，如下所示：</span><span class="sxs-lookup"><span data-stu-id="06019-313">In desktop apps, the resource manager uses the `resourceSource` parameter to load a particular resource file as follows:</span></span>  
  
-   <span data-ttu-id="06019-314">如果<xref:System.Resources.NeutralResourcesLanguageAttribute>属性不用于指示默认区域性的资源位于附属程序集，资源管理器假设默认区域性的资源文件位于相同的程序集中指定的类型`resourceSource`参数。</span><span class="sxs-lookup"><span data-stu-id="06019-314">If the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute is not used to indicate that the resources of the default culture reside in a satellite assembly, the resource manager assumes that the resource file for the default culture is found in the same assembly as the type specified by the `resourceSource` parameter.</span></span>  
  
-   <span data-ttu-id="06019-315">资源管理器假定默认资源文件具有相同的基名称由指定的类型为`resourceSource`参数。</span><span class="sxs-lookup"><span data-stu-id="06019-315">The resource manager assumes that the default resource file has the same base name as the type specified by the `resourceSource` parameter.</span></span>  
  
-   <span data-ttu-id="06019-316">资源管理器使用默认<xref:System.Resources.ResourceSet>类操作的资源文件。</span><span class="sxs-lookup"><span data-stu-id="06019-316">The resource manager uses the default <xref:System.Resources.ResourceSet> class to manipulate the resource file.</span></span>  
  
 <span data-ttu-id="06019-317">例如，给定一个名为 MyCompany.MyProduct.MyType 类型，资源管理器查找.resources 文件中定义 MyType 的程序集名为 MyCompany.MyProduct.MyType.resources。</span><span class="sxs-lookup"><span data-stu-id="06019-317">For example, given a type named MyCompany.MyProduct.MyType, the resource manager looks for a .resources file named MyCompany.MyProduct.MyType.resources in the assembly that defines MyType.</span></span>  
  
 <span data-ttu-id="06019-318">在 Visual Studio 中，资源设计器会自动生成代码以定义`internal`（在 C# 中) 或`Friend`（在 Visual Basic) 类的名称是默认区域性的.resources 文件的基名称相同。</span><span class="sxs-lookup"><span data-stu-id="06019-318">In Visual Studio, the Resource Designer automatically generates code that defines an `internal` (in C#) or `Friend` (in Visual Basic) class whose name is the same as the base name of the .resources file for the default culture.</span></span> <span data-ttu-id="06019-319">这样就可以实例化<xref:System.Resources.ResourceManager>对象，并将它与一组特定的资源通过获取其名称对应于该资源的名称的类型对象，因为资源，只要此类是对编译器可见，必须为嗯。</span><span class="sxs-lookup"><span data-stu-id="06019-319">This makes it possible to instantiate a <xref:System.Resources.ResourceManager> object and couple it with a particular set of resources by getting a type object whose name corresponds to the name of the resource, because as long as the class is visible to the compiler, the resources must be as well.</span></span> <span data-ttu-id="06019-320">例如，如果.resources 文件命名为 Resource1，以下语句实例化<xref:System.Resources.ResourceManager>对象来管理名为 Resource1 的.resources 文件：</span><span class="sxs-lookup"><span data-stu-id="06019-320">For example, if a .resources file is named Resource1, the following statement instantiates a <xref:System.Resources.ResourceManager> object to manage the .resources file named Resource1:</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 <span data-ttu-id="06019-321">如果您不使用 Visual Studio，可以使用没有成员的命名空间和名称都相同的默认.resources 文件创建一个类。</span><span class="sxs-lookup"><span data-stu-id="06019-321">If you're not using Visual Studio, you can create a class with no members whose namespace and name are the same as that of the default .resources file.</span></span> <span data-ttu-id="06019-322">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="06019-322">The example provides an illustration.</span></span>  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="06019-323"> 应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-323"> Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-324">尽管<xref:System.Resources.ResourceManager>类支持在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，我们不建议使用。</span><span class="sxs-lookup"><span data-stu-id="06019-324">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="06019-325">仅在开发时使用此类[!INCLUDE[net_portable](~/includes/net-portable-md.md)]可用于项目[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="06019-325">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="06019-326">用于从检索资源[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，使用[Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182)类。</span><span class="sxs-lookup"><span data-stu-id="06019-326">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="06019-327">在中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，<xref:System.Resources.ResourceManager>使用`resourceSource`参数推断出该程序集、 基名称和资源项可以是位于应用程序的包资源索引 (PRI) 文件的命名空间。</span><span class="sxs-lookup"><span data-stu-id="06019-327">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, <xref:System.Resources.ResourceManager> uses the `resourceSource` parameter to infer the assembly, base name, and the namespace where the resource items can be located within the app's package resource index (PRI) file.</span></span> <span data-ttu-id="06019-328">例如，给定一个名为 MyCompany.MyProduct.MyType 中定义的类型`MyAssembly`，资源管理器的资源集命名为 MyAssembly 的标识符将会查找，并查找该资源组内的范围 MyCompany.MyProduct.MyType。</span><span class="sxs-lookup"><span data-stu-id="06019-328">For example, given a type named MyCompany.MyProduct.MyType that is defined in `MyAssembly`, the resource manager looks for a resource set identifier named MyAssembly and looks for a scope MyCompany.MyProduct.MyType within that resource set.</span></span> <span data-ttu-id="06019-329">资源管理器中搜索该作用域内的默认上下文 （当前区域性、 当前的高对比度设置等） 的资源项。</span><span class="sxs-lookup"><span data-stu-id="06019-329">The resource manager searches for resource items under the default context (current culture, current high contrast setting, and so on) within this scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-330">下面的示例使用<xref:System.Resources.ResourceManager.%23ctor%28System.Type%29>构造函数实例化<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-330">The following example uses the <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> constructor to instantiate a <xref:System.Resources.ResourceManager> object.</span></span> <span data-ttu-id="06019-331">针对英语 (en)、 法语 （法国） (FR-FR) 和俄语 （俄罗斯） (RU-RU).txt 文件中编译的资源组成的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-331">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="06019-332">该示例将当前区域性和当前 UI 区域性更改为英语 （美国）、 法语 （法国）、 俄语 （俄罗斯） 和瑞典语 （瑞典）。</span><span class="sxs-lookup"><span data-stu-id="06019-332">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="06019-333">然后，它调用<xref:System.Resources.ResourceManager.GetString%28System.String%29>方法来检索已本地化的字符串，其中显示了一天的时间取决于一条问候信息。</span><span class="sxs-lookup"><span data-stu-id="06019-333">It then calls the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method to retrieve the localized string, which displays a greeting that depends on the time of day.</span></span>  
  
 <span data-ttu-id="06019-334">该示例需要三个基于文本的资源文件，如以下表中列出。</span><span class="sxs-lookup"><span data-stu-id="06019-334">The example requires three text-based resource files, as listed in the following table.</span></span> <span data-ttu-id="06019-335">每个文件包含名为的字符串资源`Morning`， `Afternoon`，和`Evening`。</span><span class="sxs-lookup"><span data-stu-id="06019-335">Each file includes string resources named `Morning`, `Afternoon`, and `Evening`.</span></span>  
  
|<span data-ttu-id="06019-336">culture</span><span class="sxs-lookup"><span data-stu-id="06019-336">Culture</span></span>|<span data-ttu-id="06019-337">文件名</span><span class="sxs-lookup"><span data-stu-id="06019-337">File name</span></span>|<span data-ttu-id="06019-338">资源名称</span><span class="sxs-lookup"><span data-stu-id="06019-338">Resource name</span></span>|<span data-ttu-id="06019-339">资源值</span><span class="sxs-lookup"><span data-stu-id="06019-339">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="06019-340">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-340">en-US</span></span>|<span data-ttu-id="06019-341">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="06019-341">GreetingResources.txt</span></span>|`Morning`|<span data-ttu-id="06019-342">早上好</span><span class="sxs-lookup"><span data-stu-id="06019-342">Good morning</span></span>|  
|<span data-ttu-id="06019-343">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-343">en-US</span></span>|<span data-ttu-id="06019-344">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="06019-344">GreetingResources.txt</span></span>|`Afternoon`|<span data-ttu-id="06019-345">下午好</span><span class="sxs-lookup"><span data-stu-id="06019-345">Good afternoon</span></span>|  
|<span data-ttu-id="06019-346">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-346">en-US</span></span>|<span data-ttu-id="06019-347">GreetingResources.txt</span><span class="sxs-lookup"><span data-stu-id="06019-347">GreetingResources.txt</span></span>|`Evening`|<span data-ttu-id="06019-348">晚上好</span><span class="sxs-lookup"><span data-stu-id="06019-348">Good evening</span></span>|  
|<span data-ttu-id="06019-349">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-349">fr-FR</span></span>|<span data-ttu-id="06019-350">GreetingResources.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-350">GreetingResources.fr-FR.txt</span></span>|`Morning`|<span data-ttu-id="06019-351">Bonjour</span><span class="sxs-lookup"><span data-stu-id="06019-351">Bonjour</span></span>|  
|<span data-ttu-id="06019-352">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-352">fr-FR</span></span>|<span data-ttu-id="06019-353">GreetingResources.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-353">GreetingResources.fr-FR.txt</span></span>|`Afternoon`|<span data-ttu-id="06019-354">Bonjour</span><span class="sxs-lookup"><span data-stu-id="06019-354">Bonjour</span></span>|  
|<span data-ttu-id="06019-355">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-355">fr-FR</span></span>|<span data-ttu-id="06019-356">GreetingResources.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-356">GreetingResources.fr-FR.txt</span></span>|`Evening`|<span data-ttu-id="06019-357">Bonsoir</span><span class="sxs-lookup"><span data-stu-id="06019-357">Bonsoir</span></span>|  
|<span data-ttu-id="06019-358">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-358">ru-RU</span></span>|<span data-ttu-id="06019-359">GreetingResources.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-359">GreetingResources.ru-RU.txt</span></span>|`Morning`|<span data-ttu-id="06019-360">Доброе утро</span><span class="sxs-lookup"><span data-stu-id="06019-360">Доброе утро</span></span>|  
|<span data-ttu-id="06019-361">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-361">ru-RU</span></span>|<span data-ttu-id="06019-362">GreetingResources.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-362">GreetingResources.ru-RU.txt</span></span>|`Afternoon`|<span data-ttu-id="06019-363">ДОБРЫЙ ДЕНЬ</span><span class="sxs-lookup"><span data-stu-id="06019-363">Добрый день</span></span>|  
|<span data-ttu-id="06019-364">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-364">ru-RU</span></span>|<span data-ttu-id="06019-365">GreetingResources.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-365">GreetingResources.ru-RU.txt</span></span>|`Evening`|<span data-ttu-id="06019-366">ДОБРЫЙ ВЕЧЕР</span><span class="sxs-lookup"><span data-stu-id="06019-366">Добрый вечер</span></span>|  
  
 <span data-ttu-id="06019-367">下面的批处理文件可用于编译 Visual Basic 示例并创建名为 Greet.exe 的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="06019-367">You can use the following batch file to compile the Visual Basic example and create an executable named Greet.exe.</span></span> <span data-ttu-id="06019-368">若要使用 C# 进行编译，更改中的编译器名称`vbc`到`csc`并将文件扩展名从`.vb`到`.cs`。</span><span class="sxs-lookup"><span data-stu-id="06019-368">To compile with C#, change the compiler name from `vbc` to `csc` and the file extension from `.vb` to `.cs`.</span></span>  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 <span data-ttu-id="06019-369">下面是示例 (Visual Basic 版本 ShowDate.vb) 或 ShowDate.cs 代码的 C# 版本的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-369">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version of the code).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 <span data-ttu-id="06019-370">除了定义 app 类名为`Example`的源代码定义的内部类的名称， `GreetingResources`，资源文件的基名称相同。</span><span class="sxs-lookup"><span data-stu-id="06019-370">In addition to defining an app class named `Example`, the source code defines an internal class whose name, `GreetingResources`, is the same as the base name of the resource files.</span></span> <span data-ttu-id="06019-371">这样就可以成功实例化<xref:System.Resources.ResourceManager>对象通过调用<xref:System.Resources.ResourceManager.%23ctor%28System.Type%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="06019-371">This makes it possible to successfully instantiate a <xref:System.Resources.ResourceManager> object by calling the <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> constructor.</span></span>  
  
 <span data-ttu-id="06019-372">请注意，输出显示适当的本地化字符串除非当前 UI 区域性中这种情况下是瑞典语 （瑞典），它使用英语语言资源。</span><span class="sxs-lookup"><span data-stu-id="06019-372">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden), in which case it uses English language resources.</span></span> <span data-ttu-id="06019-373">瑞典语语言资源不可用，因为该应用使用的默认区域性的资源定义的<xref:System.Resources.NeutralResourcesLanguageAttribute>属性，而是。</span><span class="sxs-lookup"><span data-stu-id="06019-373">Because Swedish language resources are unavailable, the app uses the resources of the default culture, as defined by the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute, instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-374">The <paramref name="resourceSource" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-374">The <paramref name="resourceSource" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName">
          <span data-ttu-id="06019-375">The root name of the resource file without its extension but including any fully qualified namespace name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-375">The root name of the resource file without its extension but including any fully qualified namespace name.</span>
          </span>
          <span data-ttu-id="06019-376">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-376">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span>
          </span>
        </param>
        <param name="assembly">
          <span data-ttu-id="06019-377">The main assembly for the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-377">The main assembly for the resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-378">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources contained in files with the specified root name in the given assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-378">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that looks up resources contained in files with the specified root name in the given assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="06019-379">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-379">Desktop Apps</span></span>  
 <span data-ttu-id="06019-380">在桌面应用中，单个特定于区域性的资源文件应包含在附属程序集和默认区域性的资源文件应包含在主程序集中。</span><span class="sxs-lookup"><span data-stu-id="06019-380">In desktop apps, the individual culture-specific resource files should be contained in satellite assemblies, and the default culture's resource file should be contained in the main assembly.</span></span> <span data-ttu-id="06019-381">附属程序集假定包含该程序集清单中指定单个区域性的资源，并在必要时加载。</span><span class="sxs-lookup"><span data-stu-id="06019-381">A satellite assembly is assumed to contain resources for a single culture specified in that assembly's manifest, and is loaded as necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-382">若要从直接而不是检索它们从程序集中的.resources 文件中检索资源，必须调用<xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A>方法改为实例化<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-382">To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method instead to instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="06019-383">如果通过标识的资源文件`baseName`中找不`assembly`，则方法实例化<xref:System.Resources.ResourceManager>对象，但若要检索特定资源的尝试会引发异常，通常<xref:System.Resources.MissingManifestResourceException>。</span><span class="sxs-lookup"><span data-stu-id="06019-383">If the resource file identified by `baseName` cannot be found in `assembly`, the method instantiates a <xref:System.Resources.ResourceManager> object, but the attempt to retrieve a specific resource throws an exception, typically <xref:System.Resources.MissingManifestResourceException>.</span></span> <span data-ttu-id="06019-384">有关诊断异常的原因的信息，请参阅的"处理 MissingManifestResourceException 异常"部分<xref:System.Resources.ResourceManager>类主题。</span><span class="sxs-lookup"><span data-stu-id="06019-384">For information about diagnosing the cause of the exception, see the "Handling the MissingManifestResourceException Exception" section of the <xref:System.Resources.ResourceManager> class topic.</span></span>  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="06019-385"> 应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-385"> Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-386">尽管<xref:System.Resources.ResourceManager>类支持在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，我们不建议使用。</span><span class="sxs-lookup"><span data-stu-id="06019-386">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="06019-387">仅在开发时使用此类[!INCLUDE[net_portable](~/includes/net-portable-md.md)]可用于项目[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="06019-387">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="06019-388">用于从检索资源[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，使用[Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182)类。</span><span class="sxs-lookup"><span data-stu-id="06019-388">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="06019-389">在中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，资源管理器使用的简单名称`assembly`在应用程序的包资源索引 (PRI) 文件中设置参数，以查找匹配的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-389">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the resource manager uses the simple name of the `assembly` parameter to look up a matching resource set in the app's package resource index (PRI) file.</span></span> <span data-ttu-id="06019-390">`baseName`参数用来查找资源集内的资源项。</span><span class="sxs-lookup"><span data-stu-id="06019-390">The `baseName` parameter is used to look up a resource item within the resource set.</span></span> <span data-ttu-id="06019-391">例如，PortableLibrary1.Resource1.de-DE.resources 的根名称是 PortableLibrary1.Resource1。</span><span class="sxs-lookup"><span data-stu-id="06019-391">For example, the root name for PortableLibrary1.Resource1.de-DE.resources is PortableLibrary1.Resource1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-392">下面的示例使用简单的非本地化"Hello World"应用程序来演示<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="06019-392">The following example uses a simple non-localized "Hello World" app to illustrate the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor.</span></span> <span data-ttu-id="06019-393">下面显示了一个名为 ExampleResources.txt 文本文件的内容。</span><span class="sxs-lookup"><span data-stu-id="06019-393">The following shows the contents of a text file named ExampleResources.txt.</span></span> <span data-ttu-id="06019-394">编译应用程序后，资源嵌入主应用程序集中。</span><span class="sxs-lookup"><span data-stu-id="06019-394">When the app is compiled, the resource is embedded in the main app assembly.</span></span>  
  
```  
Greeting=Hello  
```  
  
 <span data-ttu-id="06019-395">该文本文件可以通过使用转换为二进制资源文件在命令提示符下，如下所示：</span><span class="sxs-lookup"><span data-stu-id="06019-395">The text file can be converted to a binary resource file by using the  at the command prompt as follows:</span></span>  
  
```  
resgen ExampleResources.txt  
```  
  
 <span data-ttu-id="06019-396">下面的示例提供了实例化的可执行代码<xref:System.Resources.ResourceManager>对象，将提示用户输入一个名称，并显示一条问候信息。</span><span class="sxs-lookup"><span data-stu-id="06019-396">The following example provides the executable code that instantiates a <xref:System.Resources.ResourceManager> object, prompts the user to enter a name, and displays a greeting.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 <span data-ttu-id="06019-397">它可以在 Visual Basic 中使用以下命令编译：</span><span class="sxs-lookup"><span data-stu-id="06019-397">It can be compiled by using the following command in Visual Basic:</span></span>  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 <span data-ttu-id="06019-398">或通过使用以下命令在 C# 中：</span><span class="sxs-lookup"><span data-stu-id="06019-398">or by using the following command in C#:</span></span>  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 <span data-ttu-id="06019-399">请注意该示例检索到的资源文件包含将传递到该程序集中定义的类型的程序集的引用`typeof`函数 （在 C#) 或`GetType`函数 （在 Visual Basic 中)，并检索其值<xref:System.Type.Assembly%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-399">Note that the example retrieves a reference to the assembly that contains the resource file by passing a type defined in that assembly to the `typeof` function (in C#) or the `GetType` function (in Visual Basic) and retrieving the value of its <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-400">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-400">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="06019-401">
            <para>此构造函数使用系统提供<see cref="T:System.Resources.ResourceSet" />实现。若要使用自定义资源文件格式，应派生自<see cref="T:System.Resources.ResourceSet" />类中重写<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />并<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />方法，并为键入的传入<see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />构造函数。使用自定义<see cref="T:System.Resources.ResourceSet" />控制资源缓存策略或支持您自己的资源文件格式，但通常不是必要的非常有用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-401">
              <para>This constructor uses the system-provided <see cref="T:System.Resources.ResourceSet" /> implementation. To use a custom resource file format, you should derive from the <see cref="T:System.Resources.ResourceSet" /> class, override the <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> methods, and pass that type to the <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> constructor. Using a custom <see cref="T:System.Resources.ResourceSet" /> can be useful for controlling resource caching policy or supporting your own resource file format, but is generally not necessary.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly * Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly, usingResourceSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">
          <span data-ttu-id="06019-402">The root name of the resource file without its extension but including any fully qualified namespace name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-402">The root name of the resource file without its extension but including any fully qualified namespace name.</span>
          </span>
          <span data-ttu-id="06019-403">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-403">For example, the root name for the resource file named MyApplication.MyResource.en-US.resources is MyApplication.MyResource.</span>
          </span>
        </param>
        <param name="assembly">
          <span data-ttu-id="06019-404">The main assembly for the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-404">The main assembly for the resources.</span>
          </span>
        </param>
        <param name="usingResourceSet">
          <span data-ttu-id="06019-405">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-405">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span>
          </span>
          <span data-ttu-id="06019-406">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-406">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-407">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that uses a specified <see cref="T:System.Resources.ResourceSet" /> class to look up resources contained in files with the specified root name in the given assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-407">Initializes a new instance of the <see cref="T:System.Resources.ResourceManager" /> class that uses a specified <see cref="T:System.Resources.ResourceSet" /> class to look up resources contained in files with the specified root name in the given assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-408">单个特定于区域性的资源文件应包含在附属程序集，默认区域性的资源文件应包含在主程序集中。</span><span class="sxs-lookup"><span data-stu-id="06019-408">The individual culture-specific resource files should be contained in satellite assemblies, and the default culture's resource file should be contained in the main assembly.</span></span> <span data-ttu-id="06019-409">附属程序集假定包含该程序集清单中指定单个区域性的资源，并在必要时加载。</span><span class="sxs-lookup"><span data-stu-id="06019-409">A satellite assembly is assumed to contain resources for a single culture specified in that assembly's manifest, and is loaded as necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-410">若要从直接而不是检索它们从程序集中的.resources 文件中检索资源，必须调用<xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A>方法改为实例化<xref:System.Resources.ResourceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-410">To retrieve resources from .resources files directly instead of retrieving them from assemblies, you must call the <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> method instead to instantiate a <xref:System.Resources.ResourceManager> object.</span></span>  
  
 <span data-ttu-id="06019-411">如果通过标识的资源文件`baseName`中找不`assembly`，则方法实例化<xref:System.Resources.ResourceManager>对象，但若要检索特定资源的尝试会引发异常，通常<xref:System.Resources.MissingManifestResourceException>。</span><span class="sxs-lookup"><span data-stu-id="06019-411">If the resource file identified by `baseName` cannot be found in `assembly`, the method instantiates a <xref:System.Resources.ResourceManager> object, but the attempt to retrieve a specific resource throws an exception, typically <xref:System.Resources.MissingManifestResourceException>.</span></span> <span data-ttu-id="06019-412">有关诊断异常的原因的信息，请参阅的"处理 MissingManifestResourceException 异常"部分<xref:System.Resources.ResourceManager>类主题。</span><span class="sxs-lookup"><span data-stu-id="06019-412">For information about diagnosing the cause of the exception, see the "Handling the MissingManifestResourceException Exception" section of the <xref:System.Resources.ResourceManager> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-413">`usingResourceSet`参数用于支持您自己的资源格式，并且通常为`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-413">The `usingResourceSet` parameter is used to support your own resource format, and will commonly be `null`.</span></span> <span data-ttu-id="06019-414">这是从构造函数采用不同<xref:System.Type>仅。</span><span class="sxs-lookup"><span data-stu-id="06019-414">This is different from the constructor that takes a <xref:System.Type> only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="06019-415">
            <paramref name="usingResourceset" /> is not a derived class of <see cref="T:System.Resources.ResourceSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-415">
              <paramref name="usingResourceset" /> is not a derived class of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-416">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-416">The <paramref name="baseName" /> or <paramref name="assembly" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="06019-417">
            <para>此构造函数允许您指定<see cref="T:System.Resources.ResourceSet" />实现。如果不希望特定<see cref="T:System.Resources.ResourceSet" />实现，但希望像若要使用自定义资源文件格式，您应派生自<see cref="T:System.Resources.ResourceSet" />类中重写<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />方法，并将该类型传递给此构造函数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-417">
              <para>This constructor lets you specify a <see cref="T:System.Resources.ResourceSet" /> implementation. If you do not want a specific <see cref="T:System.Resources.ResourceSet" /> implementation but would like to use a custom resource file format, you should derive from the <see cref="T:System.Resources.ResourceSet" /> class, override the <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> methods, and pass that type to this constructor.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseName : string" Usage="System.Resources.ResourceManager.BaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-418">Gets the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-418">Gets the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06019-419">
            <see cref="T:System.Resources.ResourceManager" /> 从其中搜索资源的资源文件的根名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-419">The root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-420"><xref:System.Resources.ResourceManager.BaseName%2A>属性反映了完全限定的命名空间名称和资源文件，而无需其区域性或文件扩展名的根资源名称。</span><span class="sxs-lookup"><span data-stu-id="06019-420">The <xref:System.Resources.ResourceManager.BaseName%2A> property reflects the fully qualified namespace name and the root resource name of a resource file, without its culture or file name extension.</span></span> <span data-ttu-id="06019-421">例如，如果名为应用程序的默认资源文件`SampleApps.StringResources.resources`，值<xref:System.Resources.ResourceManager.BaseName%2A>属性是"SampleApps.StringResources"。</span><span class="sxs-lookup"><span data-stu-id="06019-421">For example, if an app's default resource file is named `SampleApps.StringResources.resources`, the value of the <xref:System.Resources.ResourceManager.BaseName%2A> property  is "SampleApps.StringResources".</span></span> <span data-ttu-id="06019-422">如果应用程序的默认资源文件命名为`SampleApps.StringResources.en-US.resources`嵌入在附属程序集的值和<xref:System.Resources.ResourceManager.BaseName%2A>属性仍然是"SampleApps.StringResources"。</span><span class="sxs-lookup"><span data-stu-id="06019-422">If an app's default resource file is named `SampleApps.StringResources.en-US.resources` and is embedded in a satellite assembly, the value of the <xref:System.Resources.ResourceManager.BaseName%2A> property is still "SampleApps.StringResources".</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-423"><xref:System.Resources.ResourceManager.BaseName%2A>编译和命令行中嵌入的资源文件的属性值不包括命名空间名称，除非您显式包含一个编译该文件时。</span><span class="sxs-lookup"><span data-stu-id="06019-423">The <xref:System.Resources.ResourceManager.BaseName%2A> property value of a resource file that is compiled and embedded from the command line does not include a namespace name unless you explicitly include one when compiling the file.</span></span> <span data-ttu-id="06019-424">另一方面，<xref:System.Resources.ResourceManager.BaseName%2A>编译和通常嵌入在 Visual Studio 环境中的资源文件的属性值包括默认命名空间名称。</span><span class="sxs-lookup"><span data-stu-id="06019-424">On the other hand, the <xref:System.Resources.ResourceManager.BaseName%2A> property value of a resource file that is compiled and embedded within the Visual Studio environment typically does include the default namespace name.</span></span>  
  
 <span data-ttu-id="06019-425"><xref:System.Resources.ResourceManager.BaseName%2A>属性值与相同的字符串传递给<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>或<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29>构造函数实例化时<xref:System.Resources.ResourceManager>实例。</span><span class="sxs-lookup"><span data-stu-id="06019-425">The <xref:System.Resources.ResourceManager.BaseName%2A> property value is the same as the string passed to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> or <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> constructor when instantiating a <xref:System.Resources.ResourceManager> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-426">您可以通过编译并运行以下实用程序确定的嵌入的.resources 文件的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-426">You can determine the names of embedded .resources files by compiling and running the following utility.</span></span> <span data-ttu-id="06019-427">这是一个控制台应用，接受主程序集或附属程序集作为命令行参数的名称。</span><span class="sxs-lookup"><span data-stu-id="06019-427">This is a console app that accepts the name of a main assembly or satellite assembly as a command-line parameter.</span></span> <span data-ttu-id="06019-428">它将显示的字符串，应提供作为`baseName`的参数<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>或<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29>构造函数，以便资源管理器可以正确识别的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-428">It displays the strings that should be provided as the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> or <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> constructor so that the resource manager can correctly identify the resource.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberSignature Language="F#" Value="val mutable BaseNameField : string" Usage="System.Resources.ResourceManager.BaseNameField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-429">Specifies the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-429">Specifies the root name of the resource files that the <see cref="T:System.Resources.ResourceManager" /> searches for resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-430"><xref:System.Resources.ResourceManager.BaseNameField>字段是仅在编写您自己的类派生自<xref:System.Resources.ResourceManager>类。</span><span class="sxs-lookup"><span data-stu-id="06019-430">The <xref:System.Resources.ResourceManager.BaseNameField> field is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="static member CreateFileBasedResourceManager : string * string * Type -&gt; System.Resources.ResourceManager" Usage="System.Resources.ResourceManager.CreateFileBasedResourceManager (baseName, resourceDir, usingResourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="resourceDir" Type="System.String" />
        <Parameter Name="usingResourceSet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseName">
          <span data-ttu-id="06019-431">The root name of the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-431">The root name of the resources.</span>
          </span>
          <span data-ttu-id="06019-432">For example, the root name for the resource file named "MyResource.en-US.resources" is "MyResource".</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-432">For example, the root name for the resource file named "MyResource.en-US.resources" is "MyResource".</span>
          </span>
        </param>
        <param name="resourceDir">
          <span data-ttu-id="06019-433">The name of the directory to search for the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-433">The name of the directory to search for the resources.</span>
          </span>
          <span data-ttu-id="06019-434">
            <c>resourceDir</c> can be an absolute path or a relative path from the application directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-434">
              <c>resourceDir</c> can be an absolute path or a relative path from the application directory.</span>
          </span>
        </param>
        <param name="usingResourceSet">
          <span data-ttu-id="06019-435">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-435">The type of the custom <see cref="T:System.Resources.ResourceSet" /> to use.</span>
          </span>
          <span data-ttu-id="06019-436">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-436">If <see langword="null" />, the default runtime <see cref="T:System.Resources.ResourceSet" /> object is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-437">Returns a <see cref="T:System.Resources.ResourceManager" /> object that searches a specific directory instead of an assembly manifest for resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-437">Returns a <see cref="T:System.Resources.ResourceManager" /> object that searches a specific directory instead of an assembly manifest for resources.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-438">A new instance of a resource manager that searches the specified directory instead of an assembly manifest for resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-438">A new instance of a resource manager that searches the specified directory instead of an assembly manifest for resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-439">此方法返回从不嵌入在程序集中的.resources 文件中检索资源的资源管理器。</span><span class="sxs-lookup"><span data-stu-id="06019-439">This method returns a resource manager that retrieves resources from a .resources file that is not embedded in an assembly.</span></span> <span data-ttu-id="06019-440">可以使用此<xref:System.Resources.ResourceManager>对象加载 ASP.NET 页的资源，或若要测试<xref:System.Resources.ResourceSet>实现。</span><span class="sxs-lookup"><span data-stu-id="06019-440">You can use this <xref:System.Resources.ResourceManager> object to load resources for an ASP.NET page or to test a <xref:System.Resources.ResourceSet> implementation.</span></span>  <span data-ttu-id="06019-441">从独立.resources 文件中检索资源的示例，请参阅[中检索资源](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md)一文。</span><span class="sxs-lookup"><span data-stu-id="06019-441">For an example that retrieves resources from a standalone .resources file, see the [Retrieving Resources](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) article.</span></span>  
  
 <span data-ttu-id="06019-442">此方法允许你指定<xref:System.Resources.ResourceSet>实现。</span><span class="sxs-lookup"><span data-stu-id="06019-442">This method lets you specify a <xref:System.Resources.ResourceSet> implementation.</span></span> <span data-ttu-id="06019-443">如果不希望特定<xref:System.Resources.ResourceSet>实现中，但想要使用自定义资源文件格式，应派生自<xref:System.Resources.ResourceSet>类中重写<xref:System.Resources.ResourceSet.GetDefaultReader%2A>和<xref:System.Resources.ResourceSet.GetDefaultWriter%2A>方法，并将该类型传递给此构造函数。</span><span class="sxs-lookup"><span data-stu-id="06019-443">If you do not want a specific <xref:System.Resources.ResourceSet> implementation, but would like to use a custom resource file format, you should derive from the <xref:System.Resources.ResourceSet> class, override the <xref:System.Resources.ResourceSet.GetDefaultReader%2A> and <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> methods, and pass that type to this constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-444">使用独立.resources 文件在 ASP.NET 应用程序将中断 XCOPY 部署，因为资源保持锁定状态，直到它们被显式释放由<xref:System.Resources.ResourceManager.ReleaseAllResources%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-444">Using standalone .resources files in an ASP.NET app will break XCOPY deployment, because the resources remain locked until they are explicitly released by the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method.</span></span> <span data-ttu-id="06019-445">如果你想要使用 ASP.NET 应用程序部署资源，请在.resources 文件编译到附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-445">If you want to deploy resources with your ASP.NET apps, compile your .resources files into satellite assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-446">The <paramref name="baseName" /> or <paramref name="resourceDir" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-446">The <paramref name="baseName" /> or <paramref name="resourceDir" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-447">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-447">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-448">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-448">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackLocation : System.Resources.UltimateResourceFallbackLocation with get, set" Usage="System.Resources.ResourceManager.FallbackLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-449">Gets or sets the location from which to retrieve default fallback resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-449">Gets or sets the location from which to retrieve default fallback resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06019-450">指定资源管理器能查找回退资源的位置的某个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-450">One of the enumeration values that specifies where the resource manager can look for fallback resources.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-451"><xref:System.Resources.ResourceManager.FallbackLocation%2A>属性很有用，只有在编写您自己的类派生自<xref:System.Resources.ResourceManager>类。</span><span class="sxs-lookup"><span data-stu-id="06019-451">The <xref:System.Resources.ResourceManager.FallbackLocation%2A> property is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 <span data-ttu-id="06019-452">可以使用<xref:System.Resources.NeutralResourcesLanguageAttribute>属性以通知资源管理器在哪里查找应用的默认区域性： 主程序集 （默认值） 或在附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-452">You can use the <xref:System.Resources.NeutralResourcesLanguageAttribute> attribute to inform the resource manager where to find the default culture for an app: in the main assembly (default) or in a satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetNeutralResourcesLanguage : System.Reflection.Assembly -&gt; System.Globalization.CultureInfo" Usage="System.Resources.ResourceManager.GetNeutralResourcesLanguage a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="06019-453">The assembly for which to return culture-specific information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-453">The assembly for which to return culture-specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-454">Returns culture-specific information for the main assembly's default resources by retrieving the value of the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute on a specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-454">Returns culture-specific information for the main assembly's default resources by retrieving the value of the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute on a specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-455">The culture from the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute, if found; otherwise, the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-455">The culture from the <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> attribute, if found; otherwise, the invariant culture.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-456">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-456">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-457">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-457">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="06019-458">Returns the value of the specified non-string resource for the current culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-458">Returns the value of the specified non-string resource for the current culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceManager.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-459">The name of the resource to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-459">The name of the resource to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-460">Returns the value of the specified non-string resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-460">Returns the value of the specified non-string resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-461">The value of the resource localized for the caller's current culture settings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-461">The value of the resource localized for the caller's current culture settings.</span>
          </span>
          <span data-ttu-id="06019-462">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-462">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-463"><xref:System.Resources.ResourceManager.GetObject%2A>方法用于检索非字符串资源。</span><span class="sxs-lookup"><span data-stu-id="06019-463">The <xref:System.Resources.ResourceManager.GetObject%2A> method is used to retrieve non-string resources.</span></span> <span data-ttu-id="06019-464">其中包括如属于基元数据类型的值<xref:System.Int32>或<xref:System.Double>，位图 (如<xref:System.Drawing.Bitmap?displayProperty=nameWithType>对象)，或自定义序列化对象。</span><span class="sxs-lookup"><span data-stu-id="06019-464">These include values that belong to primitive data types such as <xref:System.Int32> or <xref:System.Double>, bitmaps (such as a <xref:System.Drawing.Bitmap?displayProperty=nameWithType> object), or custom serialized objects.</span></span> <span data-ttu-id="06019-465">通常情况下，返回的对象必须强制转换 （在 C#) 或者 （在 Visual Basic) 转换为相应类型的对象。</span><span class="sxs-lookup"><span data-stu-id="06019-465">Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.</span></span>  
  
 <span data-ttu-id="06019-466">返回的资源已本地化为当前线程，由定义的 UI 区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-466">The returned resource is localized for the UI culture of the current thread, which is defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06019-467">如果没有为此区域性本地化该资源，资源管理器使用回退规则加载适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-467">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="06019-468">如果不找到任何可用的已本地化的资源集，则<xref:System.Resources.ResourceManager>回退上默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-468">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-469">如果找不到资源集的默认区域性，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-469">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-470">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-470">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-471"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-471">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-472">此方法会引发更多的异常不是列出。</span><span class="sxs-lookup"><span data-stu-id="06019-472">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="06019-473">这可能会发生的原因之一是此方法调用的方法，如果引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-473">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="06019-474">例如，<xref:System.IO.FileLoadException>可能会引发异常，如果部署或安装附属程序集，造成的错误或<xref:System.Runtime.Serialization.SerializationException>如果反序列化类型的用户定义的类型会引发用户定义的异常，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-474">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="06019-475">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="06019-475">Performance Considerations</span></span>  
 <span data-ttu-id="06019-476">如果您调用<xref:System.Resources.ResourceManager.GetObject%2A>多次使用相同的方法`name`参数，不依赖于方法返回对每次调用相同的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="06019-476">If you call the <xref:System.Resources.ResourceManager.GetObject%2A> method multiple times with the same `name` parameter, do not depend on the method returning a reference to the same object with each call.</span></span> <span data-ttu-id="06019-477">这是因为<xref:System.Resources.ResourceManager.GetObject%2A>方法可以在缓存中，返回对现有的资源对象的引用，或者它可以重新加载资源并返回新的资源对象的引用。</span><span class="sxs-lookup"><span data-stu-id="06019-477">This is because the <xref:System.Resources.ResourceManager.GetObject%2A> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-478">下面的示例使用 <xref:System.Resources.ResourceManager.GetObject%28System.String%29> 方法反序列化一个自定义对象。</span><span class="sxs-lookup"><span data-stu-id="06019-478">The following example uses the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> method to deserialize a custom object.</span></span> <span data-ttu-id="06019-479">该示例包含一个名为 UIElements.cs （如果使用的 Visual Basic 则） 的源代码文件，用于定义名为以下结构`PersonTable`。</span><span class="sxs-lookup"><span data-stu-id="06019-479">The example includes a source code file named UIElements.cs (UIElements.vb if you're using Visual Basic) that defines the following structure named `PersonTable`.</span></span> <span data-ttu-id="06019-480">此结构应由显示表列的本地化名称的常规表显示例程使用。</span><span class="sxs-lookup"><span data-stu-id="06019-480">This structure is intended to be used by a general table display routine that displays the localized names of table columns.</span></span> <span data-ttu-id="06019-481">请注意， `PersonTable` 结构标有 <xref:System.SerializableAttribute> 属性。</span><span class="sxs-lookup"><span data-stu-id="06019-481">Note that the `PersonTable` structure is marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 <span data-ttu-id="06019-482">下面的代码来自名为 CreateResources.cs（对于 Visual Basic 则为 CreateResources.vb）的文件，该代码创建一个名为 UIResources.resx 的 XML 资源文件，该文件存储有表标题和包含已针对英语语言本地化的应用的信息的 `PersonTable` 对象。</span><span class="sxs-lookup"><span data-stu-id="06019-482">The following code from a file named CreateResources.cs (CreateResources.vb for Visual Basic) creates an XML resource file named UIResources.resx that stores a table title and a `PersonTable` object that contains information for an app that is localized for the English language.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 <span data-ttu-id="06019-483">下面的代码位于名为 GetObject.cs (GetObject.vb) 的源代码文件中，然后检索资源并将其显示在控制台上。</span><span class="sxs-lookup"><span data-stu-id="06019-483">The following code in a source code file named GetObject.cs (GetObject.vb) then retrieves the resources and displays them to the console.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 <span data-ttu-id="06019-484">可以生成必要的资源文件和程序集，并通过执行以下批处理文件运行该应用。</span><span class="sxs-lookup"><span data-stu-id="06019-484">You can build the necessary resource file and assemblies and run the app by executing the following batch file.</span></span> <span data-ttu-id="06019-485">必须使用 `/r` 选项提供具有对 UIElements.dll 的引用的 Resgen.exe，以便其能够访问有关 `PersonTable` 结构的信息。</span><span class="sxs-lookup"><span data-stu-id="06019-485">You must use the `/r` option to supply Resgen.exe with a reference to UIElements.dll so that it can access information about the `PersonTable` structure.</span></span> <span data-ttu-id="06019-486">如果使用 C#，请将 `vbc` 编译器名称替换为 `csc`，并将 `.vb` 扩展名替换为 `.cs`。</span><span class="sxs-lookup"><span data-stu-id="06019-486">If you're using C#, replace the `vbc` compiler name with `csc`, and replace the `.vb` extension with `.cs`.</span></span>  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-487">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-487">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-488">No usable set of localized resources has been found, and there are no default culture resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-488">No usable set of localized resources has been found, and there are no default culture resources.</span>
          </span>
          <span data-ttu-id="06019-489">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-489">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-490">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-490">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-491">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-491">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-492">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-492">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-493">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-493">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetObject : string * System.Globalization.CultureInfo -&gt; obj" Usage="resourceManager.GetObject (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-494">The name of the resource to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-494">The name of the resource to get.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="06019-495">The culture for which the resource is localized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-495">The culture for which the resource is localized.</span>
          </span>
          <span data-ttu-id="06019-496">If the resource is not localized for this culture, the resource manager uses fallback rules to locate an appropriate resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-496">If the resource is not localized for this culture, the resource manager uses fallback rules to locate an appropriate resource.</span>
          </span>
          <span data-ttu-id="06019-497">If this value is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> object is obtained by using the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-497">If this value is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> object is obtained by using the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-498">Gets the value of the specified non-string resource localized for the specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-498">Gets the value of the specified non-string resource localized for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-499">The value of the resource, localized for the specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-499">The value of the resource, localized for the specified culture.</span>
          </span>
          <span data-ttu-id="06019-500">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-500">If an appropriate resource set exists but <paramref name="name" /> cannot be found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-501"><xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>方法用于检索非字符串资源。</span><span class="sxs-lookup"><span data-stu-id="06019-501">The <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method is used to retrieve non-string resources.</span></span> <span data-ttu-id="06019-502">其中包括如属于基元数据类型的值<xref:System.Int32>或<xref:System.Double>，位图 (如<xref:System.Drawing.Bitmap?displayProperty=nameWithType>对象)，或自定义序列化对象。</span><span class="sxs-lookup"><span data-stu-id="06019-502">These include values that belong to primitive data types such as <xref:System.Int32> or <xref:System.Double>, bitmaps (such as a <xref:System.Drawing.Bitmap?displayProperty=nameWithType> object), or custom serialized objects.</span></span> <span data-ttu-id="06019-503">通常情况下，返回的对象必须强制转换 （在 C#) 或者 （在 Visual Basic) 转换为相应类型的对象。</span><span class="sxs-lookup"><span data-stu-id="06019-503">Typically, the returned object must be cast (in C#) or converted (in Visual Basic) to an object of the appropriate type.</span></span>  
  
 <span data-ttu-id="06019-504">返回的资源已本地化为指定的区域性`culture`，或由指定区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性如果`culture`是`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-504">The returned resource is localized for the culture that is specified by `culture`, or for the culture that is specified by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property if `culture` is `null`.</span></span> <span data-ttu-id="06019-505">如果没有为此区域性本地化该资源，资源管理器使用回退规则加载适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-505">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="06019-506">如果不找到任何可用的已本地化的资源集，则资源管理器会转而默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-506">If no usable set of localized resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-507">如果找不到资源集的默认区域性，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-507">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-508">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-508">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-509"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-509">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-510">此方法会引发更多的异常不是列出。</span><span class="sxs-lookup"><span data-stu-id="06019-510">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="06019-511">这可能会发生的原因之一是此方法调用的方法，如果引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-511">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="06019-512">例如，<xref:System.IO.FileLoadException>可能会引发异常，如果部署或安装附属程序集，造成的错误或<xref:System.Runtime.Serialization.SerializationException>如果反序列化类型的用户定义的类型会引发用户定义的异常，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-512">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="06019-513">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="06019-513">Performance Considerations</span></span>  
 <span data-ttu-id="06019-514">如果您调用<xref:System.Resources.ResourceManager.GetObject%2A>多次使用相同的方法`name`参数，不依赖于方法返回对每次调用相同的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="06019-514">If you call the <xref:System.Resources.ResourceManager.GetObject%2A> method multiple times with the same `name` parameter, do not depend on the method returning a reference to the same object with each call.</span></span> <span data-ttu-id="06019-515">这是因为<xref:System.Resources.ResourceManager.GetObject%2A>方法可以在缓存中，返回对现有的资源对象的引用，或者它可以重新加载资源并返回新的资源对象的引用。</span><span class="sxs-lookup"><span data-stu-id="06019-515">This is because the <xref:System.Resources.ResourceManager.GetObject%2A> method can return a reference to an existing resource object in a cache, or it can reload the resource and return a reference to a new resource object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-516">下面的示例使用 <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> 方法反序列化一个自定义对象。</span><span class="sxs-lookup"><span data-stu-id="06019-516">The following example uses the <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method to deserialize a custom object.</span></span> <span data-ttu-id="06019-517">该示例包含一个名为 NumberInfo.cs (NumberInfo.vb 如果要使用 Visual Basic) 的源代码文件，用于定义名为以下结构`Numbers`。</span><span class="sxs-lookup"><span data-stu-id="06019-517">The example includes a source code file named NumberInfo.cs (NumberInfo.vb if you're using Visual Basic) that defines the following structure named `Numbers`.</span></span> <span data-ttu-id="06019-518">此结构用于由非英语说话为学生讲述如何计数为 10 英文的简单教育应用程序。</span><span class="sxs-lookup"><span data-stu-id="06019-518">This structure is intended to be used by a simple educational app that teaches non-English speaking students to count to ten in English.</span></span> <span data-ttu-id="06019-519">请注意，`Numbers`类用来标记<xref:System.SerializableAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-519">Note that the `Numbers` class is marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 <span data-ttu-id="06019-520">下面的源代码文件中名为的 CreateResources.cs （对于 Visual Basic 则） 创建 XML 资源文件的默认英语语言，以及法语、 葡萄牙语和俄语语言。</span><span class="sxs-lookup"><span data-stu-id="06019-520">The following source code from a file named CreateResources.cs (CreateResources.vb for Visual Basic) creates XML resource files for the default English language, as well as for the French, Portuguese, and Russian languages.</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 <span data-ttu-id="06019-521">通过以下应用程序，当前 UI 区域性设置为法语 （法国）、 葡萄牙语 （巴西） 或俄语 （俄罗斯） 会占用的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-521">The resources are consumed by the following app, which sets the current UI culture to French (France), Portuguese (Brazil), or Russian (Russia).</span></span> <span data-ttu-id="06019-522">它将调用<xref:System.Resources.ResourceManager.GetObject%28System.String%29>方法以获取`Numbers`对象，其中包含本地化的数字并<xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>方法以获取`Numbers`包含英语语言的数字的对象。</span><span class="sxs-lookup"><span data-stu-id="06019-522">It calls the <xref:System.Resources.ResourceManager.GetObject%28System.String%29> method to get a `Numbers` object that contains localized numbers and the <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> method to get a `Numbers` object that contains English language numbers.</span></span> <span data-ttu-id="06019-523">然后，它显示使用的当前 UI 区域性和英语语言的奇数。</span><span class="sxs-lookup"><span data-stu-id="06019-523">It then displays odd numbers using the current UI culture and the English language.</span></span> <span data-ttu-id="06019-524">源的代码文件命名为 ShowNumbers.cs (ShowNumbers.vb)。</span><span class="sxs-lookup"><span data-stu-id="06019-524">The source code file is named ShowNumbers.cs (ShowNumbers.vb).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 <span data-ttu-id="06019-525">下面的批处理文件可用于生成和执行该示例的 Visual Basic 版本。</span><span class="sxs-lookup"><span data-stu-id="06019-525">You can use the following batch file to build and execute the Visual Basic version of the example.</span></span> <span data-ttu-id="06019-526">如果您正在使用 C#，替换`vbc`与`csc`，并替换`.vb`扩展与`.cs`。</span><span class="sxs-lookup"><span data-stu-id="06019-526">If you're using C#, replace `vbc` with `csc`, and replace the `.vb` extension with `.cs`.</span></span>  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-527">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-527">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-528">No usable set of resources have been found, and there are no default culture resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-528">No usable set of resources have been found, and there are no default culture resources.</span>
          </span>
          <span data-ttu-id="06019-529">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-529">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-530">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-530">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-531">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-531">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-532">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-532">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-533">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-533">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <threadsafe>
          <span data-ttu-id="06019-534">
            <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />方法是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-534">The <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> method is thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceFileName : System.Globalization.CultureInfo -&gt; string&#xA;override this.GetResourceFileName : System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetResourceFileName culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="06019-535">The culture object for which a resource file name is constructed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-535">The culture object for which a resource file name is constructed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-536">Generates the name of the resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-536">Generates the name of the resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-537">The name that can be used for a resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-537">The name that can be used for a resource file for the given <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-538"><xref:System.Resources.ResourceManager.GetResourceFileName%2A>方法是仅在编写您自己的类派生自<xref:System.Resources.ResourceManager>类。</span><span class="sxs-lookup"><span data-stu-id="06019-538">The <xref:System.Resources.ResourceManager.GetResourceFileName%2A> method is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 <span data-ttu-id="06019-539">此方法使用<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>属性而非固定区域性的所有区域性的文件名的一部分。</span><span class="sxs-lookup"><span data-stu-id="06019-539">This method uses the <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property as part of the file name for all cultures other than the invariant culture.</span></span> <span data-ttu-id="06019-540">此方法不会查找在程序集的清单或涉及磁盘，并且仅用于构造资源文件名称 (适合传递到<xref:System.Resources.ResourceReader>构造函数) 或清单资源 blob 名称。</span><span class="sxs-lookup"><span data-stu-id="06019-540">This method does not look in an assembly's manifest or touch the disk, and is used only to construct a resource file name (suitable for passing to the <xref:System.Resources.ResourceReader> constructor) or a manifest resource blob name.</span></span>  
  
 <span data-ttu-id="06019-541">在派生的类可以重写此方法来查找不同的扩展名，如"。ResX"或完全不同的方案为资源文件命名。</span><span class="sxs-lookup"><span data-stu-id="06019-541">A derived class can override this method to look for a different extension, such as ".ResX", or a completely different scheme for naming resource files.</span></span> <span data-ttu-id="06019-542">请注意，自定义资源文件在附属程序集的名称和未自定义的附属程序集本身的名称，可以使用方法。</span><span class="sxs-lookup"><span data-stu-id="06019-542">Note that the method can be used to customize the name of a resource file within a satellite assembly, and not to customize the name of the satellite assembly itself.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-543">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-543">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-544">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-544">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.GetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="06019-545">The culture whose resources are to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-545">The culture whose resources are to be retrieved.</span>
          </span>
        </param>
        <param name="createIfNotExists">
          <span data-ttu-id="06019-546">
            <see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-546">
              <see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="tryParents">
          <span data-ttu-id="06019-547">
            <see langword="true" /> to use resource fallback to load an appropriate resource if the resource set cannot be found; <see langword="false" /> to bypass the resource fallback process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-547">
              <see langword="true" /> to use resource fallback to load an appropriate resource if the resource set cannot be found; <see langword="false" /> to bypass the resource fallback process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-548">Retrieves the resource set for a particular culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-548">Retrieves the resource set for a particular culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-549">The resource set for the specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-549">The resource set for the specified culture.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-550">返回对资源集表示为指定区域性本地化的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-550">The resource set that is returned represents the resources that are localized for the specified culture.</span></span> <span data-ttu-id="06019-551">如果尚未为此区域性本地化资源和`tryParents`是`true`，<xref:System.Resources.ResourceManager.GetResourceSet%2A>使用资源回退规则加载适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-551">If the resources have not been localized for that culture and `tryParents` is `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> uses resource fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="06019-552">如果`tryParents`是`false`并且找不到特定于区域性的资源集，该方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-552">If `tryParents` is `false` and a culture-specific resource set cannot be found, the method returns `null`.</span></span> <span data-ttu-id="06019-553">有关资源回退的详细信息，请参阅"资源回退进程"一节中的[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)一文。</span><span class="sxs-lookup"><span data-stu-id="06019-553">For more information about resource fallback, see "The Resource Fallback Process" section in the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-554">下面的示例调用<xref:System.Resources.ResourceManager.GetResourceSet%2A>方法来检索为法语 （法国） 区域性的区域性特定资源。</span><span class="sxs-lookup"><span data-stu-id="06019-554">The following example calls the <xref:System.Resources.ResourceManager.GetResourceSet%2A> method to retrieve culture-specific resources for the French (France) culture.</span></span> <span data-ttu-id="06019-555">然后，枚举中的所有资源的资源集。</span><span class="sxs-lookup"><span data-stu-id="06019-555">It then enumerates all of the resources in the resource set.</span></span> <span data-ttu-id="06019-556">它包含名为 ShowNumbers.exe 的可执行文件的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-556">It contains the source code for an executable named ShowNumbers.exe.</span></span> <span data-ttu-id="06019-557">它还包括以下两个文本文件，其中包含的数字名称。</span><span class="sxs-lookup"><span data-stu-id="06019-557">It also includes the following two text file that contain the names of numbers.</span></span> <span data-ttu-id="06019-558">第一个 NumberResources.txt，包含从 1 到 10 的英语语言中的数字的名称：</span><span class="sxs-lookup"><span data-stu-id="06019-558">The first, NumberResources.txt, contains the names of numbers from one to ten in the English language:</span></span>  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 <span data-ttu-id="06019-559">第二个 NumberResources.fr-FR.txt，包含一到四个法语语言中的数字的名称：</span><span class="sxs-lookup"><span data-stu-id="06019-559">The second, NumberResources.fr-FR.txt, contains the names of numbers from one to four in the French language:</span></span>  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 <span data-ttu-id="06019-560">可以使用批处理文件生成资源文件，将英语语言资源文件嵌入到可执行文件，并创建的法语语言资源的附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-560">You can use a batch file to generate the resource files, embed the English language resource file into the executable, and create a satellite assembly for the French language resources.</span></span> <span data-ttu-id="06019-561">下面是批处理文件，以便使用 Visual Baisc 编译器生成可执行文件：</span><span class="sxs-lookup"><span data-stu-id="06019-561">Here's the batch file to generate an executable by using the Visual Baisc compiler:</span></span>  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 <span data-ttu-id="06019-562">对于 C# 编译器，可以使用以下批处理文件：</span><span class="sxs-lookup"><span data-stu-id="06019-562">For the C# compiler, you can use the following batch file:</span></span>  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 <span data-ttu-id="06019-563">请注意，如果您更改的值`createIfNotExists`自变量`false`，方法调用返回`null`，因为资源管理器尚未加载法语资源。</span><span class="sxs-lookup"><span data-stu-id="06019-563">Note that if you change the value of the `createIfNotExists` argument to `false`, the method call returns `null`, since Resource Manager has not already loaded the French language resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-564">The <paramref name="culture" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-564">The <paramref name="culture" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-565">
            <paramref name="tryParents" /> is <see langword="true" />, no usable set of resources has been found, and there are no default culture resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-565">
              <paramref name="tryParents" /> is <see langword="true" />, no usable set of resources has been found, and there are no default culture resources.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-566">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-566">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-567">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-567">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetSatelliteContractVersion : System.Reflection.Assembly -&gt; Version" Usage="System.Resources.ResourceManager.GetSatelliteContractVersion a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="06019-568">The assembly to check for the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-568">The assembly to check for the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-569">Returns the version specified by the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute in the given assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-569">Returns the version specified by the <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> attribute in the given assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-570">The satellite contract version of the given assembly, or <see langword="null" /> if no version was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-570">The satellite contract version of the given assembly, or <see langword="null" /> if no version was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-571">附属程序集版本控制的详细信息，请参阅<xref:System.Resources.SatelliteContractVersionAttribute>参考主题。</span><span class="sxs-lookup"><span data-stu-id="06019-571">For more information about satellite assembly versioning, see the <xref:System.Resources.SatelliteContractVersionAttribute> reference topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="06019-572">The <see cref="T:System.Version" /> found in the assembly <paramref name="a" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-572">The <see cref="T:System.Version" /> found in the assembly <paramref name="a" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-573">
            <paramref name="a" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-573">
              <paramref name="a" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-574">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-574">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-575">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-575">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="06019-576">Returns an unmanaged memory stream object from a specified resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-576">Returns an unmanaged memory stream object from a specified resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-577">The name of a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-577">The name of a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-578">Returns an unmanaged memory stream object from the specified resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-578">Returns an unmanaged memory stream object from the specified resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-579">An unmanaged memory stream object that represents a resource .</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-579">An unmanaged memory stream object that represents a resource .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-580"><xref:System.Resources.ResourceManager.GetStream%2A>方法采用存储为资源的名称<xref:System.IO.MemoryStream>对象，获取的值<xref:System.Object>资源，并返回<xref:System.IO.UnmanagedMemoryStream>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-580">The <xref:System.Resources.ResourceManager.GetStream%2A> method takes the name of a resource that is stored as a <xref:System.IO.MemoryStream> object, gets the value of the <xref:System.Object> resource, and returns an <xref:System.IO.UnmanagedMemoryStream> object.</span></span> <span data-ttu-id="06019-581">它需要直接使用流的字节，然后转换成对象起作用。</span><span class="sxs-lookup"><span data-stu-id="06019-581">It requires that you work directly with a stream of bytes, which you then convert to an object.</span></span> <span data-ttu-id="06019-582">此方法很有用主要是出于性能原因： 检索作为字节流而不是显式的对象可以提高性能。</span><span class="sxs-lookup"><span data-stu-id="06019-582">This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.</span></span>  
  
 <span data-ttu-id="06019-583">返回的资源已本地化为当前线程，由定义的 UI 区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-583">The returned resource is localized for the UI culture of the current thread, which is defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06019-584">如果没有为此区域性本地化该资源，资源管理器使用回退规则加载适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-584">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="06019-585">如果不找到任何可用的已本地化的资源集，则<xref:System.Resources.ResourceManager>回退上默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-585">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-586">如果找不到资源集的默认区域性，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-586">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-587">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-587">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-588"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-588">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-589">下面的示例使用 <xref:System.Resources.ResourceManager.GetStream%28System.String%29> 方法检索应用启动初始窗口中使用的位图。</span><span class="sxs-lookup"><span data-stu-id="06019-589">The following example uses the <xref:System.Resources.ResourceManager.GetStream%28System.String%29> method to retrieve a bitmap that is used in an app's opening splash window.</span></span> <span data-ttu-id="06019-590">以下名为的文件从源代码 CreateResources.cs （对于 C#) 或 （对于 Visual Basic) 则会生成一个名为 AppResources.resx 包含序列化的图像的.resx 文件。</span><span class="sxs-lookup"><span data-stu-id="06019-590">The following source code from a file named CreateResources.cs (for C#) or CreateResources.vb (for Visual Basic) generates a .resx file named AppResources.resx that contains the serialized image.</span></span> <span data-ttu-id="06019-591">在这种情况下，图片从一个名为 SplashScreen.jpg 的文件中加载；可以修改文件名以替换你自己的图像。</span><span class="sxs-lookup"><span data-stu-id="06019-591">In this case, the image is loaded from a file named SplashScreen.jpg; you can modify the file name to substitute your own image.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 <span data-ttu-id="06019-592">下面的代码从名 GetStream.cs 为 （适用于 C# 中) 的文件或 GetStream.vb （适用于 Visual Basic 中) 然后检索资源，并显示在图像<xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType>控件。</span><span class="sxs-lookup"><span data-stu-id="06019-592">The following code from a file named GetStream.cs (for C#) or GetStream.vb (for Visual Basic) then retrieves the resource and displays the image in a <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 <span data-ttu-id="06019-593">可以使用以下批处理文件生成 C# 示例。</span><span class="sxs-lookup"><span data-stu-id="06019-593">You can use the following batch file to build the C# example.</span></span> <span data-ttu-id="06019-594">对于 Visual Basic 中，更改`csc`到`vbc`，并将从源代码文件的扩展名更改`.cs`到`.vb`...</span><span class="sxs-lookup"><span data-stu-id="06019-594">For Visual Basic, change `csc` to `vbc`, and change the extension of the source code file from `.cs` to `.vb`..</span></span>  
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="06019-595">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-595">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-596">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-596">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-597">No usable set of resources is found, and there are no default resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-597">No usable set of resources is found, and there are no default resources.</span>
          </span>
          <span data-ttu-id="06019-598">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-598">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-599">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-599">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-600">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-600">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-601">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-601">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-602">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-602">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string * System.Globalization.CultureInfo -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-603">The name of a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-603">The name of a resource.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="06019-604">An  object that specifies the culture to use for the resource lookup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-604">An  object that specifies the culture to use for the resource lookup.</span>
          </span>
          <span data-ttu-id="06019-605">If <c>culture</c> is <see langword="null" />, the culture for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-605">If <c>culture</c> is <see langword="null" />, the culture for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-606">Returns an unmanaged memory stream object from the specified resource, using the specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-606">Returns an unmanaged memory stream object from the specified resource, using the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-607">An unmanaged memory stream object that represents a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-607">An unmanaged memory stream object that represents a resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-608"><xref:System.Resources.ResourceManager.GetStream%2A>方法采用存储为资源的名称<xref:System.IO.MemoryStream>对象，获取的值<xref:System.Object>资源，并返回<xref:System.IO.UnmanagedMemoryStream>对象。</span><span class="sxs-lookup"><span data-stu-id="06019-608">The <xref:System.Resources.ResourceManager.GetStream%2A> method takes the name of a resource that is stored as a <xref:System.IO.MemoryStream> object, gets the value of the <xref:System.Object> resource, and returns an <xref:System.IO.UnmanagedMemoryStream> object.</span></span> <span data-ttu-id="06019-609">它需要直接使用流的字节，然后转换成对象起作用。</span><span class="sxs-lookup"><span data-stu-id="06019-609">It requires that you work directly with a stream of bytes, which you then convert to an object.</span></span> <span data-ttu-id="06019-610">此方法很有用主要是出于性能原因： 检索作为字节流而不是显式的对象可以提高性能。</span><span class="sxs-lookup"><span data-stu-id="06019-610">This method is useful primarily for performance reasons: Retrieving a resource as a byte stream instead of an explicit object can improve performance.</span></span>  
  
 <span data-ttu-id="06019-611">返回的资源已本地化为指定的区域性`culture`，或由指定区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性如果`culture`是`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-611">The returned resource is localized for the culture that is specified by `culture`, or for the culture that is specified by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property if `culture` is `null`.</span></span> <span data-ttu-id="06019-612">如果没有为此区域性本地化该资源，资源管理器使用回退规则加载适当的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-612">If the resource is not localized for that culture, the resource manager uses fallback rules to load an appropriate resource.</span></span> <span data-ttu-id="06019-613">如果不找到任何可用的已本地化的资源集，则<xref:System.Resources.ResourceManager>回退上默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-613">If no usable set of localized resources is found, the <xref:System.Resources.ResourceManager> falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-614">如果找不到资源集的默认区域性，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-614">If a resource set for the default culture is not found, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-615">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-615">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-616"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-616">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="06019-617">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-617">The value of the specified resource is not a <see cref="T:System.IO.MemoryStream" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-618">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-618">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-619">No usable set of resources is found, and there are no default resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-619">No usable set of resources is found, and there are no default resources.</span>
          </span>
          <span data-ttu-id="06019-620">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-620">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-621">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-621">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-622">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-622">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-623">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-623">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-624">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-624">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="06019-625">Returns the specified string resource for the specified culture or current UI culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-625">Returns the specified string resource for the specified culture or current UI culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceManager.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-626">The name of the resource to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-626">The name of the resource to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-627">Returns the value of the specified string resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-627">Returns the value of the specified string resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-628">The value of the resource localized for the caller's current UI culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-628">The value of the resource localized for the caller's current UI culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="06019-629">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-629">Desktop Apps</span></span>  
 <span data-ttu-id="06019-630">桌面应用程序，则返回的资源已本地化为当前线程的 UI 区域性定义的<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-630">In desktop apps, the resource that is returned is localized for the UI culture of the current thread, as defined by the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06019-631">如果尚未为此区域性本地化该资源，资源管理器探测资源的"资源回退进程"部分中所述的步骤[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)一文。</span><span class="sxs-lookup"><span data-stu-id="06019-631">If the resource has not been localized for that culture, the resource manager probes for a resource by following the steps outlined in the "Resource Fallback Process" section of the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) article.</span></span> <span data-ttu-id="06019-632">如果不找到任何可用的已本地化的资源集，则资源管理器会转而默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-632">If no usable set of localized resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-633">如果资源管理器无法加载默认区域性的资源集，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-633">If the resource manager cannot load the default culture's resource set, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-634">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-634">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-635"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-635">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-636">此方法会引发更多的异常不是列出。</span><span class="sxs-lookup"><span data-stu-id="06019-636">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="06019-637">这可能会发生的原因之一是此方法调用的方法，如果引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-637">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="06019-638">例如，<xref:System.IO.FileLoadException>可能会引发异常，如果部署或安装附属程序集，造成的错误或<xref:System.Runtime.Serialization.SerializationException>如果反序列化类型的用户定义的类型会引发用户定义的异常，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-638">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="06019-639"> 应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-639"> Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-640">尽管<xref:System.Resources.ResourceManager>类支持在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，我们不建议使用。</span><span class="sxs-lookup"><span data-stu-id="06019-640">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="06019-641">仅在开发时使用此类[!INCLUDE[net_portable](~/includes/net-portable-md.md)]可用于项目[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="06019-641">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="06019-642">用于从检索资源[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，使用[Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182)类。</span><span class="sxs-lookup"><span data-stu-id="06019-642">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="06019-643">在中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，<xref:System.Resources.ResourceManager.GetString%28System.String%29>方法将返回的值`name`字符串调用方的当前 UI 区域性设置为本地化的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-643">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager.GetString%28System.String%29> method returns the value of the `name` string resource, localized for the caller's current UI culture settings.</span></span> <span data-ttu-id="06019-644">区域性列表派生自操作系统的首选的 UI 语言列表。</span><span class="sxs-lookup"><span data-stu-id="06019-644">The list of cultures is derived from the operating system's preferred UI language list.</span></span> <span data-ttu-id="06019-645">如果资源管理器不能与匹配`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-645">If the resource manager cannot match `name`, the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-646">下面的示例使用<xref:System.Resources.ResourceManager.GetString%2A>方法来检索特定于区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-646">The following example uses the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="06019-647">针对英语 (en)、 法语 （法国） (FR-FR) 和俄语 （俄罗斯） (RU-RU).txt 文件中编译的资源组成的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-647">It consists of resources compiled from .txt files for the English (en), French (France) (fr-FR), and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="06019-648">该示例将当前区域性和当前 UI 区域性更改为英语 （美国）、 法语 （法国）、 俄语 （俄罗斯） 和瑞典语 （瑞典）。</span><span class="sxs-lookup"><span data-stu-id="06019-648">The example changes the current culture and current UI culture to English (United States), French (France), Russian (Russia), and Swedish (Sweden).</span></span> <span data-ttu-id="06019-649">然后，它调用<xref:System.Resources.ResourceManager.GetString%2A>方法来检索它的当前日期和月份一起显示的本地化的字符串。</span><span class="sxs-lookup"><span data-stu-id="06019-649">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method to retrieve the localized string, which it displays along with the current day and month.</span></span> <span data-ttu-id="06019-650">请注意，输出会显示除了当前 UI 区域性是瑞典语 （瑞典） 之外的相应本地化的字符串。</span><span class="sxs-lookup"><span data-stu-id="06019-650">Notice that the output displays the appropriate localized string except when the current UI culture is Swedish (Sweden).</span></span> <span data-ttu-id="06019-651">瑞典语语言资源不可用，因为该应用将改为使用的是英语的默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-651">Because Swedish language resources are unavailable, the app instead uses the resources of the default culture, which is English.</span></span> <span data-ttu-id="06019-652">该示例需要下表中列出的基于文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="06019-652">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="06019-653">每个都有一个名为的单个字符串资源`DateStart`。</span><span class="sxs-lookup"><span data-stu-id="06019-653">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="06019-654">culture</span><span class="sxs-lookup"><span data-stu-id="06019-654">Culture</span></span>|<span data-ttu-id="06019-655">文件名</span><span class="sxs-lookup"><span data-stu-id="06019-655">File name</span></span>|<span data-ttu-id="06019-656">资源名称</span><span class="sxs-lookup"><span data-stu-id="06019-656">Resource name</span></span>|<span data-ttu-id="06019-657">资源值</span><span class="sxs-lookup"><span data-stu-id="06019-657">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="06019-658">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-658">en-US</span></span>|<span data-ttu-id="06019-659">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="06019-659">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="06019-660">假设今天是</span><span class="sxs-lookup"><span data-stu-id="06019-660">Today is</span></span>|  
|<span data-ttu-id="06019-661">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-661">fr-FR</span></span>|<span data-ttu-id="06019-662">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-662">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="06019-663">Aujourd'hui，c'est le</span><span class="sxs-lookup"><span data-stu-id="06019-663">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="06019-664">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-664">ru-RU</span></span>|<span data-ttu-id="06019-665">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-665">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="06019-666">Сегодня</span><span class="sxs-lookup"><span data-stu-id="06019-666">Сегодня</span></span>|  
  
 <span data-ttu-id="06019-667">可以使用以下批处理文件来编译 C# 示例。</span><span class="sxs-lookup"><span data-stu-id="06019-667">You can use the following batch file to compile the C# example.</span></span> <span data-ttu-id="06019-668">对于 Visual Basic，将 `csc` 更改为 `vbc`，并将源代码文件的扩展名由 `.cs` 更改为 `.vb`。</span><span class="sxs-lookup"><span data-stu-id="06019-668">For Visual Basic, change `csc` to `vbc`, and change the extension of the source code file from `.cs` to `.vb`.</span></span>  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 <span data-ttu-id="06019-669">下面是示例 (Visual Basic 版本 ShowDate.vb) 或 ShowDate.cs 对于 C# 版本的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-669">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-670">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-670">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="06019-671">The value of the specified resource is not a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-671">The value of the specified resource is not a string.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-672">No usable set of resources has been found, and there are no resources for the default culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-672">No usable set of resources has been found, and there are no resources for the default culture.</span>
          </span>
          <span data-ttu-id="06019-673">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-673">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-674">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-674">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-675">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-675">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-676">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-676">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-677">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-677">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <threadsafe>
          <span data-ttu-id="06019-678">
            <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />方法是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-678">The <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> method is thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * System.Globalization.CultureInfo -&gt; string&#xA;override this.GetString : string * System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetString (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="06019-679">The name of the resource to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-679">The name of the resource to retrieve.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="06019-680">An object that represents the culture for which the resource is localized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-680">An object that represents the culture for which the resource is localized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-681">Returns the value of the string resource localized for the specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-681">Returns the value of the string resource localized for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-682">The value of the resource localized for the specified culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-682">The value of the resource localized for the specified culture, or <see langword="null" /> if <paramref name="name" /> cannot be found in a resource set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a><span data-ttu-id="06019-683">桌面应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-683">Desktop Apps</span></span>  
 <span data-ttu-id="06019-684">在桌面应用中，如果`culture`是`null`，则<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>方法使用从获取的当前 UI 区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="06019-684">In desktop apps, if `culture` is `null`, the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method uses the current UI culture obtained from the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06019-685">为指定的区域性本地化该资源返回`culture`参数。</span><span class="sxs-lookup"><span data-stu-id="06019-685">The resource that is returned is localized for the culture specified by the `culture` parameter.</span></span> <span data-ttu-id="06019-686">如果没有为本地化资源`culture`，资源管理器探测资源的"资源回退进程"部分中所述的步骤[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)主题。</span><span class="sxs-lookup"><span data-stu-id="06019-686">If the resource has not been localized for `culture`, the resource manager probes for a resource by following the steps outlined in the "Resource Fallback Process" section of the [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topic.</span></span> <span data-ttu-id="06019-687">如果不找到任何可用的资源集，则资源管理器会转而默认区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-687">If no usable set of resources is found, the resource manager falls back on the default culture's resources.</span></span> <span data-ttu-id="06019-688">如果资源管理器无法加载默认区域性的资源集，该方法将引发<xref:System.Resources.MissingManifestResourceException>异常或资源集应驻留在附属程序集中，<xref:System.Resources.MissingSatelliteAssemblyException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-688">If the resource manager cannot load the default culture's resource set, the method throws a <xref:System.Resources.MissingManifestResourceException> exception or, if the resource set is expected to reside in a satellite assembly, a <xref:System.Resources.MissingSatelliteAssemblyException> exception.</span></span> <span data-ttu-id="06019-689">如果资源管理器可以加载相应的资源设置，但找不到一个名为资源`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-689">If the resource manager can load an appropriate resource set but cannot find a resource named `name`, the method returns `null`.</span></span>  
  
 <span data-ttu-id="06019-690"><xref:System.Resources.ResourceManager.IgnoreCase%2A>属性确定是否的比较`name`的资源名称不区分大小写 （默认值） 或区分大小写。</span><span class="sxs-lookup"><span data-stu-id="06019-690">The <xref:System.Resources.ResourceManager.IgnoreCase%2A> property determines whether the comparison of `name` with the names of resources is case-insensitive (the default) or case-sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06019-691">此方法会引发更多的异常不是列出。</span><span class="sxs-lookup"><span data-stu-id="06019-691">This method can throw more exceptions than are listed.</span></span> <span data-ttu-id="06019-692">这可能会发生的原因之一是此方法调用的方法，如果引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-692">One reason this might occur is if a method that this method calls throws an exception.</span></span>  <span data-ttu-id="06019-693">例如，<xref:System.IO.FileLoadException>可能会引发异常，如果部署或安装附属程序集，造成的错误或<xref:System.Runtime.Serialization.SerializationException>如果反序列化类型的用户定义的类型会引发用户定义的异常，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="06019-693">For example, a <xref:System.IO.FileLoadException> exception might be thrown if an error was made deploying or installing a satellite assembly, or a <xref:System.Runtime.Serialization.SerializationException> exception might be thrown if a user-defined type throws a user-defined exception when the type is deserialized.</span></span>  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="06019-694"> 应用程序</span><span class="sxs-lookup"><span data-stu-id="06019-694"> Apps</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06019-695">尽管<xref:System.Resources.ResourceManager>类支持在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，我们不建议使用。</span><span class="sxs-lookup"><span data-stu-id="06019-695">Although the <xref:System.Resources.ResourceManager> class is supported in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, we do not recommend its use.</span></span> <span data-ttu-id="06019-696">仅在开发时使用此类[!INCLUDE[net_portable](~/includes/net-portable-md.md)]可用于项目[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。</span><span class="sxs-lookup"><span data-stu-id="06019-696">Use this class only when you develop [!INCLUDE[net_portable](~/includes/net-portable-md.md)] projects that can be used with [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="06019-697">用于从检索资源[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用，使用[Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182)类。</span><span class="sxs-lookup"><span data-stu-id="06019-697">To retrieve resources from [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, use the [Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) class instead.</span></span>  
  
 <span data-ttu-id="06019-698">在中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>方法将返回的值`name`字符串由指定区域性本地化的资源`culture`参数。</span><span class="sxs-lookup"><span data-stu-id="06019-698">In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method returns the value of the `name` string resource, localized for the culture specified by the `culture` parameter.</span></span> <span data-ttu-id="06019-699">如果没有为本地化资源`culture`区域性，查找使用整个[!INCLUDE[win8](~/includes/win8-md.md)]语言回退列表中，并查看默认区域性中后的停止。</span><span class="sxs-lookup"><span data-stu-id="06019-699">If the resource is not localized for the `culture` culture, the lookup uses the entire [!INCLUDE[win8](~/includes/win8-md.md)] language fallback list, and stops after looking in the default culture.</span></span> <span data-ttu-id="06019-700">如果资源管理器不能与匹配`name`，该方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="06019-700">If the resource manager cannot match `name`, the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06019-701">下面的示例使用<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>方法来检索特定于区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-701">The following example uses the <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> method to retrieve culture-specific resources.</span></span> <span data-ttu-id="06019-702">该示例的默认区域性为英语 (en)，并为法语 （法国） (FR-FR) 和俄语 （俄罗斯） (RU-RU) 包括附属程序集的区域性。</span><span class="sxs-lookup"><span data-stu-id="06019-702">The example's default culture is English (en), and it includes satellite assemblies for the French (France) (fr-FR) and Russian (Russia) (ru-RU) cultures.</span></span> <span data-ttu-id="06019-703">该示例将当前区域性和更改当前 UI 区域性为俄语 （俄罗斯） 之前调用<xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>。</span><span class="sxs-lookup"><span data-stu-id="06019-703">The example changes the current culture and current UI culture to Russian (Russia) before calling <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>.</span></span> <span data-ttu-id="06019-704">然后，它调用<xref:System.Resources.ResourceManager.GetString%2A>方法和<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法，并传递<xref:System.Globalization.CultureInfo>代表每个方法的法语 （法国） 和瑞典语 （瑞典） 区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="06019-704">It then calls the <xref:System.Resources.ResourceManager.GetString%2A> method and the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method and passes <xref:System.Globalization.CultureInfo> objects that represent the French (France) and Swedish (Sweden) cultures to each method.</span></span> <span data-ttu-id="06019-705">在输出中，月和日的月份，以及其前面的字符串以法语显示，因为<xref:System.Resources.ResourceManager.GetString%2A>方法是可以检索法语资源。</span><span class="sxs-lookup"><span data-stu-id="06019-705">In the output, the month and day of the month as well as the string that precedes them appear in French, because the <xref:System.Resources.ResourceManager.GetString%2A> method is able to retrieve the French language resource.</span></span> <span data-ttu-id="06019-706">但是，当使用瑞典语 （瑞典） 区域性，月和日的月份出现在瑞典语虽然其前面的字符串以英语显示。</span><span class="sxs-lookup"><span data-stu-id="06019-706">However, when the Swedish (Sweden) culture is used, the month and day of the month appear in Swedish, although the string that precedes them is in English.</span></span> <span data-ttu-id="06019-707">这是因为资源管理器找不到本地化的瑞典语语言资源，使其改为返回默认英语区域性的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-707">This is because the resource manager cannot find localized Swedish language resources, so it returns a resource for the default English culture instead.</span></span>  
  
 <span data-ttu-id="06019-708">该示例需要下表中列出的基于文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="06019-708">The example requires the text-based resource files listed in following table.</span></span> <span data-ttu-id="06019-709">每个都有一个名为的单个字符串资源`DateStart`。</span><span class="sxs-lookup"><span data-stu-id="06019-709">Each has a single string resource named `DateStart`.</span></span>  
  
|<span data-ttu-id="06019-710">culture</span><span class="sxs-lookup"><span data-stu-id="06019-710">Culture</span></span>|<span data-ttu-id="06019-711">文件名</span><span class="sxs-lookup"><span data-stu-id="06019-711">File name</span></span>|<span data-ttu-id="06019-712">资源名称</span><span class="sxs-lookup"><span data-stu-id="06019-712">Resource name</span></span>|<span data-ttu-id="06019-713">资源值</span><span class="sxs-lookup"><span data-stu-id="06019-713">Resource value</span></span>|  
|-------------|---------------|-------------------|--------------------|  
|<span data-ttu-id="06019-714">en-US</span><span class="sxs-lookup"><span data-stu-id="06019-714">en-US</span></span>|<span data-ttu-id="06019-715">DateStrings.txt</span><span class="sxs-lookup"><span data-stu-id="06019-715">DateStrings.txt</span></span>|`DateStart`|<span data-ttu-id="06019-716">假设今天是</span><span class="sxs-lookup"><span data-stu-id="06019-716">Today is</span></span>|  
|<span data-ttu-id="06019-717">fr-FR</span><span class="sxs-lookup"><span data-stu-id="06019-717">fr-FR</span></span>|<span data-ttu-id="06019-718">DateStrings.fr-FR.txt</span><span class="sxs-lookup"><span data-stu-id="06019-718">DateStrings.fr-FR.txt</span></span>|`DateStart`|<span data-ttu-id="06019-719">Aujourd'hui，c'est le</span><span class="sxs-lookup"><span data-stu-id="06019-719">Aujourd'hui, c'est le</span></span>|  
|<span data-ttu-id="06019-720">ru-RU</span><span class="sxs-lookup"><span data-stu-id="06019-720">ru-RU</span></span>|<span data-ttu-id="06019-721">DateStrings.ru-RU.txt</span><span class="sxs-lookup"><span data-stu-id="06019-721">DateStrings.ru-RU.txt</span></span>|`DateStart`|<span data-ttu-id="06019-722">Сегодня</span><span class="sxs-lookup"><span data-stu-id="06019-722">Сегодня</span></span>|  
  
 <span data-ttu-id="06019-723">可以使用以下批处理文件来编译 Visual Basic 示例。</span><span class="sxs-lookup"><span data-stu-id="06019-723">You can use the following batch file to compile the Visual Basic example.</span></span> <span data-ttu-id="06019-724">若要编译在 C# 中，更改`vbc`到`csc`，并将从源代码文件的扩展名更改`.vb`到`.cs`。</span><span class="sxs-lookup"><span data-stu-id="06019-724">To compile in C#, change `vbc` to `csc`, and change the extension of the source code file from `.vb` to `.cs`.</span></span>  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 <span data-ttu-id="06019-725">下面是示例 (Visual Basic 版本 ShowDate.vb) 或 ShowDate.cs 对于 C# 版本的源代码。</span><span class="sxs-lookup"><span data-stu-id="06019-725">Here's the source code for the example (ShowDate.vb for the Visual Basic version or ShowDate.cs for the C# version).</span></span>  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06019-726">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-726">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="06019-727">The value of the specified resource is not a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-727">The value of the specified resource is not a string.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-728">No usable set of resources has been found, and there are no resources for a default culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-728">No usable set of resources has been found, and there are no resources for a default culture.</span>
          </span>
          <span data-ttu-id="06019-729">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-729">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-730">The default culture's resources reside in a satellite assembly that could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-730">The default culture's resources reside in a satellite assembly that could not be found.</span>
          </span>
          <span data-ttu-id="06019-731">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-731">For information about how to handle this exception, see the "Handling MissingManifestResourceException and MissingSatelliteAssemblyException Exceptions" section in the <see cref="T:System.Resources.ResourceManager" /> class topic.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-732">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-732">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-733">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-733">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <threadsafe>
          <span data-ttu-id="06019-734">
            <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />方法是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-734">The <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> method is thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderVersionNumber : int" Usage="System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-735">Specifies the version of resource file headers that the current implementation of <see cref="T:System.Resources.ResourceManager" /> can interpret and produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-735">Specifies the version of resource file headers that the current implementation of <see cref="T:System.Resources.ResourceManager" /> can interpret and produce.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : bool with get, set" Usage="System.Resources.ResourceManager.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-736">Gets or sets a value that indicates whether the resource manager allows case-insensitive resource lookups in the <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> and <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-736">Gets or sets a value that indicates whether the resource manager allows case-insensitive resource lookups in the <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> and <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06019-737">要在资源查找过程中忽略大小写，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-737">
              <see langword="true" /> to ignore case during resource lookup; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-738">如果的值<xref:System.Resources.ResourceManager.IgnoreCase%2A>属性是`false`，使用名称"资源"的资源并不等同于将具有名称"资源"的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-738">If the value of the <xref:System.Resources.ResourceManager.IgnoreCase%2A> property is `false`, a resource with the name "Resource" is not equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="06019-739">如果<xref:System.Resources.ResourceManager.IgnoreCase%2A>是`true`，使用名称"资源"的资源是等效于具有名称"资源"的资源。</span><span class="sxs-lookup"><span data-stu-id="06019-739">If <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="06019-740">但请注意，当<xref:System.Resources.ResourceManager.IgnoreCase%2A>是`true`，则<xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType>和<xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType>方法使用固定区域性执行不区分大小写的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="06019-740">Note, however, that when <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> and <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> methods perform case-insensitive string comparisons by using the invariant culture.</span></span> <span data-ttu-id="06019-741">优点是，这些方法执行不区分大小写的字符串比较的结果是不考虑区域性的所有计算机上相同。</span><span class="sxs-lookup"><span data-stu-id="06019-741">The advantage is that results of case-insensitive string comparisons performed by these methods are the same on all computers regardless of culture.</span></span> <span data-ttu-id="06019-742">缺点是，结果不是与所有区域性的大小写规则一致。</span><span class="sxs-lookup"><span data-stu-id="06019-742">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="06019-743">例如，土耳其语的字母表中有两个版本的实现： 一个带有圆点的字符，另一个不带点。</span><span class="sxs-lookup"><span data-stu-id="06019-743">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="06019-744">在土耳其语，字符 I (Unicode 0049) 被视为不同字符 ı (Unicode 0131) 的大写版本。</span><span class="sxs-lookup"><span data-stu-id="06019-744">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="06019-745">字符 i (Unicode 0069) 被视为另一种字符 İ (Unicode 0130) 的小写形式。</span><span class="sxs-lookup"><span data-stu-id="06019-745">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="06019-746">根据这些大小写规则，不区分大小写的字符串比较的字符 (Unicode 0069) i 和 I (Unicode 0049) 应失败区域性"TR-TR"（土耳其语）。</span><span class="sxs-lookup"><span data-stu-id="06019-746">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="06019-747">但是，因为如果使用固定区域性的大小写规则执行比较<xref:System.Resources.ResourceManager.IgnoreCase%2A>是`true`，这种比较成功。</span><span class="sxs-lookup"><span data-stu-id="06019-747">However, because the comparison is conducted by using the casing rules of the invariant culture if <xref:System.Resources.ResourceManager.IgnoreCase%2A> is `true`, this comparison succeeds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-748">出于性能原因，最好始终指定正确的大小写的资源名称。</span><span class="sxs-lookup"><span data-stu-id="06019-748">For performance reasons, it is best to always specify the correct case for your resource names.</span></span> <span data-ttu-id="06019-749">设置<xref:System.Resources.ResourceManager.IgnoreCase%2A>到`true`可能会显著增加导致工作集和性能显著下降。</span><span class="sxs-lookup"><span data-stu-id="06019-749">Setting <xref:System.Resources.ResourceManager.IgnoreCase%2A> to `true` can cause a significant increase in working set and a significant decline in performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.InternalGetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" />
        <Parameter Name="tryParents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="06019-750">The culture object to look for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-750">The culture object to look for.</span>
          </span>
        </param>
        <param name="createIfNotExists">
          <span data-ttu-id="06019-751">
            <see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-751">
              <see langword="true" /> to load the resource set, if it has not been loaded yet; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="tryParents">
          <span data-ttu-id="06019-752">
            <see langword="true" /> to check parent <see cref="T:System.Globalization.CultureInfo" /> objects if the resource set cannot be loaded; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-752">
              <see langword="true" /> to check parent <see cref="T:System.Globalization.CultureInfo" /> objects if the resource set cannot be loaded; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06019-753">Provides the implementation for finding a resource set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-753">Provides the implementation for finding a resource set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06019-754">The specified resource set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-754">The specified resource set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="06019-755">The main assembly does not contain a .resources file, which is required to look up a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-755">The main assembly does not contain a .resources file, which is required to look up a resource.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="06019-756">There was an internal error in the runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-756">There was an internal error in the runtime.</span>
          </span>
        </exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">
          <span data-ttu-id="06019-757">The satellite assembly associated with <paramref name="culture" /> could not be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-757">The satellite assembly associated with <paramref name="culture" /> could not be located.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-758">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-758">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-759">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-759">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="06019-760">
            <para>此方法完成资源设置，并且可以是递归和可重入查找所需的所有工作。换而言之，此方法可能会加载的程序集和触发器<see cref="E:System.AppDomain.AssemblyLoad" />事件，然后回调到<see cref="T:System.Resources.ResourceManager" />尚未完全初始化的对象。若要避免采用额外的锁，此方法不是线程安全。<see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />， <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />，和<see cref="M:System.Resources.ResourceManager.GetObject(System.String)" />方法执行所有必要的同步。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-760">
              <para>This method completes all the work necessary to find a resource set, and can be recursive and reentrant. In other words, this method might load an assembly and trigger an <see cref="E:System.AppDomain.AssemblyLoad" /> event, which then calls back into a <see cref="T:System.Resources.ResourceManager" /> object that has not been completely initialized. To avoid taking extra locks, this method is not thread safe. The <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />, and <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> methods do all the necessary synchronization.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable MagicNumber : int" Usage="System.Resources.ResourceManager.MagicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-761">Holds the number used to identify resource files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-761">Holds the number used to identify resource files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-762">值设置为 0xBEEFCACE。</span><span class="sxs-lookup"><span data-stu-id="06019-762">The value is set to 0xBEEFCACE.</span></span> <span data-ttu-id="06019-763">系统默认的文件格式的第四个字节包含在 little-endian 格式的 32 位有符号的整数 (请参阅<xref:System.Text.Encoding>)。</span><span class="sxs-lookup"><span data-stu-id="06019-763">The first four bytes of the system default file format contain a 32-bit signed integer in little-endian format (see <xref:System.Text.Encoding>).</span></span>  
  
 <span data-ttu-id="06019-764">如果<xref:System.Resources.ResourceManager.MagicNumber>位于其后的字节将版本号<xref:System.Resources.ResourceManager>标头后, 跟一个数字，指示应跳过多少个字节来克服此标头。</span><span class="sxs-lookup"><span data-stu-id="06019-764">If the <xref:System.Resources.ResourceManager.MagicNumber> is found, the bytes following it will be a version number for a <xref:System.Resources.ResourceManager> header, followed by a number indicating how many bytes should be skipped to get past this header.</span></span> <span data-ttu-id="06019-765">下一个编号指示版本的<xref:System.Resources.ResourceManager>创建标头后, 跟的版本特定信息。</span><span class="sxs-lookup"><span data-stu-id="06019-765">The next number indicates the version of the <xref:System.Resources.ResourceManager> that created the header, followed by version specific information.</span></span>  
  
 <span data-ttu-id="06019-766">当前实现的版本号是之一。</span><span class="sxs-lookup"><span data-stu-id="06019-766">The version number for the current implementation is one.</span></span> <span data-ttu-id="06019-767">接下来的字节是包含名称的长度前缀的字符串<xref:System.Resources.IResourceReader>，从中可以读取此文件。</span><span class="sxs-lookup"><span data-stu-id="06019-767">The next bytes are a length-prefixed string containing the name of an <xref:System.Resources.IResourceReader>, which can read this file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberSignature Language="F#" Value="val mutable MainAssembly : System.Reflection.Assembly" Usage="System.Resources.ResourceManager.MainAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-768">Specifies the main assembly that contains the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-768">Specifies the main assembly that contains the resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-769"><xref:System.Resources.ResourceManager.MainAssembly>字段是仅在编写您自己的类派生自<xref:System.Resources.ResourceManager>类。</span><span class="sxs-lookup"><span data-stu-id="06019-769">The <xref:System.Resources.ResourceManager.MainAssembly> field is useful only if you write your own class that derives from the <xref:System.Resources.ResourceManager> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAllResources : unit -&gt; unit&#xA;override this.ReleaseAllResources : unit -&gt; unit" Usage="resourceManager.ReleaseAllResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06019-770">Tells the resource manager to call the <see cref="M:System.Resources.ResourceSet.Close" /> method on all <see cref="T:System.Resources.ResourceSet" /> objects and release all resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-770">Tells the resource manager to call the <see cref="M:System.Resources.ResourceSet.Close" /> method on all <see cref="T:System.Resources.ResourceSet" /> objects and release all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06019-771">此方法将收缩正在运行的应用中的工作集。</span><span class="sxs-lookup"><span data-stu-id="06019-771">This method will shrink the working set in a running app.</span></span> <span data-ttu-id="06019-772">对此进行任何未来资源查找<xref:System.Resources.ResourceManager>对象将获得第一次查找，其开销，因为必须搜索资源管理器并再次加载资源。</span><span class="sxs-lookup"><span data-stu-id="06019-772">Any future resource lookups on this <xref:System.Resources.ResourceManager> object will be as expensive as the first lookup, because the resource manager will have to search and load resources again.</span></span> <span data-ttu-id="06019-773">这可在某些复杂的线程处理情况下，其中创建新<xref:System.Resources.ResourceManager>对象是正确的行为。</span><span class="sxs-lookup"><span data-stu-id="06019-773">This can be useful in some complex threading scenarios, where creating a new <xref:System.Resources.ResourceManager> object is the appropriate behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-774">从.NET Framework 2.0 版中，开始<xref:System.Resources.ResourceManager.ReleaseAllResources%2A>方法不是线程安全方面<xref:System.Resources.ResourceManager.GetObject%2A>， <xref:System.Resources.ResourceManager.GetString%2A>，和<xref:System.Resources.ResourceManager.GetStream%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="06019-774">Starting with the .NET Framework version 2.0, the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method is not thread safe with respect to <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>, and <xref:System.Resources.ResourceManager.GetStream%2A> operations.</span></span> <span data-ttu-id="06019-775">此更改的优点是多个线程访问资源的性能改进。</span><span class="sxs-lookup"><span data-stu-id="06019-775">The advantage of this change is a performance improvement for multiple threads that access resources.</span></span> <span data-ttu-id="06019-776">但是，如果您调用<xref:System.Resources.ResourceManager.ReleaseAllResources%2A>同时在另一个线程将获取某个资源的一个线程中的方法，获取操作可能会引发<xref:System.ObjectDisposedException>异常。</span><span class="sxs-lookup"><span data-stu-id="06019-776">However, if you call the <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> method in one thread while simultaneously getting a resource in another thread, the get operation can throw an <xref:System.ObjectDisposedException> exception.</span></span>  
  
 <span data-ttu-id="06019-777">此外可以在其中创建当前资源管理器的资源的托管的实例必须具有确定性，而无需等待资源管理器完全超出范围，并被垃圾回收器释放的情况下使用此方法。</span><span class="sxs-lookup"><span data-stu-id="06019-777">You can also use this method in situations where the managed instances for the resources created by the current resource manager have to be released deterministically, without waiting for the resource manager to go completely out of scope and be garbage collected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06019-778">调用此方法不会卸载附属程序集。</span><span class="sxs-lookup"><span data-stu-id="06019-778">Calling this method does not unload satellite assemblies.</span></span> <span data-ttu-id="06019-779">若要卸载附属程序集，请使用<xref:System.AppDomain.Unload%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06019-779">To unload satellite assemblies, use the <xref:System.AppDomain.Unload%2A> method .</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="06019-780">当调用后期绑定机制通过如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-780">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="06019-781">关联枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-781">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberSignature Language="F#" Value="val mutable ResourceSets : System.Collections.Hashtable" Usage="System.Resources.ResourceManager.ResourceSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-782">Contains a <see cref="T:System.Collections.Hashtable" /> that returns a mapping from cultures to <see cref="T:System.Resources.ResourceSet" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-782">Contains a <see cref="T:System.Collections.Hashtable" /> that returns a mapping from cultures to <see cref="T:System.Resources.ResourceSet" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSetType : Type" Usage="System.Resources.ResourceManager.ResourceSetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06019-783">Gets the type of the resource set object that the resource manager uses to construct a <see cref="T:System.Resources.ResourceSet" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-783">Gets the type of the resource set object that the resource manager uses to construct a <see cref="T:System.Resources.ResourceSet" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06019-784">使用构造对象的资源管理器 <see cref="T:System.Resources.ResourceSet" /> 的设置的对象的资源类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06019-784">The type of the resource set object that the resource manager uses to construct a <see cref="T:System.Resources.ResourceSet" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>