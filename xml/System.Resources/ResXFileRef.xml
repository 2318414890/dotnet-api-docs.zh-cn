<Type Name="ResXFileRef" FullName="System.Resources.ResXFileRef">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a758b3602377b1d4f645762f2c9fa116d9a5ff4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResXFileRef" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResXFileRef extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXFileRef" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXFileRef" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXFileRef" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Resources.ResXFileRef/Converter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示指向外部资源的链接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXFileRef>类用于在 XML 资源 (.resx) 文件包括对文件的引用。 A<xref:System.Resources.ResXFileRef>对象表示为 XML 资源 (.resx) 文件中的外部资源的链接。 你添加<xref:System.Resources.ResXFileRef>对象到通过调用.resx 文件<xref:System.Resources.ResXResourceWriter.AddResource%28System.Resources.ResXDataNode%29?displayProperty=nameWithType>方法。  
  
 在.resx 文件中的数据条目中，类型是<xref:System.Resources.ResXFileRef>，且值为磁盘上的路径位置。 当资源管理器进行反序列化对象，<xref:System.Resources.ResXFileRef>执行 I/O 要获取的文件。 下面是.resx 文件的示例。  
  
```  
<data name="iconclip" type="System.Resources.ResXFileRef, System.Windows.Forms">  
 <value>lookout.bmp;System.Drawing.Bitmap, System.Drawing</value>  
</data>  
<data name="mailbackground" type="System.Resources.ResXFileRef, System.Windows.Forms">  
 <value>mailbackground.bmp;System.Drawing.Bitmap, System.Drawing</value>  
</data>  
<data name="xplogo" type="System.Resources.ResXFileRef, System.Windows.Forms">  
 <value>xplogo.png;System.Drawing.Bitmap, System.Drawing</value>  
</data>  
```  
  
 若要添加<xref:System.Resources.ResXFileRef>对象移到.resx 文件以编程方式，你调用<xref:System.Resources.ResXDataNode.%23ctor%28System.String%2CSystem.Resources.ResXFileRef%29?displayProperty=nameWithType>构造函数实例化<xref:System.Resources.ResXDataNode>对象。 然后传递此<xref:System.Resources.ResXDataNode>对象传递给<xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=nameWithType>方法。  
  
 当你进行编译时具有的.resx 文件[Resgen.exe （资源文件生成器）](~/docs/framework/tools/resgen-exe-resource-file-generator.md)，.resx 文件中指定的资源都嵌入到生成的文档资源文件。  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">对继承者的完全信任。 此类不能由部分受信任的代码继承。</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此类不能由部分受信任的代码使用。</permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Resources.ResXFileRef" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXFileRef (string fileName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXFileRef.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXFileRef(System::String ^ fileName, System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">要引用的文件。</param>
        <param name="typeName">所引用的资源的类型。</param>
        <summary>创建 <see cref="T:System.Resources.ResXFileRef" /> 类的、引用指定文件的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类型通过引用`typeName`参数必须支持的公共构造函数接受<xref:System.IO.Stream>对象作为参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXFileRef (string fileName, string typeName, System.Text.Encoding textFileEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string typeName, class System.Text.Encoding textFileEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXFileRef.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeName As String, textFileEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXFileRef(System::String ^ fileName, System::String ^ typeName, System::Text::Encoding ^ textFileEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="textFileEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="fileName">要引用的文件。</param>
        <param name="typeName">所引用的资源的类型名称。</param>
        <param name="textFileEncoding">所引用的文件中使用的编码。</param>
        <summary>创建 <see cref="T:System.Resources.ResXFileRef" /> 类的、引用指定文件的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类型通过引用`typeName`参数必须支持的公共构造函数接受<xref:System.IO.Stream>对象作为参数。  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直接调用方的完全信任。 此成员不能由部分信任的代码使用。</permission>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXFileRef.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在当前 <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> 构造函数中指定的文件名。</summary>
        <value>所引用的文件的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextFileEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXFileRef.TextFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在当前 <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> 构造函数中指定的编码。</summary>
        <value>所引用的文件中使用的编码。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXFileRef.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前 <see cref="T:System.Resources.ResXFileRef" /> 对象的文本表示形式。</summary>
        <returns>一个字符串，由在当前 <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> 构造函数中指定的参数的连接文本表示形式组成。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Resources.ResXFileRef.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXFileRef.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在当前 <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> 构造函数中指定的类型名称。</summary>
        <value>所引用的资源的类型名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>