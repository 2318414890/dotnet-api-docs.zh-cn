<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResXResourceReader.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac530db360eb3d74b3d80be421c67d52ca654a87bbb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30db360eb3d74b3d80be421c67d52ca654a87bbb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
          <target state="translated">枚举 XML 资源 (.resx) 文件和流，并读取顺序资源名称和值对。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph> interface that reads resource information in an XML format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>类提供的默认实现<ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>接口，它读取 XML 格式的资源信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>To read resource information from a binary resource format, use the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class.</source>
          <target state="translated">若要从二进制资源的格式中读取资源信息，请使用<ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>You use the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class to enumerate resources in .resx files by traversing the dictionary enumerator (<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>) that is returned by the <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>类来遍历字典枚举器枚举.resx 文件中的资源 (<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>) 返回的<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>You call the methods provided by <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
          <target state="translated">调用提供的方法<ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>前进到下一步的资源并读取的名称和值的.resx 文件中的每个资源。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides two enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>类提供了两个枚举器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object; we recommend that you use this method to enumerate resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>对象; 我们建议使用此方法来枚举资源。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method is an explicit interface implementation that returns an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> object; we do not recommend its use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>方法是显式接口实现返回<ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph>对象; 我们不建议使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>方法来获取<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>用于枚举.resx 文件中的资源的对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">该示例包含<ph id="ph1">`CreateResourceFile`</ph>例程可创建必需的资源文件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property is a <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> object rather than the resource value.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>的值<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph>属性是<ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph>对象而不是资源值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This makes a resource item's comment available from the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">这将使资源项的注释可从<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and enumerates the resources in a .resx file,</source>
          <target state="translated">下面的示例设置<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>属性<ph id="ph2">`true`</ph>并枚举.resx 文件中的资源</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph> items in the enumeration can be either:</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph>枚举中的项可以是：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Named resources along with their data.</source>
          <target state="translated">名为及其数据的资源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph>属性是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Named resources along with the name of the file that contains the resource data.</source>
          <target state="translated">名为资源以及包含资源数据的文件的名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Resources.ResXFileRef&gt;</ph> object that provides information about the resource, including its filename.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.Resources.ResXFileRef&gt;</ph>提供的资源，包括其文件名的相关信息的对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If relative file names are used, you should always set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property to provide a reference point for the relative file path.</source>
          <target state="translated">如果使用相对文件名称，还应始终设置<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>属性来提供的相对文件路径的参考点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <ph id="ph1">&lt;xref:System.Resources.ResXResourceSet&gt;</ph> object and call its <ph id="ph2">`GetString`</ph> and <ph id="ph3">`GetObject`</ph> methods.</source>
          <target state="translated">如果你想要从.resx 文件中检索命名的资源，而不是枚举其资源，可以实例化<ph id="ph1">&lt;xref:System.Resources.ResXResourceSet&gt;</ph>对象并调用其<ph id="ph2">`GetString`</ph>和<ph id="ph3">`GetObject`</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>类包含链接要求，并且在类级别应用于所有成员继承要求。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直接调用方或派生的类没有完全信任权限时将引发异常。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> to iterate through the resources in a .resx file.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>来循环访问.resx 文件中的资源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>First, the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph><ph id="ph2">`rsxr`</ph> is created for the file <ph id="ph3">`items.resx`</ph>.</source>
          <target state="translated">首先， <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> <ph id="ph2">`rsxr`</ph>为文件创建<ph id="ph3">`items.resx`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Next, the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method is used to create an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> to iterate through the resources and display the contents to the console.</source>
          <target state="translated">接下来，<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>方法用于创建<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>循环的资源并向控制台显示内容。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">此类不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含了资源的输入流。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified stream.</source>
          <target state="translated">为指定的流初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> methods do not close the stream you specify in this constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Dispose%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>方法不要关闭此构造函数中指定的流。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>A text input stream that contains resources.</source>
          <target state="translated">包含资源的文本输入流。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">为指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>The path of the resource file to read.</source>
          <target state="translated">要读取的资源文件的路径。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified resource file.</source>
          <target state="translated">为指定的资源文件初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>The following example creates a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class for the specified file, iterates through the resources of the file, and displays the contents to the console.</source>
          <target state="translated">下面的示例创建的新实例<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>类指定的文件中，循环访问的资源文件，并向控制台显示内容。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含了资源的输入流。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">一个对象，它解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using an input stream and a type resolution service.</source>
          <target state="translated">使用输入流和类型解析服务初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>An input stream that contains resources.</source>
          <target state="translated">包含了资源的输入流。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 对象的数组，它指定一个或多个程序集。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于将资源中的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a stream and an array of assembly names.</source>
          <target state="translated">使用流和程序集名称数组初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>A text stream reader that contains resources.</source>
          <target state="translated">包含资源的文本流读取器。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">一个对象，它解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a text stream reader and a type resolution service.</source>
          <target state="translated">使用文本流读取器和类型解析服务初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>An object used to read resources from a stream of text.</source>
          <target state="translated">用于从文本流中读取资源的一个对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 对象的数组，它指定一个或多个程序集。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于将资源中的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object and an array of assembly names.</source>
          <target state="translated">使用 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象和程序集名称数组初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">包含资源的 XML 资源文件的名称。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">一个对象，它解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a file name and a type resolution service.</source>
          <target state="translated">使用文件名和类型解析服务初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">包含资源的 XML 资源文件的名称。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 对象的数组，它指定一个或多个程序集。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于将资源中的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using an XML resource file name and an array of assembly names.</source>
          <target state="translated">使用 XML 资源文件名和程序集名称数组初始化 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>Gets or sets the base path for the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object.</source>
          <target state="translated">获取或设置在 <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> 对象中指定的相对文件路径的基路径。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>A path that, if prepended to the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object, yields an absolute path to a resource file.</source>
          <target state="translated">如果路径预置在 <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> 对象中指定的相对文件路径中，则该路径产生到资源文件的绝对路径。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property is used to resolve relative file path references that are assigned to the <ph id="ph2">&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Resources.ResXFileRef&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>属性用于解析相对文件路径引用分配给<ph id="ph2">&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Resources.ResXFileRef&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>By default, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, and relative file path references are resolved in relationship to the current directory returned by the <ph id="ph2">&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">默认情况下，其值是<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>，并且将与返回当前目录相关解析相对文件路径引用<ph id="ph2">&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>You should set this property before you begin enumerating resources.</source>
          <target state="translated">在开始枚举资源之前，应设置此属性。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource.</source>
          <target state="translated">下面的示例创建包含映像的取值，并创建指定的应用程序创建了该资源的字符串资源的 XML 资源文件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source><ph id="ph1">&lt;xref:System.Resources.ResXFileRef&gt;</ph> objects are used to store the path to the images rather than storing the binary images themselves in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXFileRef&gt;</ph> 对象用于存储映像，而不是将二进制图像本身存储在资源文件的路径。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\data<ph id="ph2">\\</ph>.</source>
          <target state="translated">该示例设置<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>属性，以便在映像的文件名称中的相对文件路径被解释为一个名为 C:\data 目录的子目录<ph id="ph2">\\</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>Note that you must add a reference to System.Drawing.dll to compile the project successfully.</source>
          <target state="translated">请注意，您必须添加对 System.Drawing.dll 成功编译项目的引用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The example also requires that the necessary images exist in a directory named C:\data\images<ph id="ph1">\\</ph>.</source>
          <target state="translated">该示例还需要在一个名为 C:\data\images 目录中存在必要的映像<ph id="ph1">\\</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
          <target state="translated">在设置操作中无法指定值，因为 XML 资源文件已被访问且正在使用。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Close">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> enables the resources used by the <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>允许使用的资源<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>For more information about <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>The following example displays the resources of a file to the console, and then uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> method to shut down the reader and to make its resources available for other processes.</source>
          <target state="translated">下面的示例将显示在控制台中，文件的资源，然后使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>方法来关闭读取器和其他进程提供其资源。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>This method can be called by either the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">可以通过以下任一方法调用此方法<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> 调用此方法与<ph id="ph2">`disposing`</ph>参数设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用此方法与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 时，请注意不要引用在以前调用 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 时已释放的对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see  and .</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅和。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Finalize">
          <source>This member overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          <target state="translated">此成员重写 <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">一个字符串，它包含 XML 资源格式的信息。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated">一个对象，它从 <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 字符串读取资源。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">一个字符串，它包含 XML 资源格式的信息。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">一个对象，它解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.ITypeResolutionService" /&gt;</ph> object to resolve type names specified in a resource.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串并使用 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.ITypeResolutionService" /&gt;</ph> 对象解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated">一个对象，它从 <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 字符串读取资源。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>A string whose contents are in the form of an XML resource file.</source>
          <target state="translated">一个内容为 XML 资源文件格式的字符串。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 对象的数组，它指定一个或多个程序集。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">程序集用于将资源中的类型名称解析为一个实际类型。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects to resolve type names specified in a resource.</source>
          <target state="translated">创建一个新 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串并使用 <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 对象数组解析资源中指定的类型名称。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated">一个对象，它从 <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 字符串读取资源。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直接调用方的完全信任。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">此成员不能由部分信任的代码使用。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">此成员不能由部分受信任的代码继承。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象的一个枚举器。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>An enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> 对象的一个枚举数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>方法检索 XML 资源 (.resx) 流或关联与当前字符串中的名称/值对<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>, the resource items are retrieved as <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> objects.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>，资源项检索作为<ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>In this case, all resource nodes are returned regardless of type.</source>
          <target state="translated">在这种情况下，无论何种类型返回所有资源节点。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>方法来获取<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>用于枚举.resx 文件中的资源的对象。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">该示例包含<ph id="ph1">`CreateResourceFile`</ph>例程可创建必需的资源文件。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
          <target state="translated">提供一个字典枚举数，该枚举数可以从当前 XML 资源文件或流中检索设计时属性。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>An enumerator for the metadata in a resource.</source>
          <target state="translated">资源的元数据的枚举数。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
          <target state="translated">作为资源文件或流的名称/值对存储资源。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
          <target state="translated">设计时属性，将调用元数据，它存储在资源文件或流以及运行时数据资源。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> method provides an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that can retrieve the metadata from the resource file or stream associated with the current <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>方法提供<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>可以从资源文件或与当前的流检索元数据的对象<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>, no resource nodes are retrieved.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>，检索没有任何资源节点。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> method to iterate through the metadata resources in an XML resource file.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>方法来循环访问的 XML 资源文件中的元数据资源。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象的一个枚举器。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> method.</source>
          <target state="translated">有关此成员的说明，请参见 <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">一个枚举器，可以循环访问与当前 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 对象关联的 XML 资源 (.resx) 流或字符串中的名称/值对。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>To enumerate the resources in a .resx file, we recommend that you call the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, and then call the <ph id="ph2">`MoveNext`</ph> method on the returned <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object.</source>
          <target state="translated">若要枚举.resx 文件中的资源，我们建议调用<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>方法，，然后调用<ph id="ph2">`MoveNext`</ph>方法返回的<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> method.</source>
          <target state="translated">有关此成员的说明，请参见 <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>Gets or sets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> objects are returned when reading the current XML resource file or stream.</source>
          <target state="translated">获取或设置一个值，该值指示是否在读取当前 XML 资源文件或流时返回 <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resource data nodes are retrieved; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if resource data nodes are ignored.</source>
          <target state="translated">如果检索资源数据节点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果忽略资源数据节点，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>You can set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property before you begin enumerating resources.</source>
          <target state="translated">你可以设置<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>开始枚举资源之前的属性。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认情况下，其值是<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The following example enumerates and displays resource items in an XML file.</source>
          <target state="translated">下面的示例枚举并显示在 XML 文件的资源项。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>Initially, <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> to show both data and metadata items as they occur in the resource file.</source>
          <target state="translated">最初，<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>设置为<ph id="ph2">`false`</ph>以显示数据和元数据的项，因为它们存在于资源文件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The second enumeration has the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> set to <ph id="ph2">`true`</ph> so that resource data elements are returned as <ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph> objects.</source>
          <target state="translated">第二个枚举均具有<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>设置为<ph id="ph2">`true`</ph>以便作为返回值是资源数据元素<ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The resource XML file used by the example contains one data node and one metadata node.</source>
          <target state="translated">该示例使用的资源 XML 文件包含一个数据节点和一个元数据节点。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.</source>
          <target state="translated">若要使用的 XML 文件与前面的示例，复制以下文本并将其保存到名为 Resource1.resx 的文件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
          <target state="translated">在设置操作中，资源文件或流的枚举数已经打开。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>