<Type Name="ResourceSet" FullName="System.Resources.ResourceSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1c004c2cbe90a3788b82697a631822576eef92f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceSet : IDisposable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceSet extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceSet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceSet&#xA;Implements IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceSet : IDisposable, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f45e3-101">存储已针对某个特定区域性进行了本地化的所有资源，忽略所有其他区域性（包括任何代用规则）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f45e3-101">Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</span>
      </span>
      <span data-ttu-id="f45e3-102">安全说明：带有不受信任的数据的此类中的调用数据方法存在安全风险。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f45e3-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="f45e3-103">仅在受信任的数据类中调用方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f45e3-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="f45e3-104">有关详细信息，请参阅 [不受信任数据的安全风险](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f45e3-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-105"><xref:System.Resources.ResourceSet>类枚举<xref:System.Resources.IResourceReader>，加载每个名称和值，并将它们存储在<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-105">The <xref:System.Resources.ResourceSet> class enumerates over an <xref:System.Resources.IResourceReader>, loading every name and value, and storing them in a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f45e3-106">自定义<xref:System.Resources.IResourceReader>可用。</span><span class="sxs-lookup"><span data-stu-id="f45e3-106">A custom <xref:System.Resources.IResourceReader> can be used.</span></span>  
  
 <span data-ttu-id="f45e3-107">可以实例化<xref:System.Resources.ResourceSet>对象，表示特定区域性的资源通过调用<xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f45e3-107">You can instantiate a <xref:System.Resources.ResourceSet> object that represents the resources of a specific culture by calling the <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f45e3-108">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="f45e3-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f45e3-109">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="f45e3-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f45e3-110">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="f45e3-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f45e3-111">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="f45e3-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f45e3-112">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="f45e3-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="f45e3-113">派生类的<see cref="T:System.Resources.ResourceSet" />使用其自己的资源读取器和编写器应重写<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />，用于解释资源集提供适当的功能。</span>
        <span class="sxs-lookup">
          <span data-stu-id="f45e3-113">Derived classes of <see cref="T:System.Resources.ResourceSet" /> that use their own resource reader and writer should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, to provide the appropriate functionality for interpreting the resource set.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-114">创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-114">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-115">使用默认属性初始化 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-115">Initializes a new instance of the <see cref="T:System.Resources.ResourceSet" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="f45e3-116">要读取的资源的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-116">The <see cref="T:System.IO.Stream" /> of resources to be read.</span>
          </span>
          <span data-ttu-id="f45e3-117">流应引用现有的资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-117">The stream should refer to an existing resources file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-118">使用从给定流中读取资源的系统默认的 <see cref="T:System.Resources.ResourceReader" /> 来创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-118">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that reads resources from the given stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f45e3-119">
            <paramref name="stream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-119">The <paramref name="stream" /> is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-120">
            <paramref name="stream" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-120">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f45e3-121">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-121">for providing serialization services.</span>
          </span>
          <span data-ttu-id="f45e3-122">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-122">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f45e3-123">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-123">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f45e3-124">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-124">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.Resources.IResourceReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Resources.IResourceReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IResourceReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::Resources::IResourceReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Resources.IResourceReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f45e3-125">将使用的读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-125">The reader that will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-126">使用指定的资源阅读器创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-126">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the specified resource reader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-127">你可以使用此构造函数以支持使用用户提供的自定义资源格式<xref:System.Resources.IResourceReader>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-127">You can use this constructor to support custom resource formats using a user-provided <xref:System.Resources.IResourceReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-128">
            <paramref name="reader" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-128">The <paramref name="reader" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f45e3-129">要读取的资源文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-129">Resource file to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-130">使用从给定文件打开并读取资源的系统默认的 <see cref="T:System.Resources.ResourceReader" /> 来创建 <see cref="T:System.Resources.ResourceSet" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-130">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that opens and reads resources from the given file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f45e3-131">下面的代码示例定义的新实例<xref:System.Resources.ResourceSet>针对特定文件，类循环访问该文件中，使用的资源，并向控制台显示其内容。</span><span class="sxs-lookup"><span data-stu-id="f45e3-131">The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-132">
            <paramref name="fileName" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-132">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-133">通过此 <see cref="T:System.Resources.ResourceSet" /> 来关闭和释放所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-133">Closes and releases any resources used by this <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-134">对方法的所有调用<xref:System.Resources.ResourceSet>后对此方法的调用可能会失败。</span><span class="sxs-lookup"><span data-stu-id="f45e3-134">All calls to methods on the <xref:System.Resources.ResourceSet> after a call to this method might fail.</span></span>  
  
 <span data-ttu-id="f45e3-135"><xref:System.Resources.ResourceSet.Close%2A> 可以安全地调用多次。</span><span class="sxs-lookup"><span data-stu-id="f45e3-135"><xref:System.Resources.ResourceSet.Close%2A> can be safely called multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f45e3-136">当前实现<xref:System.Resources.ResourceSet.Close%2A>调用<xref:System.Resources.ResourceSet.Dispose%2A>(`true`)。</span><span class="sxs-lookup"><span data-stu-id="f45e3-136">The current implementation of <xref:System.Resources.ResourceSet.Close%2A> calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45e3-137">下面的代码示例使用<xref:System.Resources.ResourceSet.Close%2A>方法来释放通过调用使用的所有资源<xref:System.Resources.ResourceSet>实例。</span><span class="sxs-lookup"><span data-stu-id="f45e3-137">The following code example uses the <xref:System.Resources.ResourceSet.Close%2A> method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-138">释放由当前 <see cref="T:System.Resources.ResourceSet" /> 实例使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-138">Releases resources used by the current <see cref="T:System.Resources.ResourceSet" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-139">处置由 <see cref="T:System.Resources.ResourceSet" /> 的当前实例使用的资源（内存除外）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-139">Disposes of the resources (other than memory) used by the current instance of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-140">在完成使用 <xref:System.Resources.ResourceSet.Dispose%2A> 后，应调用 <xref:System.Resources.ResourceSet>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-140">Call <xref:System.Resources.ResourceSet.Dispose%2A> when you are finished using the <xref:System.Resources.ResourceSet>.</span></span> <span data-ttu-id="f45e3-141"><xref:System.Resources.ResourceSet.Dispose%2A> 方法使 <xref:System.Resources.ResourceSet> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="f45e3-141">The <xref:System.Resources.ResourceSet.Dispose%2A> method leaves the <xref:System.Resources.ResourceSet> in an unusable state.</span></span> <span data-ttu-id="f45e3-142">在调用<xref:System.Resources.ResourceSet.Dispose%2A>，必须释放对所有引用<xref:System.Resources.ResourceSet>以便可以通过垃圾回收回收其占用的内存。</span><span class="sxs-lookup"><span data-stu-id="f45e3-142">After calling <xref:System.Resources.ResourceSet.Dispose%2A>, you must release all references to the <xref:System.Resources.ResourceSet> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f45e3-143">当前方法是实现<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-143">The current method is the implementation of <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f45e3-144">此实现中调用<xref:System.Resources.ResourceSet.Dispose%2A>(`true`)。</span><span class="sxs-lookup"><span data-stu-id="f45e3-144">This implementation calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f45e3-145">指示是否应显式关闭当前实例中包含的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-145">Indicates whether the objects contained in the current instance should be explicitly closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-146">释放与当前实例关联的资源（内存除外），并关闭内部托管对象（如果请求这样做）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-146">Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-147">如果`dispose`参数是`true`，当前方法释放关联与它以及与之关联的所有对象的所有资源。</span><span class="sxs-lookup"><span data-stu-id="f45e3-147">If the `dispose` parameter is `true`, the current method frees all the resources associated with it as well as with all objects associated with it.</span></span> <span data-ttu-id="f45e3-148">如果`dispose`是`false`，当前方法只释放资源分配给它，并忽略与之关联的任何对象。</span><span class="sxs-lookup"><span data-stu-id="f45e3-148">If `dispose` is `false`, the current method frees only the resources allocated to it, and ignores any objects associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultReader">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultReader () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-149">返回此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源读取器类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-149">Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-150">返回这类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源阅读器的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-150">Returns the <see cref="T:System.Type" /> for the preferred resource reader for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f45e3-151">派生类的<see cref="T:System.Resources.ResourceSet" />使用其自己的资源读取器应重写<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f45e3-151">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultWriter">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultWriter () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultWriter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-152">返回此类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源编写器类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-152">Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-153">返回这类 <see cref="T:System.Resources.ResourceSet" /> 的首选资源编写器的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-153">Returns the <see cref="T:System.Type" /> for the preferred resource writer for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f45e3-154">派生类的<see cref="T:System.Resources.ResourceSet" />使用其自己的资源读取器应重写<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f45e3-154">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Resources.IResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-155">返回 <see cref="T:System.Collections.IDictionaryEnumerator" />，它可以循环访问 <see cref="T:System.Resources.ResourceSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-155">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can iterate through the <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-156">该 <see cref="T:System.Resources.ResourceSet" /> 的 <see cref="T:System.Collections.IDictionaryEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-156">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for this <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-157">枚举器只允许读取集合中的数据。</span><span class="sxs-lookup"><span data-stu-id="f45e3-157">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="f45e3-158">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="f45e3-158">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f45e3-159">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="f45e3-159">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f45e3-160"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="f45e3-160"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="f45e3-161">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="f45e3-161">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f45e3-162">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="f45e3-162">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f45e3-163">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="f45e3-163"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f45e3-164"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="f45e3-164"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f45e3-165">在传递到集合的末尾之后，枚举数放在集合中最后一个元素后面，且调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 会返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="f45e3-165">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f45e3-166">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="f45e3-166">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f45e3-167">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-167">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f45e3-168">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="f45e3-168">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f45e3-169">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下一个调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-169">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="f45e3-170">如果在 <xref:System.Collections.IEnumerator.MoveNext%2A> 和 <xref:System.Collections.IEnumerator.Current%2A> 之间修改集合，那么即使枚举数已经无效，<xref:System.Collections.IEnumerator.Current%2A> 也将返回它所设置成的元素。</span><span class="sxs-lookup"><span data-stu-id="f45e3-170">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="f45e3-171">你可以使用<xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType>属性来访问存储在当前元素的值。</span><span class="sxs-lookup"><span data-stu-id="f45e3-171">You can use the <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> property to access the value stored in the current element.</span></span> <span data-ttu-id="f45e3-172">使用<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>属性来访问当前元素的键。</span><span class="sxs-lookup"><span data-stu-id="f45e3-172">Use the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property to access the key of the current element.</span></span> <span data-ttu-id="f45e3-173">使用<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>属性来访问当前元素的值。</span><span class="sxs-lookup"><span data-stu-id="f45e3-173">Use the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property to access the value of the current element.</span></span>  
  
 <span data-ttu-id="f45e3-174">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="f45e3-174">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f45e3-175">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="f45e3-175">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f45e3-176">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="f45e3-176">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45e3-177">下面的示例演示如何创建<xref:System.Resources.ResourceSet>`rs`文件`items.resources`。</span><span class="sxs-lookup"><span data-stu-id="f45e3-177">The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`.</span></span> <span data-ttu-id="f45e3-178">接下来，<xref:System.Resources.ResourceSet.GetEnumerator%2A>方法用于创建<xref:System.Collections.IDictionaryEnumerator>为`rs`。</span><span class="sxs-lookup"><span data-stu-id="f45e3-178">Next, the <xref:System.Resources.ResourceSet.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`.</span></span> <span data-ttu-id="f45e3-179"><xref:System.Collections.IDictionaryEnumerator>循环访问`rs`并向控制台显示内容。</span><span class="sxs-lookup"><span data-stu-id="f45e3-179">The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f45e3-180">资源集已关闭或已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-180">The resource set has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-181">返回具有指定名称的资源对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-181">Returns a resource object with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f45e3-182">要搜索的资源的区分大小写的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-182">Case-sensitive name of the resource to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-183">搜索具有指定名称的资源对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-183">Searches for a resource object with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-184">所请求的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-184">The requested resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-185">资源对象的名称是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f45e3-185">The name of the resource object is case sensitive.</span></span> <span data-ttu-id="f45e3-186">对于不区分大小写的搜索，使用<xref:System.Resources.ResourceSet.GetObject%2A>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-186">For a case-insensitive search, use <xref:System.Resources.ResourceSet.GetObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-187">
            <paramref name="name" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-187">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f45e3-188">对象已关闭或已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-188">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f45e3-189">要搜索的资源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-189">Name of the resource to search for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="f45e3-190">指示是否应忽略指定名称的大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-190">Indicates whether the case of the specified name should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-191">如果请求的话，按照不区分大小写的方式搜索具有指定名称的资源对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-191">Searches for a resource object with the specified name in a case-insensitive manner, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-192">所请求的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-192">The requested resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-193">如果值`ignoreCase`参数是`true`，具有名称"资源"的资源相当于具有名称"资源"的资源。</span><span class="sxs-lookup"><span data-stu-id="f45e3-193">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="f45e3-194">但请注意，此方法始终执行不区分大小写的字符串比较使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-194">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f45e3-195">优点是，此方法执行不区分大小写的字符串比较的结果是无论区域性的所有计算机上相同。</span><span class="sxs-lookup"><span data-stu-id="f45e3-195">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="f45e3-196">其缺点在于结果不一致的所有区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="f45e3-196">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="f45e3-197">例如，在土耳其语字母表具有字符 i： 一个带有圆点的两个版本，另一个不带点。</span><span class="sxs-lookup"><span data-stu-id="f45e3-197">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="f45e3-198">在土耳其语字符我 (Unicode 0049) 被视为不同的字符 ı (Unicode 0131) 的大写版本。</span><span class="sxs-lookup"><span data-stu-id="f45e3-198">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="f45e3-199">I (Unicode 0069) 的字符被视为另一种字符 İ (Unicode 0130) 的小写形式。</span><span class="sxs-lookup"><span data-stu-id="f45e3-199">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="f45e3-200">根据这些大小写规则，不区分大小写的字符串比较的字符 i (Unicode 0069) 和我 (Unicode 0049) 应失败区域性"TR-TR"（土耳其中的土耳其语）。</span><span class="sxs-lookup"><span data-stu-id="f45e3-200">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="f45e3-201">使用`GetObject`方法替换`ignoreCase`设置为`true`，这种比较成功。</span><span class="sxs-lookup"><span data-stu-id="f45e3-201">Using the `GetObject` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-202">
            <paramref name="name" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-202">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f45e3-203">对象已关闭或已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-203">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-204">返回具有指定名称的 <see cref="T:System.String" /> 资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-204">Returns a <see cref="T:System.String" /> resource with a specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f45e3-205">要搜索的资源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-205">Name of the resource to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-206">搜索具有指定名称的 <see cref="T:System.String" /> 资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-206">Searches for a <see cref="T:System.String" /> resource with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-207">当值是 <see cref="T:System.String" /> 时为资源的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-207">The value of a resource, if the value is a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-208">
            <paramref name="name" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-208">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f45e3-209">
            <paramref name="name" /> 指定的资源不是 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-209">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f45e3-210">对象已关闭或已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-210">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, ignoreCase As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f45e3-211">要搜索的资源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-211">Name of the resource to search for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="f45e3-212">指示是否应忽略指定名称的大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-212">Indicates whether the case of the case of the specified name should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f45e3-213">如果请求的话，按照不区分大小写的方式搜索具有指定名称的 <see cref="T:System.String" /> 资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-213">Searches for a <see cref="T:System.String" /> resource with the specified name in a case-insensitive manner, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-214">当值是 <see cref="T:System.String" /> 时为资源的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-214">The value of a resource, if the value is a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45e3-215">如果值`ignoreCase`参数是`true`，具有名称"资源"的资源相当于具有名称"资源"的资源。</span><span class="sxs-lookup"><span data-stu-id="f45e3-215">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="f45e3-216">但请注意，此方法始终执行不区分大小写的字符串比较使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f45e3-216">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f45e3-217">优点是，此方法执行不区分大小写的字符串比较的结果是无论区域性的所有计算机上相同。</span><span class="sxs-lookup"><span data-stu-id="f45e3-217">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="f45e3-218">其缺点在于结果不一致的所有区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="f45e3-218">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="f45e3-219">例如，在土耳其语字母表具有字符 i： 一个带有圆点的两个版本，另一个不带点。</span><span class="sxs-lookup"><span data-stu-id="f45e3-219">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="f45e3-220">在土耳其语字符我 (Unicode 0049) 被视为不同的字符 ı (Unicode 0131) 的大写版本。</span><span class="sxs-lookup"><span data-stu-id="f45e3-220">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="f45e3-221">I (Unicode 0069) 的字符被视为另一种字符 İ (Unicode 0130) 的小写形式。</span><span class="sxs-lookup"><span data-stu-id="f45e3-221">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="f45e3-222">根据这些大小写规则，不区分大小写的字符串比较的字符 i (Unicode 0069) 和我 (Unicode 0049) 应失败区域性"TR-TR"（土耳其中的土耳其语）。</span><span class="sxs-lookup"><span data-stu-id="f45e3-222">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="f45e3-223">使用`GetString`方法替换`ignoreCase`设置为`true`，这种比较成功。</span><span class="sxs-lookup"><span data-stu-id="f45e3-223">Using the `GetString` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f45e3-224">
            <paramref name="name" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-224">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f45e3-225">
            <paramref name="name" /> 指定的资源不是 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-225">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f45e3-226">对象已关闭或已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-226">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="protected System.Resources.IResourceReader Reader;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Resources.IResourceReader Reader" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Reader" />
      <MemberSignature Language="VB.NET" Value="Protected Reader As IResourceReader " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Resources::IResourceReader ^ Reader;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-227">指示用于读取资源的 <see cref="T:System.Resources.IResourceReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-227">Indicates the <see cref="T:System.Resources.IResourceReader" /> used to read the resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadResources">
      <MemberSignature Language="C#" Value="protected virtual void ReadResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.ReadResources" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadResources ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadResources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-228">读取所有资源，并将它们存储在 <see cref="F:System.Resources.ResourceSet.Table" /> 属性中指示的 <see cref="T:System.Collections.Hashtable" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-228">Reads all the resources and stores them in a <see cref="T:System.Collections.Hashtable" /> indicated in the <see cref="F:System.Resources.ResourceSet.Table" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f45e3-229">派生类的<see cref="T:System.Resources.ResourceSet" />应显式调用<see cref="M:System.Resources.ResourceSet.ReadResources" />加载所有资源的<see cref="T:System.Resources.IResourceReader" />到<see cref="F:System.Resources.ResourceSet.Table" />，通常在构造函数或延迟在第一个调用为<see cref="M:System.Resources.ResourceSet.GetString(System.String)" />或<see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f45e3-229">Derived classes of <see cref="T:System.Resources.ResourceSet" /> should explicitly call <see cref="M:System.Resources.ResourceSet.ReadResources" /> to load all the resources from the <see cref="T:System.Resources.IResourceReader" /> into <see cref="F:System.Resources.ResourceSet.Table" />, generally either in the constructor or lazily on the first call to either <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> or <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />.</span>
            </span>
            <span data-ttu-id="f45e3-230">但是，如果你的资源集和 IResourceReader 已具有相互信息并具有加载只需少量的更高效方式选择资源，可以跳过此步骤。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f45e3-230">However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</span>
            </span>
            <span data-ttu-id="f45e3-231">若要尽量减少工作集，编写将在它查询的应用程序请求的资源值你 IResourceReader 资源。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f45e3-231">To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-232">返回一个 <see cref="T:System.Collections.IEnumerator" /> 对象，以避免与 <see langword="Dispose" /> 之间出现争用情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-232">Returns an <see cref="T:System.Collections.IEnumerator" /> object to avoid a race condition with <see langword="Dispose" />.</span>
          </span>
          <span data-ttu-id="f45e3-233">不应直接从代码中使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-233">This member is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f45e3-234">当前 <see cref="T:System.Resources.ResourceSet" /> 对象的一个枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-234">An enumerator for the current <see cref="T:System.Resources.ResourceSet" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable Table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable Table" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Table" />
      <MemberSignature Language="VB.NET" Value="Protected Table As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ Table;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f45e3-235">存储资源的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f45e3-235">The <see cref="T:System.Collections.Hashtable" /> in which the resources are stored.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
  </Members>
</Type>