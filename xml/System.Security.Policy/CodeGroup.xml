<Type Name="CodeGroup" FullName="System.Security.Policy.CodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed7902f2adebda5a22b06a65e6b163e182e032e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeGroup extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.CodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGroup abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="27acd-101">表示抽象基类，必须从该基类中导出代码组的所有实现。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27acd-101">Represents the abstract base class from which all implementations of code groups must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-102">代码组是代码访问安全性策略的构建基块。</span><span class="sxs-lookup"><span data-stu-id="27acd-102">Code groups are the building blocks of code access security policy.</span></span> <span data-ttu-id="27acd-103">每个策略级别包含可以有子代码组的根代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-103">Each policy level consists of a root code group that can have child code groups.</span></span> <span data-ttu-id="27acd-104">每个子代码组可以具有它们自己的子代码组;此行为扩展到任意数量的级别，从而形成一个树。</span><span class="sxs-lookup"><span data-stu-id="27acd-104">Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.</span></span> <span data-ttu-id="27acd-105">每个代码组有一个确定是否给定的程序集属于基于该程序集的证据的成员资格条件。</span><span class="sxs-lookup"><span data-stu-id="27acd-105">Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.</span></span>  
  
 <span data-ttu-id="27acd-106">将应用这些其成员资格条件匹配给定程序集的证据的代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-106">Only those code groups whose membership conditions match a given assembly's evidence will be applied.</span></span> <span data-ttu-id="27acd-107">如果匹配的代码组有子代码组，然后同样应用这些子级的成员资格条件还与匹配提供的证据。</span><span class="sxs-lookup"><span data-stu-id="27acd-107">If a matching code group has child code groups, then those children whose membership conditions also match the supplied evidence will likewise be applied.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, class System.Security.Policy.PolicyStatement policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (membershipCondition As IMembershipCondition, policy As PolicyStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition, System::Security::Policy::PolicyStatement ^ policy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="policy" Type="System.Security.Policy.PolicyStatement" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">
          <span data-ttu-id="27acd-108">成员条件，它测试证据以确定此代码组是否应用策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-108">A membership condition that tests evidence to determine whether this code group applies policy.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="27acd-109">形式为权限集和特性的代码组的策略声明，这些权限集和特性将被授予匹配成员条件的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-109">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-110">初始化 <see cref="T:System.Security.Policy.CodeGroup" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-110">Initializes a new instance of <see cref="T:System.Security.Policy.CodeGroup" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-111">此构造函数创建的基本代码组，并应该从自定义代码组的构造函数中调用。</span><span class="sxs-lookup"><span data-stu-id="27acd-111">This constructor creates a basic code group and should be called from the constructors of custom code groups.</span></span> <span data-ttu-id="27acd-112">你可以添加使用的子代码组<xref:System.Security.Policy.CodeGroup.AddChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27acd-112">You can add child code groups using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-113">
            <paramref name="membershipCondition" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-113">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27acd-114">
            <paramref name="membershipCondition" /> 参数的类型无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-114">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="27acd-115">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-115">-or-</span>
          </span>
          <span data-ttu-id="27acd-116">
            <paramref name="policy" /> 参数的类型无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-116">The type of the <paramref name="policy" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.Policy.CodeGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.Policy.CodeGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (group As CodeGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::Policy::CodeGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Security.Policy.CodeGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <span data-ttu-id="27acd-117">要作为子级添加的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-117">The code group to be added as a child.</span>
          </span>
          <span data-ttu-id="27acd-118">新的子代码组被添加到列表的末端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-118">This new child code group is added to the end of the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-119">将子代码组添加到当前代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-119">Adds a child code group to the current code group.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-120">
            <paramref name="group" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-120">The <paramref name="group" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27acd-121">
            <paramref name="group" /> 参数不是有效的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-121">The <paramref name="group" /> parameter is not a valid code group.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public virtual string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.AttributeString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AttributeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AttributeString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-122">获取代码组策略声明的特性的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-122">Gets a string representation of the attributes of the policy statement for the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-123">代码组策略声明的特性的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-123">A string representation of the attributes of the policy statement for the code group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-124">未本地化的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="27acd-124">The string representation is not localized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.IList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Children { System::Collections::IList ^ get(); void set(System::Collections::IList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-125">获取或设置代码组的子代码组的排序列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-125">Gets or sets an ordered list of the child code groups of a code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-126">子代码组的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-126">A list of child code groups.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-127">子代码组的顺序非常重要的某些代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-127">The order of child code groups is significant for certain code groups.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27acd-128">返回值是一份子代码列表。</span><span class="sxs-lookup"><span data-stu-id="27acd-128">The return value is a copy of the child code list.</span></span> <span data-ttu-id="27acd-129">不使用返回的列表添加子代码组;请改用<xref:System.Security.Policy.CodeGroup.AddChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27acd-129">Do not use the returned list to add a child code group; instead, use the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-130">尝试将该属性设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-130">An attempt is made to set this property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27acd-131">尝试使用非 <see cref="T:System.Security.Policy.CodeGroup" /> 对象的子级列表设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-131">An attempt is made to set this property with a list of children that are not <see cref="T:System.Security.Policy.CodeGroup" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27acd-132">当在派生类中被重写时，制作当前代码组的一个深层副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-132">When overridden in a derived class, makes a deep copy of the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-133">当前代码组（包括其成员条件和子代码组）的等效副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-133">An equivalent copy of the current code group, including its membership conditions and child code groups.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-134">此方法使代码组的深层副本，使还进行代码组所包含的所有对象的副本。</span><span class="sxs-lookup"><span data-stu-id="27acd-134">This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected virtual void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateXml (element As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateXml(System::Security::SecurityElement ^ element, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="27acd-135">向其中添加序列化的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-135">The XML encoding to which to add the serialization.</span>
          </span>
        </param>
        <param name="level">
          <span data-ttu-id="27acd-136">代码组所在的策略级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-136">The policy level within which the code group exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-137">当在派生类中被重写时，序列化导出的代码组所特有的属性和内部状态，并将序列化添加到指定的 <see cref="T:System.Security.SecurityElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-137">When overridden in a derived class, serializes properties and internal state specific to a derived code group and adds the serialization to the specified <see cref="T:System.Security.SecurityElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-138"><xref:System.Security.Policy.CodeGroup.ToXml%2A> 不能重写。</span><span class="sxs-lookup"><span data-stu-id="27acd-138"><xref:System.Security.Policy.CodeGroup.ToXml%2A> cannot be overridden.</span></span> <span data-ttu-id="27acd-139">如果你需要将特定于特定实现的成员序列化<xref:System.Security.Policy.CodeGroup>，必须重写<xref:System.Security.Policy.CodeGroup.CreateXml%2A>和序列化您的成员。</span><span class="sxs-lookup"><span data-stu-id="27acd-139">If you need to serialize members specific to a particular implementation of <xref:System.Security.Policy.CodeGroup>, you must override <xref:System.Security.Policy.CodeGroup.CreateXml%2A> and serialize your members there.</span></span> <span data-ttu-id="27acd-140">当代码组被序列化时，<xref:System.Security.Policy.CodeGroup.ToXml%2A>调用<xref:System.Security.Policy.CodeGroup.CreateXml%2A>，并将添加到你序列化<xref:System.Security.SecurityElement>由<xref:System.Security.Policy.CodeGroup.ToXml%2A>。</span><span class="sxs-lookup"><span data-stu-id="27acd-140">When the code group is serialized, <xref:System.Security.Policy.CodeGroup.ToXml%2A> calls <xref:System.Security.Policy.CodeGroup.CreateXml%2A> and adds your serialization to the <xref:System.Security.SecurityElement> created by <xref:System.Security.Policy.CodeGroup.ToXml%2A>.</span></span>  
  
 <span data-ttu-id="27acd-141">使用此方法创建的 XML 进行反序列化由<xref:System.Security.Policy.CodeGroup.ParseXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="27acd-141">The XML created using this method is deserialized by the <xref:System.Security.Policy.CodeGroup.ParseXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-142">如果你实现此方法，则必须实现<see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />以及方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-142">If you implement this method, you must implement the <see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> method as well.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-143">获取或设置代码组的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-143">Gets or sets the description of the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-144">代码组的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-144">The description of the code group.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-145">确定两个代码组是否等效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-145">Determines whether two code groups are equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="27acd-146">要与当前代码组比较的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-146">The code group to compare with the current code group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-147">确定指定的代码组是否等效于当前代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-147">Determines whether the specified code group is equivalent to the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-148">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-148">
              <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-149">两个代码组是如果它们具有相同等效<xref:System.Security.Policy.CodeGroup.Name%2A>， <xref:System.Security.Policy.CodeGroup.Description%2A>，和<xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>。</span><span class="sxs-lookup"><span data-stu-id="27acd-149">Two code groups are equivalent if they have the same <xref:System.Security.Policy.CodeGroup.Name%2A>, <xref:System.Security.Policy.CodeGroup.Description%2A>, and <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>.</span></span>  
  
 <span data-ttu-id="27acd-150">此方法可测试的顶级代码组仅，不及其子代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-150">This method tests the top-level code group only, not its child code groups.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Policy.CodeGroup cg, bool compareChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Security.Policy.CodeGroup cg, bool compareChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (cg As CodeGroup, compareChildren As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Security::Policy::CodeGroup ^ cg, bool compareChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cg" Type="System.Security.Policy.CodeGroup" />
        <Parameter Name="compareChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cg">
          <span data-ttu-id="27acd-151">要与当前代码组比较的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-151">The code group to compare with the current code group.</span>
          </span>
        </param>
        <param name="compareChildren">
          <span data-ttu-id="27acd-152">为 <see langword="true" /> 则还比较子代码组；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-152">
              <see langword="true" /> to compare child code groups, as well; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-153">确定指定的代码组是否等效于当前代码组，如果指定，还检查子代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-153">Determines whether the specified code group is equivalent to the current code group, checking the child code groups as well, if specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-154">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-154">
              <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-155">两个代码组是如果它们具有相同等效<xref:System.Security.Policy.CodeGroup.Name%2A>， <xref:System.Security.Policy.CodeGroup.Description%2A>，和<xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>。</span><span class="sxs-lookup"><span data-stu-id="27acd-155">Two code groups are equivalent if they have the same <xref:System.Security.Policy.CodeGroup.Name%2A>, <xref:System.Security.Policy.CodeGroup.Description%2A>, and <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>.</span></span>  
  
 <span data-ttu-id="27acd-156">如果`compareChildren`参数是`true`，此方法将只返回`true`当前代码组及所有子代码组是否等效于指定的代码组及所有子代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-156">If the `compareChildren` parameter is `true`, this method will only return `true` if the current code group and all its child code groups are equivalent to the specified code group and all its child code groups.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXml">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-157">从 XML 编码重新构造具有给定状态的安全对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-157">Reconstructs a security object with a given state from an XML encoding.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="27acd-158">用于重新构造安全对象的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-158">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-159">从 XML 编码重新构造具有给定状态的安全对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-159">Reconstructs a security object with a given state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-160">
            <paramref name="e" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-160">The <paramref name="e" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-161">
              <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> 和<see cref="M:System.Security.Policy.CodeGroup.ToXml" />不能重写。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-161">
                <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> and <see cref="M:System.Security.Policy.CodeGroup.ToXml" /> cannot be overridden.</span>
            </span>
            <span data-ttu-id="27acd-162">如果你需要更改代码组实现在其中处理 XML 的方式，重写<see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />和<see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-162">If you need to change the way in which your code group implementation handles XML, override the <see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> and <see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> methods.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="27acd-163">用于重新构造安全对象的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-163">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <param name="level">
          <span data-ttu-id="27acd-164">代码组所在的策略级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-164">The policy level within which the code group exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-165">从 XML 编码重新构造具有给定的状态和策略级别的安全对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-165">Reconstructs a security object with a given state and policy level from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-166">用于解析的命名的权限集提供的策略级别上下文。</span><span class="sxs-lookup"><span data-stu-id="27acd-166">The policy level context is provided for resolution of named permission sets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-167">
            <paramref name="e" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-167">The <paramref name="e" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-168">
              <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> 和<see cref="M:System.Security.Policy.CodeGroup.ToXml" />不能重写。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-168">
                <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> and <see cref="M:System.Security.Policy.CodeGroup.ToXml" /> cannot be overridden.</span>
            </span>
            <span data-ttu-id="27acd-169">如果你需要更改代码组实现在其中处理 XML 的方式，重写<see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />和<see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-169">If you need to change the way in which your code group implementation handles XML, override the <see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> and <see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> methods.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27acd-170">获取当前代码组的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-170">Gets the hash code of the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-171">当前代码组的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-171">The hash code of the current code group.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipCondition">
      <MemberSignature Language="C#" Value="public System.Security.Policy.IMembershipCondition MembershipCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.IMembershipCondition MembershipCondition" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.MembershipCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property MembershipCondition As IMembershipCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::IMembershipCondition ^ MembershipCondition { System::Security::Policy::IMembershipCondition ^ get(); void set(System::Security::Policy::IMembershipCondition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.IMembershipCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-172">获取或设置代码组的成员条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-172">Gets or sets the code group's membership condition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-173">成员条件，它确定该代码组适用于哪个证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-173">The membership condition that determines to which evidence the code group is applicable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-174">成员资格条件测试证据，并返回一个布尔值，指示是否存在匹配项。</span><span class="sxs-lookup"><span data-stu-id="27acd-174">A membership condition tests evidence and returns a Boolean value that tells whether there is a match.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27acd-175">尝试将该参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-175">An attempt is made to set this parameter to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public abstract string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-176">当在派生类中被重写时，获取该代码组的合并逻辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-176">When overridden in a derived class, gets the merge logic for the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-177">该代码组合并逻辑的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-177">A description of the merge logic for the code group.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-178">此属性是由代码组用来解析其子代码组授予的权限的合并逻辑的字符串说明。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-178">This property is a string description of the merge logic used by the code group to resolve the permissions granted by its child code groups.</span>
            </span>
            <span data-ttu-id="27acd-179">它旨在帮助管理员使用的代码组，但策略系统不使用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-179">It is meant to aid administrators using the code group, but is not used by the policy system.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-180">获取或设置代码组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-180">Gets or sets the name of the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-181">代码组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-181">The name of the code group.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected virtual void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ParseXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ParseXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="27acd-182">用于重新构造安全对象的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-182">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <param name="level">
          <span data-ttu-id="27acd-183">代码组所在的策略级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-183">The policy level within which the code group exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-184">当在派生类中被重写时，从指定的 <see cref="T:System.Security.SecurityElement" /> 重新构造导出的代码组所特有的属性和内部状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-184">When overridden in a derived class, reconstructs properties and internal state specific to a derived code group from the specified <see cref="T:System.Security.SecurityElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-185"><xref:System.Security.Policy.CodeGroup.FromXml%2A> 不能重写。</span><span class="sxs-lookup"><span data-stu-id="27acd-185"><xref:System.Security.Policy.CodeGroup.FromXml%2A> cannot be overridden.</span></span> <span data-ttu-id="27acd-186">如果你需要进行反序列化成员的特定实现特定<xref:System.Security.Policy.CodeGroup>，必须重写<xref:System.Security.Policy.CodeGroup.ParseXml%2A>和反序列化您的成员。</span><span class="sxs-lookup"><span data-stu-id="27acd-186">If you need to deserialize members specific to a particular implementation of <xref:System.Security.Policy.CodeGroup>, you must override <xref:System.Security.Policy.CodeGroup.ParseXml%2A> and deserialize your members there.</span></span> <span data-ttu-id="27acd-187">当代码组进行反序列化时，<xref:System.Security.Policy.CodeGroup.FromXml%2A>调用<xref:System.Security.Policy.CodeGroup.ParseXml%2A>，并重新建立你的成员从<xref:System.Security.SecurityElement>。</span><span class="sxs-lookup"><span data-stu-id="27acd-187">When the code group is deserialized, <xref:System.Security.Policy.CodeGroup.FromXml%2A> calls <xref:System.Security.Policy.CodeGroup.ParseXml%2A> and reconstructs your members from the <xref:System.Security.SecurityElement>.</span></span>  
  
 <span data-ttu-id="27acd-188">此方法将使用创建的 XML 反序列化<xref:System.Security.Policy.CodeGroup.CreateXml%2A>。</span><span class="sxs-lookup"><span data-stu-id="27acd-188">This method deserializes XML created using <xref:System.Security.Policy.CodeGroup.CreateXml%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-189">如果你实现此方法，则必须实现<see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />以及方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-189">If you implement this method, you must implement the <see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> method as well.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public virtual string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PermissionSetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-190">获取代码组的命名的权限集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-190">Gets the name of the named permission set for the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-191">策略级别的命名的权限集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-191">The name of a named permission set of the policy level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-192">此属性可`null`如果代码组包含一个未命名的权限集。</span><span class="sxs-lookup"><span data-stu-id="27acd-192">This property can be `null` if the code group contains an unnamed permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyStatement">
      <MemberSignature Language="C#" Value="public System.Security.Policy.PolicyStatement PolicyStatement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.PolicyStatement PolicyStatement" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeGroup.PolicyStatement" />
      <MemberSignature Language="VB.NET" Value="Public Property PolicyStatement As PolicyStatement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::PolicyStatement ^ PolicyStatement { System::Security::Policy::PolicyStatement ^ get(); void set(System::Security::Policy::PolicyStatement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-193">获取或设置与该代码组关联的策略声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-193">Gets or sets the policy statement associated with the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27acd-194">该代码组的策略声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-194">The policy statement for the code group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-195">证据匹配成员资格条件时，策略语句应用于程序集中的代码。</span><span class="sxs-lookup"><span data-stu-id="27acd-195">The policy statement applies to code in assemblies when evidence matches the membership condition.</span></span>  
  
 <span data-ttu-id="27acd-196">此外可以通过将策略语句传递给构造函数中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="27acd-196">This property can also be set by passing a policy statement to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27acd-197">下面的示例设置<xref:System.Security.Policy.PolicyStatement>的代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-197">The following example sets the <xref:System.Security.Policy.PolicyStatement> for a code group.</span></span>  
  
 [!code-cpp[Classic CodeGroup.PolicyStatement Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CodeGroup.PolicyStatement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CodeGroup.PolicyStatement Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CodeGroup.PolicyStatement Example/CS/source.cs#1)]
 [!code-vb[Classic CodeGroup.PolicyStatement Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CodeGroup.PolicyStatement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (System.Security.Policy.CodeGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class System.Security.Policy.CodeGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (group As CodeGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(System::Security::Policy::CodeGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Security.Policy.CodeGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <span data-ttu-id="27acd-198">要作为子级移除的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-198">The code group to be removed as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-199">移除指定的子代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-199">Removes the specified child code group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-200">可以使用此方法删除仅直接子代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-200">Only immediate child code groups can be removed with this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="27acd-201">
            <paramref name="group" /> 参数不是当前代码组的直接子代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-201">The <paramref name="group" /> parameter is not an immediate child code group of the current code group.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="27acd-202">程序集的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-202">The evidence for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-203">当在派生类中被重写时，解析证据集的代码组及其子代的策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-203">When overridden in a derived class, resolves policy for the code group and its descendants for a set of evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-204">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-204">A policy statement that consists of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-205">给定要加载的程序集的证据，则此方法通过检查成员资格条件针对指定的证据来计算代码组。</span><span class="sxs-lookup"><span data-stu-id="27acd-205">Given evidence for an assembly to be loaded, this method evaluates the code group by checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="27acd-206">如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。</span><span class="sxs-lookup"><span data-stu-id="27acd-206">If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</span></span>  
  
 <span data-ttu-id="27acd-207">有关<xref:System.Security.Policy.UnionCodeGroup>、 还解析其成员资格条件匹配的指定的证据的所有子代码组，和所有生成的策略语句结合父级联合代码组的策略语句。</span><span class="sxs-lookup"><span data-stu-id="27acd-207">For a <xref:System.Security.Policy.UnionCodeGroup>, all child code groups whose membership condition match the specified evidence are also resolved, and all resulting policy statements are combined with the policy statement of the parent union code group.</span></span> <span data-ttu-id="27acd-208">每个子代码组类型确定如何应用在其下的所有子组，具体取决于如何<xref:System.Security.Policy.CodeGroup.Resolve%2A>这些子组的方法的工作原理。</span><span class="sxs-lookup"><span data-stu-id="27acd-208">Each child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.</span></span>  
  
 <span data-ttu-id="27acd-209">.NET Framework 安全系统使用<xref:System.Security.Policy.CodeGroup.Resolve%2A>上的策略级别以确定要从生成的策略声明和代码为加载代码授予哪些权限请求的程序集。</span><span class="sxs-lookup"><span data-stu-id="27acd-209">The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public abstract System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="27acd-210">程序集的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-210">The evidence for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-211">当在派生类中被重写时，解析匹配的代码组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-211">When overridden in a derived class, resolves matching code groups.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-212">一个 <see cref="T:System.Security.Policy.CodeGroup" />，它是匹配代码组的树的根。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-212">A <see cref="T:System.Security.Policy.CodeGroup" /> that is the root of the tree of matching code groups.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-213">此方法具有相同的评估特性作为<xref:System.Security.Policy.CodeGroup.Resolve%2A>。</span><span class="sxs-lookup"><span data-stu-id="27acd-213">This method has the same evaluation characteristics as <xref:System.Security.Policy.CodeGroup.Resolve%2A>.</span></span> <span data-ttu-id="27acd-214">返回的代码组包含子代码组，因而也就可以有子代码组，根据需要以反映由提供的证据相匹配的代码组的完整集合。</span><span class="sxs-lookup"><span data-stu-id="27acd-214">The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXml">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27acd-215">创建安全对象及其当前状态的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-215">Creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27acd-216">创建安全对象及其当前状态的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-216">Creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-217">安全对象的 XML 编码，包括任何状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-217">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-218">
              <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> 和<see cref="M:System.Security.Policy.CodeGroup.ToXml" />不能重写。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-218">
                <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> and <see cref="M:System.Security.Policy.CodeGroup.ToXml" /> cannot be overridden.</span>
            </span>
            <span data-ttu-id="27acd-219">如果你需要更改代码组实现在其中处理 XML 的方式，重写<see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />和<see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-219">If you need to change the way in which your code group implementation handles XML, override the <see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> and <see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> methods.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement ToXml(class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml (level As PolicyLevel) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ ToXml(System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="27acd-220">代码组所在的策略级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-220">The policy level within which the code group exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27acd-221">创建安全对象、其当前状态以及代码所在策略级别的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-221">Creates an XML encoding of the security object, its current state, and the policy level within which the code exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27acd-222">安全对象的 XML 编码，包括任何状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27acd-222">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27acd-223">用于解析的命名的权限集提供的策略级别上下文。</span><span class="sxs-lookup"><span data-stu-id="27acd-223">The policy level context is provided for resolution of named permission sets.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27acd-224">
              <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> 和<see cref="M:System.Security.Policy.CodeGroup.ToXml" />不能重写。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-224">
                <see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /> and <see cref="M:System.Security.Policy.CodeGroup.ToXml" /> cannot be overridden.</span>
            </span>
            <span data-ttu-id="27acd-225">如果你需要更改代码组实现在其中处理 XML 的方式，重写<see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />和<see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="27acd-225">If you need to change the way in which your code group implementation handles XML, override the <see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> and <see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /> methods.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>