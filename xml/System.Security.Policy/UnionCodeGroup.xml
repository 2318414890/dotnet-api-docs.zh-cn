<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UnionCodeGroup.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5503dc2967ad1bb10a4c0f92a96909324a06cdfad.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">503dc2967ad1bb10a4c0f92a96909324a06cdfad</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups.</source>
          <target state="translated">表示一个代码组，该代码组的策略声明是当前代码组的策略声明和所有其匹配的子代码组策略声明的联合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Code groups are the building blocks of code access security policy.</source>
          <target state="translated">代码组是代码访问安全性策略的构建基块。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Each policy level consists of a root code group that can have child code groups (and so on), forming a tree.</source>
          <target state="translated">每个策略级别包含可以有子代码组 （依此类推），从而形成一个树的根代码组。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Each code group has a membership condition that determines if a given assembly belongs to it or not, based on the evidence for that assembly.</source>
          <target state="translated">每个代码组有一个确定是否给定的程序集它是否属于，基于该程序集的证据的成员资格条件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Only code groups whose membership conditions match a given assembly and their child code groups apply policy.</source>
          <target state="translated">其成员资格条件匹配给定的程序集的唯一代码组和它们的子代码组应用策略。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> is the most common type of code group; the policy statement of all matching child code groups (and by extension their child code groups) are combined with the permission set of the matching parent code group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> 是最常见的一种代码组。所有匹配的子代码组的策略语句 (以及通过扩展其子代码组) 与匹配的父代码组的权限集组合在一起。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source>Thus, if its membership condition matches, this code group forms the union of its policy statement and those of all its child code groups that also match the evidence.</source>
          <target state="translated">因此，如果其成员资格条件匹配，此代码组构成其策略声明的联合和所有也匹配该证据及其子代码组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.UnionCodeGroup">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> code groups are the code groups created by the CASPOL utility (see <bpt id="p1">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> 代码组是由 CASPOL 实用程序创建的代码组 (请参阅<bpt id="p1">[</bpt>Caspol.exe （代码访问安全策略工具）<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>A membership condition that tests evidence to determine whether this code group applies policy.</source>
          <target state="translated">成员条件，它测试证据以确定此代码组是否应用策略。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</source>
          <target state="translated">形式为权限集和特性的代码组的策略声明，这些权限集和特性将被授予匹配成员条件的代码。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.UnionCodeGroup" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Policy.UnionCodeGroup" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>This constructor creates a basic code group and should be called from the constructors of custom code groups.</source>
          <target state="translated">此构造函数创建的基本代码组，并应该从自定义代码组的构造函数中调用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>You can add child code groups by using the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.</source>
          <target state="translated">你可以使用添加子代码组<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The type of the <ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> 参数的类型无效。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The type of the <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 参数的类型无效。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Copy">
          <source>Makes a deep copy of the current code group.</source>
          <target state="translated">生成当前代码组的深层副本。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Copy">
          <source>An equivalent copy of the current code group, including its membership conditions and child code groups.</source>
          <target state="translated">当前代码组（包括其成员条件和子代码组）的等效副本。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Copy">
          <source>This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</source>
          <target state="translated">此方法使代码组的深层副本，使还进行代码组所包含的所有对象的副本。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
          <source>Gets the merge logic.</source>
          <target state="translated">获取合并逻辑。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
          <source>Always the string "Union".</source>
          <target state="translated">总是为字符串“Union”。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Resolves policy for the code group and its descendants for a set of evidence.</source>
          <target state="translated">对一组证据解析代码组及其子代的策略。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>A policy statement consisting of the permissions granted by the code group with optional attributes, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the code group does not apply (the membership condition does not match the specified evidence).</source>
          <target state="translated">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</source>
          <target state="translated">如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>For union code groups, all child code groups whose membership condition match the evidence are also resolved, and all resulting policy statements form a union with the policy statement of the parent union code group.</source>
          <target state="translated">对于联合代码组，还解析其成员资格条件匹配的证据的所有子代码组，和所有生成的策略语句窗体具有父级联合代码组的策略语句的联合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Each child code group type determines how its child groups are applied, depending on how their respective <ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup.Resolve%2A&gt;</ph> methods work.</source>
          <target state="translated">每个子代码组类型确定如何应用及其子组，具体取决于如何各自<ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup.Resolve%2A&gt;</ph>方法的工作原理。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The .NET Framework security system uses <ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup.Resolve%2A&gt;</ph> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</source>
          <target state="translated">.NET Framework 安全系统使用<ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup.Resolve%2A&gt;</ph>上的策略级别以确定要从生成的策略声明和代码为加载代码授予哪些权限请求的程序集。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>If the membership condition does not match the specified evidence, this method returns <ph id="ph1">`null`</ph>; otherwise, it sets the permission set to be returned (P) equal to the code group's policy statement, and then continues.</source>
          <target state="translated">如果成员资格条件与指定的证据不匹配，此方法返回<ph id="ph1">`null`</ph>; 否则为它将设置要返回的权限 (P) 设置为等于代码组的策略语句，然后继续。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>For each child code group, the method resolves the code group with the same evidence; if the result is not <ph id="ph1">`null`</ph>, it sets P equal to the union of P and the child code group's policy statement.</source>
          <target state="translated">对于每个子代码组，方法会代码组解析与相同的证据;如果结果不为<ph id="ph1">`null`</ph>，它将设置 P 等于兼具 P 和子代码组的策略语句。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>It then returns P, which is now the union of the current code group's policy statement and all child group policy statements.</source>
          <target state="translated">然后，它返回 P，现在是当前代码组的策略语句和所有子组策略语句的并集。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>More than one code group (including the parent code group and any child code groups) is marked <ph id="ph1">&lt;see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /&gt;</ph>.</source>
          <target state="translated">将不止一个代码组（包括父代码组和任何子代码组）标记为 <ph id="ph1">&lt;see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>Resolves matching code groups.</source>
          <target state="translated">解析匹配的代码组。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The complete set of code groups that were matched by the evidence.</source>
          <target state="translated">证据匹配的完整代码组集。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>If there is a match, this method returns a root code group.</source>
          <target state="translated">如果没有匹配项，则此方法返回的根代码组。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The code group that is returned may contain child code groups, which, in turn, may also contain child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</source>
          <target state="translated">返回代码组可以包含子代码组，其中，反过来，可能还包含子代码组，因此返回的值反映了由提供的证据相匹配的代码组的完整集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>