<Type Name="NetCodeGroup" FullName="System.Security.Policy.NetCodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cb0f97af74421f532dd05e94231b2ab08ceebc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500581" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NetCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NetCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.NetCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>向从其下载程序集的站点授予 Web 权限。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 代码组是代码访问安全性策略的构建基块。 每个策略级别包含可具有一个或多个子代码组的根代码组。 每个子代码组可以具有其自己的子代码组;此行为扩展到任意数量的级别，从而形成一个树。 每个代码组有一个确定如果给定的程序集属于基于该程序集的证据的组的成员资格条件。 只有代码组的成员资格条件匹配给定的程序集，以及它们的子代码组，将应用代码访问安全性策略。  
  
 <xref:System.Security.Policy.NetCodeGroup> 合并语义相同<xref:System.Security.Policy.UnionCodeGroup>; 程序集形成的联合<xref:System.Security.Policy.PolicyStatement>对象的所有匹配的子代码组和<xref:System.Security.Policy.PolicyStatement>它从输入生成<xref:System.Security.Policy.Url>证据。 但是，<xref:System.Security.Policy.NetCodeGroup>返回包含动态计算权限<xref:System.Net.WebPermission>授予连接到从中运行代码; 站点的访问<xref:System.Security.Policy.UnionCodeGroup>只是返回一个静态的权限集。  
  
 当<xref:System.Security.Policy.NetCodeGroup>是创建，包含下表中所示的默认连接访问规则。  
  
|URI 方案|规则|  
|----------------|----------|  
|文件|没有到源服务器的连接访问权限。|  
|http|HTTP 和 HTTPS 访问权限使用源端口。|  
|https|使用源端口允许 HTTPS 访问。|  
  
 你可以控制的方案和代码允许通过传递回其源站点的连接时要使用的端口<xref:System.Security.Policy.CodeConnectAccess>使用相应的对象<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>和<xref:System.Security.Policy.CodeConnectAccess.Port%2A>属性值复制到<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法。 你可以创建应用于原始方案证据中不存在或无法识别指定的连接访问规则<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>("") 作为方案。 你还可以创建通过指定具有匹配方案没有连接访问规则时适用的连接访问规则<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>("*") 作为方案。  
  
> [!NOTE]
>  如果代码未提交证据形式的 URI 方案，回到源站点使用任何一种方案允许访问。  
  
   
  
## Examples  
 下面的代码示例演示如何创建<xref:System.Security.Policy.NetCodeGroup>和添加<xref:System.Security.Policy.CodeConnectAccess>下载使用 HTTP 方案的代码的对象。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">成员条件，它测试证据以确定此代码组是否应用代码访问安全策略。</param>
        <summary>初始化 <see cref="T:System.Security.Policy.NetCodeGroup" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Security.Policy.NetCodeGroup>是创建，包含下表中所示的默认连接访问规则。  
  
|方案|规则|  
|------------|----------|  
|文件|没有到源服务器的连接访问权限。|  
|http|HTTP 和 HTTPS 访问权限使用源端口。|  
|https|使用源端口允许 HTTPS 访问。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建<xref:System.Security.Policy.NetCodeGroup>和添加<xref:System.Security.Policy.CodeConnectAccess>下载使用 HTTP 方案的代码的对象。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="membershipCondition" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="membershipCondition" /> 参数的类型无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="AbsentOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AbsentOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AbsentOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AbsentOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AbsentOriginScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含一个值，该值用于为具有未知或未能识别的原始方案的代码指定连接访问权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用时<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法，你指定方案和一个关联<xref:System.Security.Policy.CodeConnectAccess>对象。 任何<xref:System.Security.Policy.CodeConnectAccess>将添加到对象<xref:System.Security.Policy.NetCodeGroup>使用<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>的原点在代码的原始方案中不存在的证据，或被识别不一种方案时应用方案<xref:System.Security.Policy.NetCodeGroup>对象。  
  
 若要指定<xref:System.Security.Policy.CodeConnectAccess>对象代码的原始方案与任何添加到当前的原始方案集中包含的方案都不匹配时要使用<xref:System.Security.Policy.NetCodeGroup>对象，请使用<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>值。  
  
 值<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>字段为空字符串 ("")。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnectAccess">
      <MemberSignature Language="C#" Value="public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConnectAccess(string originScheme, class System.Security.Policy.CodeConnectAccess connectAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddConnectAccess (originScheme As String, connectAccess As CodeConnectAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddConnectAccess(System::String ^ originScheme, System::Security::Policy::CodeConnectAccess ^ connectAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originScheme" Type="System.String" />
        <Parameter Name="connectAccess" Type="System.Security.Policy.CodeConnectAccess" />
      </Parameters>
      <Docs>
        <param name="originScheme">一个 <see cref="T:System.String" />，包含要与代码的方案进行匹配的方案。</param>
        <param name="connectAccess">一个 <see cref="T:System.Security.Policy.CodeConnectAccess" />，指定代码可用来连接回其原始服务器的方案和端口。</param>
        <summary>将指定的连接访问权限添加到当前代码组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以添加多个<xref:System.Security.Policy.CodeConnectAccess>对同一对象`origin scheme`。 如果`origin scheme`已具有一个或多个关联<xref:System.Security.Policy.CodeConnectAccess>对象，指定`null`为`connectAccess`不起作用。 如果没有关联的原始方案<xref:System.Security.Policy.CodeConnectAccess>对象，指定`null`为`connectAccess`可防止使用与匹配的源方案的代码`originScheme`访问其源服务器。  
  
   
  
## Examples  
 下面的代码示例演示如何创建和添加<xref:System.Security.Policy.CodeConnectAccess>对象添加到<xref:System.Security.Policy.NetCodeGroup>。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="originScheme" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="originScheme" /> 包含方案中不允许的字符。  
  
 或  
  
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> 和 <paramref name="connectAccess" /> 指定 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> 作为其方案。</exception>
      </Docs>
    </Member>
    <Member MemberName="AnyOtherOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyOtherOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyOtherOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyOtherOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyOtherOriginScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含一个值，用于指定任何其他未指定的原始方案。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用时<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法，你指定方案和一个关联<xref:System.Security.Policy.CodeConnectAccess>对象。 你可以使用的值<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>字段来指定<xref:System.Security.Policy.CodeConnectAccess>对象应该用于未显式包含的一套原始方案添加到当前的任何方案<xref:System.Security.Policy.NetCodeGroup>对象。  
  
 <xref:System.Security.Policy.CodeConnectAccess>用指定的对象<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>如果代码的原始方案不匹配任何添加到当前的原始方案集中包含的方案，则仅使用字段<xref:System.Security.Policy.NetCodeGroup>对象。  
  
 若要指定<xref:System.Security.Policy.CodeConnectAccess>对象来在代码的原始方案在的证据中不可用或无法识别时, 应用使用<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>值。  
  
 值<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>字段是"*"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.AttributeString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AttributeString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取代码组策略声明的特性的字符串表示形式。</summary>
        <value>总是为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成当前代码组的深层副本。</summary>
        <returns>当前代码组（包括其成员条件和子代码组）的等效副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法生成的代码组中，这意味着所有代码组所包含的对象的副本还所做的深层副本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateXml (element As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateXml(System::Security::SecurityElement ^ element, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要与当前代码组进行比较的 <see cref="T:System.Security.Policy.NetCodeGroup" /> 对象。</param>
        <summary>确定指定的代码组是否等效于当前代码组。</summary>
        <returns>
          如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下数据用于确定是否相等的两个<xref:System.Security.Policy.NetCodeGroup>对象：  
  
-   <xref:System.Security.Policy.CodeGroup.Name%2A>和<xref:System.Security.Policy.CodeGroup.Description%2A>属性。  
  
-   <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> 属性。  
  
-   原始方案和关联集<xref:System.Security.Policy.CodeConnectAccess>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectAccessRules">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry[] GetConnectAccessRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.DictionaryEntry[] GetConnectAccessRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectAccessRules () As DictionaryEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::DictionaryEntry&gt; ^ GetConnectAccessRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前代码组的连接访问权限信息。</summary>
        <returns>一个 <see cref="T:System.Collections.DictionaryEntry" /> 数组，包含连接访问权限信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在每个字典条目，<xref:System.Collections.DictionaryEntry.Key%2A>属性值都为原始方案中，与<xref:System.Collections.DictionaryEntry.Value%2A>属性值的数组关联<xref:System.Security.Policy.CodeConnectAccess>对象。 如果没有关联<xref:System.Security.Policy.CodeConnectAccess>对象，<xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=nameWithType>返回一个空数组。  
  
   
  
## Examples  
 下面的代码示例演示如何显示的连接访问规则<xref:System.Security.Policy.NetCodeGroup>对象。  
  
 [!code-cpp[NclCodeGroup#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#8)]
 [!code-csharp[NclCodeGroup#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前代码组的哈希代码。</summary>
        <returns>当前代码组的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Policy.CodeGroup.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于合并组的逻辑。</summary>
        <value>字符串“Union”。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ParseXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PermissionSetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该代码组的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</summary>
        <value>始终为字符串“Same site Web”。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetConnectAccess">
      <MemberSignature Language="C#" Value="public void ResetConnectAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetConnectAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetConnectAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetConnectAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除当前代码组的所有连接访问权限信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法删除系统提供的默认连接访问规则。  
  
 下表中显示的默认规则。  
  
|方案|规则|  
|------------|----------|  
|文件|没有到源服务器的连接访问权限。|  
|http|HTTP 和 HTTPS 访问权限使用源端口。|  
|https|使用源端口允许 HTTPS 访问。|  
  
   
  
## Examples  
 下面的代码示例演示如何调用此方法以删除的默认代码访问连接规则。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">程序集的 <see cref="T:System.Security.Policy.Evidence" />。</param>
        <summary>对一组证据解析代码组及其子代的策略。</summary>
        <returns>由具有可选特性的代码组授予的权限组成的 <see cref="T:System.Security.Policy.PolicyStatement" />；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。 如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。  
  
 此方法的操作如下所示：  
  
 如果成员资格条件与指定的证据不匹配，则返回`null`; 否则为组的权限集返回 (P) 等于代码组的策略语句并继续。 对于每个子代码组，使用相同的证据; 解析代码组如果结果不为`null`，返回该策略语句。 如果没有子代码组匹配，则返回 P （父级的策略语句）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Policy.PolicyException">将不止一个代码组（包括父代码组和任何子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">程序集的证据。</param>
        <summary>解析匹配的代码组。</summary>
        <returns>证据匹配的完整代码组集。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。 如果没有匹配项，则此方法返回的根代码组。 返回代码组可以包含子代码组，其，反过来，可能也具有子代码组，因此返回的值反映了由提供的证据相匹配的代码组的完整集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>