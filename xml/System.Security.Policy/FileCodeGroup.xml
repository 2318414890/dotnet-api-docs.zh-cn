<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileCodeGroup.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac521bc0f6a411ef037d021b57e50074c70f142466e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21bc0f6a411ef037d021b57e50074c70f142466e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition.</source>
          <target state="translated">向符合成员条件的代码程序集授予权限以操作位于代码程序集中的文件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.FileCodeGroup">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Code groups are the building blocks of code access security policy.</source>
          <target state="translated">代码组是代码访问安全性策略的构建基块。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Each policy level consists of a root code group that can have child code groups.</source>
          <target state="translated">每个策略级别包含可以有子代码组的根代码组。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.</source>
          <target state="translated">每个子代码组可以具有它们自己的子代码组;此行为扩展到任意数量的级别，从而形成一个树。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.</source>
          <target state="translated">每个代码组有一个确定是否给定的程序集属于基于该程序集的证据的成员资格条件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>Only code groups whose membership conditions match a given assembly and their child code groups apply policy.</source>
          <target state="translated">其成员资格条件匹配给定的程序集的唯一代码组和它们的子代码组应用策略。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> has the same child matching semantics as <ph id="ph2">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> 具有相同的子匹配语义与<ph id="ph2">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> returns a permission set containing a dynamically-calculated <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> that grants file access to the directory from which the code is run; <ph id="ph3">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> only returns a static permission set.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>返回包含动态计算的权限集<ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph>，授予对从其运行代码; 的目录的文件访问权限<ph id="ph3">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>仅返回一个静态的权限集。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>The type of file access granted is passed as a parameter to the constructor.</source>
          <target state="translated">文件访问权限授予的类型作为参数传递给构造函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>This code group only matches assemblies run over a file protocol, that is, assemblies that have URLs that point to a file or UNC path.</source>
          <target state="translated">此代码组仅匹配运行通过文件协议，即，具有指向文件或 UNC 路径的 Url 的程序集的程序集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.FileCodeGroup">
          <source>The following example shows the use of members of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">下面的示例演示了利用的成员<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>A membership condition that tests evidence to determine whether this code group applies policy.</source>
          <target state="translated">成员条件，它测试证据以确定此代码组是否应用策略。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>This value is used to construct the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> that is granted.</source>
          <target state="translated">该值用于构造授予的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.FileCodeGroup" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Policy.FileCodeGroup" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>This constructor creates a basic code group.</source>
          <target state="translated">此构造函数创建的基本代码组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>Child code groups can be added with the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.</source>
          <target state="translated">可以使用添加子代码组<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> returns a permission set containing a dynamically-calculated <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> that grants file access to the directory from which the code is run.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> 返回包含动态计算的权限集<ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph>授予文件访问权限从中运行代码的目录。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>The type of access granted is determined by the <ph id="ph1">`access`</ph> parameter.</source>
          <target state="translated">授予的访问的类型由<ph id="ph1">`access`</ph>参数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>The <ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>The type of the <ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> 参数的类型无效。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
          <source>The type of the <ph id="ph1">&lt;paramref name="access" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> 参数的类型无效。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.FileCodeGroup.AttributeString">
          <source>Gets a string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">获取代码组策略声明的特性的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.AttributeString">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">总是为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.AttributeString">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> does not use <ph id="ph2">&lt;xref:System.Security.Policy.FileCodeGroup.AttributeString%2A&gt;</ph>, so this property is always <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> 不使用<ph id="ph2">&lt;xref:System.Security.Policy.FileCodeGroup.AttributeString%2A&gt;</ph>，因此此属性始终是<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.AttributeString">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.AttributeString%2A&gt;</ph> property to get the attributes for the code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.AttributeString%2A&gt;</ph>属性来获取代码组的特性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.AttributeString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Copy">
          <source>Makes a deep copy of the current code group.</source>
          <target state="translated">生成当前代码组的深层副本。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Copy">
          <source>An equivalent copy of the current code group, including its membership conditions and child code groups.</source>
          <target state="translated">当前代码组（包括其成员条件和子代码组）的等效副本。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Copy">
          <source>This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</source>
          <target state="translated">此方法使代码组的深层副本，使还进行代码组所包含的所有对象的副本。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Copy">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Copy%2A&gt;</ph> method to make a deep copy of the code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Copy%2A&gt;</ph>方法来执行的代码组的深层副本。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
          <source>The code group to compare with the current code group.</source>
          <target state="translated">要与当前代码组比较的代码组。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
          <source>Determines whether the specified code group is equivalent to the current code group.</source>
          <target state="translated">确定指定的代码组是否等效于当前代码组。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code group is equivalent to the current code group; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的代码组等效于当前代码组，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Equals%2A&gt;</ph> method to determine if two code groups are equal.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Equals%2A&gt;</ph>方法来确定两个代码组是否相等。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.GetHashCode">
          <source>Gets the hash code of the current code group.</source>
          <target state="translated">获取当前代码组的哈希代码。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.GetHashCode">
          <source>The hash code of the current code group.</source>
          <target state="translated">当前代码组的哈希代码。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.GetHashCode">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.GetHashCode%2A&gt;</ph> method to get the hash code of the current code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.GetHashCode%2A&gt;</ph>方法以获取当前代码组的哈希代码。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.GetHashCode">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.FileCodeGroup.MergeLogic">
          <source>Gets the merge logic.</source>
          <target state="translated">获取合并逻辑。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.MergeLogic">
          <source>The string "Union".</source>
          <target state="translated">字符串“Union”。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.MergeLogic">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.MergeLogic%2A&gt;</ph> property to get the merge logic for this code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.MergeLogic%2A&gt;</ph>属性若要获取此代码组的合并逻辑。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.MergeLogic">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
          <source>Gets the name of the named permission set for the code group.</source>
          <target state="translated">获取代码组的命名的权限集的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
          <source>The concatenatation of the string "Same directory FileIO - " and the access type.</source>
          <target state="translated">字符串“Same directory FileIO -”和访问类型的连接。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.PermissionSetName%2A&gt;</ph> property to get the name of the named permission set for the code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.PermissionSetName%2A&gt;</ph>代码组设置属性以获取命名的权限的名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Resolves policy for the code group and its descendants for a set of evidence.</source>
          <target state="translated">对一组证据解析代码组及其子代的策略。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>A policy statement consisting of the permissions granted by the code group with optional attributes, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the code group does not apply (the membership condition does not match the specified evidence).</source>
          <target state="translated">由具有可选特性的代码组授予的权限组成的策略声明；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</source>
          <target state="translated">如果没有匹配项，则此方法返回的代码组，其中包括的子代码组评估的策略语句。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The .NET Framework security system uses <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Resolve%2A&gt;</ph> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</source>
          <target state="translated">.NET Framework 安全系统使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Resolve%2A&gt;</ph>上的策略级别以确定要从生成的策略声明和代码为加载代码授予哪些权限请求的程序集。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> uses union semantics and forms a permission set based on the <ph id="ph2">&lt;xref:System.Security.Policy.Url&gt;</ph> specified by <ph id="ph3">`evidence`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> 窗体基于的权限集和使用联合语义<ph id="ph2">&lt;xref:System.Security.Policy.Url&gt;</ph>指定的<ph id="ph3">`evidence`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Resolve%2A&gt;</ph> method to resolve policy for the code group.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.Resolve%2A&gt;</ph>方法要解决策略代码组。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The current policy is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">当前策略是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>More than one code group (including the parent code group and all child code groups) is marked <ph id="ph1">&lt;see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /&gt;</ph>.</source>
          <target state="translated">将不止一个代码组（包括父代码组和所有子代码组）标记为 <ph id="ph1">&lt;see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">程序集的证据。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>Resolves matching code groups.</source>
          <target state="translated">解析匹配的代码组。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph> that is the root of the tree of matching code groups.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph>，它是匹配代码组的树的根。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">给定要加载程序集的证据，则此方法通过先检查针对指定的证据的成员资格条件计算的代码组。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>If there is a match, this method returns a root code group.</source>
          <target state="translated">如果没有匹配项，则此方法返回的根代码组。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.</source>
          <target state="translated">返回的代码组包含子代码组，因而也就可以有子代码组，根据需要以反映由提供的证据相匹配的代码组的完整集合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> uses union semantics and forms a permission set based on the <ph id="ph2">&lt;xref:System.Security.Policy.Url&gt;</ph> specified by <ph id="ph3">`evidence`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> 窗体基于的权限集和使用联合语义<ph id="ph2">&lt;xref:System.Security.Policy.Url&gt;</ph>指定的<ph id="ph3">`evidence`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups%2A&gt;</ph> method to resolve matching code groups.</source>
          <target state="translated">下面的代码演示如何使用<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups%2A&gt;</ph>方法解决匹配的代码组。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>