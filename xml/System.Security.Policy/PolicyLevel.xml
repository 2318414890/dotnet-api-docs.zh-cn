<Type Name="PolicyLevel" FullName="System.Security.Policy.PolicyLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f89fbe7dec4d09a5d6856039c2655ae9753813cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PolicyLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PolicyLevel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.PolicyLevel" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PolicyLevel" />
  <TypeSignature Language="C++ CLI" Value="public ref class PolicyLevel sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示公共语言运行时的安全策略级别。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，公共语言运行时 (CLR) 不再提供安全策略的计算机。 我们建议你使用[Windows 软件限制策略 (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101)或[AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102)作为 CLR 安全策略的替换。 本主题中的信息适用于.NET Framework 版本 3.5 及更早版本;它不适用于[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]及更高版本。 有关此更改以及其他更改的详细信息，请参阅[安全更改](~/docs/framework/security/security-changes.md)。  
  
 安全策略的最高级别是企业范围。 连续较低级别的层次结构表示更多的策略限制，但永远不会授予比允许的更高级别的权限。 实现以下策略级别：  
  
1.  Enterprise： 在企业中的所有托管代码的安全策略。  
  
2.  计算机： 在计算机上运行的所有托管代码的安全策略。  
  
3.  由用户运行的所有托管代码的用户： 安全策略。  
  
4.  应用程序域： 应用程序中的所有托管代码的安全策略。  
  
 策略级别均包含一组的组织到取得 root 权限的单个树的代码组 (请参阅<xref:System.Security.Policy.CodeGroup>)、 一组指定要对代码组所属的代码可授予权限的代码组引用的命名的权限集和的列表完全信任程序集。  
  
 使用<xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=nameWithType>要枚举的策略级别。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddFullTrustAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表中，这些对象用于确定程序集是否为不应评估的程序集组的成员。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFullTrustAssembly">
      <MemberSignature Language="C#" Value="public void AddFullTrustAssembly (System.Security.Policy.StrongName sn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFullTrustAssembly(class System.Security.Policy.StrongName sn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFullTrustAssembly (sn As StrongName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFullTrustAssembly(System::Security::Policy::StrongName ^ sn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sn" Type="System.Security.Policy.StrongName" />
      </Parameters>
      <Docs>
        <param name="sn">用于创建要添加到 <see cref="T:System.Security.Policy.StrongName" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）列表的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
        <summary>将与指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对应的 <see cref="T:System.Security.Policy.StrongName" /> 添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表中，这些对象用于确定程序集是否为不应评估的程序集组的成员。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A>方法不支持在版本 2.0 或更高版本的.NET framework 中，因为这些版本中不使用完全信任程序集的列表。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sn" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sn" /> 参数指定的 <see cref="T:System.Security.Policy.StrongName" /> 已获得完全信任。</exception>
        <altmember cref="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddFullTrustAssembly">
      <MemberSignature Language="C#" Value="public void AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFullTrustAssembly(class System.Security.Policy.StrongNameMembershipCondition snMC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFullTrustAssembly (snMC As StrongNameMembershipCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFullTrustAssembly(System::Security::Policy::StrongNameMembershipCondition ^ snMC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snMC" Type="System.Security.Policy.StrongNameMembershipCondition" />
      </Parameters>
      <Docs>
        <param name="snMC">要添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）的列表中的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
        <summary>将指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 添加到 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象（这些对象用于确定程序集是否为不应评估的程序集组的成员）的列表中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.AddFullTrustAssembly%2A>方法不支持在版本 2.0 或更高版本的.NET framework 中，因为这些版本中不使用完全信任程序集的列表。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="snMC" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="snMC" /> 参数指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 已获得完全信任。</exception>
        <altmember cref="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddNamedPermissionSet">
      <MemberSignature Language="C#" Value="public void AddNamedPermissionSet (System.Security.NamedPermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNamedPermissionSet(class System.Security.NamedPermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNamedPermissionSet (permSet As NamedPermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNamedPermissionSet(System::Security::NamedPermissionSet ^ permSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.NamedPermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet">要添加到当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
        <summary>将 <see cref="T:System.Security.NamedPermissionSet" /> 添加到当前的策略级别中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 策略级别的范围内命名的权限集。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="permSet" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permSet" /> 参数与 <see cref="T:System.Security.NamedPermissionSet" /> 中的现有 <see cref="T:System.Security.Policy.PolicyLevel" /> 具有相同的名称。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeNamedPermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.NamedPermissionSet ChangeNamedPermissionSet (string name, System.Security.PermissionSet pSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.NamedPermissionSet ChangeNamedPermissionSet(string name, class System.Security.PermissionSet pSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeNamedPermissionSet (name As String, pSet As PermissionSet) As NamedPermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::NamedPermissionSet ^ ChangeNamedPermissionSet(System::String ^ name, System::Security::PermissionSet ^ pSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.NamedPermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="name">要替换的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
        <param name="pSet">用于替换 <c>name</c> 参数所指定的 <see cref="T:System.Security.NamedPermissionSet" /> 的 <see cref="T:System.Security.PermissionSet" />。</param>
        <summary>用指定的 <see cref="T:System.Security.NamedPermissionSet" /> 替换当前策略级别中的 <see cref="T:System.Security.PermissionSet" />。</summary>
        <returns>已替换的 <see cref="T:System.Security.NamedPermissionSet" /> 的副本。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 参数为 <see langword="null" />。  
  
 或  
  
 <paramref name="pSet" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 参数等于保留权限集的名称。  
  
 或  
  
 找不到 <paramref name="pSet" /> 参数所指定的 <see cref="T:System.Security.PermissionSet" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAppDomainLevel">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.PolicyLevel CreateAppDomainLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.PolicyLevel CreateAppDomainLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAppDomainLevel () As PolicyLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::PolicyLevel ^ CreateAppDomainLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建供在应用程序域策略级别使用的新的策略级别。</summary>
        <returns>新创建的 <see cref="T:System.Security.Policy.PolicyLevel" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法创建一个新<xref:System.Security.Policy.PolicyLevel>与<xref:System.Security.Policy.PolicyLevel.Label%2A>"AppDomain"。 新<xref:System.Security.Policy.PolicyLevel>最初包含相同<xref:System.Security.NamedPermissionSet>如下所示的默认计算机策略和将对象具有授予的单个根代码组`FullTrust`于的所有代码。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">用于重新构造安全对象的 XML 编码。</param>
        <summary>从 XML 编码重新构造具有给定状态的安全对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> 参数所指定的 <see cref="T:System.Security.SecurityElement" /> 无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="FullTrustAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.IList FullTrustAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList FullTrustAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullTrustAssemblies As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ FullTrustAssemblies { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表，这些对象用于确定程序集是否为用于评估安全策略的程序集组的成员。</summary>
        <value>
          <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 对象列表，这些对象用于确定程序集是否为用于评估安全策略的程序集组的成员。 在对列表中没有的程序集进行安全策略评估的过程中，这些程序集被授予完全信任。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A> 被授予的完全信任的程序集的安全策略评估期间未显示在列表中，但不是会自动授予完全信任时直接通过安全策略系统计算。  
  
 <xref:System.Security.Policy.PolicyLevel.FullTrustAssemblies%2A>属性不支持在版本 2.0 或更高版本的.NET framework 中，因为这些版本中不使用完全信任程序集的列表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedPermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.NamedPermissionSet GetNamedPermissionSet (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.NamedPermissionSet GetNamedPermissionSet(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamedPermissionSet (name As String) As NamedPermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::NamedPermissionSet ^ GetNamedPermissionSet(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.NamedPermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要查找的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
        <summary>返回具有指定名称的当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
        <returns>如果找到，则为具有指定名称的当前策略级别中的 <see cref="T:System.Security.NamedPermissionSet" />；否则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 参数为 <see langword="null" />。</exception>
        <altmember cref="T:System.Security.NamedPermissionSet" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取策略级别的描述性标签。</summary>
        <value>与该策略级别关联的标签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标签用于帮助管理员识别的策略级别。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedPermissionSets">
      <MemberSignature Language="C#" Value="public System.Collections.IList NamedPermissionSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList NamedPermissionSets" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.NamedPermissionSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamedPermissionSets As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ NamedPermissionSets { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为策略级别定义的命名权限集的列表。</summary>
        <value>为策略级别定义的命名权限集的列表。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recover">
      <MemberSignature Language="C#" Value="public void Recover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.Recover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Recover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Recover();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用上一次的备份（反映上一次保存之前的策略状态）替换此 <see cref="T:System.Security.Policy.PolicyLevel" /> 的配置文件，并将它返回到上一次保存的状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不会进行修改当前<xref:System.Security.Policy.PolicyLevel>。 相反，它更新<xref:System.Security.Policy.PolicyLevel>对象的文件和<xref:System.Security.Policy.PolicyLevel>安全系统用来评估策略。  
  
 此方法由 caspol-恢复选项 (请参阅[Caspol.exe （代码访问安全策略工具）](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md))。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Policy.PolicyException">该策略级别没有有效的配置文件。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveFullTrustAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将程序集从该策略级别用来评估策略的程序集列表中移除。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveFullTrustAssembly">
      <MemberSignature Language="C#" Value="public void RemoveFullTrustAssembly (System.Security.Policy.StrongName sn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFullTrustAssembly(class System.Security.Policy.StrongName sn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFullTrustAssembly (sn As StrongName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFullTrustAssembly(System::Security::Policy::StrongName ^ sn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sn" Type="System.Security.Policy.StrongName" />
      </Parameters>
      <Docs>
        <param name="sn">要从用于评估策略的程序集列表中移除的程序集的 <see cref="T:System.Security.Policy.StrongName" />。</param>
        <summary>将具有指定 <see cref="T:System.Security.Policy.StrongName" /> 的程序集从策略级别用来评估策略的程序集列表中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A>方法不支持在版本 2.0 或更高版本的.NET framework 中，因为这些版本中不使用完全信任程序集的列表。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sn" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">具有 <paramref name="sn" /> 参数所指定的 <see cref="T:System.Security.Policy.StrongName" /> 的程序集未获得完全信任。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFullTrustAssembly">
      <MemberSignature Language="C#" Value="public void RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFullTrustAssembly(class System.Security.Policy.StrongNameMembershipCondition snMC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFullTrustAssembly (snMC As StrongNameMembershipCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFullTrustAssembly(System::Security::Policy::StrongNameMembershipCondition ^ snMC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("All GACed assemblies are now fully trusted and all permissions now succeed on fully trusted code.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snMC" Type="System.Security.Policy.StrongNameMembershipCondition" />
      </Parameters>
      <Docs>
        <param name="snMC">要从用于评估策略的程序集列表中移除的程序集的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
        <summary>将具有指定 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的程序集从策略级别用来评估策略的程序集列表中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly%2A>方法不支持在版本 2.0 或更高版本的.NET framework 中，因为这些版本中不使用完全信任程序集的列表。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="snMC" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="snMC" /> 参数所指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 未获得完全信任。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveNamedPermissionSet">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从当前策略级别中移除 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveNamedPermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.NamedPermissionSet RemoveNamedPermissionSet (System.Security.NamedPermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.NamedPermissionSet RemoveNamedPermissionSet(class System.Security.NamedPermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveNamedPermissionSet (permSet As NamedPermissionSet) As NamedPermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::NamedPermissionSet ^ RemoveNamedPermissionSet(System::Security::NamedPermissionSet ^ permSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.NamedPermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.NamedPermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet">要从当前策略级别中移除的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
        <summary>从当前策略级别中移除指定的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
        <returns>已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">未找到 <paramref name="permSet" /> 参数所指定的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="permSet" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveNamedPermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.NamedPermissionSet RemoveNamedPermissionSet (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.NamedPermissionSet RemoveNamedPermissionSet(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveNamedPermissionSet (name As String) As NamedPermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::NamedPermissionSet ^ RemoveNamedPermissionSet(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.NamedPermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要移除的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</param>
        <summary>从当前策略级别中移除具有指定名称的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
        <returns>已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 参数等于保留权限集的名称。  
  
 或  
  
 找不到具有指定名称的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 参数为 <see langword="null" />。</exception>
        <altmember cref="T:System.Security.NamedPermissionSet" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将当前策略级别返回到默认状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认状态是不同的每个策略级别。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">用于解析 <see cref="T:System.Security.Policy.Evidence" /> 的 <see cref="T:System.Security.Policy.PolicyLevel" />。</param>
        <summary>根据策略级别的证据移除策略，并返回产生的 <see cref="T:System.Security.Policy.PolicyStatement" />。</summary>
        <returns>生成的 <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.PolicyLevel.Resolve%2A> 是策略级别的基本策略求值运算。 给定一组作为输入的证据，则此方法将测试从根目录开始并匹配下正常工作的代码组的成员资格条件。 匹配的代码中得到的权限组合组生成<xref:System.Security.Policy.PolicyStatement>返回。  
  
 在向代码授予权限，安全策略使用所有合适的策略级别，以及代码的权限请求的解决的策略语句。  
  
   
  
## Examples  
 下面的代码演示如何使用<xref:System.Security.Policy.PolicyLevel.Resolve%2A>方法。 此代码示例摘自更大的示例为提供<xref:System.Security.Policy.PolicyLevel>类。  
  
 [!code-cpp[system.Security.policy.policylevel#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CPP/policylevel.cpp#13)]
 [!code-csharp[system.Security.policy.policylevel#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CS/policylevel.cs#13)]
 [!code-vb[system.Security.policy.policylevel#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.policy.policylevel/VB/policylevel.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Policy.PolicyException">策略级别包含多个标记为独占的匹配代码组。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">用于解析策略的 <see cref="T:System.Security.Policy.Evidence" />。</param>
        <summary>解析策略级别的策略并返回与证据匹配的代码组树的根。</summary>
        <returns>
          <see cref="T:System.Security.Policy.CodeGroup" />，表示与指定证据匹配的代码组树的根。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于分析的证据集与策略级别中的代码组的效果。 例如，如果安全策略不授予程序集所需的最小代码请求权限，它很难通过检查问题处于的确切位置的代码组来判断。  
  
 由于此方法返回时可以有子代码组的代码组，它时，管理员可以检查的代码组和它的子代码组，并确定哪些代码组匹配。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Policy.PolicyException">策略级别包含多个标记为独占的匹配代码组。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RootCodeGroup">
      <MemberSignature Language="C#" Value="public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.CodeGroup RootCodeGroup" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.RootCodeGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property RootCodeGroup As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::CodeGroup ^ RootCodeGroup { System::Security::Policy::CodeGroup ^ get(); void set(System::Security::Policy::CodeGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置策略级别的根代码组。</summary>
        <value>
          <see cref="T:System.Security.Policy.CodeGroup" />，它是策略级别代码组的树的根。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每个策略级别都有一个根<xref:System.Security.Policy.CodeGroup>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> 的值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="StoreLocation">
      <MemberSignature Language="C#" Value="public string StoreLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.StoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoreLocation { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取存储策略文件的路径。</summary>
        <value>存储策略文件的路径，或者 <see langword="null" />（如果 <see cref="T:System.Security.Policy.PolicyLevel" /> 没有存储位置）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码演示如何显示策略级别的存储位置。 此代码示例摘自更大的示例为提供<xref:System.Security.Policy.PolicyLevel>类。  
  
 [!code-cpp[system.Security.policy.policylevel#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CPP/policylevel.cpp#15)]
 [!code-csharp[system.Security.policy.policylevel#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.policy.policylevel/CS/policylevel.cs#15)]
 [!code-vb[system.Security.policy.policylevel#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.policy.policylevel/VB/policylevel.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">有关操作的主体对象的能力。 关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.PolicyLevel.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建安全对象及其当前状态的 XML 编码。</summary>
        <returns>安全对象的 XML 编码，包括任何状态信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Security.PolicyLevelType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.PolicyLevelType Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.PolicyLevel.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As PolicyLevelType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::PolicyLevelType Type { System::Security::PolicyLevelType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PolicyLevelType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取策略级别的类型。</summary>
        <value>
          <see cref="T:System.Security.PolicyLevelType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 安全策略的最高级别是企业范围。 连续较低级别的层次结构表示更多的策略限制，但永远不会授予比允许的更高级别的权限。 按顺序的策略级别如下所示。  
  
1.  企业  
  
2.  计算机  
  
3.  “用户”  
  
4.  应用程序域  
  
 有关详情，请参阅<xref:System.Security.PolicyLevelType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.PolicyLevelType" />
      </Docs>
    </Member>
  </Members>
</Type>