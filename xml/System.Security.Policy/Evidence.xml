<Type Name="Evidence" FullName="System.Security.Policy.Evidence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b71a6120495409a3fe3035dadb0f2cfe3309c8fe" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37623075" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Evidence : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Evidence extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.Evidence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Evidence&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Evidence sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Evidence = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义组成对安全策略决策的输入的一组信息。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 证据的常见形式包括签名和代码中，源位置，但可能可以是任何内容。 识别安全策略的任何类型的对象表示的证据。  
  
 安全策略组成的代码组;如果它满足代码组的成员资格条件，特定的程序集 （授予安全权限的基本单位） 是代码的代码组的成员。 证据是输入到成员资格条件用于确定程序集所属的代码组的策略集。  
  
 <xref:System.Security.Policy.Evidence>类是一个集合 (请参阅<xref:System.Collections.ICollection>) 包含一组表示证据的对象。 此类包含对应的两个集的证据的源： 主机证据和程序集证据。  
  
 评估代码的权限时，策略可以从两个不同的源获取的证据。  
  
-   `Host evidence` 提供的主机，并只由主机已被授予<xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence>权限。 通常情况下，这是原点的代码和数字签名的程序集的证据。 通常包括有关源的证据<xref:System.Security.Policy.Url>， <xref:System.Security.Policy.Site>，和<xref:System.Security.Policy.Zone>证据。 签名是指软件发布者 （AuthentiCode X.509v3 签名） 和强名称标识。 这两种类型的数字签名基于标识内置于程序集，但必须进行验证并由主机; 传递到策略加载时，安全系统将验证签名。 然后，系统创建相应的证据，并将其传递给策略，仅当相应的签名有效。  
  
-   `Assembly evidence` 是程序集本身的一部分。 开发人员或管理员可以将自定义证据附加到要扩展的策略的证据集的程序集。 只能在程序集生成之前已签名程序集, 发生时添加的程序集证据。 安全系统的默认策略会忽略程序集提供证据，但可以扩展策略来接受它。  
  
   
  
## Examples  
 下面的代码示例演示如何创建新<xref:System.Security.Policy.Evidence>具有这两类主机证据和程序集证据。  
  
 [!code-cpp[System.Security.Policy.Evidence#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#1)]
 [!code-csharp[System.Security.Policy.Evidence#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#1)]
 [!code-vb[System.Security.Policy.Evidence#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Evidence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Evidence();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新的空实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.%23ctor>构造函数。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#15)]
 [!code-csharp[System.Security.Policy.Evidence#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#15)]
 [!code-vb[System.Security.Policy.Evidence#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Evidence (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Evidence(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.Evidence : System.Security.Policy.Evidence -&gt; System.Security.Policy.Evidence" Usage="new System.Security.Policy.Evidence evidence" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">从其创建新实例的 <see cref="T:System.Security.Policy.Evidence" /> 实例。 此实例不是深层复制的。</param>
        <summary>从现有证据的浅表副本初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.%23ctor%28System.Security.Policy.Evidence%29>构造函数。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#12)]
 [!code-csharp[System.Security.Policy.Evidence#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#12)]
 [!code-vb[System.Security.Policy.Evidence#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="evidence" /> 参数不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效实例。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Evidence (object[] hostEvidence, object[] assemblyEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] hostEvidence, object[] assemblyEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostEvidence As Object(), assemblyEvidence As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Evidence(cli::array &lt;System::Object ^&gt; ^ hostEvidence, cli::array &lt;System::Object ^&gt; ^ assemblyEvidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.Evidence : obj[] * obj[] -&gt; System.Security.Policy.Evidence" Usage="new System.Security.Policy.Evidence (hostEvidence, assemblyEvidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hostEvidence" Type="System.Object[]" />
        <Parameter Name="assemblyEvidence" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="hostEvidence">创建新实例所依据的主机证据。</param>
        <param name="assemblyEvidence">创建新实例所依据的程序集证据。</param>
        <summary>依据多个主机和程序集证据集初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.%23ctor%28System.Object%5B%5D%2CSystem.Object%5B%5D%29>构造函数。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#3)]
 [!code-csharp[System.Security.Policy.Evidence#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#3)]
 [!code-vb[System.Security.Policy.Evidence#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.EvidenceBase[] hostEvidence, class System.Security.Policy.EvidenceBase[] assemblyEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostEvidence As EvidenceBase(), assemblyEvidence As EvidenceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Evidence(cli::array &lt;System::Security::Policy::EvidenceBase ^&gt; ^ hostEvidence, cli::array &lt;System::Security::Policy::EvidenceBase ^&gt; ^ assemblyEvidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.Evidence : System.Security.Policy.EvidenceBase[] * System.Security.Policy.EvidenceBase[] -&gt; System.Security.Policy.Evidence" Usage="new System.Security.Policy.Evidence (hostEvidence, assemblyEvidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostEvidence" Type="System.Security.Policy.EvidenceBase[]" />
        <Parameter Name="assemblyEvidence" Type="System.Security.Policy.EvidenceBase[]" />
      </Parameters>
      <Docs>
        <param name="hostEvidence">创建新实例所依据的主机证据。</param>
        <param name="assemblyEvidence">创建新实例所依据的程序集证据。</param>
        <summary>依据多个主机和程序集证据集初始化 <see cref="T:System.Security.Policy.Evidence" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建类的新实例，通过使用继承的证据对象<xref:System.Security.Policy.EvidenceBase>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssembly">
      <MemberSignature Language="C#" Value="public void AddAssembly (object id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssembly(object id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssembly (id As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssembly(System::Object ^ id);" />
      <MemberSignature Language="F#" Value="member this.AddAssembly : obj -&gt; unit" Usage="evidence.AddAssembly id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="id">任意证据对象。</param>
        <summary>将指定的程序集证据添加到证据集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法的派生自程序集的证据。  
  
> [!NOTE]
>  此方法不执行检查，以防止添加重复的证据的类型。 在同一时间可以存在多个程序集证据对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.AddAssembly%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#4)]
 [!code-csharp[System.Security.Policy.Evidence#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#4)]
 [!code-vb[System.Security.Policy.Evidence#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> 为 null。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="id" /> 不可序列化。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyEvidence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddAssemblyEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyEvidence&lt;(class System.Security.Policy.EvidenceBase) T&gt;(!!T evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyEvidence(Of T As EvidenceBase) (evidence As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Security::Policy::EvidenceBase void AddAssemblyEvidence(T evidence);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyEvidence : 'T -&gt; unit (requires 'T :&gt; System.Security.Policy.EvidenceBase)" Usage="evidence.AddAssemblyEvidence evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="evidence" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">中的对象的类型<c>证据</c>。</typeparam>
        <param name="evidence">要添加的程序集证据。</param>
        <summary>将指定类型的证据对象添加到程序集提供的证据列表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 旧的证据，也就是说，不派生自的证据<xref:System.Security.Policy.EvidenceBase>，不能添加。 派生自的证据<xref:System.Security.Policy.EvidenceBase>可以添加。 此方法不允许您添加的证据，如果程序集列表中已存在该类型的证据。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">类型 <paramref name="T" /> 的证据已在列表中。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="evidence" /> 不可序列化。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHost">
      <MemberSignature Language="C#" Value="public void AddHost (object id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHost(object id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.AddHost(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHost (id As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHost(System::Object ^ id);" />
      <MemberSignature Language="F#" Value="member this.AddHost : obj -&gt; unit" Usage="evidence.AddHost id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="id">任意证据对象。</param>
        <summary>将主机提供的指定证据添加到证据集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法由主机提供的证据。  
  
> [!NOTE]
>  此方法不执行检查，以防止添加重复的证据的类型。 多个主机证据对象可以在同一时间存在。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.AddHost%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#2)]
 [!code-csharp[System.Security.Policy.Evidence#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#2)]
 [!code-vb[System.Security.Policy.Evidence#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> 为 null。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="id" /> 不可序列化。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能够处理证据何时<see cref="P:System.Security.Policy.Evidence.Locked" />是<see langword="true" />。 关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="AddHostEvidence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddHostEvidence&lt;T&gt; (T evidence) where T : System.Security.Policy.EvidenceBase;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHostEvidence&lt;(class System.Security.Policy.EvidenceBase) T&gt;(!!T evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHostEvidence(Of T As EvidenceBase) (evidence As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Security::Policy::EvidenceBase void AddHostEvidence(T evidence);" />
      <MemberSignature Language="F#" Value="member this.AddHostEvidence : 'T -&gt; unit (requires 'T :&gt; System.Security.Policy.EvidenceBase)" Usage="evidence.AddHostEvidence evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="evidence" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">中的对象的类型<c>证据</c>。</typeparam>
        <param name="evidence">要添加的主机证据。</param>
        <summary>将指定类型的主机证据添加到主机证据集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 旧的证据，也就是说，不派生自的证据<xref:System.Security.Policy.EvidenceBase>，不能添加。 派生自的证据<xref:System.Security.Policy.EvidenceBase>可以添加。 此方法不允许您添加的证据，如果程序集列表中已存在该类型的证据。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">类型 <paramref name="T" /> 的证据已在列表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="evidence.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从证据集中移除主机和程序集证据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.Evidence.Clear%2A> 删除证据中的主机和程序集的枚举，将它们设置为`null`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.Clear%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#13)]
 [!code-csharp[System.Security.Policy.Evidence#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#13)]
 [!code-vb[System.Security.Policy.Evidence#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">有关控制证明等的功能。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Policy.Evidence Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::Evidence ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Security.Policy.Evidence" Usage="evidence.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此证据对象的重复副本。</summary>
        <returns>此证据对象的重复副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重复的副本是在集合中包括所有证据对象的完整副本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="evidence.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">要向其复制证据对象的目标数组。</param>
        <param name="index">数组中从零开始的位置，从该位置开始向其复制证据对象。</param>
        <summary>将证据对象复制到 <see cref="T:System.Array" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.CopyTo%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#6)]
 [!code-csharp[System.Security.Policy.Evidence#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#6)]
 [!code-vb[System.Security.Policy.Evidence#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> 为 null。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 在目标数组的范围之外。</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Evidence.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.Policy.Evidence.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取证据集中证据对象的数目。</summary>
        <value>证据集中证据对象的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.Count%2A>属性。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#12)]
 [!code-csharp[System.Security.Policy.Evidence#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#12)]
 [!code-vb[System.Security.Policy.Evidence#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="evidence.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetAssemblyEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetAssemblyEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetAssemblyEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssemblyEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetAssemblyEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetAssemblyEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="evidence.GetAssemblyEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>枚举程序集提供的证据。</summary>
        <returns>
          <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法添加的证据的枚举数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#3)]
 [!code-csharp[System.Security.Policy.Evidence#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#3)]
 [!code-vb[System.Security.Policy.Evidence#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyEvidence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetAssemblyEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetAssemblyEvidence&lt;(class System.Security.Policy.EvidenceBase) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssemblyEvidence(Of T As EvidenceBase) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Security::Policy::EvidenceBase T GetAssemblyEvidence();" />
      <MemberSignature Language="F#" Value="member this.GetAssemblyEvidence : unit -&gt; 'T (requires 'T :&gt; System.Security.Policy.EvidenceBase)" Usage="evidence.GetAssemblyEvidence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">要获取的证据的类型。</typeparam>
        <summary>从集合中获取指定类型的程序集证据。</summary>
        <returns>程序集证据集合中 <paramref name="T" /> 类型的证据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回派生自的证据<xref:System.Security.Policy.EvidenceBase>类。 它不会返回从其他类派生的旧证据对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="evidence.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>枚举集合中的所有证据，包括由主机提供的证据和由程序集提供的证据。</summary>
        <returns>由 <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法和 <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法添加的证据的枚举数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.GetEnumerator%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#14)]
 [!code-csharp[System.Security.Policy.Evidence#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#14)]
 [!code-vb[System.Security.Policy.Evidence#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="evidence.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetHostEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetHostEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetHostEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHostEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetHostEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetHostEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="evidence.GetHostEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>枚举由主机提供的证据。</summary>
        <returns>
          <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法添加的证据的枚举数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Policy.Evidence.GetHostEnumerator%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#2)]
 [!code-csharp[System.Security.Policy.Evidence#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#2)]
 [!code-vb[System.Security.Policy.Evidence#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostEvidence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetHostEvidence&lt;T&gt; () where T : System.Security.Policy.EvidenceBase;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetHostEvidence&lt;(class System.Security.Policy.EvidenceBase) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.GetHostEvidence``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHostEvidence(Of T As EvidenceBase) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Security::Policy::EvidenceBase T GetHostEvidence();" />
      <MemberSignature Language="F#" Value="member this.GetHostEvidence : unit -&gt; 'T (requires 'T :&gt; System.Security.Policy.EvidenceBase)" Usage="evidence.GetHostEvidence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">要获取的证据的类型。</typeparam>
        <summary>从集合中获取指定类型的主机证据。</summary>
        <returns>主机证据集合中 <paramref name="T" /> 类型的证据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回派生自的证据<xref:System.Security.Policy.EvidenceBase>类。 它不会返回从其他类派生的旧证据对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Evidence.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.Policy.Evidence.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示证据集是否为只读。</summary>
        <value>因为不支持只读证据集，所以总是为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序代码通常不使用此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Evidence.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Security.Policy.Evidence.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示证据集是否线程安全。</summary>
        <value>因为不支持线程安全证据集，所以总是为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序代码通常不使用此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Evidence.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Locked : bool with get, set" Usage="System.Security.Policy.Evidence.Locked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示证据是否是锁定的。</summary>
        <value>如果证据是锁定的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.Locked%2A>属性。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#7)]
 [!code-csharp[System.Security.Policy.Evidence#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#7)]
 [!code-vb[System.Security.Policy.Evidence#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">有关设置此属性的功能。 关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Security.Policy.Evidence -&gt; unit" Usage="evidence.Merge evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">要合并到当前证据集的证据集。</param>
        <summary>将指定的证据集合并到当前证据集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在指定的证据集中每个证据对象添加到当前证据集的程序集和主机集根据它所来自的集。  
  
> [!NOTE]
>  此方法不执行检查，以防止添加重复的证据的类型。 在同一时间可以存在多个程序集和主机证据对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.Merge%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#10)]
 [!code-csharp[System.Security.Policy.Evidence#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#10)]
 [!code-vb[System.Security.Policy.Evidence#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="evidence" /> 参数不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效实例。</exception>
        <exception cref="T:System.Security.SecurityException">
          <see cref="P:System.Security.Policy.Evidence.Locked" /> 为 <see langword="true" />，调用该方法的代码不具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />，并且 <paramref name="evidence" /> 参数具有一个不为空的主机列表。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能够处理证据何时<see cref="P:System.Security.Policy.Evidence.Locked" />是<see langword="true" />和<paramref name="evidence" />参数具有不为空的主机列表。 关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveType">
      <MemberSignature Language="C#" Value="public void RemoveType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Evidence.RemoveType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveType (t As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveType(Type ^ t);" />
      <MemberSignature Language="F#" Value="member this.RemoveType : Type -&gt; unit" Usage="evidence.RemoveType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">要移除的证据的类型。</param>
        <summary>从主机和程序集枚举中移除给定类型的证据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 执行的结果<xref:System.Security.Policy.Evidence.RemoveType%2A>可以使用确认方法<xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>方法和<xref:System.Security.Policy.Evidence.GetHostEnumerator%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Policy.Evidence.RemoveType%2A>方法。 此示例摘自一个更大的示例为提供<xref:System.Security.Policy.Evidence>类。  
  
 [!code-cpp[System.Security.Policy.Evidence#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CPP/evidence_evidence.cpp#11)]
 [!code-csharp[System.Security.Policy.Evidence#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.Evidence/CS/evidence_evidence.cs#11)]
 [!code-vb[System.Security.Policy.Evidence#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.Evidence/VB/evidence_evidence.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="t" /> 为 null。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">有关控制证明等的功能。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Evidence.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Security.Policy.Evidence.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取同步根。</summary>
        <value>因为不支持证据集的同步，所以总是为 <see langword="this" />（在 Visual Basic 中为 <see langword="Me" />）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序代码通常不使用此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>