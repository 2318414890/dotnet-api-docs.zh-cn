<Type Name="Hash" FullName="System.Security.Policy.Hash">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36baf1cb4feda949b18fa94c387e55fdafb49f9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Hash : System.Security.Policy.EvidenceBase, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Hash extends System.Security.Policy.EvidenceBase implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.Hash" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Hash&#xA;Inherits EvidenceBase&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hash sealed : System::Security::Policy::EvidenceBase, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供有关程序集的哈希值的证据。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 哈希值表示对应于一组特定的字节的唯一值。 而不是按名称、 版本或指定其他引用程序集，哈希值指定清楚无误地程序集。 名称受到极少数情况下，其中完全不同的代码指定相同的名称冲突。 意外可以使用相同的版本标记的代码的不同变体。 但是，即使只更改单一位将导致非常不同的哈希值。  
  
 哈希值是指在无需使用数字签名的策略中的特定程序集的安全加密方法。 安全哈希算法的设计目的的因此不能通过计算意外或恶意尝试通过以下任一方法构造具有相同的哈希值的不同程序集。 默认情况下，证据从<xref:System.Security.Cryptography.SHA1>和<xref:System.Security.Cryptography.MD5>支持哈希算法，但可以通过使用任何哈希算法<xref:System.Security.Policy.Hash.GenerateHash%2A>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hash (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hash(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">计算其哈希值的程序集。</param>
        <summary>初始化 <see cref="T:System.Security.Policy.Hash" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用其中一个属性或方法之前，将不会执行哈希值计算。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> 不是运行时 <see cref="T:System.Reflection.Assembly" /> 对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::EvidenceBase ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建作为当前实例副本的新对象。</summary>
        <returns>作为此实例副本的新对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMD5">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateMD5 (byte[] md5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateMD5(unsigned int8[] md5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMD5 (md5 As Byte()) As Hash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Hash ^ CreateMD5(cli::array &lt;System::Byte&gt; ^ md5);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="md5" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="md5">一个包含 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值的字节数组。</param>
        <summary>创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.MD5" /> 对象。</summary>
        <returns>一个对象，包含由 <paramref name="md5" /> 参数提供的哈希值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回<xref:System.Security.Policy.Hash>对象只包含<xref:System.Security.Policy.Hash.MD5%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="md5" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSHA1">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateSHA1 (byte[] sha1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateSHA1(unsigned int8[] sha1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSHA1 (sha1 As Byte()) As Hash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Hash ^ CreateSHA1(cli::array &lt;System::Byte&gt; ^ sha1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sha1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sha1">一个包含 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值的字节数组。</param>
        <summary>创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.SHA1" /> 对象。</summary>
        <returns>一个对象，包含由 <paramref name="sha1" /> 参数提供的哈希值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回<xref:System.Security.Policy.Hash>对象只包含<xref:System.Security.Policy.Hash.SHA1%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sha1" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSHA256">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateSHA256 (byte[] sha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateSHA256(unsigned int8[] sha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSHA256 (sha256 As Byte()) As Hash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Hash ^ CreateSHA256(cli::array &lt;System::Byte&gt; ^ sha256);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sha256" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sha256">一个包含 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值的字节数组。</param>
        <summary>创建一个包含 <see cref="T:System.Security.Policy.Hash" /> 哈希值的 <see cref="T:System.Security.Cryptography.SHA256" /> 对象。</summary>
        <returns>一个哈希对象，包含由 <paramref name="sha256" /> 参数提供的哈希值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回<xref:System.Security.Policy.Hash>对象只包含<xref:System.Security.Policy.Hash.SHA256%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sha256" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateHash">
      <MemberSignature Language="C#" Value="public byte[] GenerateHash (System.Security.Cryptography.HashAlgorithm hashAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GenerateHash(class System.Security.Cryptography.HashAlgorithm hashAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateHash (hashAlg As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GenerateHash(System::Security::Cryptography::HashAlgorithm ^ hashAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlg" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hashAlg">将用于计算程序集的哈希值的哈希算法。</param>
        <summary>使用指定的哈希算法计算程序集的哈希值。</summary>
        <returns>一个字节数组，它表示程序集的哈希值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在类构造函数中指定的程序集提供了用于计算哈希值的字节。 `hashAlg`参数是一个对象派生自特定<xref:System.Security.Cryptography.HashAlgorithm>。 返回的哈希值是标识的类型`hashAlg`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hashAlg" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">无法生成程序集的哈希值。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">承载序列化对象数据的对象。</param>
        <param name="context">关于来源和目标的上下文信息</param>
        <summary>获取带有参数名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供此方法是为了支持继承的<xref:System.Runtime.Serialization.ISerializable>接口。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public byte[] MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.MD5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MD5 As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ MD5 { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取程序集的 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值。</summary>
        <value>一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.MD5" /> 哈希值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在类构造函数中指定的程序集提供了用于计算哈希值的字节。  
  
   
  
## Examples  
 下面的示例计算<xref:System.Security.Cryptography.MD5>的哈希`myAssembly`和将其存储在`hashcode`。  
  
 [!code-cpp[Classic Hash.MD5 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hash.MD5 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/CS/source.cs#1)]
 [!code-vb[Classic Hash.MD5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="public byte[] SHA1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SHA1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.SHA1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SHA1 As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SHA1 { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取程序集的 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值。</summary>
        <value>一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数中指定的程序集提供了用于计算哈希值的字节。  
  
   
  
## Examples  
 下面的示例计算<xref:System.Security.Cryptography.SHA1>的哈希`myAssembly`和将其存储在`hashcode`。  
  
 [!code-cpp[Classic Hash.SHA1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hash.SHA1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/CS/source.cs#1)]
 [!code-vb[Classic Hash.SHA1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="public byte[] SHA256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SHA256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.SHA256" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SHA256 As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SHA256 { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取程序集的 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值。</summary>
        <value>一个字节数组，表示程序集的 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中指定的程序集<xref:System.Security.Policy.Hash.%23ctor%2A>构造函数提供了用于计算哈希值的字节。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Security.Policy.Hash" /> 的字符串表示形式。</summary>
        <returns>当前 <see cref="T:System.Security.Policy.Hash" /> 的表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取的对象的易于理解表示在调试期间，此方法很有用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>