<Type Name="AnonymousPipeClientStream" FullName="System.IO.Pipes.AnonymousPipeClientStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58fff93e1a4bd2aab648e34c26bce216d9112d7a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c065f-101">公开匿名管道流的客户端，该管道流既支持同步读写操作，也支持异步读写操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c065f-101">Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-102">匿名管道帮助提供安全和保护进程的子与父之间的进程间通信。</span><span class="sxs-lookup"><span data-stu-id="c065f-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="c065f-103"><xref:System.IO.Pipes.AnonymousPipeClientStream>类使子进程连接到并与父进程交换信息。</span><span class="sxs-lookup"><span data-stu-id="c065f-103">The <xref:System.IO.Pipes.AnonymousPipeClientStream> class enables a child process to connect to and exchange information with a parent process.</span></span>  
  
 <span data-ttu-id="c065f-104">匿名管道是未命名性质，单向通常父和子进程间传输数据的管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="c065f-105">匿名管道始终是局部;它们不能使用通过网络。</span><span class="sxs-lookup"><span data-stu-id="c065f-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="c065f-106">A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.InOut>不支持，因为匿名管道定义为在单向。</span><span class="sxs-lookup"><span data-stu-id="c065f-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="c065f-107">不支持匿名管道<xref:System.IO.Pipes.PipeTransmissionMode.Message>读取模式。</span><span class="sxs-lookup"><span data-stu-id="c065f-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="c065f-108">匿名管道的客户端必须创建从管道句柄，通过调用由服务器端提供<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c065f-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="c065f-109">然后，在创建客户端进程时，系统会字符串传递作为参数。</span><span class="sxs-lookup"><span data-stu-id="c065f-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="c065f-110">在客户端进程中，它将传递到<xref:System.IO.Pipes.AnonymousPipeClientStream>构造函数、 作为`pipeHandleAsString`参数。</span><span class="sxs-lookup"><span data-stu-id="c065f-110">From the client process, it is passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c065f-111">有关[!INCLUDE[winxppro](~/includes/winxppro-md.md)]和[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]，最多 10 个管道可以同时通过网络连接。</span><span class="sxs-lookup"><span data-stu-id="c065f-111">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-112">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-112">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-113">此示例在父进程中创建 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，它的 <xref:System.IO.Pipes.PipeDirection> 值为 <xref:System.IO.Pipes.PipeDirection.Out>。</span><span class="sxs-lookup"><span data-stu-id="c065f-113">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="c065f-114">它还将创建<xref:System.IO.Pipes.AnonymousPipeClientStream>子进程中的对象<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.In>。</span><span class="sxs-lookup"><span data-stu-id="c065f-114">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="c065f-115">接下来，父进程将用户提供的字符串发送给子进程。</span><span class="sxs-lookup"><span data-stu-id="c065f-115">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="c065f-116">字符串显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="c065f-116">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="c065f-117">此示例适用于通过服务器进程启动的客户端进程。</span><span class="sxs-lookup"><span data-stu-id="c065f-117">This example is for the client process, which is started by the server process.</span></span> <span data-ttu-id="c065f-118">从客户端代码生成的可执行文件命名`pipeClient.exe`并将其复制到服务器的可执行文件所在的目录中，运行此示例时。</span><span class="sxs-lookup"><span data-stu-id="c065f-118">Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example.</span></span> <span data-ttu-id="c065f-119">有关完整的代码示例，包括代码管道客户端和服务器，请参阅[如何： 使用匿名管道进行本地进程间通信](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)。</span><span class="sxs-lookup"><span data-stu-id="c065f-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c065f-120">初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::String ^ pipeHandleAsString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeHandleAsString">
          <span data-ttu-id="c065f-121">一个表示管道句柄的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-121">A string that represents the pipe handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c065f-122">使用指定的管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-122">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified string representation of the pipe handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-123">构造函数，而无需<xref:System.IO.Pipes.PipeDirection>参数，默认方向是<xref:System.IO.Pipes.PipeDirection.In>。</span><span class="sxs-lookup"><span data-stu-id="c065f-123">For constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-124">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-124">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-125">在此示例中，<xref:System.IO.Pipes.AnonymousPipeClientStream>在子进程中创建对象。</span><span class="sxs-lookup"><span data-stu-id="c065f-125">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c065f-126">
            <paramref name="pipeHandleAsString" /> 不是有效的管道句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-126">
              <paramref name="pipeHandleAsString" /> is not a valid pipe handle.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="c065f-127">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-127">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c065f-128">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-128">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="c065f-129">确定管道方向的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-129">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="c065f-130">匿名管道只能是单向的，因此，<c>direction</c> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-130">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="safePipeHandle">
          <span data-ttu-id="c065f-131">此 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象将封装的管道的安全句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-131">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object will encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c065f-132">从指定的图柄初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-132">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class from the specified handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-133">A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.InOut>不支持，因为匿名管道定义为在单向。</span><span class="sxs-lookup"><span data-stu-id="c065f-133">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-134">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-134">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-135">在此示例中，<xref:System.IO.Pipes.AnonymousPipeClientStream>在使用的子进程中创建对象<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.In>。</span><span class="sxs-lookup"><span data-stu-id="c065f-135">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c065f-136">
            <paramref name="safePipeHandle" /> 不是有效的句图柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-136">
              <paramref name="safePipeHandle" /> is not a valid handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c065f-137">
            <paramref name="safePipeHandle" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-137">
              <paramref name="safePipeHandle" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c065f-138">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-138">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c065f-139">发生 I/O 错误，如磁盘错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-139">An I/O error, such as a disk error, has occurred.</span>
          </span>
          <span data-ttu-id="c065f-140">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-140">-or-</span>
          </span>
          <span data-ttu-id="c065f-141">已关闭流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-141">The stream has been closed.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="c065f-142">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-142">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c065f-143">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-143">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, System::String ^ pipeHandleAsString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="c065f-144">确定管道方向的枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-144">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="c065f-145">匿名管道只能是单向的，因此，<c>direction</c> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-145">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="pipeHandleAsString">
          <span data-ttu-id="c065f-146">一个表示管道句柄的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-146">A string that represents the pipe handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c065f-147">使用指定的管道方向和管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-147">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified pipe direction and a string representation of the pipe handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-148">A<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.InOut>不支持，因为匿名管道定义为在单向。</span><span class="sxs-lookup"><span data-stu-id="c065f-148">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-149">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-149">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-150">在此示例中，<xref:System.IO.Pipes.AnonymousPipeClientStream>在使用的子进程中创建对象<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.In>。</span><span class="sxs-lookup"><span data-stu-id="c065f-150">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c065f-151">
            <paramref name="pipeHandleAsString" /> 是无效的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-151">
              <paramref name="pipeHandleAsString" /> is an invalid handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c065f-152">
            <paramref name="pipeHandleAsString" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-152">
              <paramref name="pipeHandleAsString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c065f-153">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-153">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="c065f-154">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-154">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c065f-155">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-155">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeClientStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c065f-156">在通过垃圾回收将 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-156">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> instance is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c065f-157">设置 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的读取模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-157">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c065f-158">
            <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 对象的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-158">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-159">不支持匿名管道<xref:System.IO.Pipes.PipeTransmissionMode.Message>读取模式。</span><span class="sxs-lookup"><span data-stu-id="c065f-159">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-160">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-160">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-161">在此示例中，<xref:System.IO.Pipes.AnonymousPipeClientStream>在子进程中创建对象。</span><span class="sxs-lookup"><span data-stu-id="c065f-161">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span> <span data-ttu-id="c065f-162"><xref:System.NotSupportedException>时，将捕获<xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A>属性设置为<xref:System.IO.Pipes.PipeTransmissionMode.Message>。</span><span class="sxs-lookup"><span data-stu-id="c065f-162">The <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c065f-163">传输模式无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-163">The transmission mode is not valid.</span>
          </span>
          <span data-ttu-id="c065f-164">对于匿名管道，只支持 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-164">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c065f-165">转换模式为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-165">The transmission mode is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c065f-166">连接断开或出现其他 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-166">The connection is broken or another I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c065f-167">管道已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-167">The pipe is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c065f-168">获取当前管道支持的管道传输模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-168">Gets the pipe transmission mode supported by the current pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c065f-169">当前管道支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c065f-169">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> supported by the current pipe.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c065f-170">不支持匿名管道<xref:System.IO.Pipes.PipeTransmissionMode.Message>读取模式。</span><span class="sxs-lookup"><span data-stu-id="c065f-170">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c065f-171">下面的示例演示了如何将字符串从父进程发送到子进程，通过使用匿名管道。</span><span class="sxs-lookup"><span data-stu-id="c065f-171">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="c065f-172">在此示例中，<xref:System.IO.Pipes.AnonymousPipeClientStream>在子进程中创建对象和<xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A>显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="c065f-172">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>