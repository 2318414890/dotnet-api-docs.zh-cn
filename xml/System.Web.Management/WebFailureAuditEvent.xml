<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="182d1fe4b3461bb4234ea810403224ace8ab02c0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebFailureAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供有关安全失败的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 运行状况监视，可以管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management?displayProperty=nameWithType>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。 它还包含有助于管理运行状况事件的支持类型。  
  
 <xref:System.Web.Management.WebFailureAuditEvent>安全操作失败时使用类。 此示例是 Web 请求的失败的 URL 授权。  
  
 默认情况下，ASP.NET 配置引发<xref:System.Web.Management.WebFailureAuditEvent>事件的下列功能：  
  
-   文件授权。 仅当 Windows 标识是与请求相关联时，ASP.NET 会尝试文件授权。 相关的事件审核代码是<xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>。  
  
-   URL 授权。 此功能控制未经授权访问的 URL 资源的尝试。 不审核的匿名用户的失败的尝试，因为在大多数情况下可接受匿名身份验证失败。 相关的事件审核代码是<xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>。  
  
-   未经处理的泛型或安全未处理的条件。 下面是有关与这些条件的事件代码的列表：  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 当<xref:System.Web.Management.WebFailureAuditEvent>引发事件，ASP.NET 运行状况监视递增相关的审核失败事件引发的性能计数器，然后检查`healthMonitoring`配置部分，以确定是否有任何提供程序订阅事件。 如果提供程序订阅事件，ASP.NET 会将分配到这些事件进行处理。  
  
> [!NOTE]
>  若要查看在系统监视器 (PerfMon) 中的引发的审核失败事件性能计数器**添加计数器**窗口中，选择**ASP.NET**从**性能对象**下拉列表中，选择**引发的审核失败事件**性能计数器，然后单击**添加**按钮。 有关详细信息，请参阅[ASP.NET 应用程序中使用系统监视器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882)在 MSDN 上的 IIS 文档。  
  
> [!NOTE]
>  在大多数情况下你将能够实现时，使用 ASP.NET 运行状况监视类型，你将通过指定中的值来控制运行状况监视系统`healthMonitoring`配置节。 您还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。 有关示例的派生自<xref:System.Web.Management.WebFailureAuditEvent>类，请参阅示例部分。  
  
   
  
## Examples  
 下面的代码示例演示如何从派生<xref:System.Web.Management.WebFailureAuditEvent>类，以创建自定义审核事件。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 下面的配置摘录显示了如何使 ASP.NET 可以使用<xref:System.Web.Management.WebFailureAuditEvent>事件。  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>格式设置为显示你自定义事件的信息，当重写<see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" />方法而不是<see cref="Overload:System.Web.Management.WebBaseEvent.ToString" />方法。这将避免覆盖或篡改敏感的系统信息。</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件说明。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 运行状况监视系统在内部使用此构造函数。 您不应使用它来创建的实例<xref:System.Web.Management.WebFailureAuditEvent>，但在实现自己从此类继承的事件类型时，可以调用此构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数`SampleWebFailureAuditEvent`类。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.Management.WebFailureAuditEvent>类概述。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件说明。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">用于指定事件的详细标识符的 <see cref="T:System.Web.Management.WebEventCodes" /> 值。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 运行状况监视系统在内部使用此构造函数。 您不应使用它来创建的实例<xref:System.Web.Management.WebFailureAuditEvent>，但在实现自己从此类继承的事件类型时，可以调用此构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数`SampleWebFailureAuditEvent`类。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.Management.WebFailureAuditEvent>类概述。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webFailureAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>递增“引发的审核失败事件”性能计数器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 审核失败事件引发的性能计数器跟踪引发自应用程序启动以来失败的审核事件数量。 此方法还会调用父<xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>方法，引发的事件计数器会递增。 此计数器可跟踪引发的事件的总数。  
  
 若要查看这些性能计数器在系统监视器 (PerfMon) 中**添加计数器**窗口中选择**ASP.NET**从**性能对象**下拉列表中，选择你想要查看，请单击性能计数器**添加**按钮。 有关详细信息，请参阅[ASP.NET 应用程序中使用系统监视器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882)在 MSDN 上的 IIS 文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>