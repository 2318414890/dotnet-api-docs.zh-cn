<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32fcfb5c7ee0b43cdcb1a48fd67343e52ba51a08" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="da83c-101">实现将 ASP.NET 运行状况监视事件映射到 Windows Management Instrumentation (WMI) 事件的事件提供程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da83c-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-102">ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。</span><span class="sxs-lookup"><span data-stu-id="da83c-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="da83c-103"><xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</span><span class="sxs-lookup"><span data-stu-id="da83c-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="da83c-104">它还包含在管理运行状况事件期间帮助的支持类型。</span><span class="sxs-lookup"><span data-stu-id="da83c-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="da83c-105">ASP.NET 使用此类将映射到 WMI 事件的运行状况监视事件。</span><span class="sxs-lookup"><span data-stu-id="da83c-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="da83c-106">若要启用 ASP.NET 运行状况监视事件传递到 WMI 子系统，必须配置<xref:System.Web.Management.WmiWebEventProvider>类通过添加中的相应设置`<healthMonitoring>`配置文件节。</span><span class="sxs-lookup"><span data-stu-id="da83c-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="da83c-107">Aspnet.mof 文件中包含的信息介绍引发时 ASP.NET 运行状况监视事件路由到的 WMI 事件的参数<xref:System.Web.Management.WmiWebEventProvider>类并映射到 WMI 事件。</span><span class="sxs-lookup"><span data-stu-id="da83c-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="da83c-108">Aspnet.mof 文件存储在.NET Framework 生成目录中，例如 %windir%\Microsoft.NET\Framework\\*BuildNumber*。</span><span class="sxs-lookup"><span data-stu-id="da83c-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="da83c-109">有关报告运行状况监视作为 WMI 事件的事件的详细信息，请参阅[NIB： 使用 WMI 配置为提供 ASP.NET 运行状况监视事件](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10)。</span><span class="sxs-lookup"><span data-stu-id="da83c-109">For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da83c-110">在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`<healthMonitoring>`配置节。</span><span class="sxs-lookup"><span data-stu-id="da83c-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="da83c-111">你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。</span><span class="sxs-lookup"><span data-stu-id="da83c-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="da83c-112">有关创建自定义提供程序的示例，请参阅[如何： 实现运行状况监视自定义提供程序示例](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)。</span><span class="sxs-lookup"><span data-stu-id="da83c-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da83c-113">下面的示例演示如何创建由 ASP.NET 运行状况监视因 Web 应用程序运行状况事件而发出的 WMI 事件的使用者。</span><span class="sxs-lookup"><span data-stu-id="da83c-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da83c-114"><xref:System.Web.Management.WmiWebEventProvider>类和要监视的运行状况事件类型已按默认配置。</span><span class="sxs-lookup"><span data-stu-id="da83c-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="da83c-115">你需要执行操作的唯一操作是定义所有的运行状况事件的规则。</span><span class="sxs-lookup"><span data-stu-id="da83c-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="da83c-116">请记住的运行状况事件不调度到<xref:System.Web.Management.WmiWebEventProvider>默认的提供程序。</span><span class="sxs-lookup"><span data-stu-id="da83c-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="da83c-117">下面的示例是显示的配置文件摘录`<healthMonitoring>`使 ASP.NET 可以使用的配置节<xref:System.Web.Management.WmiWebEventProvider>提供商联系以处理所有的运行状况监视事件。</span><span class="sxs-lookup"><span data-stu-id="da83c-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da83c-118">初始化 <see cref="T:System.Web.Management.WmiWebEventProvider" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-118">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-119">ASP.NET 运行状况监视系统在内部使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="da83c-119">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="da83c-120">你不应使用它来创建的实例<xref:System.Web.Management.TraceWebEventProvider>类，但实现您自己的继承自此类的提供程序类型时，可以调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="da83c-120">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da83c-121">从提供程序的缓冲区中移除所有事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-121">Removes all events from the provider's buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-122">当调用此方法时，所有提供程序的缓冲区中的事件将立即删除，无论自上次以来经过的时间量写入或多少事件都很缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="da83c-122">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="da83c-123">最后一次写入时将重置为刷新操作的时间。</span><span class="sxs-lookup"><span data-stu-id="da83c-123">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="da83c-124">调用此方法时未启用缓冲机制起任何作用。</span><span class="sxs-lookup"><span data-stu-id="da83c-124">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da83c-125">配置文件中用于标识此提供程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-125">The name used in the configuration file to identify this provider.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="da83c-126">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，指定配置文件中为此提供程序分配的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-126">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da83c-127">设置此对象的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-127">Sets the initial values for this object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-128">ASP.NET 调用<xref:System.Web.Management.WmiWebEventProvider.Initialize%2A>方法之后调用<xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="da83c-128">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="da83c-129">调用此方法以初始化<xref:System.Web.Management.WmiWebEventProvider>类配置设置和配置文件中指定的名称。</span><span class="sxs-lookup"><span data-stu-id="da83c-129">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">
          <span data-ttu-id="da83c-130">要处理的 <see cref="T:System.Web.Management.WebBaseEvent" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-130">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da83c-131">处理传递给提供程序的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-131">Processes the event passed to the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-132">这是，ASP.NET 运行状况监视功能可调用以启动事件的处理方法。</span><span class="sxs-lookup"><span data-stu-id="da83c-132">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="da83c-133">未能引发该事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-133">The event could not be raised.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da83c-134">执行与关闭提供程序相关联的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da83c-134">Performs tasks associated with shutting down the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da83c-135">ASP.NET 调用<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>方法，当应用程序域托管的 Web 应用程序终止时。</span><span class="sxs-lookup"><span data-stu-id="da83c-135">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="da83c-136">该方法调用以执行将允许应用程序正常结束的任务。</span><span class="sxs-lookup"><span data-stu-id="da83c-136">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>