<Type Name="WebEventFormatter" FullName="System.Web.Management.WebEventFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6856f8a4004abf4400738be591b4c6413fbbd6a6" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299335" /></Metadata><TypeSignature Language="C#" Value="public class WebEventFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebEventFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class WebEventFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventFormatter" />
  <TypeSignature Language="F#" Value="type WebEventFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>设置 ASP.NET 状况监视事件信息的格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 运行状况监视，可以管理已部署的 Web 应用程序的生产和操作人员。 <xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。 它还包含有助于管理运行状况事件的支持类型。  
  
 <xref:System.Web.Management.WebEventFormatter>是用于进行统一格式与事件相关的信息，这很有用，如果必须记录事件数据，并将其更高版本提供给用户的支持类型。 
  
 实例<xref:System.Web.Management.WebEventFormatter>类作为参数传递给由运行状况事件类型定义的格式设置方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.WebEventFormatter>事件信息的格式。 它主要用于显示要使用的正确语法。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.Management.WebBaseEvent>类。  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#17)]
 [!code-vb[System.Web.Management.WebBaseEvent#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#17)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public void AppendLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventFormatter.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.AppendLine : string -&gt; unit" Usage="webEventFormatter.AppendLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要添加到事件信息中的字符串。</param>
        <summary>将指定的字符串和一个回车追加到事件信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebEventFormatter.AppendLine%2A>方法，可通过添加特定于事件的数据自定义事件信息。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Management.WebEventFormatter.AppendLine%2A> 方法。  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#20)]
 [!code-vb[System.Web.Management.WebBaseEvent#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentationLevel">
      <MemberSignature Language="C#" Value="public int IndentationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebEventFormatter.IndentationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentationLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentationLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentationLevel : int with get, set" Usage="System.Web.Management.WebEventFormatter.IndentationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置缩进等级。</summary>
        <value>缩进等级使用的制表符的数量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A>属性可以控制如何缩进的事件信息。 由定义缩进的基本单位<xref:System.Web.Management.WebEventFormatter.TabSize%2A>属性。 对于每个缩进级别，则增加缩进一个选项卡。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A> 属性。  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#18)]
 [!code-vb[System.Web.Management.WebBaseEvent#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabSize">
      <MemberSignature Language="C#" Value="public int TabSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebEventFormatter.TabSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TabSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabSize : int with get, set" Usage="System.Web.Management.WebEventFormatter.TabSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置制表符大小。</summary>
        <value>制表符中的空格数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebEventFormatter.TabSize%2A>属性可以控制写入事件信息时使用的选项卡大小。 <xref:System.Web.Management.WebEventFormatter.TabSize%2A>确定的每个单位由控制的缩进的空格数<xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A>属性。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Management.WebEventFormatter.TabSize%2A> 属性。  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#19)]
 [!code-vb[System.Web.Management.WebBaseEvent#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventFormatter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webEventFormatter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以字符串格式返回事件信息。</summary>
        <returns>事件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebEventFormatter>使用内部<xref:System.Text.StringBuilder>变量来存储事件信息。 这<xref:System.Web.Management.WebEventFormatter.ToString%2A>方法，可获取字符串格式的所有信息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>