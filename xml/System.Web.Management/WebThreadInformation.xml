<Type Name="WebThreadInformation" FullName="System.Web.Management.WebThreadInformation">
  <TypeSignature Language="C#" Value="public sealed class WebThreadInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebThreadInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebThreadInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebThreadInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebThreadInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="926a3-101">提供有关 ASP.NET 进程中某个线程的状态的信息。</span><span class="sxs-lookup"><span data-stu-id="926a3-101">Provides information about the state of a thread in an ASP.NET process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="926a3-102">ASP.NET 运行状况监视，用于管理已部署的 Web 应用程序的生产和操作人员。</span><span class="sxs-lookup"><span data-stu-id="926a3-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="926a3-103"><xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</span><span class="sxs-lookup"><span data-stu-id="926a3-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="926a3-104">它还包含在管理运行状况事件期间帮助的支持类型。</span><span class="sxs-lookup"><span data-stu-id="926a3-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="926a3-105">实例<xref:System.Web.Management.WebThreadInformation>类包含使用获取的信息<xref:System.Web.Management.WebErrorEvent>类型或<xref:System.Web.Management.WebRequestErrorEvent>类型。</span><span class="sxs-lookup"><span data-stu-id="926a3-105">Instances of the <xref:System.Web.Management.WebThreadInformation> class contain information that is obtained using either the <xref:System.Web.Management.WebErrorEvent> type or the <xref:System.Web.Management.WebRequestErrorEvent> type.</span></span>  
  
 <span data-ttu-id="926a3-106">你的应用程序需要访问受保护的信息，此类型提供的适当权限。</span><span class="sxs-lookup"><span data-stu-id="926a3-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="926a3-107">在大多数情况下，你将是一种能够使用 ASP.NET 运行状况监视类型，因为实现，并且将通过指定中的值控制运行状况监视系统`healthMonitoring`配置节。</span><span class="sxs-lookup"><span data-stu-id="926a3-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="926a3-108">你还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。</span><span class="sxs-lookup"><span data-stu-id="926a3-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="926a3-109">有关创建自定义的事件类的示例，请参阅本主题中提供的示例。</span><span class="sxs-lookup"><span data-stu-id="926a3-109">For an example of creating a custom event class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="926a3-110">下面的代码示例由两部分组成。</span><span class="sxs-lookup"><span data-stu-id="926a3-110">The following code example has two parts.</span></span> <span data-ttu-id="926a3-111">第一种是使 ASP.NET 可以使用自定义事件使用的配置文件的摘录<xref:System.Web.Management.WebThreadInformation>类型。</span><span class="sxs-lookup"><span data-stu-id="926a3-111">The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the <xref:System.Web.Management.WebThreadInformation> type.</span></span> <span data-ttu-id="926a3-112">第二部分演示如何实现使用的自定义事件<xref:System.Web.Management.WebThreadInformation>类型。</span><span class="sxs-lookup"><span data-stu-id="926a3-112">The second shows how to implement the custom event that uses the <xref:System.Web.Management.WebThreadInformation> type.</span></span>  
  
 <span data-ttu-id="926a3-113">确保你自定义事件是否会引发的在适当的时候，即，当将引发它将替换为等效的系统运行状况事件。</span><span class="sxs-lookup"><span data-stu-id="926a3-113">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring  
    heartBeatInterval="0" enabled="true">  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <eventMappings>  
  
    <add   
      name="SampleWebThreadInformation"   
type="SamplesAspNet.SampleWebThreadInformation,webthreadinformation, Version=1.0.1782.29648, Culture=neutral, PublicKeyToken=b3283a2de7dd3f27, processorArchitecture=MSIL" />  
  
  </eventMappings>  
  
  <rules>  
  
    <add name="Custom Web Thread Info Event"   
      eventName="SampleWebThreadInformation"   
      provider="EventLogProvider"  
      profile="Custom" />  
  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#1)]
 [!code-vb[System.Web.Management.WebThreadInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestErrorEvent" />
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
  </Docs>
  <Members>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter"><span data-ttu-id="926a3-114">包含用于设置 Web 运行状况事件信息格式的制表符和缩进设置的 <see cref="T:System.Web.Management.WebEventFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="926a3-114">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span></span></param>
        <summary><span data-ttu-id="926a3-115">格式化线程相关信息。</span><span class="sxs-lookup"><span data-stu-id="926a3-115">Formats thread-related information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="926a3-116"><xref:System.Web.Management.WebThreadInformation.FormatToString%2A>方法为事件的信息，这很有用，如果必须记录事件数据，并将其更高版本提供给用户提供统一的格式。</span><span class="sxs-lookup"><span data-stu-id="926a3-116">The <xref:System.Web.Management.WebThreadInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="926a3-117">当提供程序调用之一时内部调用<xref:System.Web.Management.WebBaseEvent.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="926a3-117">It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="926a3-118">下面的代码示例演示如何设置自定义信息的格式。</span><span class="sxs-lookup"><span data-stu-id="926a3-118">The following code example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#8)]
 [!code-vb[System.Web.Management.WebThreadInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImpersonating">
      <MemberSignature Language="C#" Value="public bool IsImpersonating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImpersonating" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.IsImpersonating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImpersonating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImpersonating { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="926a3-119">获取当前的线程模拟模式。</span><span class="sxs-lookup"><span data-stu-id="926a3-119">Gets the current thread-impersonation mode.</span></span></summary>
        <value>
          <span data-ttu-id="926a3-120">如果线程在模拟模式下执行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="926a3-120"><see langword="true" /> if the thread is executing in impersonation mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="926a3-121">下面的代码示例演示如何获取线程模拟模式。</span><span class="sxs-lookup"><span data-stu-id="926a3-121">The following code example shows how to get the thread-impersonation mode.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#4)]
 [!code-vb[System.Web.Management.WebThreadInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="926a3-122">获取当前的线程管理的堆栈跟踪。</span><span class="sxs-lookup"><span data-stu-id="926a3-122">Gets the current thread-managed stack trace.</span></span></summary>
        <value><span data-ttu-id="926a3-123">线程管理的堆栈跟踪。</span><span class="sxs-lookup"><span data-stu-id="926a3-123">The thread-managed stack trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="926a3-124">下面的代码示例演示如何获取线程堆栈跟踪。</span><span class="sxs-lookup"><span data-stu-id="926a3-124">The following code example shows how to get the thread stack trace.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#5)]
 [!code-vb[System.Web.Management.WebThreadInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAccountName">
      <MemberSignature Language="C#" Value="public string ThreadAccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadAccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadAccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadAccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadAccountName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="926a3-125">获取线程帐户名。</span><span class="sxs-lookup"><span data-stu-id="926a3-125">Gets the thread account name.</span></span></summary>
        <value><span data-ttu-id="926a3-126">线程帐户名。</span><span class="sxs-lookup"><span data-stu-id="926a3-126">The thread account name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="926a3-127">此属性返回的帐户可能是任意的如果在模拟模式下执行线程。</span><span class="sxs-lookup"><span data-stu-id="926a3-127">The account returned by this property might be arbitrary if the thread is executing in impersonation mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="926a3-128">下面的代码示例演示如何获取线程帐户名称。</span><span class="sxs-lookup"><span data-stu-id="926a3-128">The following code example shows how to get the thread account name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#6)]
 [!code-vb[System.Web.Management.WebThreadInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadID">
      <MemberSignature Language="C#" Value="public int ThreadID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ThreadID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="926a3-129">获取当前线程标识符。</span><span class="sxs-lookup"><span data-stu-id="926a3-129">Gets the current thread identifier.</span></span></summary>
        <value><span data-ttu-id="926a3-130">当前线程标识符。</span><span class="sxs-lookup"><span data-stu-id="926a3-130">The current thread identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="926a3-131">即使托管的线程可能不会直接映射到 OS 线程，以便进行调试，并总是有用若要隔离特定线程可能存在问题。</span><span class="sxs-lookup"><span data-stu-id="926a3-131">Even if managed threads might not have direct mapping to the OS threads, for debugging purposes, it is always useful to isolate a specific thread where problems might exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="926a3-132">下面的代码示例演示如何获取线程标识符。</span><span class="sxs-lookup"><span data-stu-id="926a3-132">The following code example shows how to get the thread identifier.</span></span>  
  
 [!code-csharp[System.Web.Management.WebThreadInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#7)]
 [!code-vb[System.Web.Management.WebThreadInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>