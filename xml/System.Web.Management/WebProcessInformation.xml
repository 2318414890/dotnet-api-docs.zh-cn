<Type Name="WebProcessInformation" FullName="System.Web.Management.WebProcessInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab136c22334b119b96de91a34059f76133cebef2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46690016" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebProcessInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebProcessInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebProcessInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebProcessInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProcessInformation sealed" />
  <TypeSignature Language="F#" Value="type WebProcessInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1bae8-101">提供有关承载 ASP.NET 的辅助进程的信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bae8-101">Provides information about the worker process that hosts ASP.NET.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bae8-102">ASP.NET 运行状况监视，可以管理已部署的 Web 应用程序的生产和操作人员。</span><span class="sxs-lookup"><span data-stu-id="1bae8-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="1bae8-103"><xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据的运行状况事件类型和提供程序类型负责处理此数据。</span><span class="sxs-lookup"><span data-stu-id="1bae8-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data, and the provider types responsible for processing this data.</span></span> <span data-ttu-id="1bae8-104">它还包含有助于管理运行状况事件的支持类型。</span><span class="sxs-lookup"><span data-stu-id="1bae8-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="1bae8-105">实例<xref:System.Web.Management.WebProcessInformation>类包含使用任何派生自的类型获取的信息<xref:System.Web.Management.WebManagementEvent>类型。</span><span class="sxs-lookup"><span data-stu-id="1bae8-105">Instances of the <xref:System.Web.Management.WebProcessInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.</span></span>  
  
 <span data-ttu-id="1bae8-106">应用程序需要访问受保护的信息提供的此类型的适当权限。</span><span class="sxs-lookup"><span data-stu-id="1bae8-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
 <span data-ttu-id="1bae8-107">下面的示例是您可以使用包含进程信息的记录错误事件启用 ASP.NET 配置文件的一段摘录。</span><span class="sxs-lookup"><span data-stu-id="1bae8-107">The following example is an excerpt of the configuration file you could use to enable ASP.NET to log error events that contain process information.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <rules>  
     <add   
       name="All Errors Default"  
       eventName="All Errors"  
       provider="EventLogProvider"  
       profile="Default"  
       minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
> [!NOTE]
>  <span data-ttu-id="1bae8-108">在大多数情况下你将能够实现时，使用 ASP.NET 运行状况监视类型，你将通过指定中的值来控制运行状况监视系统`healthMonitoring`配置节。</span><span class="sxs-lookup"><span data-stu-id="1bae8-108">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="1bae8-109">您还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。</span><span class="sxs-lookup"><span data-stu-id="1bae8-109">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="1bae8-110">有关创建自定义事件类的示例，请参阅示例部分。</span><span class="sxs-lookup"><span data-stu-id="1bae8-110">For an example of creating a custom event class, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bae8-111">下面的示例分为两部分。</span><span class="sxs-lookup"><span data-stu-id="1bae8-111">The following example has two parts.</span></span> <span data-ttu-id="1bae8-112">第一个是使 ASP.NET 能够使用自定义事件使用的配置文件的摘录<xref:System.Web.Management.WebProcessInformation>类型。</span><span class="sxs-lookup"><span data-stu-id="1bae8-112">The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the <xref:System.Web.Management.WebProcessInformation> type.</span></span>  
  
 <span data-ttu-id="1bae8-113">第二个演示如何实现自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1bae8-113">The second shows how to implement the custom event.</span></span>  
  
 <span data-ttu-id="1bae8-114">请确保，自定义事件引发在适当的时候，即，将引发它取代了等效的系统运行状况事件时。</span><span class="sxs-lookup"><span data-stu-id="1bae8-114">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <eventMappings>  
      <add    
        name="SampleProcessInformation"   
        type="SamplesAspNet.SampleWebProcessInformation, webprocessinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>  
    </eventMappings>  
  
    <rules>  
      <add   
        name="Custom Process Information"  
        eventName="SampleProcessInformation"   
        provider="EventLogProvider"  
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
  
```  
  
 <span data-ttu-id="1bae8-115">下面的示例演示如何实现使用的自定义事件<xref:System.Web.Management.WebProcessInformation>类型。</span><span class="sxs-lookup"><span data-stu-id="1bae8-115">The following example shows how to implement a custom event that uses the <xref:System.Web.Management.WebProcessInformation> type.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#1)]
 [!code-vb[System.Web.Management.WebProcessInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
    <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">
      <span data-ttu-id="1bae8-116">ASP.NET 运行状况监视概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bae8-116">ASP.NET Health Monitoring Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccountName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="System.Web.Management.WebProcessInformation.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bae8-117">获取辅助进程的帐户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-117">Gets the account name for the worker process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bae8-118">辅助进程的帐户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-118">The worker process account name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bae8-119">应用程序需要访问此属性提供的信息的相应权限。</span><span class="sxs-lookup"><span data-stu-id="1bae8-119">Your application needs the appropriate permissions to access the information provided by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bae8-120">下面的示例演示如何获取进程的帐户名。</span><span class="sxs-lookup"><span data-stu-id="1bae8-120">The following example shows how to obtain the process account name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#4)]
 [!code-vb[System.Web.Management.WebProcessInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.FormatToString : System.Web.Management.WebEventFormatter -&gt; unit" Usage="webProcessInformation.FormatToString formatter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">
          <span data-ttu-id="1bae8-121">包含用于设置 Web 运行状况事件信息格式的制表符和缩进设置的 <see cref="T:System.Web.Management.WebEventFormatter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-121">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bae8-122">设置应用程序信息的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-122">Formats the application information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bae8-123"><xref:System.Web.Management.WebProcessInformation.FormatToString%2A>方法为事件的信息，这很有用，如果必须记录事件数据，并将其更高版本提供给用户提供统一的格式。</span><span class="sxs-lookup"><span data-stu-id="1bae8-123">The <xref:System.Web.Management.WebProcessInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="1bae8-124">当提供程序调用了一个在内部调用方法<xref:System.Web.Management.WebBaseEvent.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bae8-124">The method is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bae8-125">下面的示例演示如何设置自定义信息的格式。</span><span class="sxs-lookup"><span data-stu-id="1bae8-125">The following example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#7)]
 [!code-vb[System.Web.Management.WebProcessInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessID">
      <MemberSignature Language="C#" Value="public int ProcessID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.ProcessID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessID : int" Usage="System.Web.Management.WebProcessInformation.ProcessID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bae8-126">获取进程标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-126">Gets the process identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bae8-127">进程标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-127">The process identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bae8-128">这是承载 ASP.NET 工作进程的标识符。</span><span class="sxs-lookup"><span data-stu-id="1bae8-128">This is the identifier of the worker process that hosts ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bae8-129">下面的示例演示如何获取进程标识符。</span><span class="sxs-lookup"><span data-stu-id="1bae8-129">The following example shows how to obtain the process identifier.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#5)]
 [!code-vb[System.Web.Management.WebProcessInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessName">
      <MemberSignature Language="C#" Value="public string ProcessName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProcessName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.ProcessName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProcessName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessName : string" Usage="System.Web.Management.WebProcessInformation.ProcessName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bae8-130">获取该进程的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-130">Gets the name of the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bae8-131">进程的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bae8-131">The name of the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bae8-132">这是承载 ASP.NET 工作进程的名称。</span><span class="sxs-lookup"><span data-stu-id="1bae8-132">This is the name of the worker process that hosts ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bae8-133">下面的示例演示如何获取进程名称。</span><span class="sxs-lookup"><span data-stu-id="1bae8-133">The following example shows how to obtain the process name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#6)]
 [!code-vb[System.Web.Management.WebProcessInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>