<Type Name="SqlServices" FullName="System.Web.Management.SqlServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="117312e8c46f758f1cf48dc49e17eae4969321be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SqlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.SqlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>支持安装和移除 ASP.NET 功能的 SQL Server 数据库元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用 SQL Server 数据库来存储 ASP.NET 会话状态、 成员身份、 Web 部件个性化设置，和角色管理等的功能的信息。 这些功能需要在使用之前正确配置，连接到的 SQL Server 数据库。 你可以使用 ASP.NET 注册 SQL 工具 (aspnet_regsql.exe) 为此，也可以调用公开的静态方法<xref:System.Web.Management.SqlServices>直接在代码中的类。  
  
> [!NOTE]
>  使用 aspnet_regsql.exe 工具或<xref:System.Web.Management.SqlServices>用于配置数据库类仅设置提供程序将使用适当的表、 触发器和存储的过程的数据库。 在这种方式中配置数据库不会修改配置文件来指定，则这些功能将 SQL 提供程序用于这些服务。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.Management.SqlServices> 类。  
  
 [!code-csharp[System.Web.Management.SqlServices#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#1)]
 [!code-vb[System.Web.Management.SqlServices#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateApplicationServicesScripts">
      <MemberSignature Language="C#" Value="public static string GenerateApplicationServicesScripts (bool install, System.Web.Management.SqlFeatures features, string database);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateApplicationServicesScripts(bool install, valuetype System.Web.Management.SqlFeatures features, string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.GenerateApplicationServicesScripts(System.Boolean,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateApplicationServicesScripts (install As Boolean, features As SqlFeatures, database As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateApplicationServicesScripts(bool install, System::Web::Management::SqlFeatures features, System::String ^ database);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="install" Type="System.Boolean" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="install">
          如果为 <see langword="true" />，则生成安装指定功能的脚本；如果为 <see langword="false" />，则生成移除功能的脚本。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要为其生成脚本的特定功能。</param>
        <param name="database">生成的脚本中使用的 SQL Server 数据库的名称。</param>
        <summary>为选定功能生成 SQL 脚本。 脚本将引用由数据库参数指示的数据库。</summary>
        <returns>返回生成的脚本代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSessionStateScripts">
      <MemberSignature Language="C#" Value="public static string GenerateSessionStateScripts (bool install, System.Web.Management.SessionStateType type, string customDatabase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateSessionStateScripts(bool install, valuetype System.Web.Management.SessionStateType type, string customDatabase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.GenerateSessionStateScripts(System.Boolean,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSessionStateScripts (install As Boolean, type As SessionStateType, customDatabase As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateSessionStateScripts(bool install, System::Web::Management::SessionStateType type, System::String ^ customDatabase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="install" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="customDatabase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="install">
          如果为 <see langword="true" />，则生成安装指定功能的脚本；如果为 <see langword="false" />，则生成移除功能的脚本。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定为其生成脚本的会话状态的类型。</param>
        <param name="customDatabase">生成的脚本中使用的 SQL Server 数据库的名称。</param>
        <summary>生成用于安装或移除会话状态的 SQL 脚本。 脚本将引用由数据库参数指示的数据库。</summary>
        <returns>返回生成的脚本代码。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Install">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在 SQL Server 数据库上安装指定 ASP.NET 功能的组件。</summary>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string server, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string server, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (server As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ server, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">要在其上安装功能的数据库服务器。</param>
        <param name="database">要在其上安装功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要安装的功能。</param>
        <summary>在 SQL Server 数据库上安装选定 ASP.NET 功能的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库， `aspnetdb`。 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.Install%28System.String%2CSystem.String%2CSystem.Web.Management.SqlFeatures%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#4)]
 [!code-vb[System.Web.Management.SqlServices#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string database, System.Web.Management.SqlFeatures features, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string database, valuetype System.Web.Management.SqlFeatures features, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (database As String, features As SqlFeatures, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ database, System::Web::Management::SqlFeatures features, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">要在其上安装功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要安装的功能。</param>
        <param name="connectionString">要使用的连接字符串。 连接字符串仅用来建立到数据库服务器的连接。  在连接字符串中指定数据库没有效果。</param>
        <summary>在 SQL Server 数据库上安装选定 ASP.NET 服务的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库， `aspnetdb`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.Install%28System.String%2CSystem.Web.Management.SqlFeatures%2CSystem.String%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#2)]
 [!code-vb[System.Web.Management.SqlServices#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public static void Install (string server, string user, string password, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Install(string server, string user, string password, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Install(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Install (server As String, user As String, password As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Install(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">要在其上安装功能的数据库服务器。</param>
        <param name="user">连接到数据库时使用的用户名。</param>
        <param name="password">连接到数据库时使用的密码。</param>
        <param name="database">要在其上安装功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要安装的功能。</param>
        <summary>在 SQL Server 数据库上安装选定 ASP.NET 功能的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库， `aspnetdb`。 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallSessionState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在 SQL Server 数据库上安装 ASP.NET 会话状态的组件。</summary>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string server, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string server, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (server As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ server, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">要在其上安装会话状态组件的 SQL Server 实例。</param>
        <param name="customDatabase">要在其上安装会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要安装的会话状态的类型。</param>
        <summary>在 SQL Server 数据库上安装 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.InstallSessionState%2A>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#10)]
 [!code-vb[System.Web.Management.SqlServices#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string customDatabase, System.Web.Management.SessionStateType type, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string customDatabase, valuetype System.Web.Management.SessionStateType type, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (customDatabase As String, type As SessionStateType, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ customDatabase, System::Web::Management::SessionStateType type, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="customDatabase">要在其上安装会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要安装的会话状态的类型。</param>
        <param name="connectionString">要使用的连接字符串。 连接字符串仅用来建立到数据库服务器的连接。  在连接字符串中指定数据库没有效果。</param>
        <summary>在 SQL Server 数据库上安装 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.InstallSessionState%28System.String%2CSystem.Web.Management.SessionStateType%2CSystem.String%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#8)]
 [!code-vb[System.Web.Management.SqlServices#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="InstallSessionState">
      <MemberSignature Language="C#" Value="public static void InstallSessionState (string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallSessionState(string server, string user, string password, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.InstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InstallSessionState (server As String, user As String, password As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InstallSessionState(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">要在其上安装会话状态组件的 SQL Server 实例。</param>
        <param name="user">连接到数据库时使用的用户名。</param>
        <param name="password">连接到数据库时使用的密码。</param>
        <param name="customDatabase">要在其上安装会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要安装的会话状态的类型。</param>
        <summary>在 SQL Server 数据库上安装 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.InstallSessionState%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#12)]
 [!code-vb[System.Web.Management.SqlServices#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Uninstall">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从 SQL Server 数据库中移除选定 ASP.NET 功能的组件。</summary>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string server, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string server, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (server As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ server, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">要从其中移除功能的 SQL Server 实例。</param>
        <param name="database">要从其中移除功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要移除的功能。</param>
        <summary>从 SQL Server 数据库中移除选定 ASP.NET 功能的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库， `aspnetdb`。 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.Uninstall%28System.String%2CSystem.String%2CSystem.Web.Management.SqlFeatures%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#5)]
 [!code-vb[System.Web.Management.SqlServices#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常，尝试从不存在的数据库中卸载，或者指定数据库中功能的一个或多个表包含数据。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string database, System.Web.Management.SqlFeatures features, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string database, valuetype System.Web.Management.SqlFeatures features, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.Web.Management.SqlFeatures,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (database As String, features As SqlFeatures, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ database, System::Web::Management::SqlFeatures features, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">要从其中移除功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要移除的功能。</param>
        <param name="connectionString">要使用的连接字符串。 连接字符串仅用来建立到数据库服务器的连接。 在连接字符串中指定数据库没有效果。</param>
        <summary>从 SQL Server 数据库中移除选定 ASP.NET 功能的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库`aspnetdb`。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.Uninstall%2A>方法<xref:System.Web.Management.SqlServices>类型。  
  
 [!code-csharp[System.Web.Management.SqlServices#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#3)]
 [!code-vb[System.Web.Management.SqlServices#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常，尝试从不存在的数据库中卸载，或者指定数据库中功能的一个或多个表包含数据。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall (string server, string user, string password, string database, System.Web.Management.SqlFeatures features);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall(string server, string user, string password, string database, valuetype System.Web.Management.SqlFeatures features) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.Uninstall(System.String,System.String,System.String,System.String,System.Web.Management.SqlFeatures)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall (server As String, user As String, password As String, database As String, features As SqlFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ database, System::Web::Management::SqlFeatures features);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="database" Type="System.String" />
        <Parameter Name="features" Type="System.Web.Management.SqlFeatures" />
      </Parameters>
      <Docs>
        <param name="server">要从其中移除功能的 SQL Server 实例。</param>
        <param name="user">连接到数据库时使用的用户名。</param>
        <param name="password">连接到数据库时使用的密码。</param>
        <param name="database">要从其中移除功能的数据库。</param>
        <param name="features">
          <see cref="T:System.Web.Management.SqlFeatures" /> 值的按位组合，指定要移除的功能。</param>
        <summary>从 SQL Server 数据库中移除选定 ASP.NET 功能的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`database`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认数据库， `aspnetdb`。 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
> [!NOTE]
>  使用可信连接建立到数据库服务器连接。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="features" /> 值包含一个或多个无效标志。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常，尝试从不存在的数据库中卸载，或者指定数据库中功能的一个或多个表包含数据。</exception>
        <altmember cref="T:System.Web.Management.SqlFeatures" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallSessionState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从 SQL Server 数据库中移除 ASP.NET 会话状态的组件。</summary>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string server, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string server, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (server As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ server, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">要从其中移除会话状态组件的 SQL Server 实例。</param>
        <param name="customDatabase">要从其中移除会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要移除的会话状态的类型。</param>
        <summary>从 SQL Server 数据库中移除 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
 **请注意**的受信任连接建立到数据库服务器的连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.UninstallSessionState%2A>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#11)]
 [!code-vb[System.Web.Management.SqlServices#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string customDatabase, System.Web.Management.SessionStateType type, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string customDatabase, valuetype System.Web.Management.SessionStateType type, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.Web.Management.SessionStateType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (customDatabase As String, type As SessionStateType, connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ customDatabase, System::Web::Management::SessionStateType type, System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="customDatabase">要从其中移除会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要移除的会话状态的类型。</param>
        <param name="connectionString">要使用的连接字符串。  连接字符串仅用来建立到数据库服务器的连接。  在连接字符串中指定数据库没有效果。</param>
        <summary>从 SQL Server 数据库中移除 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.UninstallSessionState%28System.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#9)]
 [!code-vb[System.Web.Management.SqlServices#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
    <Member MemberName="UninstallSessionState">
      <MemberSignature Language="C#" Value="public static void UninstallSessionState (string server, string user, string password, string customDatabase, System.Web.Management.SessionStateType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallSessionState(string server, string user, string password, string customDatabase, valuetype System.Web.Management.SessionStateType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.SqlServices.UninstallSessionState(System.String,System.String,System.String,System.String,System.Web.Management.SessionStateType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallSessionState (server As String, user As String, password As String, customDatabase As String, type As SessionStateType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallSessionState(System::String ^ server, System::String ^ user, System::String ^ password, System::String ^ customDatabase, System::Web::Management::SessionStateType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customDatabase" Type="System.String" />
        <Parameter Name="type" Type="System.Web.Management.SessionStateType" />
      </Parameters>
      <Docs>
        <param name="server">要从其中移除会话状态组件的 SQL Server 实例。</param>
        <param name="user">连接到数据库时使用的用户名。</param>
        <param name="password">连接到数据库时使用的密码。</param>
        <param name="customDatabase">要从其中移除会话状态组件的数据库。</param>
        <param name="type">
          <see cref="T:System.Web.Management.SessionStateType" /> 值之一，指定要移除的会话状态的类型。</param>
        <summary>从 SQL Server 数据库中移除 ASP.NET 会话状态的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`server`是`null`或未提供，<xref:System.Web.Management.SqlServices>将使用默认 SQL Server 实例。  
  
 **请注意**的受信任连接建立到数据库服务器的连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Management.SqlServices.UninstallSessionState%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.Web.Management.SessionStateType%29>方法<xref:System.Web.Management.SqlServices>类。  
  
 [!code-csharp[System.Web.Management.SqlServices#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.SqlServices/CS/usingsqlservices.cs#13)]
 [!code-vb[System.Web.Management.SqlServices#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.SqlServices/VB/usingsqlservices.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">类型是 <see langword="Custom" /> 并且未提供 <paramref name="customDatabase" /> 值，或者类型是 <see langword="Temporary" /> 或 <see langword="Persisted" /> 并且 <paramref name="customDatabase" /> 值不为空。</exception>
        <exception cref="T:System.Web.HttpException">无法连接到指定的数据库服务器。</exception>
        <exception cref="T:System.Web.Management.SqlExecutionException">处理操作所需的 SQL 语句时出现异常。</exception>
        <altmember cref="T:System.Web.Management.SessionStateType" />
      </Docs>
    </Member>
  </Members>
</Type>