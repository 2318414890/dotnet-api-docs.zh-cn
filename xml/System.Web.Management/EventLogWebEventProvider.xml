<Type Name="EventLogWebEventProvider" FullName="System.Web.Management.EventLogWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfee5df078cf8d34b2a7b9fdbfabe07a4e154262" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51879590" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.EventLogWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWebEventProvider sealed : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type EventLogWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e5907-101">实现事件提供程序，该程序将 ASP.NET 状况监视事件记录到 Windows 应用程序事件日志中。</span><span class="sxs-lookup"><span data-stu-id="e5907-101">Implements an event provider that logs ASP.NET health-monitoring events into the Windows Application Event Log.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5907-102">ASP.NET 运行状况监视，可以管理已部署的 Web 应用程序的生产和操作人员。</span><span class="sxs-lookup"><span data-stu-id="e5907-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="e5907-103"><xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</span><span class="sxs-lookup"><span data-stu-id="e5907-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="e5907-104">它还包含有助于管理运行状况事件的支持类型。</span><span class="sxs-lookup"><span data-stu-id="e5907-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="e5907-105"><xref:System.Web.Management.EventLogWebEventProvider>，失败审核，审核和错误配置运行状况监视事件默认情况下 （启用）。</span><span class="sxs-lookup"><span data-stu-id="e5907-105">The <xref:System.Web.Management.EventLogWebEventProvider>, the failure audit, and the error health-monitoring events are configured (enabled) by default.</span></span> <span data-ttu-id="e5907-106">这意味着，失败审核和默认情况下 Windows 应用程序事件日志中记录运行状况监视事件的错误。</span><span class="sxs-lookup"><span data-stu-id="e5907-106">This means that the failure audit and the error health-monitoring events are logged in the Windows Application Event Log by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5907-107">在大多数情况下你将能够实现时，使用 ASP.NET 运行状况监视类型，你将通过指定中的值来控制运行状况监视系统`healthMonitoring`配置节。</span><span class="sxs-lookup"><span data-stu-id="e5907-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="e5907-108">您还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。</span><span class="sxs-lookup"><span data-stu-id="e5907-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="e5907-109">有关创建自定义提供程序的示例，请参阅[如何： 实现运行状况监视自定义提供程序示例](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)。</span><span class="sxs-lookup"><span data-stu-id="e5907-109">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5907-110">以下配置文件摘录显示了如何指定类型的提供程序<xref:System.Web.Management.EventLogWebEventProvider>处理成功审核事件。</span><span class="sxs-lookup"><span data-stu-id="e5907-110">The following configuration file excerpt shows how to specify a provider of type <xref:System.Web.Management.EventLogWebEventProvider> to handle success audit events.</span></span> <span data-ttu-id="e5907-111"><xref:System.Web.Management.EventLogWebEventProvider>和默认配置为要监视的失败审核运行状况事件类型。</span><span class="sxs-lookup"><span data-stu-id="e5907-111">The <xref:System.Web.Management.EventLogWebEventProvider> and the failure audit health-event types to monitor are configured by default.</span></span> <span data-ttu-id="e5907-112">监视成功审核，您需要配置它们，示例代码中所示。</span><span class="sxs-lookup"><span data-stu-id="e5907-112">To monitor the success audits, you need to configure them, as shown in the example code.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="10">  
  
  <rule>  
    <add name="Success Audits Default"  
      eventName="Success Audits"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rule>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="e5907-113">ASP.NET 运行状况监视概述</span><span class="sxs-lookup"><span data-stu-id="e5907-113">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c"><span data-ttu-id="e5907-114">ASP.NET 运行状况监视自定义提供程序示例</span><span class="sxs-lookup"><span data-stu-id="e5907-114">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="e5907-115">安装和配置 ASP.NET 提供程序</span><span class="sxs-lookup"><span data-stu-id="e5907-115">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="eventLogWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5907-116">将事件从提供程序缓冲区移到事件日志中。</span><span class="sxs-lookup"><span data-stu-id="e5907-116">Moves events from the provider's buffer into the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5907-117">调用此方法时，所有提供程序的缓冲区中事件立即写入到 Windows 应用程序事件日志，而不考虑多少时间已过自最后一次写入或缓冲区中有多少个事件都。</span><span class="sxs-lookup"><span data-stu-id="e5907-117">When this method is called, all the events in the provider's buffer are immediately written to the Windows Application Event Log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="e5907-118">最后一次写入时将重置为刷新操作的时间。</span><span class="sxs-lookup"><span data-stu-id="e5907-118">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="e5907-119">如果未启用缓冲机制，调用此方法没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="e5907-119">If the buffering mechanism is not enabled, calling this method does not have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="eventLogWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e5907-120">配置文件中用于标识此提供程序的名称。</span><span class="sxs-lookup"><span data-stu-id="e5907-120">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="e5907-121">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，指定配置文件中为此提供程序分配的特性。</span><span class="sxs-lookup"><span data-stu-id="e5907-121">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="e5907-122">设置此对象的初始值。</span><span class="sxs-lookup"><span data-stu-id="e5907-122">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5907-123">此方法调用以初始化<xref:System.Web.Management.EventLogWebEventProvider>配置设置和配置文件中指定的名称。</span><span class="sxs-lookup"><span data-stu-id="e5907-123">This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="eventLogWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="e5907-124">要处理的 <see cref="T:System.Web.Management.WebBaseEvent" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e5907-124">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="e5907-125">处理传递给提供程序的事件。</span><span class="sxs-lookup"><span data-stu-id="e5907-125">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5907-126">这是，ASP.NET 运行状况监视调用以启动事件的处理方法。</span><span class="sxs-lookup"><span data-stu-id="e5907-126">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="eventLogWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5907-127">执行与关闭提供程序相关联的任务。</span><span class="sxs-lookup"><span data-stu-id="e5907-127">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5907-128">ASP.NET 调用<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>方法时应用程序域中托管 Web 应用程序终止。</span><span class="sxs-lookup"><span data-stu-id="e5907-128">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="e5907-129">调用方法以执行任务，将允许应用程序正常结束。</span><span class="sxs-lookup"><span data-stu-id="e5907-129">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>