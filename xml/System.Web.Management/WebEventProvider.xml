<Type Name="WebEventProvider" FullName="System.Web.Management.WebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61f53aef1223c0ea4b59478c03fef284a0fed2fc" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46610137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebEventProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebEventProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type WebEventProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="312e8-101">为非缓冲事件提供程序提供基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="312e8-101">Provides the base class for non buffered event providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="312e8-102">ASP.NET 运行状况监视，可以管理已部署的 Web 应用程序的生产和操作人员。</span><span class="sxs-lookup"><span data-stu-id="312e8-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="312e8-103"><xref:System.Web.Management>命名空间包含负责打包应用程序运行状况状态数据和负责处理此数据提供程序类型的运行状况事件类型。</span><span class="sxs-lookup"><span data-stu-id="312e8-103">The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="312e8-104">它还包含有助于管理运行状况事件的支持类型。</span><span class="sxs-lookup"><span data-stu-id="312e8-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="312e8-105">如果你想要自定义运行状况事件处理，可以从派生<xref:System.Web.Management.WebEventProvider>类，以创建你自己的自定义提供程序。</span><span class="sxs-lookup"><span data-stu-id="312e8-105">If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.WebEventProvider> class to create your own custom provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="312e8-106">在大多数情况下你将能够实现时，使用 ASP.NET 运行状况监视类型，你将通过指定中的值来控制运行状况监视系统`healthMonitoring`配置节。</span><span class="sxs-lookup"><span data-stu-id="312e8-106">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="312e8-107">您还可以从要创建你自己的自定义事件和提供程序的运行状况监视类型派生。</span><span class="sxs-lookup"><span data-stu-id="312e8-107">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="312e8-108">有关示例的派生自<xref:System.Web.Management.WebEventProvider>类，请参阅本主题中提供的示例。</span><span class="sxs-lookup"><span data-stu-id="312e8-108">For an example of deriving from the <xref:System.Web.Management.WebEventProvider> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="312e8-109">下面的代码示例演示如何从派生<xref:System.Web.Management.WebEventProvider>类，以创建预先配置的事件写入本地文件必须为其授予适当的访问权限的自定义提供程序。</span><span class="sxs-lookup"><span data-stu-id="312e8-109">The following code example shows how to derive from the <xref:System.Web.Management.WebEventProvider> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.</span></span> <span data-ttu-id="312e8-110">此自定义提供程序示例很简单，其主要目的是为您提供作为开发人员完全控制其基本机制。</span><span class="sxs-lookup"><span data-stu-id="312e8-110">This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms.</span></span> <span data-ttu-id="312e8-111">在实际方案中，您可以使用此提供程序，尤其是缓冲的示例提供程序可在<xref:System.Web.Management.BufferedWebEventProvider>，作为初步了解应用程序的行为。</span><span class="sxs-lookup"><span data-stu-id="312e8-111">In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application.</span></span> <span data-ttu-id="312e8-112">这可以帮助你了解的信息可用，则在设计阶段然后更高版本，可以将此信息来更复杂的提供程序。</span><span class="sxs-lookup"><span data-stu-id="312e8-112">This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.</span></span>  
  
 <span data-ttu-id="312e8-113">下面的配置文件摘要演示`healthMonitoring`使 ASP.NET 可以使用上面定义来处理所有的运行状况监视事件的自定义提供程序的部分配置。</span><span class="sxs-lookup"><span data-stu-id="312e8-113">The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring   
  heartBeatInterval="0"   
  enabled="true">  
  
    <providers>  
  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
  
    </providers>  
  
    <rules>  
  
      <rule   
        name="Custom Event Provider"  
        eventName="All Events"  
        provider="SampleWebEventProvider"  
        profile="Default" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]
 [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">
      <span data-ttu-id="312e8-114">ASP.NET 运行状况监视概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="312e8-114">ASP.NET Health Monitoring Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c">
      <span data-ttu-id="312e8-115">示例： 自定义事件提供程序</span>
      <span class="sxs-lookup">
        <span data-stu-id="312e8-115">Example: Custom Event Provider</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">
      <span data-ttu-id="312e8-116">安装和配置 ASP.NET 提供程序</span>
      <span class="sxs-lookup">
        <span data-stu-id="312e8-116">Installing and Configuring ASP.NET Providers</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="312e8-117">初始化 <see cref="T:System.Web.Management.WebEventProvider" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="312e8-117">Initializes a new instance of the <see cref="T:System.Web.Management.WebEventProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="312e8-118"><xref:System.Web.Management.WebEventProvider.%23ctor%2A>构造函数不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="312e8-118">The <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="312e8-119">它是由 ASP.NET 调用。</span><span class="sxs-lookup"><span data-stu-id="312e8-119">It is called by ASP.NET.</span></span> <span data-ttu-id="312e8-120">您可以调用<xref:System.Web.Management.WebEventProvider.%23ctor%2A>构造函数从派生时<xref:System.Web.Management.WebEventProvider>类。</span><span class="sxs-lookup"><span data-stu-id="312e8-120">You can call the <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebEventProvider> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="312e8-121">下面的代码示例演示如何在自定义事件提供程序中使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="312e8-121">The following code example shows how to use this constructor in a custom event provider.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]
 [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="webEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="312e8-122">将事件从提供程序缓冲区移到事件日志中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="312e8-122">Moves the events from the provider's buffer into the event log.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="312e8-123">调用此方法时，缓冲区中的事件会立即从缓冲区移到事件日志，而不考虑多少时间已经过去所有最后一次写入或缓冲区中有多少个事件都。</span><span class="sxs-lookup"><span data-stu-id="312e8-123">When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="312e8-124">最后一次写入时将重置为刷新操作的时间。</span><span class="sxs-lookup"><span data-stu-id="312e8-124">The time of the last write is reset to the time of the flushing action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="312e8-125">下面的代码示例说明如何使用 <xref:System.Web.Management.WebEventProvider.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="312e8-125">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Flush%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]
 [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent raisedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessEvent (raisedEvent As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessEvent(System::Web::Management::WebBaseEvent ^ raisedEvent);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="webEventProvider.ProcessEvent raisedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="raisedEvent">
          <span data-ttu-id="312e8-126">要处理的 <see cref="T:System.Web.Management.WebBaseEvent" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="312e8-126">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="312e8-127">处理传递给提供程序的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="312e8-127">Processes the event passed to the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="312e8-128">这是，ASP.NET 运行状况监视调用开始处理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="312e8-128">This is the method that ASP.NET health monitoring calls to start processing the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="312e8-129">下面的代码示例演示如何实现 <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="312e8-129">The following code example shows how to implement the <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> method.</span></span> <span data-ttu-id="312e8-130">此方法将该事件的自定义的字符串表示形式追加到特定的日志文件。</span><span class="sxs-lookup"><span data-stu-id="312e8-130">This method appends the customized string representation of the event to a specific log file.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]
 [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="webEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="312e8-131">执行与关闭提供程序相关联的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="312e8-131">Performs tasks associated with shutting down the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="312e8-132">ASP.NET 调用<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>方法时应用程序域中托管 Web 应用程序终止。</span><span class="sxs-lookup"><span data-stu-id="312e8-132">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="312e8-133">调用方法以执行将允许应用程序，例如，关闭资源正常，结束的任务。</span><span class="sxs-lookup"><span data-stu-id="312e8-133">The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="312e8-134">下面的代码示例说明如何使用 <xref:System.Web.Management.WebEventProvider.Shutdown%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="312e8-134">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Shutdown%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]
 [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>