<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComSourceInterfacesAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d4927629d1bd6bb36a9bb7588dff37a582919f8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4927629d1bd6bb36a9bb7588dff37a582919f8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>Identifies a list of interfaces that are exposed as COM event sources for the attributed class.</source>
          <target state="translated">标识针对特性化类作为 COM 事件源公开的接口列表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>You can apply this attribute to classes.</source>
          <target state="translated">你可以将此特性应用于类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>You apply this attribute to a managed class to identify the event interfaces that the class exposes as COM connection points.</source>
          <target state="translated">将此特性应用于托管类，以标识该类会公开为 COM 连接点的事件接口。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>An event interface contains methods that map to the event members of the class.</source>
          <target state="translated">事件接口包含映射到的事件成员的类的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>The class event name and the interface method name must be the same.</source>
          <target state="translated">类事件的名称和接口方法的名称必须相同。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>This attribute can accommodate up to four source interfaces for a class by passing the type of the source interface to the appropriate constructor, which take between one and four type arguments.</source>
          <target state="translated">此属性可以通过传递给适当的构造函数，它采用一个和第四个类型自变量之间的源接口的类型中容纳最多四个源接口的类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>For classes that want to expose more than four source interfaces, the string version of the constructor can be used.</source>
          <target state="translated">对于想要公开四个以上的源接口的类，可以使用构造函数的字符串版本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>For additional information about exposing.NET events to COM clients, see <bpt id="p1">[</bpt>How to: Raise Events Handled by a COM Sink<ept id="p1">](http://msdn.microsoft.com/library/7c9944b2-e951-4c3e-a0a1-59b2ae37d7fd)</ept>.</source>
          <target state="translated">对 COM 客户端公开.net 事件有关的其他信息，请参阅<bpt id="p1">[</bpt>如何： 引发 COM 接收器由的事件处理<ept id="p1">](http://msdn.microsoft.com/library/7c9944b2-e951-4c3e-a0a1-59b2ae37d7fd)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComSourceInterfacesAttribute&gt;</ph> to connect the event sink interface to a class by passing the namespace and event sink interface.</source>
          <target state="translated">下面的示例演示如何将应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComSourceInterfacesAttribute&gt;</ph>连接到一个类的事件接收器接口，通过传递的命名空间和事件接收器接口。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
          <source>A null-delimited list of fully qualified event source interface names.</source>
          <target state="translated">事件源接口的完全限定名列表，名称之间用 null 分隔。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> class with the name of the event source interface.</source>
          <target state="translated">使用事件源接口名称初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
          <source>Use this constructor to expose more than four event source interfaces to COM clients.</source>
          <target state="translated">使用此构造函数公开四个以上的事件源接口，对 COM 客户端。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> class with the type to use as a source interface.</source>
          <target state="translated">使用要用作源接口的类型初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
          <source>Use this constructor to expose a single event source interface to COM clients.</source>
          <target state="translated">使用此构造函数来显示对 COM 客户端的单个事件源接口。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the default source interface.</source>
          <target state="translated">默认源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> class with the types to use as source interfaces.</source>
          <target state="translated">使用要用作源接口的类型初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
          <source>Use this constructor to expose two event source interfaces to COM clients.</source>
          <target state="translated">使用此构造函数公开两个对 COM 客户端的事件源接口。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the default source interface.</source>
          <target state="translated">默认源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="ComSourceInterfacesAttribute" /&gt;</ph> class with the types to use as source interfaces.</source>
          <target state="translated">使用要用作源接口的类型初始化 <ph id="ph1">&lt;see langword="ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
          <source>Use this constructor to expose three event source interfaces to COM clients.</source>
          <target state="translated">使用此构造函数来公开对 COM 客户端的三个事件源接口。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the default source interface.</source>
          <target state="translated">默认源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of a source interface.</source>
          <target state="translated">源接口的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> class with the types to use as source interfaces.</source>
          <target state="translated">使用要用作源接口的类型初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComSourceInterfacesAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
          <source>Use this constructor to expose four event source interfaces to COM clients.</source>
          <target state="translated">使用此构造函数公开对 COM 客户端的四个事件源接口。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
          <source>Gets the fully qualified name of the event source interface.</source>
          <target state="translated">获取事件源接口的完全限定名。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
          <source>The fully qualified name of the event source interface.</source>
          <target state="translated">事件源接口的完全限定名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
          <source>If you specify more than one source interface, the value returned is a null-delimited list of fully qualified event source interface names.</source>
          <target state="translated">如果指定多个源接口，则返回的值是 null 分隔的完全限定的事件源接口名称列表。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>