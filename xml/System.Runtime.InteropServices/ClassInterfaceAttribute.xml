<Type Name="ClassInterfaceAttribute" FullName="System.Runtime.InteropServices.ClassInterfaceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5827cf109af27bb4c22409fbebad34cc110eb077" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58698693" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClassInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClassInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClassInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassInterfaceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ClassInterfaceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc29f-101">指示在完全生成某个接口后为要向 COM 公开的类生成的类接口类型。</span><span class="sxs-lookup"><span data-stu-id="cc29f-101">Indicates the type of class interface to be generated for a class exposed to COM, if an interface is generated at all.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc29f-102">可以将此特性应用于程序集或类。</span><span class="sxs-lookup"><span data-stu-id="cc29f-102">You can apply this attribute to assemblies or classes.</span></span>  
  
 <span data-ttu-id="cc29f-103">此属性控制是否自动将类型库导出程序 (Tlbexp.exe) 生成特性化类的类接口。</span><span class="sxs-lookup"><span data-stu-id="cc29f-103">This attribute controls whether the Type Library Exporter (Tlbexp.exe) automatically generates a class interface for the attributed class.</span></span> <span data-ttu-id="cc29f-104">类接口执行相同的名称与类本身，但名称以下划线。</span><span class="sxs-lookup"><span data-stu-id="cc29f-104">A class interface carries the same name as the class itself, but the name is prefixed with an underscore.</span></span> <span data-ttu-id="cc29f-105">类接口公开时，包含所有`public`、 非-`static`托管类，包括成员的成员继承自它的基类。</span><span class="sxs-lookup"><span data-stu-id="cc29f-105">When exposed, the class interface contains all the `public`, non- `static` members of the managed class, including members inherited from its base class.</span></span> <span data-ttu-id="cc29f-106">托管的类不能访问的类接口而不需要为如可以直接访问类成员。</span><span class="sxs-lookup"><span data-stu-id="cc29f-106">Managed classes cannot access a class interface and have no need to as they can access the class members directly.</span></span> <span data-ttu-id="cc29f-107">Tlbexp.exe 将生成类接口的唯一的接口标识符 (IID)。</span><span class="sxs-lookup"><span data-stu-id="cc29f-107">Tlbexp.exe generates a unique interface identifier (IID) for the class interface.</span></span>  
  
 <span data-ttu-id="cc29f-108">类接口可以是双或仅支持调度的接口。</span><span class="sxs-lookup"><span data-stu-id="cc29f-108">Class interfaces can be dual or dispatch-only interfaces.</span></span> <span data-ttu-id="cc29f-109">（可选） 可以取消生成的类接口，并改为提供自定义的接口。</span><span class="sxs-lookup"><span data-stu-id="cc29f-109">Optionally, you can suppress the generation of the class interface and provide a custom interface instead.</span></span> <span data-ttu-id="cc29f-110">公开或通过指定取消类接口<xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="cc29f-110">You expose or suppress a class interface by specifying a <xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType> enumeration member.</span></span> <span data-ttu-id="cc29f-111">当应用<xref:System.Runtime.InteropServices.ClassInterfaceAttribute>给程序集，该属性与程序集中的所有类除非个别类重写具有其自己的属性的设置。</span><span class="sxs-lookup"><span data-stu-id="cc29f-111">When you apply <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> to an assembly, the attribute pertains to all classes in the assembly unless the individual classes override the setting with their own attribute.</span></span>  
  
 <span data-ttu-id="cc29f-112">尽管类接口消除显式定义为每个类的接口的任务，是强烈建议您不要在生产应用程序中的使用它们。</span><span class="sxs-lookup"><span data-stu-id="cc29f-112">Although class interfaces eliminate the task of explicitly defining interfaces for each class, their use in production applications is strongly discouraged.</span></span> <span data-ttu-id="cc29f-113">双类接口允许客户端将绑定到特定的接口布局的类的变化可能会发生更改。</span><span class="sxs-lookup"><span data-stu-id="cc29f-113">Dual class interfaces allow clients to bind to a specific interface layout that is subject to change as the class evolves.</span></span> <span data-ttu-id="cc29f-114">例如，请考虑公开类接口向 COM 客户端的托管的类。</span><span class="sxs-lookup"><span data-stu-id="cc29f-114">For example, consider a managed class that exposes a class interface to COM clients.</span></span> <span data-ttu-id="cc29f-115">类的第一个版本包含的方法`North`和`South`。</span><span class="sxs-lookup"><span data-stu-id="cc29f-115">The first version of the class contains methods `North` and `South`.</span></span> <span data-ttu-id="cc29f-116">非托管客户端可以将绑定到类接口，它提供了`North`中的类接口和方法的第一个方法作为`South`作为第二种方法。</span><span class="sxs-lookup"><span data-stu-id="cc29f-116">An unmanaged client can bind to the class interface, which provides `North` as the first method in the class interface and method `South` as the second method.</span></span> <span data-ttu-id="cc29f-117">现在，考虑类，该类包含一个新方法，下一版本`East`方法之间插入`North`和`South`。</span><span class="sxs-lookup"><span data-stu-id="cc29f-117">Now consider the next version of the class, which has a new method, `East`, inserted between methods `North` and `South`.</span></span> <span data-ttu-id="cc29f-118">尝试将绑定到通过旧的类接口的新类的非托管的客户端在调用方法`East`时，实际调用方法`South`，因为接口内方法的位置已更改。</span><span class="sxs-lookup"><span data-stu-id="cc29f-118">Unmanaged clients that try to bind to the new class through the old class interface end up calling method `East` when they intend to call method `South`, because the positioning of methods within the interface has changed.</span></span> <span data-ttu-id="cc29f-119">此外，对基类的布局的任何更改还会影响所有派生类的类接口的布局。</span><span class="sxs-lookup"><span data-stu-id="cc29f-119">Moreover, any change to the layout of a base class also affects the layout of the class interface for all derived classes.</span></span> <span data-ttu-id="cc29f-120">托管客户端，哪些绑定直接到类，不显示相同的版本控制问题。</span><span class="sxs-lookup"><span data-stu-id="cc29f-120">Managed clients, which bind directly to classes, do not exhibit the same versioning problems.</span></span> <span data-ttu-id="cc29f-121">有关使用类接口的特定指导原则，请参阅[COM 可调用包装器](~/docs/framework/interop/com-callable-wrapper.md)。</span><span class="sxs-lookup"><span data-stu-id="cc29f-121">For specific guidelines on using a class interface, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 <span data-ttu-id="cc29f-122">[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)始终应用于导入类<xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType>枚举成员，以指示现有的 COM 类从不公开托管接口。</span><span class="sxs-lookup"><span data-stu-id="cc29f-122">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) always applies to imported classes the <xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType> enumeration member to indicate that existing COM classes never expose managed interfaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc29f-123">下面的示例演示如何应用<xref:System.Runtime.InteropServices.ClassInterfaceAttribute>与<xref:System.Runtime.InteropServices.ClassInterfaceType>值<xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch>，以生成`IDispatch`接口`MyClass`。</span><span class="sxs-lookup"><span data-stu-id="cc29f-123">The following example shows how to apply the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> with the <xref:System.Runtime.InteropServices.ClassInterfaceType> value <xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch>, which generates an `IDispatch` interface for `MyClass`.</span></span>  
  
 [!code-cpp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
    <related type="Article" href="~/docs/framework/tools/tlbexp-exe-type-library-exporter.md"><span data-ttu-id="cc29f-124">Tlbexp.exe（类型库导出程序）</span><span class="sxs-lookup"><span data-stu-id="cc29f-124">Tlbexp.exe (Type Library Exporter)</span></span></related>
    <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md"><span data-ttu-id="cc29f-125">Tlbimp.exe（类型库导入程序）</span><span class="sxs-lookup"><span data-stu-id="cc29f-125">Tlbimp.exe (Type Library Importer)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc29f-126">初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc29f-126">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (short classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classInterfaceType As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(short classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : int16 -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType"><span data-ttu-id="cc29f-127">描述为类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="cc29f-127">Describes the type of interface that is generated for a class.</span></span></param>
        <summary><span data-ttu-id="cc29f-128">使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 枚举值初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc29f-128">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> enumeration value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc29f-129">此构造函数采用一个基础的 16 位有符号的整数来表示每个<xref:System.Runtime.InteropServices.ClassInterfaceType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="cc29f-129">This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.ClassInterfaceType> enumeration member.</span></span> <span data-ttu-id="cc29f-130">[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc29f-130">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
        <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md"><span data-ttu-id="cc29f-131">Tlbimp.exe（类型库导入程序）</span><span class="sxs-lookup"><span data-stu-id="cc29f-131">Tlbimp.exe (Type Library Importer)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (System.Runtime.InteropServices.ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.ClassInterfaceType classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(System::Runtime::InteropServices::ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : System.Runtime.InteropServices.ClassInterfaceType -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType"><span data-ttu-id="cc29f-132"><see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值之一，描述为类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="cc29f-132">One of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> values that describes the type of interface that is generated for a class.</span></span></param>
        <summary><span data-ttu-id="cc29f-133">使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 枚举成员初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc29f-133">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc29f-134">对于较不容易发生错误的可读代码，始终使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc29f-134">For readable code that is less prone to error, always use this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.ClassInterfaceType Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.ClassInterfaceType Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As ClassInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::ClassInterfaceType Value { System::Runtime::InteropServices::ClassInterfaceType get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Runtime.InteropServices.ClassInterfaceType" Usage="System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ClassInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc29f-135">获取 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值，该值描述应为该类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="cc29f-135">Gets the <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> value that describes which type of interface should be generated for the class.</span></span></summary>
        <value><span data-ttu-id="cc29f-136">描述应该为该类生成哪种类型的接口的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc29f-136">The <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> value that describes which type of interface should be generated for the class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>