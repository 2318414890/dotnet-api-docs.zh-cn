<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19ebaa812ddfc99efdb9e010f976732b73f8530f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51915782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="31f1a-101">指示数据应从被调用方封送回调用方。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31f1a-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f1a-102">可以将此特性应用于参数。</span><span class="sxs-lookup"><span data-stu-id="31f1a-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="31f1a-103"><xref:System.Runtime.InteropServices.OutAttribute>是可选的。</span><span class="sxs-lookup"><span data-stu-id="31f1a-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="31f1a-104">该属性支持 COM 互操作和平台调用仅。</span><span class="sxs-lookup"><span data-stu-id="31f1a-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="31f1a-105">在没有显式设置时，互操作封送处理程序假定规则基于参数类型、 是否通过引用或通过值传递的参数和类型是否可直接复制或非直接复制。</span><span class="sxs-lookup"><span data-stu-id="31f1a-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="31f1a-106">例如，<xref:System.Text.StringBuilder>类始终假定为输入/输出和一个按值传递的字符串数组被假定为中。</span><span class="sxs-lookup"><span data-stu-id="31f1a-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="31f1a-107">仅限扩展的行为永远不会是默认值封送处理行为的参数。</span><span class="sxs-lookup"><span data-stu-id="31f1a-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="31f1a-108">您可以将应用<xref:System.Runtime.InteropServices.OutAttribute>通过将更改为仅限扩展的行为，相当于使用的输入/输出行为的引用传递的值和引用类型到`out`C# 中的关键字。</span><span class="sxs-lookup"><span data-stu-id="31f1a-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="31f1a-109">例如，为只扩展，则可以更改值，默认情况下，仅在参数作为封送由传递的数组。</span><span class="sxs-lookup"><span data-stu-id="31f1a-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="31f1a-110">但是，行为不会始终提供预期的语义时的类型包括所有 blittable 元素或字段，因为互操作封送处理程序使用固定。</span><span class="sxs-lookup"><span data-stu-id="31f1a-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="31f1a-111">如果您不关心将数据传递到被调用方，对外封送处理可以提供更好的性能非 blittable 类型。</span><span class="sxs-lookup"><span data-stu-id="31f1a-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="31f1a-112">组合<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>是特别有用时应用于数组和格式化，非 blittable 类型。</span><span class="sxs-lookup"><span data-stu-id="31f1a-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="31f1a-113">调用方才能看到所做的更改被调用方对这些类型仅在应用这两个属性时。</span><span class="sxs-lookup"><span data-stu-id="31f1a-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="31f1a-114">由于这些类型需要在封送处理期间复制，可以使用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>以减少不必要的副本。</span><span class="sxs-lookup"><span data-stu-id="31f1a-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="31f1a-115">有关详细信息的效果<xref:System.Runtime.InteropServices.OutAttribute>封送处理行为，请参阅[方向属性](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)。</span><span class="sxs-lookup"><span data-stu-id="31f1a-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31f1a-116">下面的示例演示如何应用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>平台调用来调用作为参数传递一个数组的原型。</span><span class="sxs-lookup"><span data-stu-id="31f1a-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="31f1a-117">方向特性的组合允许调用方能够看见被调用方所做的更改。</span><span class="sxs-lookup"><span data-stu-id="31f1a-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="~/docs/framework/interop/blittable-and-non-blittable-types.md">
      <span data-ttu-id="31f1a-118">可直接复制到本机结构中的类型和非直接复制到本机结构中的类型</span>
      <span class="sxs-lookup">
        <span data-stu-id="31f1a-118">Blittable and Non-Blittable Types</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31f1a-119">初始化 <see cref="T:System.Runtime.InteropServices.OutAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f1a-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>