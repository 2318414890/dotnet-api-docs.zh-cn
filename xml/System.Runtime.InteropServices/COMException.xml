<Type Name="COMException" FullName="System.Runtime.InteropServices.COMException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1ebdd124805528cc6535036e5cb1afd5828facf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37470349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class COMException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit COMException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.COMException" />
  <TypeSignature Language="VB.NET" Value="Public Class COMException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class COMException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type COMException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="49b4d-101">当 COM 方法调用返回一个无法识别的 HRESULT 时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="49b4d-101">The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-102">公共语言运行时转换已知的 HRESULTs 到.NET Framework 异常，使 COM 对象向托管客户端返回有意义的错误信息。</span><span class="sxs-lookup"><span data-stu-id="49b4d-102">The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients.</span></span> <span data-ttu-id="49b4d-103">异常映射到 HRESULT 还可以通过将特定的 Hresult 返回到非托管客户端适用于另一个方向。</span><span class="sxs-lookup"><span data-stu-id="49b4d-103">The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients.</span></span> <span data-ttu-id="49b4d-104">有关映射的详细信息，请参阅[如何： 映射 Hresult 和异常](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-104">For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="49b4d-105">当运行时遇到不熟悉的 HRESULT (一个 HRESULT，缺少特定的相应异常) 时，则它引发的一个实例<xref:System.Runtime.InteropServices.COMException>类。</span><span class="sxs-lookup"><span data-stu-id="49b4d-105">When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class.</span></span> <span data-ttu-id="49b4d-106">此通用异常公开相同的成员的任何异常，并继承公共<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>属性，其中包含相应的 HRESULT 返回被调用方。</span><span class="sxs-lookup"><span data-stu-id="49b4d-106">This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee.</span></span> <span data-ttu-id="49b4d-107">如果一条错误消息可供运行时 (来自[IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx)接口或`Err`Visual Basic 中，或在某些情况下从操作系统的对象)，该消息返回给调用方。</span><span class="sxs-lookup"><span data-stu-id="49b4d-107">If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller.</span></span> <span data-ttu-id="49b4d-108">但是，如果 COM 组件开发人员未能包含错误信息，则运行时返回八位数的 HRESULT 代替消息字符串。</span><span class="sxs-lookup"><span data-stu-id="49b4d-108">However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string.</span></span> <span data-ttu-id="49b4d-109">拥有 HRESULT 使调用方确定泛型异常的原因。</span><span class="sxs-lookup"><span data-stu-id="49b4d-109">Having an HRESULT allows the caller to determine the cause of the generic exception.</span></span>  
  
## <a name="handling-a-comexception-exception"></a><span data-ttu-id="49b4d-110">处理 COMException 异常</span><span class="sxs-lookup"><span data-stu-id="49b4d-110">Handling a COMException exception</span></span>  
 <span data-ttu-id="49b4d-111">以下是一些注意事项进行故障排除<xref:System.Runtime.InteropServices.COMException>异常。</span><span class="sxs-lookup"><span data-stu-id="49b4d-111">The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.</span></span>  
  
 <span data-ttu-id="49b4d-112">检查<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>属性</span><span class="sxs-lookup"><span data-stu-id="49b4d-112">Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property</span></span>  
 <span data-ttu-id="49b4d-113">当运行时遇到不熟悉的 HRESULT，并将引发<xref:System.Runtime.InteropServices.COMException>异常，<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>属性包括错误消息，如果一条错误消息不可用，或八位数字 HRESULT 值。</span><span class="sxs-lookup"><span data-stu-id="49b4d-113">When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.</span></span>  <span data-ttu-id="49b4d-114">错误消息或 HRESULT 值可以帮助你确定异常的原因。</span><span class="sxs-lookup"><span data-stu-id="49b4d-114">The error message or the HRESULT value can help you determine the cause of the exception.</span></span>  
  
 <span data-ttu-id="49b4d-115">HRESULT 值的列表，请参阅[常见的 HRESULT 值](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-115">For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx).</span></span>  
  
 <span data-ttu-id="49b4d-116">后期绑定自变量和 Microsoft Office 对象</span><span class="sxs-lookup"><span data-stu-id="49b4d-116">Late-bound arguments and Microsoft Office objects</span></span>  
 <span data-ttu-id="49b4d-117">将后期绑定自变量传递到 Microsoft Office 对象的方法时<xref:System.Runtime.InteropServices.COMException>对象是 COM 对象时，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="49b4d-117">When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects.</span></span> <span data-ttu-id="49b4d-118">后期联编程序假定：此类方法调用涉及 `ByRef` 参数，并且所传递的属性具有 `set` 访问器。</span><span class="sxs-lookup"><span data-stu-id="49b4d-118">The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor.</span></span> <span data-ttu-id="49b4d-119">如果该属性不是，.NET Framework 生成<xref:System.MissingMethodException>异常 (与`CORE_E_MISSINGMETHOD`HRESULT)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-119">If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ).</span></span> <span data-ttu-id="49b4d-120">要处理此行为，请使用早期绑定对象或传递变量而不是对象的属性。</span><span class="sxs-lookup"><span data-stu-id="49b4d-120">To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.</span></span>  
  
 <span data-ttu-id="49b4d-121">Visual Studio 和承载进程</span><span class="sxs-lookup"><span data-stu-id="49b4d-121">Visual Studio and the hosting process</span></span>  
 <span data-ttu-id="49b4d-122">COM 使用 Visual Studio 之间进行通信并[承载进程](https://msdn.microsoft.com/library/ms185331.aspx)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-122">COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx).</span></span> <span data-ttu-id="49b4d-123">因为在代码运行，对的调用前使用它[CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx)导致引发此异常。</span><span class="sxs-lookup"><span data-stu-id="49b4d-123">Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) causes this exception to be thrown.</span></span>  
  
 <span data-ttu-id="49b4d-124">在某些情况下，以管理员身份运行 Visual Studio 可能会解决此问题。</span><span class="sxs-lookup"><span data-stu-id="49b4d-124">In some cases, running Visual Studio as Administrator may resolve the issue.</span></span> <span data-ttu-id="49b4d-125">此外可以[禁用托管进程](https://msdn.microsoft.com/library/ms185330.aspx)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-125">You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).</span></span>  
  
## <a name="throwing-a-comexception-exception"></a><span data-ttu-id="49b4d-126">引发 COMException 异常</span><span class="sxs-lookup"><span data-stu-id="49b4d-126">Throwing a COMException exception</span></span>  
 <span data-ttu-id="49b4d-127">尽管可以使用<xref:System.Runtime.InteropServices.COMException>类，以将特定的 Hresult 返回非托管客户端，引发特定的.NET Framework 异常优于使用一般异常。</span><span class="sxs-lookup"><span data-stu-id="49b4d-127">Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception.</span></span> <span data-ttu-id="49b4d-128">请考虑托管客户端，以及非托管客户端可以使用您的.NET Framework 对象，并向托管调用方引发 HRESULT 是不太理解性比引发异常。</span><span class="sxs-lookup"><span data-stu-id="49b4d-128">Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49b4d-129">初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-129">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49b4d-130">使用默认值初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-130">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-131"><xref:System.Runtime.InteropServices.COMException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="49b4d-131"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="49b4d-132">下表显示了此构造函数设置的属性的方式<xref:System.Exception>对象。</span><span class="sxs-lookup"><span data-stu-id="49b4d-132">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="49b4d-133">Property</span><span class="sxs-lookup"><span data-stu-id="49b4d-133">Property</span></span>|<span data-ttu-id="49b4d-134">“值”</span><span class="sxs-lookup"><span data-stu-id="49b4d-134">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="49b4d-135">`null`。</span><span class="sxs-lookup"><span data-stu-id="49b4d-135">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="49b4d-136">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="49b4d-136">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49b4d-137">指示异常原因的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-137">The message that indicates the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b4d-138">用指定的消息初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-138">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-139"><xref:System.Runtime.InteropServices.COMException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="49b4d-139"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="49b4d-140">下表显示了此构造函数设置的属性的方式<xref:System.Exception>对象。</span><span class="sxs-lookup"><span data-stu-id="49b4d-140">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="49b4d-141">Property</span><span class="sxs-lookup"><span data-stu-id="49b4d-141">Property</span></span>|<span data-ttu-id="49b4d-142">“值”</span><span class="sxs-lookup"><span data-stu-id="49b4d-142">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; COMException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="49b4d-143">承载序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-143">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="49b4d-144">提供有关源或目标的上下文信息的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-144">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that supplies the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b4d-145">从序列化数据初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-145">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class from serialization data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-146">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="49b4d-146">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="49b4d-147">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="49b4d-147">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="49b4d-148"><xref:System.Runtime.InteropServices.COMException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="49b4d-148"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49b4d-149">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-149">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ExternalException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * Exception -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49b4d-150">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-150">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="49b4d-151">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-151">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="49b4d-152">如果 <c>inner</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-152">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b4d-153">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-153">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-154">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="49b4d-154">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="49b4d-155"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="49b4d-155">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="49b4d-156">下表显示了此构造函数设置的属性的方式<xref:System.Exception>对象。</span><span class="sxs-lookup"><span data-stu-id="49b4d-156">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="49b4d-157">Property</span><span class="sxs-lookup"><span data-stu-id="49b4d-157">Property</span></span>|<span data-ttu-id="49b4d-158">“值”</span><span class="sxs-lookup"><span data-stu-id="49b4d-158">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="49b4d-159">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="49b4d-159">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="49b4d-160">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="49b4d-160">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * int -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49b4d-161">指示所发生异常的原因的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-161">The message that indicates the reason the exception occurred.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="49b4d-162">与该异常关联的错误代码 (HRESULT) 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-162">The error code (HRESULT) value associated with this exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49b4d-163">使用指定的消息和错误代码初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-163">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message and error code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b4d-164">这<xref:System.Runtime.InteropServices.COMException>构造函数设置并提供错误代码的基本消息。</span><span class="sxs-lookup"><span data-stu-id="49b4d-164">This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.</span></span>  
  
 <span data-ttu-id="49b4d-165"><xref:System.Runtime.InteropServices.COMException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="49b4d-165"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="49b4d-166">下表显示了此构造函数设置的属性的方式<xref:System.Exception>对象。</span><span class="sxs-lookup"><span data-stu-id="49b4d-166">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="49b4d-167">Property</span><span class="sxs-lookup"><span data-stu-id="49b4d-167">Property</span></span>|<span data-ttu-id="49b4d-168">“值”</span><span class="sxs-lookup"><span data-stu-id="49b4d-168">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cOMException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49b4d-169">将异常的内容转换为字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-169">Converts the contents of the exception to a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49b4d-170">包含异常的 <see cref="P:System.Exception.HResult" />、<see cref="P:System.Exception.Message" />、<see cref="P:System.Exception.InnerException" /> 和 <see cref="P:System.Exception.StackTrace" /> 属性的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="49b4d-170">A string containing the <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" />, and <see cref="P:System.Exception.StackTrace" /> properties of the exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.HResult" />
        <altmember cref="P:System.Exception.Message" />
        <altmember cref="P:System.Exception.InnerException" />
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
  </Members>
</Type>