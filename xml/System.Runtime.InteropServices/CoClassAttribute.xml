<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CoClassAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5058e03af00a381ad46b6287f5ae070233109c332.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058e03af00a381ad46b6287f5ae070233109c332</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>Specifies the class identifier of a coclass imported from a type library.</source>
          <target state="translated">指定从类型库导入的组件类的类标识符。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>You can apply this attribute to coclass interfaces, although the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> typically applies it for you when it imports a type library.</source>
          <target state="translated">尽管可以将应用此特性 coclass 接口， <bpt id="p1">[</bpt>Tlbimp.exe （类型库导入程序）<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>通常为您应用导入类型库时。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>When Tlbimp.exe imports a coclass, it produces a managed class and an interface to represent the coclass.</source>
          <target state="translated">当 Tlbimp.exe 导入组件类时，它会生成托管的类和接口来表示组件类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>The coclass interface has the same interface identifier (IID) as the default interface of the original coclass.</source>
          <target state="translated">组件类接口作为原始组件类的默认接口具有相同的接口标识符 (IID)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>The imported coclass interface also retains the name of the coclass.</source>
          <target state="translated">导入的组件类接口还将保留的组件类的名称。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>Tlbimp.exe appends the original coclass name with "class" to identify the imported class.</source>
          <target state="translated">Tlbimp.exe 追加"类"，以标识导入的类具有的原始组件类名称。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>You rarely apply this attribute.</source>
          <target state="translated">极少数情况下应用此特性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>However, if you plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a coclass interface for each coclass.</source>
          <target state="translated">但是，如果你打算编写生成密切模拟由 Tlbimp.exe 生成的元数据的元数据的源代码，则应创建每个 coclass 组件类接口。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>Use the name of the original coclass to name the coclass interface and derive it from the default interface.</source>
          <target state="translated">使用原始的组件类的名称进行命名组件类接口和派生的默认接口。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CoClassAttribute&gt;</ph>, you must also apply the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph> attributes to the coclass interface.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Runtime.InteropServices.CoClassAttribute&gt;</ph>，你还必须应用<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph>到组件类接口属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CoClassAttribute">
          <source>For additional information about how Tlbimp.exe imports interfaces and coclasses from a type library, see <bpt id="p1">[</bpt>Imported Type Conversion<ept id="p1">](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3(v=vs.100))</ept>.</source>
          <target state="translated">有关如何 Tlbimp.exe 导入接口和 coclass 从类型库的其他信息，请参阅<bpt id="p1">[</bpt>导入类型转换<ept id="p1">](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3(v=vs.100))</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains the class identifier of the original coclass.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，它包含原始 coclass 的类标识符。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)">
          <source>Initializes new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.CoClassAttribute" /&gt;</ph> with the class identifier of the original coclass.</source>
          <target state="translated">用原始 coclass 的类标识符初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.CoClassAttribute" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
          <source>Gets the class identifier of the original coclass.</source>
          <target state="translated">获取原始 coclass 的类标识符。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.CoClassAttribute.CoClass">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> containing the class identifier of the original coclass.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，它包含原始 coclass 的类标识符。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>