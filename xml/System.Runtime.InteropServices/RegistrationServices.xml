<Type Name="RegistrationServices" FullName="System.Runtime.InteropServices.RegistrationServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c4a3387b479195534d60b638470c2a154b71f8e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistrationServices : System.Runtime.InteropServices.IRegistrationServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegistrationServices extends System.Object implements class System.Runtime.InteropServices.IRegistrationServices" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.RegistrationServices" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistrationServices&#xA;Implements IRegistrationServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationServices : System::Runtime::InteropServices::IRegistrationServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.IRegistrationServices</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("475e398f-8afa-43a7-a3be-f4ef8d6787c9")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供一组用于注册和注销托管程序集以供从 COM 使用的服务。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当程序集内的对象正在使用的 COM 客户端时，需要注册。 [Regasm.exe （程序集注册工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)和[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]使用公开的方法<xref:System.Runtime.InteropServices.RegistrationServices>类来添加或移除的托管程序集的 COM 启用注册表项。  
  
 可以使用以下方法以帮助你准备注册文件：  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A>  
  
 虽然这些方法中收集的信息帮助要在注册文件中使用，但它们无法实际生成的注册文件。 相反，你可以使用[Regasm.exe （程序集注册工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)工具`/regfile`选项以执行此任务。 <xref:System.Runtime.InteropServices.RegistrationServices> 方法不能导出并注册类型库。 若要导出并注册类型库时，可以使用[Regasm.exe （程序集注册工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)工具和[Tlbexp.exe （类型库导出程序）](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)工具。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.InteropServices.RegistrationServices" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedCategoryGuid">
      <MemberSignature Language="C#" Value="public virtual Guid GetManagedCategoryGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetManagedCategoryGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedCategoryGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Guid GetManagedCategoryGuid();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回包含托管类的 COM 类别的 GUID。</summary>
        <returns>包含托管类的 COM 类别的 GUID。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgIdForType">
      <MemberSignature Language="C#" Value="public virtual string GetProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetProgIdForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">与正被请求的 ProgID 相对应的类型。</param>
        <summary>检索指定类型的 COM ProgID。</summary>
        <returns>指定类型的 ProgID。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrableTypesInAssembly">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRegistrableTypesInAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRegistrableTypesInAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">要搜索类的程序集。</param>
        <summary>在通过调用 <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" /> 注册的程序集中检索类的列表。</summary>
        <returns>
          <see cref="T:System.Type" /> 数组，它包含 <paramref name="assembly" /> 中的类的列表。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> 参数为 <see langword="null" />。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public virtual bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterAssembly(class System.Reflection.Assembly assembly, valuetype System.Runtime.InteropServices.AssemblyRegistrationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RegisterAssembly(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::AssemblyRegistrationFlags flags);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.AssemblyRegistrationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">要注册的程序集。</param>
        <param name="flags">
          <see cref="T:System.Runtime.InteropServices.AssemblyRegistrationFlags" /> 值，该值指示在注册<c>程序集</c>时使用的任何特殊设置。</param>
        <summary>注册托管程序集中的类以便能从 COM 创建。</summary>
        <returns>
          如果 <paramref name="assembly" /> 包含已成功注册的类型，则为 <see langword="true" />；否则，如果程序集不包含符合条件的类型，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `RegisterAssembly` 在指定的程序集添加相应的注册表项的类型。 此方法还会调用程序集中找到的任何注册函数。  
  
 使用<xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType>来获取程序集。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="assembly" /> 的全名为 <see langword="null" />。  
  
 或  
  
 使用 <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> 标记的方法不是 <see langword="static" /> 方法。  
  
 或  
  
 在层次结构的给定级别有多个用 <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> 标记的方法。  
  
 或  
  
 用 <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> 标记的方法的签名无效。</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">一个用户定义的自定义注册函数（使用 <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> 特性标记）引发异常。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterTypeForComClients">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>向 COM 注册指定的类型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请注意，使用平台调用来调用非托管`CoRegisterClassObject`和`CoDisconnectObject`不支持注册和注销的 COM 对象的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual void RegisterTypeForComClients (Type type, ref Guid g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterTypeForComClients(class System.Type type, valuetype System.Guid&amp; g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterTypeForComClients(Type ^ type, Guid % g);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="g" Type="System.Guid&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="type">要注册以供从 COM 使用的 <see cref="T:System.Type" />。</param>
        <param name="g">用于注册指定类型的 <see cref="T:System.Guid" />。</param>
        <summary>使用指定的 GUID 向 COM 注册指定的类型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法等效于调用`CoRegisterClassObject`COM 中 <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A>方法不是原子的并可能导致不可预知的结果时在多线程的上下文中使用。  
  
 在版本 2.0 及更高版本中，使用<xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>方法来注销 COM 中的类型  
  
 请注意，使用平台调用来调用非托管`CoRegisterClassObject`和`CoDisconnectObject`不支持注册和注销的 COM 对象的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">无法创建 <paramref name="type" /> 参数。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual int RegisterTypeForComClients (Type type, System.Runtime.InteropServices.RegistrationClassContext classContext, System.Runtime.InteropServices.RegistrationConnectionType flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RegisterTypeForComClients(class System.Type type, valuetype System.Runtime.InteropServices.RegistrationClassContext classContext, valuetype System.Runtime.InteropServices.RegistrationConnectionType flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int RegisterTypeForComClients(Type ^ type, System::Runtime::InteropServices::RegistrationClassContext classContext, System::Runtime::InteropServices::RegistrationConnectionType flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="classContext" Type="System.Runtime.InteropServices.RegistrationClassContext" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.RegistrationConnectionType" />
      </Parameters>
      <Docs>
        <param name="type">要进行注册以供从 COM 使用的 <see cref="T:System.Type" /> 对象。</param>
        <param name="classContext">
          <see cref="T:System.Runtime.InteropServices.RegistrationClassContext" /> 值之一，指示将在其中运行可执行代码的上下文。</param>
        <param name="flags">
          <see cref="T:System.Runtime.InteropServices.RegistrationConnectionType" /> 值之一，指定如何建立到类对象的连接。</param>
        <summary>使用指定的执行上下文和连接类型向 COM 注册指定的类型。</summary>
        <returns>表示一个 Cookie 值的整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法等效于调用`CoRegisterClassObject`COM 中 <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A>方法不是原子的并可能导致不可预知的结果时在多线程的上下文中使用。  
  
 在.NET Framework 2.0 及更高版本中，使用<xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>方法来注销 COM 中的类型  
  
 请注意，使用平台调用来调用非托管`CoRegisterClassObject`和`CoDisconnectObject`不支持注册和注销的 COM 对象的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">无法创建 <paramref name="type" /> 参数。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="TypeRepresentsComType">
      <MemberSignature Language="C#" Value="public virtual bool TypeRepresentsComType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TypeRepresentsComType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TypeRepresentsComType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要检查其是否为 COM 类型的类型。</param>
        <summary>指示类型是否用 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> 进行了标记，或者派生带有 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> 标记的类型并且与父级具有相同的 GUID。</summary>
        <returns>
          如果类型带有 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> 标记，或者派生自带有 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> 标记的类型并与父级具有相同的 GUID，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeRequiresRegistration">
      <MemberSignature Language="C#" Value="public virtual bool TypeRequiresRegistration (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TypeRequiresRegistration(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TypeRequiresRegistration(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要检查用于 COM 注册要求的类型。</param>
        <summary>确定指定的类型是否需要注册。</summary>
        <returns>
          如果该类型必须注册以供从 COM 使用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAssembly">
      <MemberSignature Language="C#" Value="public virtual bool UnregisterAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnregisterAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool UnregisterAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">要注销的程序集。</param>
        <summary>注销托管程序集中的类。</summary>
        <returns>
          如果 <paramref name="assembly" /> 包含成功注销的类型，则为 <see langword="true" />；否则，如果程序集不包含符合条件的类型。则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `UnregisterAssembly` 删除中通过以前添加的指定程序集的类型的注册表项<xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>。 此方法还会调用程序集中找到的任何注销函数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="assembly" /> 的全名为 <see langword="null" />。  
  
 或  
  
 使用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法不是 <see langword="static" /> 方法。  
  
 或  
  
 在层次结构的给定级别有多个用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法。  
  
 或  
  
 用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法的签名无效。</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">一个用户定义的自定义注销函数（使用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 特性标记）引发异常。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual void UnregisterTypeForComClients (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterTypeForComClients(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterTypeForComClients (cookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterTypeForComClients(int cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">对 <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" /> 方法重载的先前调用所返回的 Cookie 值。</param>
        <summary>移除对使用 <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" /> 方法注册的类型的引用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请注意，使用平台调用来调用非托管`CoRegisterClassObject`和`CoDisconnectObject`方法来注册和注销 COM 对象不受支持。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任直接调用方。 此成员不能由部分受信任或不透明的代码。</permission>
      </Docs>
    </Member>
  </Members>
</Type>