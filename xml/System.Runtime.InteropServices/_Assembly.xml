<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="_Assembly.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac539657d58b49ae78bfde43ae0d91e335f0dca15e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39657d58b49ae78bfde43ae0d91e335f0dca15e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Exposes the public members of the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class to unmanaged code.</source>
          <target state="translated">向非托管代码公开 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 类的公共成员。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此接口是用于访问到托管类，从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This interface preserves the vtable order of the <ph id="ph1">&lt;xref:System.Reflection.Assembly?displayProperty=nameWithType&gt;</ph> class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">此接口可保留的 vtable 顺序<ph id="ph1">&lt;xref:System.Reflection.Assembly?displayProperty=nameWithType&gt;</ph>类可以访问由非托管 COM 对象的成员。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>The location of the assembly as specified originally.</source>
          <target state="translated">程序集的位置（按照最初的指定）。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType&gt;</ph> property gets the location of the assembly as specified originally, for example, in an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType&gt;</ph>属性获取按照最初的指定，例如，在程序集的位置<ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.CreateInstance" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.CreateInstance" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> methods locate a type from this assembly and create an instance of it using the system activator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph>方法找到从此程序集中的类型，并创建使用系统激活器的实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">要查找类型的 <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the type, with culture, arguments, binder, and activation attributes set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> set to Public or Instance, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">表示该类型的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的实例，其区域性、参数、活页夹和激活属性设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，并且 <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 设置为 Public 或 Instance，或设置为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>（如果没有找到 <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph>方法查找从此程序集中指定的类型，并创建使用系统激活器，使用区分大小写的搜索的实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">要查找类型的 <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则忽略类型名的大小写；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the type, with culture, arguments, binder, and activation attributes set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> set to Public or Instance, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">表示该类型的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的实例，其区域性、参数、活页夹和激活属性设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，并且 <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 设置为 Public 或 Instance，或设置为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>（如果没有找到 <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph>方法查找从此程序集中指定的类型，并创建使用可选的区分大小写搜索使用系统激活器，它的实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">要查找类型的 <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则忽略类型名的大小写；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A bitmask that affects how the search is conducted.</source>
          <target state="translated">影响进行搜索的方式的位掩码。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The value is a combination of bit flags from <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>.</source>
          <target state="translated">此值是 <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 中的位标志的组合。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> objects via reflection.</source>
          <target state="translated">一个对象，它启用绑定、对参数类型的强制、对成员的调用，以及通过反射对 <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> 对象的检索。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则使用默认活页夹。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing the arguments to be passed to the constructor.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的数组，其包含要传递给构造函数的参数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</source>
          <target state="translated">此自变量数组在数量、顺序和类型方面必须与要调用的构造函数的参数匹配。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If the default constructor is desired, <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> must be an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果需要默认的构造函数，则 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 必须是空数组或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An instance of <ph id="ph1">&lt;see langword="CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">用于控制类型强制的 <ph id="ph1">&lt;see langword="CultureInfo" /&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see langword="CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果这是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则使用当前线程的 <ph id="ph2">&lt;see langword="CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>(This is necessary to convert a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, for example, since 1000 is represented differently by different cultures.)</source>
          <target state="translated">（例如，这对于将表示 1000 的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 转换为 <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 值是必需的，因为不同的区域性以不同的方式表示 1000。）</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing one or more activation attributes that can participate in the activation.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的数组，其包含一个或多个可以参与激活的激活属性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An example of an activation attribute is:</source>
          <target state="translated">激活属性的一个示例是：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>URLAttribute(<ph id="ph1">http://hostname/appname/objectURI)</ph></source>
          <target state="translated">URLAttribute(<ph id="ph1">http://hostname/appname/objectURI)</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An instance of <ph id="ph1">&lt;see langword="Object" /&gt;</ph> representing the type and matching the specified criteria, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">表示此类型且匹配指定条件的 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的实例；如果没有找到 <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph>；则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph>方法查找从此程序集中指定的类型，并创建它的实例，使用系统激活器，使用可选的区分大小写搜索并具有指定的区域性、 参数和绑定及激活特性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EntryPoint" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EntryPoint" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that represents the entry point of this assembly.</source>
          <target state="translated">表示此程序集入口点的 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>If no entry point is found (for example, the assembly is a DLL), <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">如果没有找到入口点（例如，此程序集是一个 DLL），则返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.EntryPoint%2A&gt;</ph> property gets the entry point of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.EntryPoint%2A&gt;</ph>属性获取此程序集的入口点。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">要与当前的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 进行比较的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 等于当前的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>，则为 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method determines whether the specified <ph id="ph2">&lt;xref:System.Object&gt;</ph> is equal to the current <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>方法确定是否指定<ph id="ph2">&lt;xref:System.Object&gt;</ph>等同于当前<ph id="ph3">&lt;xref:System.Object&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EscapedCodeBase" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EscapedCodeBase" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>A Uniform Resource Identifier (URI) with escape characters.</source>
          <target state="translated">含有转义符的统一资源标识符 (URI)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.EscapedCodeBase%2A&gt;</ph> property gets the URI, including escape characters, that represents the codebase.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.EscapedCodeBase%2A&gt;</ph>属性获取 URI，包括转义符，表示基本代码。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Evidence" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Evidence" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> object for this assembly.</source>
          <target state="translated">此程序集的 <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property gets the evidence for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph>属性获取此程序集的证据。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.FullName" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.FullName" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>The display name of the assembly.</source>
          <target state="translated">程序集的显示名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A&gt;</ph> property gets the display name of the assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A&gt;</ph>属性获取程序集的显示名称。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> methods get the custom attributes for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph>方法获取此程序集的自定义属性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>This argument is ignored for objects of type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 类型的对象，将忽略此参数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing the custom attributes for this assembly.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的数组包含此程序集的自定义属性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> method gets all the custom attributes for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph>方法获取此程序集的所有自定义属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for which the custom attributes are to be returned.</source>
          <target state="translated">要为其返回自定义属性的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This argument is ignored for objects of type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 类型的对象，将忽略此参数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the custom attributes for this assembly as specified by <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的数组，其包含由 <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> 指定的此程序集的自定义属性。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> method gets all the custom attributes for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph>方法获取此程序集的所有自定义属性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetExportedTypes" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetExportedTypes" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects that represent the types defined in this assembly that are visible outside the assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象的数组，这些对象表示此程序集中定义的在程序集外可见的类型。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetExportedTypes%2A&gt;</ph> property gets the exported types defined in this assembly that are visible outside the assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetExportedTypes%2A&gt;</ph>属性获取此程序集中定义的导出的类型，该程序集外可见。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>The name of the specified file.</source>
          <target state="translated">指定文件的名称。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>Do not include the path to the file.</source>
          <target state="translated">不包括文件的路径。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFile(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFile(System.String)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> for the specified file, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the file is not found.</source>
          <target state="translated">为指定文件的 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>，如果找不到文件，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFile%2A&gt;</ph> method gets a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> for the specified file in the file table of the manifest of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFile%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>此程序集清单的文件表中指定的文件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetFiles" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetFiles" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> methods get the files in the file table of an assembly manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph>方法获取程序集清单的文件表中的文件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> method gets the files in the file table of an assembly manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph>方法获取程序集清单的文件表中的文件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 则包括资源模块；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph>方法获取程序集清单，指定是否包括资源模块的文件表中的文件。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的哈希代码。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method serves as a hash function for a particular type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph>方法用作特定类型的哈希函数。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> 适用于哈希算法和哈希表之类的数据结构。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> methods get all the loaded modules that are part of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph>方法获取属于此程序集的所有加载的模块。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>An array of modules.</source>
          <target state="translated">模块的数组。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> method gets all the loaded modules that are part of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph>方法获取属于此程序集的所有加载的模块。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 则包括资源模块；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>An array of modules.</source>
          <target state="translated">模块的数组。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph>方法获取此程序集，指定是否包括资源模块的一部分的所有加载的模块。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>The case-sensitive name of the resource.</source>
          <target state="translated">区分大小写的资源名称。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ManifestResourceInfo" /&gt;</ph> object populated with information about the resource's topology, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the resource is not found.</source>
          <target state="translated">使用关于资源拓扑的信息填充的 <ph id="ph1">&lt;see cref="T:System.Reflection.ManifestResourceInfo" /&gt;</ph> 对象；如果为找到资源，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceInfo%2A&gt;</ph> method returns information about how the given resource has been persisted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceInfo%2A&gt;</ph>方法返回关于给定的资源如何保持的信息。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>An array of type <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing the names of all the resources.</source>
          <target state="translated">包含所有资源的名称的类型 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceNames%2A&gt;</ph> method returns the names of all the resources in this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceNames%2A&gt;</ph>方法在此程序集中返回的所有资源的名称。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> methods load the specified manifest resource from this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph>方法从此程序集加载指定的清单资源。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>The case-sensitive name of the manifest resource being requested.</source>
          <target state="translated">所请求的清单资源的名称（区分大小写）。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing this manifest resource.</source>
          <target state="translated">表示此清单资源的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> method loads the specified manifest resource from this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph>方法从此程序集加载指定的清单资源。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The type whose namespace is used to scope the manifest resource name.</source>
          <target state="translated">其命名空间用于确定清单资源名的范围的类型。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The case-sensitive name of the manifest resource being requested.</source>
          <target state="translated">所请求的清单资源的名称（区分大小写）。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing this manifest resource.</source>
          <target state="translated">表示此清单资源的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph>方法加载指定清单资源，按指定的类型，从此程序集中的命名空间划分作用域。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The name of the module being requested.</source>
          <target state="translated">请求的模块的名称。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModule(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModule(System.String)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The module being requested, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the module is not found.</source>
          <target state="translated">所请求的模块，若未找到该模块则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModule%2A&gt;</ph> method gets the specified module in this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModule%2A&gt;</ph>方法获取此程序集中的指定的模块。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetModules" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetModules" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> methods get all the modules that are part of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph>方法获取属于此程序集的所有模块。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>An array of modules.</source>
          <target state="translated">模块的数组。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> method gets all the modules that are part of this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph>方法获取属于此程序集的所有模块。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 则包括资源模块；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>An array of modules.</source>
          <target state="translated">模块的数组。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph>方法获取此程序集，指定是否包括资源模块的一部分的所有模块。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetName" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetName" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> methods get an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>此程序集。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> for this assembly.</source>
          <target state="translated">此程序集的 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> method gets an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>此程序集。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> to the location of the assembly after it was shadow copied; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to set <ph id="ph4">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> to the original location.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则将 <ph id="ph2">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> 设置为程序集被影像复制后的位置；如果为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，则将 <ph id="ph4">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> 设置为原位置。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> for this assembly.</source>
          <target state="translated">此程序集的 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> method gets an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly, setting the codebase as specified by the <ph id="ph3">`copiedName`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>此程序集，指定的那样设置基本代码<ph id="ph3">`copiedName`</ph>参数。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to be populated with serialization information.</source>
          <target state="translated">用序列化信息填充的对象。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination context of the serialization.</source>
          <target state="translated">序列化的目标上下文。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetObjectData%2A&gt;</ph> method gets serialization information with all of the data needed to reinstantiate this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetObjectData%2A&gt;</ph>方法获取序列化信息，其中所有包含重新实例化此程序集所需的数据。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> containing all the assemblies referenced by this assembly.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> 的数组，其包含此程序集引用的所有程序集。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objects for all the assemblies referenced by this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>此程序集引用的所有程序集的对象。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> methods get the satellite assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph>方法获取的附属程序集。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The specified culture.</source>
          <target state="translated">指定的区域性。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The specified satellite assembly.</source>
          <target state="translated">指定的附属程序集。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> method gets the satellite assembly for the specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph>方法中获取指定区域性的附属程序集。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The specified culture.</source>
          <target state="translated">指定的区域性。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The version of the satellite assembly.</source>
          <target state="translated">附属程序集的版本。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The specified satellite assembly.</source>
          <target state="translated">指定的附属程序集。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> method gets the specified version of the satellite assembly for the specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph>方法获取指定区域性的附属程序集的指定的版本。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetType" /&gt;</ph> methods.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetType" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> methods get the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>表示指定的类型的对象。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.GetType" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Object.GetType" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method gets the type of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph>方法获取当前实例的类型。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>The full name of the type.</source>
          <target state="translated">类型的全名。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the class is not found.</source>
          <target state="translated">表示指定类的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象，如果未找到该类，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>具有指定名称的程序集实例中的对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>The full name of the type.</source>
          <target state="translated">类型的全名。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception if the type is not found; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to return <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在找不到该类型时引发异常；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 则表示返回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class.</source>
          <target state="translated">表示指定类的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>对象具有指定名称的程序集实例中和 （可选） 如果找不到类型时引发异常。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The full name of the type.</source>
          <target state="translated">类型的全名。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception if the type is not found; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to return <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在找不到该类型时引发异常；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 则表示返回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则忽略类型名的大小写；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /&gt;</ph> 方法的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class.</source>
          <target state="translated">表示指定类的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph>方法获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>具有指定名称的程序集实例，带有忽略大小写，和找不到类型时引发异常的选项中的对象。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetTypes" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetTypes" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> containing objects for all the types defined in this assembly.</source>
          <target state="translated">类型 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的数组，其包含此程序集中定义的所有类型的对象。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;</ph> method gets the types defined in this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;</ph>方法获取此程序集中定义的类型。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assembly was loaded from the global assembly cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果程序集是从全局程序集缓存加载的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GlobalAssemblyCache%2A&gt;</ph> property gets a value indicating whether the assembly was loaded from the global assembly cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.GlobalAssemblyCache%2A&gt;</ph>属性获取一个值，该值指示程序集是否从全局程序集缓存加载。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the custom attribute to be checked for this assembly.</source>
          <target state="translated">要为此程序集检查的自定义属性的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>This argument is ignored for objects of this type.</source>
          <target state="translated">对于该类型的对象，将忽略此自变量。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute identified by the specified <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is defined; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果定义了由指定的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 标识的自定义属性，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.IsDefined%2A&gt;</ph> method indicates whether a custom attribute identified by the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> is defined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.IsDefined%2A&gt;</ph>方法指示由指定是否标识的自定义特性<ph id="ph2">&lt;xref:System.Type&gt;</ph>定义。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.LoadModule" /&gt;</ph> members.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.LoadModule" /&gt;</ph> 成员的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> members load the module internal to this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph>成员加载此程序集的内部模块。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Name of the module.</source>
          <target state="translated">模块的名称。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Must correspond to a file name in this assembly's manifest.</source>
          <target state="translated">必须与此程序集清单中的文件名对应。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>A byte array that is a COFF-based image containing an emitted module, or a resource.</source>
          <target state="translated">基于 COFF 映像的字节数组，该数组包含发送的模块或资源。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>The loaded Module.</source>
          <target state="translated">加载的模块。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph>方法将此程序集的内部模块加载带有基于通用对象文件格式 COFF 的图像包含已发出的模块或资源文件。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Name of the module.</source>
          <target state="translated">模块的名称。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Must correspond to a file name in this assembly's manifest.</source>
          <target state="translated">必须与此程序集清单中的文件名对应。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>A byte array that is a COFF-based image containing an emitted module, or a resource.</source>
          <target state="translated">基于 COFF 映像的字节数组，该数组包含发送的模块或资源。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>A byte array containing the raw bytes representing the symbols for the module.</source>
          <target state="translated">一个字节数组，包含表示模块符号的原始字节。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Must be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this is a resource file.</source>
          <target state="translated">如果这是一个资源文件，则必须为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The loaded module.</source>
          <target state="translated">加载的模块。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph>方法将此程序集的内部模块加载带有基于通用对象文件格式 COFF 的图像包含已发出的模块或资源文件。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The raw bytes representing the symbols for the module are also loaded.</source>
          <target state="translated">还加载表示此模块的符号的原始字节。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Location" /&gt;</ph> property.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Location" /&gt;</ph> 属性的与版本无关的访问。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>The location of the loaded file that contains the manifest.</source>
          <target state="translated">包含清单的已加载文件的位置。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</source>
          <target state="translated">如果已加载文件使用了影像复制，则该位置是该文件被影像复制后的位置。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>If the assembly is loaded from a byte array, such as when using the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /&gt;</ph> method overload, the value returned is an empty string ("").</source>
          <target state="translated">如果从字节数组加载程序集（如使用 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /&gt;</ph> 方法重载时），则返回值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.Location%2A&gt;</ph> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.Location%2A&gt;</ph>属性获取的路径或通用命名约定 (UNC) 包含清单的已加载文件的位置。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> event.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> 事件的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.ModuleResolve&gt;</ph> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.ModuleResolve&gt;</ph>事件发生时公共语言运行时类加载程序无法解析对程序集通过正常方法的内部模块的引用。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.ToString" /&gt;</ph> method.</source>
          <target state="translated">为 COM 对象提供对 <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.ToString" /&gt;</ph> 方法的版本无关的访问。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</source>
          <target state="translated">程序集的全名；如果不能确定程序集的全名，则为类名。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此方法用于访问托管类从非托管代码，不应从托管代码调用。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.ToString%2A&gt;</ph> method returns the full name of the assembly, also known as the display name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Assembly.ToString%2A&gt;</ph>方法返回的程序集，也称为显示名称的完整名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>