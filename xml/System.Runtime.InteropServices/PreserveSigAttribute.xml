<Type Name="PreserveSigAttribute" FullName="System.Runtime.InteropServices.PreserveSigAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31b2d1f618ccf41eda5ef53f11de1f41b7a09334" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PreserveSigAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PreserveSigAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.PreserveSigAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PreserveSigAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PreserveSigAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type PreserveSigAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指示应取消在 COM 互操作调用期间发生的 HRESULT 或 <see langword="retval" /> 签名转换。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将此特性应用于方法。  
  
 默认情况下[Tlbexp.exe （类型库导出程序）](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)可确保转换返回 S_OK HRESULT 的调用以便 [out，retval] 参数用作函数的返回值。 将被放弃，则为 S_OK HRESULT。 有关 Hresult，则为 S_OK 以外，在运行时引发异常，并放弃 [out，retval] 参数。 当应用<xref:System.Runtime.InteropServices.PreserveSigAttribute>与托管的方法签名，特性化方法的托管和非托管签名都完全相同。  
  
 如果该成员返回多个成功的 HRESULT 值，并且你想要检测的不同值，保留原始的方法签名是必需的。 由于大多数 COM 成员返回一个 HRESULT，通过应用<xref:System.Runtime.InteropServices.PreserveSigAttribute>，可以检索一个整数，表示成功或失败的 HRESULT。 Tlbexp.exe 将保留任何 [out，retavl] 与托管签名中的 out 参数的参数。  
  
 [Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)同样适用此属性，则它将属性应用到的调度接口导入类型库时。  
  
> [!NOTE]
>  返回类型的<xref:System.Runtime.InteropServices.UnmanagedType.Currency>， <xref:System.Guid>，并<xref:System.Object>不受<xref:System.Runtime.InteropServices.PreserveSigAttribute>类时执行从 COM 交互操作向托管代码和托管的代码被标记为与<xref:System.Runtime.InteropServices.PreserveSigAttribute>类。  当你尝试使用与这些返回类型之一<xref:System.Runtime.InteropServices.PreserveSigAttribute>类在这些条件，期间<xref:System.TypeLoadException>引发。  
  
   
  
## Examples  
 下面的示例演示如何 Tlbexp.exe 将转换的 C# 方法而无需<xref:System.Runtime.InteropServices.PreserveSigAttribute>到 COM 类型库导出程序集时。  
  
 托管的签名：  
  
```  
int DoSomething (long l);  
```  
  
 非托管的签名：  
  
```  
HRESULT DoSomething ([in] long l, [out, retval] int * i);  
```  
  
 当应用<xref:System.Runtime.InteropServices.PreserveSigAttribute>到相同的 C# 方法和导出程序集，该方法转换不同于前面的示例。 请注意，Tlbexp.exe 将删除相应的 HRESULT 和 [out，retval] 参数修饰符。  
  
 托管的签名：  
  
```  
[PreserveSig] int DoSomething (long l);  
```  
  
 非托管的签名：  
  
```  
int DoSomething ([in] long l);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserveSigAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserveSigAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>