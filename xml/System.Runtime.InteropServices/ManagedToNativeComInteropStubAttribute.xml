<Type Name="ManagedToNativeComInteropStubAttribute" FullName="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c43f21310b8a2ad71fde9b4218d5c67801eec44" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagedToNativeComInteropStubAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagedToNativeComInteropStubAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagedToNativeComInteropStubAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagedToNativeComInteropStubAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为用户在托管与 COM 互操作方案中自定义互操作存根提供支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性，互操作的开发人员有关于封送处理的知识和互操作调用来执行以下的内部工作情况：  
  
-   在生成时，而不是运行时充分利用自定义互操作的存根。  
  
-   调试自定义互操作的存根。  
  
-   提供在存根中运行时不提供封送处理功能。  
  
-   提供特定于用户的方法调度功能。  
  
 指定托管到本机 COM 互操作的相应存根 （stub） 方法的接口中的方法上应用该特性。  
  
 如果在运行时遇到此属性时，公共语言运行时不动态生成互操作的存根。 相反，它会调用已在生成时创建的自定义存根。  
  
 <xref:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute>属性具有以下特征：  
  
-   特性可用于仅在从标记的接口的方法上`[ComImport]`。 如果该属性将应用于非接口类型，则忽略由运行时它。  
  
-   该属性上的接口中相同的方法可以使用仅一次。 如果不止一次使用它，编译器将生成重复的属性错误。  
  
-   该属性不是可继承基接口中。 该特性，必须显式分配的派生的接口。  
  
-   包含特性化的方法的程序集还必须包含自定义的存根 （stub）。  
  
 重载存根 （stub） 方法都是有效的。 虽然你指定的类型和存根 （stub） 方法的名称，运行时将发现相应的存根。 这是通过检查接口方法上的所有自变量，然后再执行完整签名匹配使用显式`this`指针。  
  
 还有可能接口共享相同的存根 （stub） 方法; 中的多个方法但是，你应小心使用共享存根 （stub） 时。  
  
> [!NOTE]
>  存根 （stub） 方法必须是静态的。  
  
 无法通知运行时，必须在生成时，而不是用下面的 C# 代码的运行时使用自定义互操作存根 （stub）：  
  
```  
[ComImport]  
interface IMyInterface  
{  
    [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),  
              "ForwardTestStub")]  
    void GetString (string arg);  
}  
```  
  
 然后可以使用下面的代码来声明相应的存根 （stub） 方法：  
  
```  
class TestStubClass  
{  
    internal static void ForwardTestStub(IMyInterface thisObject,  
             string arg) {…}  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedToNativeComInteropStubAttribute (Type classType, string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type classType, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classType As Type, methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagedToNativeComInteropStubAttribute(Type ^ classType, System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classType">包含所需的存根方法的类。</param>
        <param name="methodName">存根方法的名称。</param>
        <summary>使用指定的类类型和方法名称初始化 <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          找不到 <paramref name="methodName" />。  
  
 或  
  
 该方法不是静态或非泛型方法。  
  
 或  
  
 该方法的参数列表与存根的预期参数列表不匹配。</exception>
        <exception cref="T:System.MethodAccessException">由于存根方法具有私有或受保护的可访问性，或由于安全问题，包含托管互操作方法的接口无权访问存根方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public Type ClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClassType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ClassType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含所需存根方法的类。</summary>
        <value>包含自定义的互操作存根的类。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取存根方法的名称。</summary>
        <value>自定义的互操作存根的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>