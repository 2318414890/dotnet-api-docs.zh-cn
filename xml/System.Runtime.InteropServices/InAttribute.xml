<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd59d676764c326116534583b241a05ad46f1172" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5c614-101">指示数据应从调用方封送到被调用方，而不是从被调用方封送回调用方。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c614-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c614-102">可以将此属性应用于参数。</span><span class="sxs-lookup"><span data-stu-id="5c614-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="5c614-103"><xref:System.Runtime.InteropServices.InAttribute>是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c614-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="5c614-104">COM 互操作支持的属性和平台调用才。</span><span class="sxs-lookup"><span data-stu-id="5c614-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="5c614-105">在没有显式设置的情况下，互操作封送处理程序假定规则基于参数类型、 是否通过引用或值，通过传递的参数和类型是否是本机结构中或非本机结构。</span><span class="sxs-lookup"><span data-stu-id="5c614-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="5c614-106">例如，<xref:System.Text.StringBuilder>类始终被假定为 In/Out 和假定一个通过值传递的字符串数组中。</span><span class="sxs-lookup"><span data-stu-id="5c614-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="5c614-107">不能将应用<xref:System.Runtime.InteropServices.InAttribute>到与 C# 修改过的参数-风格`out`关键字。</span><span class="sxs-lookup"><span data-stu-id="5c614-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="5c614-108">若要避免混淆以下`In`在与 Visual Basic 中的关键字<xref:System.Runtime.InteropServices.InAttribute>，减去属性，使用`<[In]>`窗体具有属性括起。</span><span class="sxs-lookup"><span data-stu-id="5c614-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="5c614-109">组合<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>是特别有用时应用于数组和格式化，非通用类型。</span><span class="sxs-lookup"><span data-stu-id="5c614-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="5c614-110">调用方查看被调用方对这些类型仅在应用这两个属性时所做的更改。</span><span class="sxs-lookup"><span data-stu-id="5c614-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="5c614-111">由于这些类型需要复制封送处理期间，你可以使用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>以减少不必要的副本。</span><span class="sxs-lookup"><span data-stu-id="5c614-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="5c614-112">有关详细信息的效果<xref:System.Runtime.InteropServices.InAttribute>封送处理行为，请参阅[方向特性](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)。</span><span class="sxs-lookup"><span data-stu-id="5c614-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c614-113">下面的示例演示如何将应用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>平台调用来调用作为参数传递一个数组的原型。</span><span class="sxs-lookup"><span data-stu-id="5c614-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="5c614-114">方向特性的组合允许调用方以查看被调用方所做的更改。</span><span class="sxs-lookup"><span data-stu-id="5c614-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c614-115">初始化 <see cref="T:System.Runtime.InteropServices.InAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c614-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>