<Type Name="ComEventInterfaceAttribute" FullName="System.Runtime.InteropServices.ComEventInterfaceAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df966363a4ac8bbc0810afcf750f05077ee01f95" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37470310" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ComEventInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComEventInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComEventInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComEventInterfaceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComEventInterfaceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>标识源接口和实现事件接口方法的类，事件接口在从 COM 类型库中导入组件类时生成。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以将此特性应用于接口，尽管[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)通常为您应用导入类型库时。  
  
 从类型库导入源接口时，它实现的任何方法将添加为事件到生成的事件接口。 Tlbimp.exe 适用<xref:System.Runtime.InteropServices.ComEventInterfaceAttribute>到事件接口来标识实现事件接口的方法，并实现原始源接口的托管的类。 公共语言运行时在运行时使用此属性执行以下任务：  
  
-   关联所公开的事件到其实现的接口在事件提供程序类。  
  
-   将事件链接到原始 COM 源接口。  
  
 很少会应用此属性。 但是，如果你打算编写生成密切模拟由 Tlbimp.exe 生成的元数据的元数据的源代码，您应创建每个原始源接口的事件接口。 有关如何 Tlbimp.exe 导入事件的详细说明，请参阅[导入成员转换](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d)。 有关如何公开到.NET 客户端 COM 事件的说明，请参阅[如何： 处理 COM 源引发事件](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComEventInterfaceAttribute (Type SourceInterface, Type EventProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type SourceInterface, class System.Type EventProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (SourceInterface As Type, EventProvider As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComEventInterfaceAttribute(Type ^ SourceInterface, Type ^ EventProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ComEventInterfaceAttribute : Type * Type -&gt; System.Runtime.InteropServices.ComEventInterfaceAttribute" Usage="new System.Runtime.InteropServices.ComEventInterfaceAttribute (SourceInterface, EventProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="SourceInterface" Type="System.Type" />
        <Parameter Name="EventProvider" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="SourceInterface">一个 <see cref="T:System.Type" />，其中包含类型库中的原始源接口。 COM 使用此接口回调到托管类。</param>
        <param name="EventProvider">一个 <see cref="T:System.Type" />，其中包含实现事件接口方法的类。</param>
        <summary>用源接口和事件提供程序类初始化 <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventProvider">
      <MemberSignature Language="C#" Value="public Type EventProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventProvider As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EventProvider { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventProvider : Type" Usage="System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取实现事件接口方法的类。</summary>
        <value>一个 <see cref="T:System.Type" />，其中包含实现事件接口方法的类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值设置为生成的事件提供程序类的类型[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)。 Tlbimp.exe 将追加 EventProvider 的源接口名称。 例如，imy 接口将成为 IMyInterfaceEventProvider。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInterface">
      <MemberSignature Language="C#" Value="public Type SourceInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SourceInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceInterface As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SourceInterface { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceInterface : Type" Usage="System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从类型库获取原始源接口。</summary>
        <value>一个包含源接口的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 源接口具有至少一个事件成员，并且通常另一个用于源接口的每个方法。 COM 使用此接口回调到托管类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>