<Type Name="ComEventInterfaceAttribute" FullName="System.Runtime.InteropServices.ComEventInterfaceAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c19e3e30b907b02a912088930b5eacc74ab95c40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ComEventInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComEventInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComEventInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComEventInterfaceAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cbe6a-101">标识源接口和实现事件接口方法的类，事件接口在从 COM 类型库中导入组件类时生成。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbe6a-101">Identifies the source interface and the class that implements the methods of the event interface that is generated when a coclass is imported from a COM type library.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe6a-102">你可以将此特性应用于接口，尽管[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)通常为您应用导入类型库时。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-102">You can apply this attribute to interfaces, although the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) typically applies it for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="cbe6a-103">当从类型库导入源接口时，它实现任何方法将添加事件向生成的事件接口。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-103">When a source interface is imported from a type library, any methods it implements are added as events to a generated event interface.</span></span> <span data-ttu-id="cbe6a-104">Tlbimp.exe 适用<xref:System.Runtime.InteropServices.ComEventInterfaceAttribute>为事件接口来标识它实现事件接口方法，并实现原始的源接口的托管的类。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-104">Tlbimp.exe applies <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute> to the event interface to identify the managed class that implements the methods of the event interface and implements the original source interface.</span></span> <span data-ttu-id="cbe6a-105">公共语言运行时在运行时使用此属性执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="cbe6a-105">The common language runtime uses this attribute at run time to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="cbe6a-106">相关联的事件公开其实现的接口在事件提供程序类。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-106">Associate events exposed by the interface to their implementation in the event provider class.</span></span>  
  
-   <span data-ttu-id="cbe6a-107">将事件链接到原始 COM 源接口。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-107">Link the events to the original COM source interface.</span></span>  
  
 <span data-ttu-id="cbe6a-108">极少数情况下应用此特性。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-108">You rarely apply this attribute.</span></span> <span data-ttu-id="cbe6a-109">但是，如果你打算编写生成密切模拟由 Tlbimp.exe 生成的元数据的元数据的源代码，你应创建每个原始的源接口的事件接口。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-109">However, if you plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a event interface for each original source interface.</span></span> <span data-ttu-id="cbe6a-110">有关如何 Tlbimp.exe 导入事件的详细说明，请参阅[导入成员转换](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d)。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-110">For a detailed description about how Tlbimp.exe imports events, see [Imported Member Conversion](http://msdn.microsoft.com/library/7a272adf-41d7-4409-b0e2-5c0c5ef5266d).</span></span> <span data-ttu-id="cbe6a-111">有关如何公开到.NET 客户端的 COM 事件的说明，请参阅[如何： 处理由 COM 源的事件引发](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04)。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-111">For instruction about how to expose a COM event to a .NET client, see [How to: Handle Events Raised by a COM Source](http://msdn.microsoft.com/library/12bb67bd-91a2-4554-82fb-bdba3d2c8b04).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComEventInterfaceAttribute (Type SourceInterface, Type EventProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type SourceInterface, class System.Type EventProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComEventInterfaceAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (SourceInterface As Type, EventProvider As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComEventInterfaceAttribute(Type ^ SourceInterface, Type ^ EventProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="SourceInterface" Type="System.Type" />
        <Parameter Name="EventProvider" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="SourceInterface">
          <span data-ttu-id="cbe6a-112">一个 <see cref="T:System.Type" />，其中包含类型库中的原始源接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-112">A <see cref="T:System.Type" /> that contains the original source interface from the type library.</span>
          </span>
          <span data-ttu-id="cbe6a-113">COM 使用此接口回调到托管类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-113">COM uses this interface to call back to the managed class.</span>
          </span>
        </param>
        <param name="EventProvider">
          <span data-ttu-id="cbe6a-114">一个 <see cref="T:System.Type" />，其中包含实现事件接口方法的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-114">A <see cref="T:System.Type" /> that contains the class that implements the methods of the event interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe6a-115">用源接口和事件提供程序类初始化 <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComEventInterfaceAttribute" /> class with the source interface and event provider class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventProvider">
      <MemberSignature Language="C#" Value="public Type EventProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.EventProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventProvider As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EventProvider { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe6a-116">获取实现事件接口方法的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-116">Gets the class that implements the methods of the event interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe6a-117">一个 <see cref="T:System.Type" />，其中包含实现事件接口方法的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-117">A <see cref="T:System.Type" /> that contains the class that implements the methods of the event interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe6a-118">此值设置为生成的事件提供程序类的类型[Tlbimp.exe （类型库导入程序）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-118">This value is set to the type of the event provider class generated by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md).</span></span> <span data-ttu-id="cbe6a-119">Tlbimp.exe 追加 EventProvider 与源接口名称。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-119">Tlbimp.exe appends the source interface name with EventProvider.</span></span> <span data-ttu-id="cbe6a-120">例如，IMyInterface 将成为 IMyInterfaceEventProvider。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-120">For example, IMyInterface becomes IMyInterfaceEventProvider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInterface">
      <MemberSignature Language="C#" Value="public Type SourceInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SourceInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComEventInterfaceAttribute.SourceInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceInterface As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SourceInterface { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe6a-121">从类型库获取原始源接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-121">Gets the original source interface from the type library.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe6a-122">一个包含源接口的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe6a-122">A <see cref="T:System.Type" /> containing the source interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe6a-123">源接口，并且在至少一个事件成员，通常一个源接口的每个方法。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-123">A source interface has at least one event member, and typically one for each method of the source interface.</span></span> <span data-ttu-id="cbe6a-124">COM 使用此接口回调到托管类。</span><span class="sxs-lookup"><span data-stu-id="cbe6a-124">COM uses this interface to call back to the managed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>