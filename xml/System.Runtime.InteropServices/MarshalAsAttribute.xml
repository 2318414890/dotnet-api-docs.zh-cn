<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarshalAsAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2e777bc7171cbc1fc67df87ed564e93db5f751e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e777bc7171cbc1fc67df87ed564e93db5f751e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Indicates how to marshal the data between managed and unmanaged code.</source>
          <target state="translated">指示如何在托管代码与非托管代码之间封送数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply this attribute to parameters, fields, or return values.</source>
          <target state="translated">你可以将此特性应用于参数、 字段或返回值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is optional, as each data type has a default marshaling behavior.</source>
          <target state="translated">此属性是可选的，因为每种数据类型都有默认封送处理行为。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>This attribute is only necessary when a given type can be marshaled to multiple types.</source>
          <target state="translated">仅在给定的类型可以封送到多个类型时需要此属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, you can marshal a string to unmanaged code as either a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>, a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">例如，封送到非托管代码为字符串<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>、 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>、 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>，或<ph id="ph4">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the common language runtime marshals a string parameter as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> to COM methods.</source>
          <target state="translated">默认情况下，公共语言运行时封送字符串参数作为<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>到 COM 方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to an individual field or parameter to cause that particular string to be marshaled as a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> instead of a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.</source>
          <target state="translated">你可以将应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>属性设为单独的字段或参数，使该特定的字符串作为封送处理<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>而不是<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> passes your marshaling preferences to the common language runtime.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbexp.exe （类型库导出程序）<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept>将传递到公共语言运行时你封送处理的首选项。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke.</source>
          <target state="translated">某些参数和返回值具有不同的默认封送处理行为时用于 COM 互操作或平台调用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>By default, the runtime marshals a string parameter (and fields in a value type) as a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> to a platform invoke method or function.</source>
          <target state="translated">默认情况下，运行时将封送字符串参数 （和值类型中的字段） 为<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>平台调用来调用方法或函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling Behavior<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>.</source>
          <target state="translated">有关其他信息，请参阅<bpt id="p1">[</bpt>默认封送行为<ept id="p1">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>In most cases, the attribute simply identifies the format of the unmanaged data using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration, as shown in the following C# signature:</source>
          <target state="translated">在大多数情况下，该特性只标识非托管的数据使用的格式<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>枚举，如下面的 C# 签名中所示：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Some <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration members require additional information.</source>
          <target state="translated">某些<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>枚举成员需要其他信息。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For example, additional information is needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> is <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>.</source>
          <target state="translated">例如，需要其他信息时<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>是<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>For a complete description of how to use this attribute with arrays, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关如何与数组一起使用此特性的完整说明，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe （类型库导入程序）<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>还将此特性应用到参数、 字段和返回值以指示输入的类型库中的数据类型不是相应的托管的数据类型的默认类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Tlbimp.exe always applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.Object&gt;</ph> types for clarity, regardless of the type specified in the input type library.</source>
          <target state="translated">Tlbimp.exe 始终应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>到<ph id="ph2">&lt;xref:System.String&gt;</ph>和<ph id="ph3">&lt;xref:System.Object&gt;</ph>为清楚起见，无论输入的类型库中指定的类型的类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> does not support marshaling of generic types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>不支持泛型类型的封送处理。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to a field, a method parameter, and a method return value in a managed type.</source>
          <target state="translated">下面的示例应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>到了字段、 方法参数，以及一种方法在托管类型中返回值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to a property:</source>
          <target state="translated">下面的示例应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>属性设为一个属性：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.MarshalAsAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">数据将作为该值封送的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 值初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>This constructor takes an underlying 16-bit signed integer that represents each <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration member.</source>
          <target state="translated">此构造函数采用的基础的 16 位有符号的整数来表示每个<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph>枚举成员。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> uses this constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe （类型库导入程序）<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>使用此构造函数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>The value the data is to be marshaled as.</source>
          <target state="translated">数据将作为该值封送的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> enumeration member.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 枚举成员初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.MarshalAsAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)">
          <source>For readable code that is less prone to error, always use this constructor.</source>
          <target state="translated">有关可读的代码是更不易出错，请始终使用此构造函数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>Specifies the element type of the unmanaged <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph>.</source>
          <target state="translated">指定非托管 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.LPArray" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.ByValArray" /&gt;</ph> 的元素类型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>You can set this parameter to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the array's elements.</source>
          <target state="translated">你可以将此参数设置为一个介于<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph>枚举来指定数组中元素的类型。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used.</source>
          <target state="translated">如果不指定的类型，使用默认的非托管类型与托管的数组的元素类型相对应。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For example, the <ph id="ph1">`ArraySubType`</ph> for a <ph id="ph2">`LPWStr`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`ArraySubType`</ph>为<ph id="ph2">`LPWStr`</ph>COM 中的数组是<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关其他信息，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex">
          <source>Specifies the parameter index of the unmanaged <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> attribute used by COM.</source>
          <target state="translated">指定 COM 使用的非托管 <ph id="ph1">&lt;see langword="iid_is" /&gt;</ph> 特性的参数索引。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>Provides additional information to a custom marshaler.</source>
          <target state="translated">向自定义封送处理程序提供附加信息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>This field is optional when using a custom marshaler.</source>
          <target state="translated">使用自定义封送处理程序时，此字段是可选的。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>You can set this field to a string that supplies additional information to a custom marshaler.</source>
          <target state="translated">可以将此字段设置为一个字符串，提供到自定义封送处理程序的其他信息。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie">
          <source>For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.</source>
          <target state="translated">例如，相同的封送处理程序可提供大量的包装器，其中使用该 cookie 来指示特定的包装器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>Specifies the fully qualified name of a custom marshaler.</source>
          <target state="translated">指定自定义封送处理程序的完全限定名。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph> field specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>或<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=nameWithType&gt;</ph>字段指定为特性化的参数的自定义封送处理程序类型、 字段或返回类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field enables you to specify a string representing the fully qualified name of a custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>字段使你可以指定表示自定义封送处理程序的完全限定的名称的字符串。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>It is useful for late-bound references, but is less preferred than <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> for specifying a custom marshaler.</source>
          <target state="translated">它可用于后期绑定引用，但做法不如<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>用于指定自定义封送处理程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">有关创建和使用自定义封的其他信息，请参阅<bpt id="p1">[</bpt>自定义封送处理<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>Implements <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> as a type.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType" /&gt;</ph> 作为类型实现。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can use either the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field to specify a custom marshaler type for the attributed parameter, field, or return type.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>或<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>字段来指定的特性化的参数的自定义封送处理程序类型、 字段或返回类型。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field allows easier usage of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> by shortening the syntax.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>字段允许更易于使用<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>通过缩短语法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>In the following example, the first line represents syntax using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> and the second line represents syntax using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>.</source>
          <target state="translated">在下面的示例中，第一行表示语法使用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph>和第二行表示语法使用<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>You can set a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object using <ph id="ph2">`typeof`</ph> in C#, <ph id="ph3">`GetType`</ph> in Visual Basic, or <ph id="ph4">`typeid`</ph> in C++.</source>
          <target state="translated">你可以设置<ph id="ph1">&lt;xref:System.Type&gt;</ph>对象使用<ph id="ph2">`typeof`</ph>在 C# 中，<ph id="ph3">`GetType`</ph>在 Visual Basic 中，或<ph id="ph4">`typeid`</ph>c + + 中。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef">
          <source>For additional information about creating and using custom marshalers, see <bpt id="p1">[</bpt>Custom Marshaling<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.</source>
          <target state="translated">有关创建和使用自定义封的其他信息，请参阅<bpt id="p1">[</bpt>自定义封送处理<ept id="p1">](http://msdn.microsoft.com/library/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>Indicates the element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated">指示 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph> 的元素类型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>You can set this field to a value from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph> enumeration to specify the type of the safe array's elements.</source>
          <target state="translated">你可以将此字段设置为从值<ph id="ph1">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=nameWithType&gt;</ph>枚举来指定安全数组的元素的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used.</source>
          <target state="translated">如果未指定的类型，则使用托管的元素类型的默认类型 （如果作为 VARIANT 传递）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For example, the <ph id="ph1">`SafeArraySubType`</ph> for an <ph id="ph2">`int`</ph> array in COM is <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`SafeArraySubType`</ph>为<ph id="ph2">`int`</ph>COM 中的数组是<ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关其他信息，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Indicates the user-defined element type of the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph>.</source>
          <target state="translated">指示用户定义的 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.UnmanagedType.SafeArray" /&gt;</ph> 元素类型。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>Initialize this field with your custom type to enable the elements of the <ph id="ph1">`SAFEARRAY`</ph> to be marshaled successfully.</source>
          <target state="translated">初始化自定义类型，允许的元素与此字段<ph id="ph1">`SAFEARRAY`</ph>要封送处理成功。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>This field is only needed when the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph> is either <ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此字段才需要时<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_UNKNOWN?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_DISPATCH?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_RECORD?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关其他信息，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.</source>
          <target state="translated">指示固定长度数组中的元素数，或要导入的字符串中的字符（不是字节）数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>This field is required for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph> members of the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">此字段是必需的<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph>的成员<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=nameWithType&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph> are (&gt;= 0 and &lt;= 0x1FFFFFFF).</source>
          <target state="translated">因为元数据的压缩的格式仅限于 0x1FFFFFFF，允许的值的范围<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph>是 (&gt; = 0 和 &lt; = 0x1FFFFFFF)。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关其他信息，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Indicates the zero-based parameter that contains the count of array elements, similar to <ph id="ph1">&lt;see langword="size_is" /&gt;</ph> in COM.</source>
          <target state="translated">指示从零开始的参数，该参数包含数组元素的计数，与 COM 中的 <ph id="ph1">&lt;see langword="size_is" /&gt;</ph> 类似。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field supports managed-to-unmanaged and unmanaged-to-managed calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>字段支持托管到非托管和非托管到托管调用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>It does not have any effect on managed code that calls COM objects.</source>
          <target state="translated">它没有托管代码调用 COM 对象的任何影响。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.</source>
          <target state="translated">根据托管的类型和应用于它的特性，可以作为安全数组或 C 样式数组传递数组。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array.</source>
          <target state="translated">当作为 C 样式数组传递数组时，封送处理程序无法确定数组的大小。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:</source>
          <target state="translated">因此，若要将托管的数组传递给非托管的函数或方法，必须提供两个自变量：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array, defined by reference or value.</source>
          <target state="translated">定义通过引用或值数组。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The array size, defined by reference or value.</source>
          <target state="translated">定义通过引用或值的数组大小。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>The zero-based index of the array size parameter is defined by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field.</source>
          <target state="translated">数组大小参数的从零开始索引定义使用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>字段。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>If you specify both <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph> with a <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph> field, the sum of the fields' values produces a size total.</source>
          <target state="translated">如果同时指定了<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=nameWithType&gt;</ph>与<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType&gt;</ph>字段，字段的值的总和为总大小。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex">
          <source>For more information, see <bpt id="p1">[</bpt>Default Marshaling for Arrays<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>数组的默认封送处理<ept id="p1">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 值，数据将被作为该值封送。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> value the data is to be marshaled as.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.UnmanagedType" /&gt;</ph> 值，数据将被作为该值封送。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>This value is used with <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to indicate how types should be marshaled between managed and unmanaged code.</source>
          <target state="translated">此值用于<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>以指示应如何在托管和非托管代码之间封送类型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>In some cases, you can use this field with certain <ph id="ph1">`UnmanagedType`</ph> enumeration members.</source>
          <target state="translated">在某些情况下，可以使用此字段，某特定<ph id="ph1">`UnmanagedType`</ph>枚举成员。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.MarshalAsAttribute.Value">
          <source>For <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>, you must use additional named parameters.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>，必须使用额外的命名的参数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>