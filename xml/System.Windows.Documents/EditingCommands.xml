<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37521559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4b3e1-101">提供一组标准的与编辑相关的命令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b3e1-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-102">下表显示了编辑命令和关联的默认键笔势 (使用从键名称<xref:System.Windows.Input.Key>和<xref:System.Windows.Input.ModifierKeys>枚举)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="4b3e1-103">编辑命令</span><span class="sxs-lookup"><span data-stu-id="4b3e1-103">Editing command</span></span>|<span data-ttu-id="4b3e1-104">默认键笔势</span><span class="sxs-lookup"><span data-stu-id="4b3e1-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="4b3e1-105">无默认键笔势</span><span class="sxs-lookup"><span data-stu-id="4b3e1-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="4b3e1-106">无默认键笔势</span><span class="sxs-lookup"><span data-stu-id="4b3e1-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="4b3e1-107">插入符号移动命令和选择扩展命令共享一组公共的默认键笔势，常规的区别在于添加<xref:System.Windows.Input.ModifierKeys.Shift>键来选择命令区分从插入符号移动命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="4b3e1-108">例如，<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>命令包含的默认键笔势<xref:System.Windows.Input.Key.Left>，和相应<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>命令具有的默认键笔势<xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="4b3e1-109">一般情况下，命令定义由<xref:System.Windows.Documents.EditingCommands>类不能使用的命令参数 (`parameter`参数所需的<xref:System.Windows.Input.ICommand.Execute%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="4b3e1-110">有关命令和命令的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-111">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-112">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-113">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-114">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-115">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-116">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-117">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-118">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-119">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，该命令请求将当前段落或选中的段落居中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-120">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-120">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-121">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="E" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-122">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-123">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-124">如果跨越多个段落所选内容上调用此命令，该效果被应用于出现在所选内容中，每个段落的所有内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-125">下图显示了居中内容的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="4b3e1-126">![屏幕快照： TextAlign 属性值 Center](~/add/media/flowdoc-textalign-center.png "屏幕快照： TextAlign 属性值 Center")</span><span class="sxs-lookup"><span data-stu-id="4b3e1-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="4b3e1-127">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-128">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-129">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-130">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-131">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-132">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-133">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-134">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-135">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-136">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-137">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，该命令请求将当前段落或选中的段落两端对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-138">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-138">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-139">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="J" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-140">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-141">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-142">如果跨越多个段落所选内容上调用此命令，该效果被应用到所选内容中的所有段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-143">对齐内容中各行内容, 的水平间距被调整以便对齐的线是等同于或近似相等宽度。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="4b3e1-144">内容通常各边的内容创建平滑边缘的对齐。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="4b3e1-145">因为它通常是短于其余部分，一个段落中的最后一行后调用此命令可能会保持对齐。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="4b3e1-146">下图显示了对齐 （左对齐） 内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="4b3e1-147">![屏幕快照： 内容未对齐](~/add/media/content-unjustified.png "屏幕快照： 内容未对齐")</span><span class="sxs-lookup"><span data-stu-id="4b3e1-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="4b3e1-148">下图显示相同的内容后两端对齐。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="4b3e1-149">![内容的屏幕截图对齐的文本](~/add/media/content-justified.png "内容的屏幕截图对齐的文本")</span><span class="sxs-lookup"><span data-stu-id="4b3e1-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="4b3e1-150">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-151">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-152">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-153">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-154">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-155">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-156">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-157">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-158">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-159">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-160">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-161">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，该命令请求将所选内容左对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-162">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-162">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-163">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="L" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-164">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-165">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-166">如果跨越多个段落所选内容上调用此命令，该效果被应用于出现在所选内容中，每个段落的所有内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-167">下图显示了左对齐内容的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="4b3e1-168">![屏幕快照： TextAlign 属性值为左对齐](~/add/media/flowdoc-textalign-left.png "屏幕快照： TextAlign 属性值为左对齐")</span><span class="sxs-lookup"><span data-stu-id="4b3e1-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="4b3e1-169">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-170">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-171">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-172">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-173">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-174">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-175">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-176">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-177">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-178">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-179">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-180">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，该命令请求将所选内容右对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-181">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-181">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-182">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="R" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-183">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-184">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-185">如果跨越多个段落所选内容上调用此命令，该效果被应用于出现在所选内容中，每个段落的所有内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-186">下图显示了右对齐内容的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="4b3e1-187">![屏幕快照： TextAlign 值 Right](~/add/media/flowdoc-textalign-right.png "屏幕快照： TextAlign 值 Right")</span><span class="sxs-lookup"><span data-stu-id="4b3e1-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="4b3e1-188">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-189">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-190">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-191">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-192">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-193">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-194">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-195">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-196">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-197">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-198">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-199">表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 命令，该命令请求在当前位置或当前所选内容上输入一个退格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-200">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-200">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-201">此命令的默认键笔势为 <see langword="Backspace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-202">调用对空选择时，此命令将删除之前将插入符号的字符或段落分隔符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="4b3e1-203">调用对非空选择时，此命令将删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-204">此命令将保留任何格式设置为调用此命令后立即插入相同的位置的内容已删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="4b3e1-205">与之相反<xref:System.Windows.Documents.EditingCommands.Delete%2A>命令，不会保留以前的格式设置。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="4b3e1-206">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-207">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-208">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-209">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-210">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-211">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-212">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-213">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-214">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-215">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-216">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-217">表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，该命令请求更正当前位置任何拼写错误的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-218">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-218">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-219">此命令无默认键笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-220">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-221">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-222">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，该命令请求将当前所选内容的字号缩小 1 磅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-223">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-223">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-224">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemOpenBrackets" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-225">如果调用此命令将插入符号位置是在某个词中的空选择，所选内容会自动扩展以将该命令应用于整个单词。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="4b3e1-226">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-227">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-228">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-229">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-230">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-231">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-232">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-233">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-234">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-235">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-236">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-237">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令，该命令请求将当前段落的缩进减少一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-238">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-238">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-239">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-240">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-241">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b3e1-242">此命令将上一个文本元素无效，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-243">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-244">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-245">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-246">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-247">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-248">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-249">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-250">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-251">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-252">表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，该命令请求删除当前所选内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-253">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-253">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-254">此命令的默认键笔势为 <see langword="Delete" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-255">此命令将放弃任何从已删除所选内容的格式。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="4b3e1-256">与之相反<xref:System.Windows.Documents.EditingCommands.Backspace%2A>命令时，这会保留任何格式设置从调用此命令后立即插入相同的位置的内容已删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="4b3e1-257">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-258">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-259">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-260">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-261">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-262">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-263">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-264">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-265">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-266">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-267">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-268">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，该命令请求删除下一单词（相对于当前位置而言）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-269">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-269">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-270">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Delete" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-271">如果插入点在某个词中，则删除当前的位置之间单词末尾的单词的剩余部分。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="4b3e1-272">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-273">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-274">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-275">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-276">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-277">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-278">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-279">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-280">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-281">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-282">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-283">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，该命令请求删除上一单词（相对于当前位置而言）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-284">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-284">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-285">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Backspace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-286">如果将插入符号是在某个词中，删除当前的位置之间的词开头的单词的其余部分。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="4b3e1-287">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-288">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-289">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-290">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-291">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-292">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-293">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-294">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-295">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-296">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-297">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-298">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个换行符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-299">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-299">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-300">此命令的默认键笔势<see langword="Shift" /> + <see langword="Enter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-301">为支持流内容，例如编辑器<xref:System.Windows.Controls.RichTextBox>，则此命令会导致<xref:System.Windows.Documents.LineBreak>在当前位置插入元素。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="4b3e1-302">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-303">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-304">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-305">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-306">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-307">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-308">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-309">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-310">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-311">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-312">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-313">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个分段符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-314">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-314">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-315">此命令的默认键笔势为 <see langword="Enter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-316">此命令相当于用户按 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="4b3e1-317">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-318">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>并<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b3e1-319">此命令将上一个文本元素无效，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-320">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-321">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-322">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-323">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-324">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-325">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-326">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-327">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-328">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-329">表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，该命令请求忽略当前位置或当前所选内容中任何拼写错误的单词的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-330">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-330">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-331">此命令无默认键笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-332">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-333">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-334">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，该命令请求将当前所选内容的字号增加 1 磅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-335">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-335">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-336">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemCloseBrackets" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-337">如果其中插入符号是在某个词中的空选择调用此命令，将展开所选内容以将该命令应用于整个单词。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="4b3e1-338">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-339">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-340">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-341">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-342">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-343">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-344">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-345">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-346">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-347">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-348">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-349">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令，该命令请求将当前段落的缩进增加一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-350">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-350">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-351">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-352">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-353">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b3e1-354">此命令将上一个文本元素无效，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-355">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-356">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-357">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-358">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-359">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-360">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-361">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-362">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-363">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-364">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，该命令请求将插入符号向下移动一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-365">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-365">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-366">此命令的默认键笔势为 <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-367">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-368">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-369">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-370">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-371">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-372">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-373">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-374">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-375">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-376">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-377">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-378">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，该命令请求将插入符号向下移动一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-379">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-379">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-380">此命令的默认键笔势为 <see langword="PageDown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-381">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-382">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-383">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-384">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-385">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-386">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-387">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-388">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-389">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-390">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-391">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-392">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，该命令请求将插入符号向下移动一个段落。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-393">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-393">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-394">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-395">此命令将插入符号下一段落开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="4b3e1-396">此命令的行为类似于<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>上调用时<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="4b3e1-397">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-398">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-399">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-400">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-401">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-402">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-403">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-404">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-405">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-406">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-407">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-408">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，该命令请求将插入符号向左移动一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-409">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-409">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-410">此命令的默认键笔势为 <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-411">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-412">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-413">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-414">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-415">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-416">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-417">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-418">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-419">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-420">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-421">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-422">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，该命令请求将插入符号向左移动一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-423">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-423">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-424">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-425">如果在某个词中插入符号，此命令将插入符号移动到该单词的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="4b3e1-426">否则，此命令将插入符号移动到上一个词的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="4b3e1-427">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-428">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-429">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-430">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-431">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-432">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-433">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-434">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-435">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-436">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-437">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-438">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，该命令请求将插入符号向右移动一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-439">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-439">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-440">此命令的默认键笔势为 <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-441">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-442">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-443">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-444">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-445">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-446">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-447">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-448">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-449">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-450">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-451">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-452">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，该命令请求将插入符号向右移动一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-453">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-453">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-454">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-455">如果在某个词中插入符号，此命令将插入符号移动到该单词的末尾。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="4b3e1-456">否则，此命令将插入符号移动到下一个单词的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="4b3e1-457">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-458">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-459">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-460">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-461">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-462">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-463">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-464">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-465">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-466">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-467">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-468">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，该命令请求将插入符号移至内容的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-469">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-469">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-470">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-471">一个*文本容器*是窗体手头的内容的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="4b3e1-472"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="4b3e1-473">共同的文本容器中包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="4b3e1-474">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-475">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-476">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-477">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-478">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-479">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-480">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-481">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-482">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-483">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-484">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-485">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，该命令请求将插入符号移至内容的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-486">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-486">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-487">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-488">一个*文本容器*是窗体手头的内容的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="4b3e1-489"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="4b3e1-490">共同的文本容器中包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="4b3e1-491">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-492">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-493">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-494">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-495">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-496">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-497">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-498">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-499">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-500">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-501">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-502">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，该命令请求将插入符号移至当前行的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-503">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-503">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-504">此命令的默认键笔势为 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-505">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-506">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-507">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-508">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-509">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-510">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-511">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-512">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-513">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-514">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-515">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-516">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，该命令请求将插入符号移至当前行的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-517">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-517">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-518">此命令的默认键笔势为 <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-519">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-520">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-521">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-522">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-523">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-524">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-525">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-526">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-527">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-528">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-529">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-530">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，该命令请求将插入符号向上移动一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-531">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-531">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-532">此命令的默认键笔势为 <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-533">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-534">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-535">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-536">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-537">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-538">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-539">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-540">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-541">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-542">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-543">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-544">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，该命令请求将插入符号向上移动一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-545">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-545">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-546">此命令的默认键笔势为 <see langword="PageUp" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-547">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-548">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-549">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-550">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-551">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-552">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-553">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-554">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-555">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-556">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-557">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-558">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，该命令请求将插入符号向上移动一个段落。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-559">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-559">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-560">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-561">此命令将插入符号下一段落开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="4b3e1-562">此命令的行为类似于<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>上调用时<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="4b3e1-563">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-564">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-565">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-566">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-567">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-568">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-569">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-570">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-571">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-572">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-573">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-574">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，该命令请求将当前选择范围向下扩展一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-575">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-575">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-576">此命令的默认键笔势<see langword="Shift" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-577">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-578">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-579">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-580">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-581">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-582">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-583">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-584">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-585">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-586">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-587">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-588">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，该命令请求将当前选择范围向下扩展一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-589">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-589">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-590">此命令的默认键笔势<see langword="Shift" /> + <see langword="PageDown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-591">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-592">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-593">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-594">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-595">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-596">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-597">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-598">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-599">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-600">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-601">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-602">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，该命令请求将当前选择范围向下扩展一段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-603">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-603">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-604">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-605">此命令将所选内容扩展到下一段落开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="4b3e1-606">否则，此命令将所选内容扩展到当前段落的末尾。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="4b3e1-607">更多选择，包括表示段落的结尾分段符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="4b3e1-608">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-609">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-610">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-611">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-612">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-613">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-614">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-615">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-616">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-617">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-618">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-619">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，该命令请求将当前选择范围向左扩展一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-620">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-620">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-621">此命令的默认键笔势<see langword="Shift" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-622">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-623">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-624">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-625">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-626">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-627">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-628">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-629">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-630">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-631">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-632">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-633">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，该命令请求将当前选择范围向左扩展一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-634">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-634">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-635">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-636">如果在某个词中插入符号，此命令会将所选内容扩展到该单词的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="4b3e1-637">否则，此命令将所选内容扩展到上一个词的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="4b3e1-638">更多选择，不包括单词分隔符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="4b3e1-639">与之相反<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>，其中包括单词分隔符中的更多选择。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="4b3e1-640">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-641">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-642">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-643">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-644">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-645">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-646">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-647">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-648">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-649">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-650">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-651">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，该命令请求将当前选择范围向右扩展一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-652">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-652">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-653">此命令的默认键笔势<see langword="Shift" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-654">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-655">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-656">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-657">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-658">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-659">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-660">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-661">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-662">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-663">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-664">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-665">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，该命令请求将当前选择范围向右扩展一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-666">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-666">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-667">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-668">如果在某个词中插入符号，此命令会将所选内容扩展到该单词的末尾。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="4b3e1-669">否则，此命令将所选内容扩展到下一个字词的末尾。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="4b3e1-670">更多选择，包括单词分隔符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="4b3e1-671">与之相反<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>其中不包括单词分隔符中的更多选择。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="4b3e1-672">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-673">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-674">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-675">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-676">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-677">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-678">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-679">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-680">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-681">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-682">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-683">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，该命令请求将当前选择范围扩展到内容末尾处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-684">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-684">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-685">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-686">一个*文本容器*是窗体手头的内容的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="4b3e1-687"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="4b3e1-688">共同的文本容器中包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="4b3e1-689">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-690">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-691">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-692">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-693">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-694">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-695">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-696">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-697">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-698">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-699">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-700">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，该命令请求将当前选择范围扩展到内容开头处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-701">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-701">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-702">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-703">一个*文本容器*是窗体手头的内容的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="4b3e1-704"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="4b3e1-705">共同的文本容器中包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="4b3e1-706">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-707">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-708">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-709">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-710">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-711">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-712">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-713">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-714">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-715">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-716">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-717">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，该命令请求将当前选择范围扩展到当前行的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-718">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-718">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-719">此命令的默认键笔势<see langword="Shift" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-720">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-721">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-722">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-723">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-724">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-725">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-726">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-727">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-728">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-729">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-730">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-731">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，该命令请求将当前选择范围扩展到当前行的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-732">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-732">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-733">此命令的默认键笔势<see langword="Shift" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-734">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-735">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-736">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-737">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-738">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-739">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-740">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-741">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-742">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-743">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-744">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-745">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，该命令请求将当前选择范围向上扩展一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-746">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-746">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-747">此命令的默认键笔势<see langword="Shift" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-748">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-749">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-750">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-751">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-752">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-753">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-754">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-755">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-756">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-757">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-758">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-759">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，该命令请求将当前选择范围向上扩展一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-760">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-760">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-761">此命令的默认键笔势<see langword="Shift" /> + <see langword="PageUp" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-762">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-763">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-764">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-765">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-766">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-767">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-768">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-769">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-770">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-771">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-772">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-773">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，该命令请求将当前选择范围向上扩展一段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-774">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-774">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-775">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-776">如果将插入符号的段落开始处，此命令将所选内容扩展到上一段的开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="4b3e1-777">否则，此命令将所选内容扩展到当前段落开头。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="4b3e1-778">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-779">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-780">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-781">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-782">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-783">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-784">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-785">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-786">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-787">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-788">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-789">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-790">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-790">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-791">此命令的默认键笔势<see langword="Shift" /> + <see langword="Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-792">此命令的行为取决于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="4b3e1-793">如果选择为非空，则此命令相当于<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="4b3e1-794">如果插入点位于表单元格中 (由<xref:System.Windows.Documents.TableCell>元素)，此命令将插入符号移动到上一个单元格。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="4b3e1-795">否则，当前的位置插入一个制表符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="4b3e1-796">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-797">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>并<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-798">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-799">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-800">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-801">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-802">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-803">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-804">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-805">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-806">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-807">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-808">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-808">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-809">此命令的默认键笔势为 <see langword="Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-810">此命令的行为取决于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="4b3e1-811">如果所选内容为非空值，或如果所选内容为空且当前插入符号位置是在段落开头，则此命令相当于<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="4b3e1-812">如果插入点位于表单元格中 (由<xref:System.Windows.Documents.TableCell>元素)，此命令将插入符号移动到下一个单元格。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="4b3e1-813">如果插入点在表的最后一个单元中，此命令会使新行追加到表中，插入符号置于新行的第一个单元。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="4b3e1-814">否则，当前的位置插入一个制表符。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="4b3e1-815">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-816">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>并<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-817">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-818">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-819">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-820">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-821">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-822">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-823">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-824">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-825">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-826">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Bold" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-827">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-827">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-828">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="B" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-829">如果<xref:System.Windows.FontWeight>当前所选内容是在范围内<xref:System.Windows.FontWeights.Thin%2A>到<xref:System.Windows.FontWeights.SemiBold%2A>，<xref:System.Windows.FontWeights.Bold%2A>应用于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="4b3e1-830">否则为<xref:System.Windows.FontWeights.Normal%2A>应用。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="4b3e1-831">有关比较的列表<xref:System.Windows.FontWeight>值，请参阅<xref:System.Windows.FontWeights>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="4b3e1-832">当所选内容为空，并且将插入符号是在某个词中时，所选内容扩展以包括整个单词。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="4b3e1-833">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-834">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-835">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-836">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-837">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-838">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-839">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-840">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-841">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-842">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-843">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-844">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令，该命令请求对当前所选内容进行无序列表（也称为项目符号列表）格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-845">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-845">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-846">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-847">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-848">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-849">如果跨越多个段落所选内容上调用此命令，该效果被应用于出现在所选内容中，每个段落的所有内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-850">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-851">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-852">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-853">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-854">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-855">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-856">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-857">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-858">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-859">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-860">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-861">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，该命令用于切换“插入”和“改写”键入模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-862">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-862">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-863">此命令的默认键笔势为 <see langword="Insert" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-864">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-865">此命令以本机方式受<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-866">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-867">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-868">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-869">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-870">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-871">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-872">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-873">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-874">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-875">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Italic" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-876">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-876">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-877">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="I" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-878">如果<xref:System.Windows.FontStyle>为当前所选内容<xref:System.Windows.FontStyles.Normal%2A>，<xref:System.Windows.FontStyles.Italic%2A>应用于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="4b3e1-879">否则为<xref:System.Windows.FontStyles.Normal%2A>应用。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="4b3e1-880">当所选内容为空，并且将插入符号是在某个词中时，所选内容扩展以包括整个单词。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="4b3e1-881">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-882">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-883">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-884">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-885">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-886">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-887">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-888">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-889">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-890">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-891">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-892">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令，该命令请求对当前所选内容进行排序列表（也称为编号列表）格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-893">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-893">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-894">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-895">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="4b3e1-896">如果针对部分选择的内容 （包括空选择，其中将插入符号是在段落中） 对段落中调用此命令，请求的效果应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="4b3e1-897">如果跨越多个段落所选内容上调用此命令，该效果被应用于出现在所选内容中，每个段落的所有内容。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="4b3e1-898">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-899">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-900">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-901">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-902">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-903">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-904">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-905">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-906">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-907">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-908">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-909">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令，该命令请求对当前所选内容进行下标格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-910">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-910">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-911">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemPlus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-912">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-913">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-914">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-915">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-916">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-917">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-918">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-919">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-920">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-921">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-922">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令，该命令请求对当前所选内容进行上标格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-923">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-923">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-924">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-925">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-926">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-927">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-928">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-929">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-930">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-931">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-932">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-933">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-934">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b3e1-935">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Underline" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b3e1-936">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-936">The requested command.</span>
          </span>
          <span data-ttu-id="4b3e1-937">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="U" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b3e1-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b3e1-938">当所选内容为空，并且将插入符号是在某个词中时，所选内容扩展以包括整个单词。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="4b3e1-939">不一定存在对任何给定的对象; 此命令的响应的实际实现在许多情况下响应的命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="4b3e1-940">此命令本身就支持<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4b3e1-941">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4b3e1-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4b3e1-942">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="4b3e1-943">此示例中，为<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="4b3e1-944">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，并且必须包含对多个编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-945">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是一个命令参数。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="4b3e1-946">最编辑命令忽略的命令参数;一般情况下，此参数应为`null`编辑命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="4b3e1-947">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="4b3e1-948">此对象必须实现<xref:System.Windows.IInputElement>接口，并应包含指定的命令的处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="4b3e1-949">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="4b3e1-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>