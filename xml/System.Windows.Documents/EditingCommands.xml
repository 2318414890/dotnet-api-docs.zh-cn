<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30b353139e00ffa86a542c259a68250718297ece" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b410a-101">提供一组标准的与编辑相关的命令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b410a-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-102">下表显示了编辑命令和关联的默认键笔势 (与中的键名<xref:System.Windows.Input.Key>和<xref:System.Windows.Input.ModifierKeys>枚举)。</span><span class="sxs-lookup"><span data-stu-id="b410a-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="b410a-103">编辑命令</span><span class="sxs-lookup"><span data-stu-id="b410a-103">Editing command</span></span>|<span data-ttu-id="b410a-104">默认键笔势</span><span class="sxs-lookup"><span data-stu-id="b410a-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="b410a-105">无默认键笔势</span><span class="sxs-lookup"><span data-stu-id="b410a-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="b410a-106">无默认键笔势</span><span class="sxs-lookup"><span data-stu-id="b410a-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="b410a-107">插入符号移动命令和选择扩展命令共享一组公共的默认键笔势，常规的不同就是添加<xref:System.Windows.Input.ModifierKeys.Shift>键以插入符号移动命令区分开来选择命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="b410a-108">例如，<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>命令具有的默认键笔势<xref:System.Windows.Input.Key.Left>，和相应<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>命令具有的默认键笔势<xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>。</span><span class="sxs-lookup"><span data-stu-id="b410a-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="b410a-109">一般情况下，命令定义由<xref:System.Windows.Documents.EditingCommands>类不能使用的命令参数 (`parameter`参数应通过<xref:System.Windows.Input.ICommand.Execute%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="b410a-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="b410a-110">有关命令和命令的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b410a-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b410a-111">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-112">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-113">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-114">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-115">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-116">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-117">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-118">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-119">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，该命令请求将当前段落或选中的段落居中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-120">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-120">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-121">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="E" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-122">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-123">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-124">当跨越多个段落的选择内容调用此命令时，产生的效果被应用于参与选择每个段落的全部内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="b410a-125">下图显示了为中心的内容的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="b410a-126">![屏幕快照： TextAlign 属性值 Center](~/add/media/flowdoc-textalign-center.png "屏幕快照： TextAlign 属性值 Center")</span><span class="sxs-lookup"><span data-stu-id="b410a-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="b410a-127">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-128">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-129">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-130">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-131">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-132">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-133">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-134">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-135">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-136">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-137">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，该命令请求将当前段落或选中的段落两端对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-138">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-138">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-139">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="J" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-140">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-141">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-142">如果选择范围跨越多个段落中调用此命令，将影响适用于所选内容中的所有段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="b410a-143">当内容进行两端对齐时，以便对齐的线的相等或几乎相等宽度调整中各行内容的水平间距。</span><span class="sxs-lookup"><span data-stu-id="b410a-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="b410a-144">内容通常两端对齐两侧的内容创建平滑的边缘。</span><span class="sxs-lookup"><span data-stu-id="b410a-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="b410a-145">因为它通常是短于 rest，段落中的最后一行后调用此命令可能保留对齐。</span><span class="sxs-lookup"><span data-stu-id="b410a-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="b410a-146">下图显示对齐 （左对齐） 的内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="b410a-147">![屏幕快照： 内容未对齐](~/add/media/content-unjustified.png "屏幕快照： 内容未对齐")</span><span class="sxs-lookup"><span data-stu-id="b410a-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="b410a-148">下图显示相同的内容后两端对齐。</span><span class="sxs-lookup"><span data-stu-id="b410a-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="b410a-149">![内容的屏幕截图对齐的文本](~/add/media/content-justified.png "内容的屏幕截图对齐的文本")</span><span class="sxs-lookup"><span data-stu-id="b410a-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="b410a-150">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-151">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-152">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-153">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-154">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-155">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-156">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-157">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-158">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-159">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-160">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-161">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，该命令请求将所选内容左对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-162">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-162">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-163">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="L" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-164">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-165">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-166">当跨越多个段落的选择内容调用此命令时，产生的效果被应用于参与选择每个段落的全部内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="b410a-167">下图显示了左对齐内容的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="b410a-168">![屏幕快照： TextAlign 属性值为左对齐](~/add/media/flowdoc-textalign-left.png "屏幕快照： TextAlign 属性值为左对齐")</span><span class="sxs-lookup"><span data-stu-id="b410a-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="b410a-169">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-170">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-171">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-172">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-173">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-174">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-175">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-176">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-177">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-178">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-179">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-180">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，该命令请求将所选内容右对齐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-181">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-181">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-182">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="R" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-183">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-184">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-185">当跨越多个段落的选择内容调用此命令时，产生的效果被应用于参与选择每个段落的全部内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="b410a-186">下图显示了右对齐的内容的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="b410a-187">![屏幕快照： TextAlign 值 Right](~/add/media/flowdoc-textalign-right.png "屏幕快照： TextAlign 值 Right")</span><span class="sxs-lookup"><span data-stu-id="b410a-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="b410a-188">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-189">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-190">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-191">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-192">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-193">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-194">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-195">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-196">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-197">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-198">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-199">表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 命令，该命令请求在当前位置或当前所选内容上输入一个退格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-200">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-200">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-201">此命令的默认键笔势为 <see langword="Backspace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-202">在空选择调用时，此命令将删除之前插入符号的字符或段落分隔符。</span><span class="sxs-lookup"><span data-stu-id="b410a-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="b410a-203">在非空选择调用时，此命令将删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="b410a-204">此命令将保留任何格式设置调用此命令后，在同一位置立即插入的内容已删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="b410a-205">与之相反<xref:System.Windows.Documents.EditingCommands.Delete%2A>命令，不会保留以前的格式设置。</span><span class="sxs-lookup"><span data-stu-id="b410a-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="b410a-206">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-207">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-208">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-209">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-210">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-211">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-212">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-213">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-214">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-215">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-216">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-217">表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，该命令请求更正当前位置任何拼写错误的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-218">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-218">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-219">此命令无默认键笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-220">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-221">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-222">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，该命令请求将当前所选内容的字号缩小 1 磅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-223">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-223">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-224">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemOpenBrackets" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-225">当其中脱字号是在某个词的空选择调用此命令时，所选内容会自动扩展以将命令应用于整个单词。</span><span class="sxs-lookup"><span data-stu-id="b410a-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="b410a-226">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-227">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-228">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-229">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-230">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-231">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-232">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-233">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-234">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-235">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-236">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-237">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令，该命令请求将当前段落的缩进减少一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-238">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-238">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-239">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-240">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-241">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b410a-242">此命令不起的文本元素除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b410a-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-243">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-244">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-245">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-246">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-247">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-248">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-249">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-250">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-251">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-252">表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，该命令请求删除当前所选内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-253">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-253">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-254">此命令的默认键笔势为 <see langword="Delete" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-255">此命令将放弃任何格式设置从已删除所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="b410a-256">与之相反<xref:System.Windows.Documents.EditingCommands.Backspace%2A>命令，其中保留后调用此命令将立即插入在同一位置的内容的已删除选择的任何格式。</span><span class="sxs-lookup"><span data-stu-id="b410a-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="b410a-257">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-258">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-259">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-260">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-261">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-262">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-263">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-264">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-265">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-266">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-267">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-268">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，该命令请求删除下一单词（相对于当前位置而言）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-269">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-269">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-270">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Delete" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-271">如果脱字号为在某个词，则删除之间当前位置单词末尾的单词的其余部分。</span><span class="sxs-lookup"><span data-stu-id="b410a-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="b410a-272">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-273">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-274">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-275">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-276">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-277">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-278">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-279">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-280">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-281">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-282">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-283">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，该命令请求删除上一单词（相对于当前位置而言）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-284">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-284">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-285">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Backspace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-286">如果脱字号为在某个词，则删除当前位置单词的开头之间的单词的其余部分。</span><span class="sxs-lookup"><span data-stu-id="b410a-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="b410a-287">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-288">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-289">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-290">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-291">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-292">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-293">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-294">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-295">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-296">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-297">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-298">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个换行符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-299">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-299">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-300">此命令的默认键笔势<see langword="Shift" /> + <see langword="Enter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-301">为支持流内容，例如编辑器<xref:System.Windows.Controls.RichTextBox>，则此命令原因<xref:System.Windows.Documents.LineBreak>元素要插入当前位置。</span><span class="sxs-lookup"><span data-stu-id="b410a-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="b410a-302">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-303">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-304">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-305">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-306">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-307">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-308">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-309">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-310">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-311">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-312">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-313">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个分段符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-314">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-314">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-315">此命令的默认键笔势为 <see langword="Enter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-316">此命令是等效于用户按 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="b410a-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="b410a-317">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-318">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="b410a-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b410a-319">此命令不起的文本元素除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b410a-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-320">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-321">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-322">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-323">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-324">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-325">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-326">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-327">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-328">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-329">表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，该命令请求忽略当前位置或当前所选内容中任何拼写错误的单词的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-330">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-330">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-331">此命令无默认键笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-332">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-333">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-334">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，该命令请求将当前所选内容的字号增加 1 磅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-335">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-335">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-336">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemCloseBrackets" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-337">如果脱字号位置是在某个词的空选择调用此命令，则被扩展所选内容将命令应用于整个单词。</span><span class="sxs-lookup"><span data-stu-id="b410a-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="b410a-338">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-339">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-340">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-341">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-342">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-343">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-344">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-345">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-346">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-347">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-348">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-349">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令，该命令请求将当前段落的缩进增加一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-350">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-350">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-351">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-352">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-353">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b410a-354">此命令不起的文本元素除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文本元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="b410a-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-355">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-356">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-357">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-358">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-359">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-360">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-361">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-362">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-363">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-364">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，该命令请求将插入符号向下移动一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-365">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-365">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-366">此命令的默认键笔势为 <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-367">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-368">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-369">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-370">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-371">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-372">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-373">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-374">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-375">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-376">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-377">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-378">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，该命令请求将插入符号向下移动一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-379">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-379">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-380">此命令的默认键笔势为 <see langword="PageDown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-381">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-382">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-383">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-384">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-385">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-386">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-387">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-388">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-389">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-390">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-391">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-392">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，该命令请求将插入符号向下移动一个段落。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-393">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-393">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-394">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-395">此命令将插入符号下一步段落开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="b410a-396">此命令的行为类似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>调用时， <xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="b410a-397">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-398">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-399">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-400">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-401">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-402">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-403">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-404">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-405">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-406">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-407">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-408">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，该命令请求将插入符号向左移动一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-409">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-409">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-410">此命令的默认键笔势为 <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-411">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-412">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-413">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-414">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-415">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-416">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-417">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-418">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-419">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-420">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-421">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-422">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，该命令请求将插入符号向左移动一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-423">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-423">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-424">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-425">如果脱字号位于在某个词，此命令将插入符号移动到该单词的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="b410a-426">否则，此命令将插入符号移动到前一个单词的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="b410a-427">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-428">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-429">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-430">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-431">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-432">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-433">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-434">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-435">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-436">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-437">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-438">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，该命令请求将插入符号向右移动一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-439">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-439">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-440">此命令的默认键笔势为 <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-441">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-442">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-443">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-444">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-445">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-446">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-447">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-448">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-449">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-450">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-451">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-452">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，该命令请求将插入符号向右移动一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-453">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-453">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-454">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-455">如果脱字号位于在某个词，此命令将插入符号移动到该单词的末尾。</span><span class="sxs-lookup"><span data-stu-id="b410a-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="b410a-456">否则，此命令将插入符号移动到下一步的单词的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="b410a-457">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-458">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-459">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-460">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-461">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-462">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-463">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-464">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-465">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-466">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-467">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-468">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，该命令请求将插入符号移至内容的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-469">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-469">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-470">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-471">A*文本容器*是窗体的内容手头的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="b410a-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="b410a-472"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="b410a-473">共同的文本容器内包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="b410a-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="b410a-474">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-475">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-476">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-477">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-478">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-479">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-480">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-481">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-482">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-483">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-484">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-485">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，该命令请求将插入符号移至内容的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-486">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-486">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-487">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-488">A*文本容器*是窗体的内容手头的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="b410a-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="b410a-489"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="b410a-490">共同的文本容器内包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="b410a-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="b410a-491">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-492">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-493">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-494">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-495">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-496">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-497">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-498">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-499">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-500">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-501">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-502">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，该命令请求将插入符号移至当前行的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-503">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-503">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-504">此命令的默认键笔势为 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-505">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-506">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-507">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-508">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-509">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-510">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-511">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-512">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-513">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-514">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-515">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-516">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，该命令请求将插入符号移至当前行的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-517">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-517">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-518">此命令的默认键笔势为 <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-519">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-520">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-521">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-522">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-523">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-524">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-525">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-526">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-527">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-528">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-529">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-530">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，该命令请求将插入符号向上移动一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-531">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-531">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-532">此命令的默认键笔势为 <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-533">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-534">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-535">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-536">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-537">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-538">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-539">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-540">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-541">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-542">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-543">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-544">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，该命令请求将插入符号向上移动一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-545">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-545">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-546">此命令的默认键笔势为 <see langword="PageUp" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-547">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-548">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-549">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-550">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-551">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-552">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-553">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-554">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-555">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-556">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-557">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-558">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，该命令请求将插入符号向上移动一个段落。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-559">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-559">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-560">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-561">此命令将插入符号下一步段落开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="b410a-562">此命令的行为类似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>调用时， <xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="b410a-563">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-564">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-565">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-566">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-567">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-568">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-569">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-570">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-571">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-572">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-573">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-574">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，该命令请求将当前选择范围向下扩展一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-575">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-575">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-576">此命令的默认键笔势<see langword="Shift" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-577">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-578">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-579">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-580">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-581">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-582">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-583">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-584">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-585">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-586">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-587">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-588">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，该命令请求将当前选择范围向下扩展一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-589">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-589">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-590">此命令的默认键笔势<see langword="Shift" /> + <see langword="PageDown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-591">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-592">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-593">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-594">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-595">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-596">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-597">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-598">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-599">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-600">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-601">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-602">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，该命令请求将当前选择范围向下扩展一段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-603">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-603">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-604">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-605">此命令将选择扩展到下一段的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="b410a-606">否则，此命令将选择扩展到的当前段落的末尾。</span><span class="sxs-lookup"><span data-stu-id="b410a-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="b410a-607">展开选定内容包括段落中断，标记段落的一端。</span><span class="sxs-lookup"><span data-stu-id="b410a-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="b410a-608">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-609">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-610">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-611">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-612">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-613">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-614">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-615">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-616">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-617">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-618">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-619">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，该命令请求将当前选择范围向左扩展一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-620">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-620">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-621">此命令的默认键笔势<see langword="Shift" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-622">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-623">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-624">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-625">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-626">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-627">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-628">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-629">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-630">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-631">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-632">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-633">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，该命令请求将当前选择范围向左扩展一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-634">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-634">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-635">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-636">如果脱字号位于在某个词，此命令将选择扩展到该单词的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="b410a-637">否则，此命令将选择扩展到前一个单词的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="b410a-638">展开所选内容不包括单词分隔符。</span><span class="sxs-lookup"><span data-stu-id="b410a-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="b410a-639">与之相反<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>，其中包括 word 分隔符中的更多选择。</span><span class="sxs-lookup"><span data-stu-id="b410a-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="b410a-640">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-641">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-642">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-643">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-644">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-645">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-646">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-647">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-648">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-649">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-650">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-651">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，该命令请求将当前选择范围向右扩展一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-652">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-652">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-653">此命令的默认键笔势<see langword="Shift" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-654">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-655">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-656">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-657">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-658">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-659">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-660">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-661">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-662">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-663">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-664">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-665">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，该命令请求将当前选择范围向右扩展一个单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-666">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-666">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-667">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-668">如果脱字号位于在某个词，此命令将选择扩展到该单词的末尾。</span><span class="sxs-lookup"><span data-stu-id="b410a-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="b410a-669">否则，此命令将选择扩展到下一步单词末尾。</span><span class="sxs-lookup"><span data-stu-id="b410a-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="b410a-670">展开选定内容包括单词分隔符。</span><span class="sxs-lookup"><span data-stu-id="b410a-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="b410a-671">与之相反<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>其中不包括单词分隔符中的更多选择。</span><span class="sxs-lookup"><span data-stu-id="b410a-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="b410a-672">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-673">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-674">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-675">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-676">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-677">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-678">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-679">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-680">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-681">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-682">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-683">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，该命令请求将当前选择范围扩展到内容末尾处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-684">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-684">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-685">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-686">A*文本容器*是窗体的内容手头的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="b410a-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="b410a-687"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="b410a-688">共同的文本容器内包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="b410a-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="b410a-689">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-690">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-691">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-692">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-693">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-694">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-695">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-696">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-697">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-698">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-699">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-700">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，该命令请求将当前选择范围扩展到内容开头处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-701">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-701">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-702">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-703">A*文本容器*是窗体的内容手头的最终边框的元素。</span><span class="sxs-lookup"><span data-stu-id="b410a-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="b410a-704"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文本容器的示例。</span><span class="sxs-lookup"><span data-stu-id="b410a-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="b410a-705">共同的文本容器内包含的内容被称为*文档*。</span><span class="sxs-lookup"><span data-stu-id="b410a-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="b410a-706">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-707">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-708">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-709">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-710">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-711">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-712">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-713">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-714">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-715">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-716">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-717">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，该命令请求将当前选择范围扩展到当前行的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-718">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-718">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-719">此命令的默认键笔势<see langword="Shift" /> + <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-720">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-721">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-722">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-723">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-724">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-725">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-726">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-727">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-728">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-729">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-730">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-731">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，该命令请求将当前选择范围扩展到当前行的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-732">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-732">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-733">此命令的默认键笔势<see langword="Shift" /> + <see langword="Home" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-734">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-735">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-736">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-737">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-738">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-739">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-740">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-741">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-742">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-743">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-744">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-745">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，该命令请求将当前选择范围向上扩展一行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-746">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-746">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-747">此命令的默认键笔势<see langword="Shift" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-748">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-749">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-750">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-751">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-752">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-753">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-754">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-755">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-756">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-757">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-758">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-759">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，该命令请求将当前选择范围向上扩展一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-760">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-760">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-761">此命令的默认键笔势<see langword="Shift" /> + <see langword="PageUp" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-762">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-763">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-764">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-765">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-766">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-767">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-768">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-769">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-770">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-771">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-772">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-773">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，该命令请求将当前选择范围向上扩展一段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-774">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-774">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-775">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-776">如果脱字号位于开始位置的段落，此命令将选择扩展到上一段的开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="b410a-777">否则，此命令将选择扩展到的当前段落开头。</span><span class="sxs-lookup"><span data-stu-id="b410a-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="b410a-778">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-779">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-780">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-781">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-782">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-783">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-784">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-785">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-786">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-787">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-788">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-789">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-790">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-790">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-791">此命令的默认键笔势<see langword="Shift" /> + <see langword="Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-792">此命令的行为取决于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="b410a-793">如果选择项非空，则此命令相当于<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="b410a-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="b410a-794">如果脱字号位于表单元格中 (由表示<xref:System.Windows.Documents.TableCell>元素)，此命令将插入符号移动到上一个单元格。</span><span class="sxs-lookup"><span data-stu-id="b410a-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="b410a-795">否则，在当前的位置插入一个 tab 字符。</span><span class="sxs-lookup"><span data-stu-id="b410a-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="b410a-796">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-797">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="b410a-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-798">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-799">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-800">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-801">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-802">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-803">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-804">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-805">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-806">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-807">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-808">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-808">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-809">此命令的默认键笔势为 <see langword="Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-810">此命令的行为取决于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="b410a-811">如果所选内容为非空，或如果所选内容为空且当前插入符号位置位于某一段落开头，则此命令相当于<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="b410a-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="b410a-812">如果脱字号位于表单元格中 (由表示<xref:System.Windows.Documents.TableCell>元素)，此命令将插入符号移动到下一个单元格。</span><span class="sxs-lookup"><span data-stu-id="b410a-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="b410a-813">如果脱字号位于表的最后一个单元格中，此命令会导致要追加到表，插入符号放置在新行的第一个单元与新行。</span><span class="sxs-lookup"><span data-stu-id="b410a-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="b410a-814">否则，在当前的位置插入一个 tab 字符。</span><span class="sxs-lookup"><span data-stu-id="b410a-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="b410a-815">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-816">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(时<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>属性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="b410a-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-817">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-818">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-819">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-820">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-821">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-822">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-823">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-824">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-825">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-826">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Bold" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-827">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-827">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-828">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="B" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-829">如果<xref:System.Windows.FontWeight>当前所选内容是从范围中<xref:System.Windows.FontWeights.Thin%2A>到<xref:System.Windows.FontWeights.SemiBold%2A>，<xref:System.Windows.FontWeights.Bold%2A>应用于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="b410a-830">否则为<xref:System.Windows.FontWeights.Normal%2A>应用。</span><span class="sxs-lookup"><span data-stu-id="b410a-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="b410a-831">有关比较列表<xref:System.Windows.FontWeight>值，请参阅<xref:System.Windows.FontWeights>。</span><span class="sxs-lookup"><span data-stu-id="b410a-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="b410a-832">当所选内容为空并且脱字号位于在某个词时，所选内容被扩展以包含整个单词。</span><span class="sxs-lookup"><span data-stu-id="b410a-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="b410a-833">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-834">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-835">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-836">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-837">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-838">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-839">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-840">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-841">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-842">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-843">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-844">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令，该命令请求对当前所选内容进行无序列表（也称为项目符号列表）格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-845">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-845">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-846">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-847">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-848">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-849">当跨越多个段落的选择内容调用此命令时，产生的效果被应用于参与选择每个段落的全部内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="b410a-850">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-851">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-852">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-853">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-854">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-855">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-856">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-857">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-858">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-859">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-860">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-861">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，该命令用于切换“插入”和“改写”键入模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-862">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-862">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-863">此命令的默认键笔势为 <see langword="Insert" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-864">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-865">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-866">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-867">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-868">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-869">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-870">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-871">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-872">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-873">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-874">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-875">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Italic" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-876">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-876">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-877">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="I" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-878">如果<xref:System.Windows.FontStyle>当前所选内容为<xref:System.Windows.FontStyles.Normal%2A>，<xref:System.Windows.FontStyles.Italic%2A>应用于当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="b410a-879">否则为<xref:System.Windows.FontStyles.Normal%2A>应用。</span><span class="sxs-lookup"><span data-stu-id="b410a-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="b410a-880">当所选内容为空并且脱字号位于在某个词时，所选内容被扩展以包含整个单词。</span><span class="sxs-lookup"><span data-stu-id="b410a-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="b410a-881">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-882">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-883">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-884">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-885">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-886">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-887">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-888">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-889">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-890">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-891">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-892">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令，该命令请求对当前所选内容进行排序列表（也称为编号列表）格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-893">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-893">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-894">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-895">此命令在<xref:System.Windows.Documents.Paragraph>级别。</span><span class="sxs-lookup"><span data-stu-id="b410a-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="b410a-896">如果对部分选择的内容 （包括插入符号所在段落中的空选择） 段落中调用此命令，则请求的效果将应用于整个段落。</span><span class="sxs-lookup"><span data-stu-id="b410a-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="b410a-897">当跨越多个段落的选择内容调用此命令时，产生的效果被应用于参与选择每个段落的全部内容。</span><span class="sxs-lookup"><span data-stu-id="b410a-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="b410a-898">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-899">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-900">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-901">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-902">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-903">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-904">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-905">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-906">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-907">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-908">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-909">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令，该命令请求对当前所选内容进行下标格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-910">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-910">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-911">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="OemPlus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-912">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-913">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-914">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-915">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-916">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-917">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-918">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-919">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-920">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-921">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-922">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令，该命令请求对当前所选内容进行上标格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-923">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-923">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-924">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-925">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-926">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-927">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-928">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-929">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-930">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-931">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-932">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-933">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-934">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b410a-935">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Underline" /> 格式切换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b410a-936">请求的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-936">The requested command.</span>
          </span>
          <span data-ttu-id="b410a-937">此命令的默认键笔势<see langword="Ctrl" /> + <see langword="U" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b410a-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b410a-938">当所选内容为空并且脱字号位于在某个词时，所选内容被扩展以包含整个单词。</span><span class="sxs-lookup"><span data-stu-id="b410a-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="b410a-939">并不一定对任何给定的对象; 此命令的响应的实际实现在许多情况下响应命令的实现是应用程序编写器的责任。</span><span class="sxs-lookup"><span data-stu-id="b410a-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="b410a-940">此命令以本机方式支持通过<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="b410a-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b410a-941">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="b410a-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b410a-942">下面的示例演示如何调用上支持该命令的对象的编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="b410a-943">对于此示例，<xref:System.Windows.Controls.RichTextBox>用作命令目标。</span><span class="sxs-lookup"><span data-stu-id="b410a-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="b410a-944">请注意，<xref:System.Windows.Controls.RichTextBox>实现<xref:System.Windows.IInputElement>接口 (继承自<xref:System.Windows.FrameworkElement>)，它包括对很多编辑命令的本机支持。</span><span class="sxs-lookup"><span data-stu-id="b410a-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="b410a-945">第一个参数<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令参数。</span><span class="sxs-lookup"><span data-stu-id="b410a-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="b410a-946">最编辑命令忽略命令参数;一般情况下，此参数应`null`以进行编辑命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="b410a-947">第二个参数指定该命令将路由到的对象。</span><span class="sxs-lookup"><span data-stu-id="b410a-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="b410a-948">此对象必须实现<xref:System.Windows.IInputElement>接口，并且应包括的处理程序指定的命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="b410a-949">通常情况下，在不处理该命令的对象上调用时，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="b410a-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>