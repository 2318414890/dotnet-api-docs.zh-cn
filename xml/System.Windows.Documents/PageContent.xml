<Type Name="PageContent" FullName="System.Windows.Documents.PageContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feec2bb332e7ec96a719ed4564c131fa3dfe51ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageContent : System.Windows.FrameworkElement, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageContent extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.PageContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageContent&#xA;Inherits FrameworkElement&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageContent sealed : System::Windows::FrameworkElement, System::Windows::Markup::IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供有关 <see cref="T:System.Windows.Documents.FixedPage" /> 中的 <see cref="T:System.Windows.Documents.FixedDocument" /> 元素的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent> 元素都是唯一允许的子元素的<xref:System.Windows.Documents.FixedDocument>。 顺序<xref:System.Windows.Documents.PageContent>中的元素<xref:System.Windows.Documents.FixedDocument>定义页面顺序。  
  
 <xref:System.Windows.Documents.PageContent> 相关信息提供<xref:System.Windows.Documents.FixedPage>中的元素<xref:System.Windows.Documents.FixedDocument>而无需应用程序以加载单个页。  
  
 <xref:System.Windows.Documents.PageContent.Source%2A>依赖项属性指定[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]相应<xref:System.Windows.Documents.FixedPage>。  
  
 有关详细信息<xref:System.Windows.Documents.PageContent>元素，请参阅第 3 章的 XPS*打开 XML 纸张规范*下载[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。  
  
   
  
## Examples  
 下面的示例演示添加的过程<xref:System.Windows.Documents.PageContent>到<xref:System.Windows.Documents.FixedDocument>。  
  
 [!code-csharp[XpsSave#XpsSaveCreateFixedDocPages](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#xpssavecreatefixeddocpages)]
 [!code-vb[XpsSave#XpsSaveCreateFixedDocPages](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#xpssavecreatefixeddocpages)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Documents.PageContent" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示使用<xref:System.Windows.Documents.PageContent.%23ctor%2A>构造函数。  
  
 [!code-csharp[XpsSave#XpsSaveCreateFixedPage5](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#xpssavecreatefixedpage5)]
 [!code-vb[XpsSave#XpsSaveCreateFixedPage5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#xpssavecreatefixedpage5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FixedPage Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.FixedPage Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As FixedPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::FixedPage ^ Child { System::Windows::Documents::FixedPage ^ get(); void set(System::Windows::Documents::FixedPage ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FixedPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此 <see cref="T:System.Windows.Documents.PageContent" /> 关联的 <see cref="T:System.Windows.Documents.FixedPage" />。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FixedPage" />与此关联<see cref="T:System.Windows.Documents.PageContent" />，或**null**时<see cref="T:System.Windows.Documents.FixedPage" />由设置<see cref="P:System.Windows.Documents.PageContent.Source" />属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.Child%2A>属性返回<xref:System.Windows.Documents.FixedPage>时：  
  
1.  <xref:System.Windows.Documents.PageContent> 具有立即<xref:System.Windows.Documents.FixedPage>中定义的子[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]标记。  
  
2.  <xref:System.Windows.Documents.PageContent.System%23Windows%23Markup%23IAddChild%23AddChild%2A>已调用来设置<xref:System.Windows.Documents.FixedPage>作为的子级<xref:System.Windows.Documents.PageContent>。  
  
 <xref:System.Windows.Documents.PageContent.Child%2A>属性返回**null**时：  
  
1.  <xref:System.Windows.Documents.FixedPage>由设置<xref:System.Windows.Documents.PageContent.Source%2A>属性 (当指定<xref:System.Windows.Documents.PageContent.Source%2A>属性，<xref:System.Windows.Documents.FixedPage>不缓存)。  使用<xref:System.Windows.Documents.PageContent.GetPageRoot%2A>或<xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>返回<xref:System.Windows.Documents.FixedPage>时设置<xref:System.Windows.Documents.PageContent.Source%2A>属性。  
  
 有关详细信息<xref:System.Windows.Documents.PageContent>元素，请参阅第 3 章的 XPS *XML 纸张规范*下载[ http://www.microsoft.com/whdc/xps/xpsspec.mspx ](http://www.microsoft.com/whdc/xps/xpsspec.mspx)。  
  
<a name="xamlTextUsage_Child"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 不能在 XAML 中使用此属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.PageContent.Source" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FixedPage GetPageRoot (bool forceReload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.FixedPage GetPageRoot(bool forceReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPageRoot (forceReload As Boolean) As FixedPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::FixedPage ^ GetPageRoot(bool forceReload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FixedPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceReload" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceReload">
          如果为 <see langword="true" />，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前以对其进行加载和缓存；如果为 <see langword="false" />，则仅在没有缓存的版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
        <summary>加载并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。</summary>
        <returns>此页的可视化树的根元素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.GetPageRoot%2A> 执行同步的加载和分析的<xref:System.Windows.Documents.FixedPage>。  
  
> [!NOTE]
>  使用<xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>而不是<xref:System.Windows.Documents.PageContent.GetPageRoot%2A>以避免线程时阻止<xref:System.Windows.Documents.FixedPage>加载。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRootAsync">
      <MemberSignature Language="C#" Value="public void GetPageRootAsync (bool forceReload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPageRootAsync(bool forceReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetPageRootAsync (forceReload As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetPageRootAsync(bool forceReload);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceReload" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceReload">
          如果为 <see langword="true" />，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前以对其进行加载和缓存；如果为 <see langword="false" />，则仅在没有缓存的版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
        <summary>异步加载并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A> 以异步方式加载并分析<xref:System.Windows.Documents.FixedPage>与此关联的数据流<xref:System.Windows.Documents.PageContent>。  其他线程将继续运行时<xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>完成。  
  
 以下步骤说明了如何加载<xref:System.Windows.Documents.FixedPage>异步内容：  
  
1.  创建<xref:System.Windows.Documents.GetPageRootCompletedEventHandler>委托并将其接收的通知添加<xref:System.Windows.Documents.PageContent.GetPageRootCompleted>事件。  
  
2.  调用 <xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>。  
  
3.  当<xref:System.Windows.Documents.PageContent.GetPageRootCompleted>事件发生，并且会调用的委托，<xref:System.Windows.Documents.FixedPage>内容已完成加载。  加载<xref:System.Windows.Documents.FixedPage>通过返回元素<xref:System.Windows.Documents.GetPageRootCompletedEventArgs>。<xref:System.Windows.Documents.GetPageRootCompletedEventArgs.Result%2A> 属性。  
  
 有关详细信息`<PageContent>`元素，请参阅第 3 章的 XPS 规范，可以获取在[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRootAsyncCancel">
      <MemberSignature Language="C#" Value="public void GetPageRootAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPageRootAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetPageRootAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetPageRootAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消当前正在进行的任何 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.GetPageRootAsyncCancel%2A> 取消任何<xref:System.Windows.Documents.PageContent.GetPageRootAsync%2A>不与已完成的操作<xref:System.Windows.Documents.PageContent.GetPageRootCompleted>事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPageRootCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.GetPageRootCompletedEventHandler GetPageRootCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.GetPageRootCompletedEventHandler GetPageRootCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetPageRootCompleted As GetPageRootCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::GetPageRootCompletedEventHandler ^ GetPageRootCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.GetPageRootCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 完成时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.GetPageRootCompleted>事件处理方法基于<xref:System.Windows.Documents.GetPageRootCompletedEventHandler>委托。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />
        <altmember cref="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventArgs" />
        <altmember cref="T:System.Windows.Documents.GetPageRootCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LinkTargets">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LinkTargetCollection LinkTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.LinkTargetCollection LinkTargets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.LinkTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkTargets As LinkTargetCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LinkTargetCollection ^ LinkTargets { System::Windows::Documents::LinkTargetCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LinkTargetCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取标识页上超链接可寻址位置的 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的集合。</summary>
        <value>标识页上超链接可寻址位置的 <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 元素的 <see cref="T:System.Windows.Documents.LinkTarget" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.PageContent.LinkTargets%2A> 将永远不会返回`null`，但集合可能包含零个元素。  
  
 有关详细信息`<PageContent>`元素，请参阅第 3 章的 XPS 规范，可以获取在[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FixedPage.NavigateUri" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChild">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChild (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChild(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChild (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChild(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">序列化服务提供程序。</param>
        <summary>获取一个值，该值指示当序列化此 <see cref="P:System.Windows.Documents.PageContent.Child" /> 时，是否应该序列化 <see cref="T:System.Windows.Documents.PageContent" /> 属性的值。</summary>
        <returns>
          如果 <paramref name="manager" /> 不为 <see langword="true" /> 并且它没有 XmlWriter，则为 <see langword="null" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 或将其设置到 <see cref="T:System.Windows.Documents.FixedPage" /> 内容数据流。</summary>
        <value>相应的 <see cref="T:System.Uri" /> 的 <see cref="T:System.Windows.Documents.FixedPage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息`<PageContent>`元素并将其`Source`属性，请参阅可以获取在 XPS 规范的第 3 章[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.PageContent.SourceProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Documents.PageContent.SourceProperty" />
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.PageContent.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.PageContent.Source" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要添加的子 <see cref="T:System.Object" />。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Windows.Documents.PageContent> 实例强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要添加到对象的文本。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Windows.Documents.PageContent> 实例强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System.Windows.Markup.IUriContext.BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
        <value>当前上下文的基 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Windows.Documents.PageContent> 实例强制转换为 <xref:System.Windows.Markup.IUriContext> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>