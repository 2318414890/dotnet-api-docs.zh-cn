<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextPointer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d374acbfa59bece9a23ff4841ba74263d0c6fa42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d374acbfa59bece9a23ff4841ba74263d0c6fa42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Represents a position within a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.FlowDocument" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Controls.TextBlock" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.FlowDocument" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.TextBlock" /&gt;</ph> 中的一个位置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class introduces the following terminology:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>类引入了以下术语：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Position - Inherently, a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always points to a <bpt id="p1">*</bpt>position<ept id="p1">*</ept> in content.</source>
          <target state="translated">位置-本质上就是，<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>始终指向<bpt id="p1">*</bpt>位置<ept id="p1">*</ept>内容中。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</source>
          <target state="translated">请在之间的内容中的字符或之间流内容元素标记此类位置定义的内容的结构。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Current Position - Because a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always indicates a position, and because many of the operations that can be performed through a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> are relative to the position currently pointed to by the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>, it makes sense to simply refer to the position indicated by a <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> as the <bpt id="p1">*</bpt>current position<ept id="p1">*</ept>.</source>
          <target state="translated">当前位置-因为<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>始终指示一个位置，而是因为可以通过执行的操作的许多<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>相对于当前指向的位置是<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>，因此只需引用指示的位置<ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>作为<bpt id="p1">*</bpt>当前位置<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Insertion Position - An <bpt id="p1">*</bpt>insertion position<ept id="p1">*</ept> is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">插入位置-<bpt id="p1">*</bpt>插入位置<ept id="p1">*</ept>是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">一个有效的示例<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不的插入位置的位置是相邻两个位置<ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Symbol - For the purposes of <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> operations that involve symbols, any of the following is considered to be a <bpt id="p1">*</bpt>symbol<ept id="p1">*</ept>:</source>
          <target state="translated">符号-出于<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>涉及符号的操作，将以下任一被视为可<bpt id="p1">*</bpt>符号<ept id="p1">*</ept>:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained within an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Each 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">每个 16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Text Container - A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the flow content at hand; the position indicated by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always falls within a text container.</source>
          <target state="translated">文本容器-一个<bpt id="p1">*</bpt>文本容器<ept id="p1">*</ept>窗体流内容手头的最终边框的元素; 所指示的位置<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>始终在范围内的文本容器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Currently, a text container must be either a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">目前，文本容器必须是<ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Generally speaking, operations between <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances in different text containers are not supported.</source>
          <target state="translated">一般来讲，之间的操作<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不支持在不同的文本容器中的实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Document - The content in a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>, as in the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph> properties.</source>
          <target state="translated">文档的文本容器中的内容被称为<bpt id="p1">*</bpt>文档<ept id="p1">*</ept>，类似于<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class is intended to facilitate traversal and manipulation of content that is represented by <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> flow content elements; in general, such elements derive from <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>类旨在促进遍历和操作的内容由<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>流内容元素; 一般情况下，此类元素派生自<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Some of the operations that <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> facilitates include the following:</source>
          <target state="translated">某些操作，<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>促进如下：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Perform an ordinal comparison of the current position with a second specified position.</source>
          <target state="translated">执行序号比较的第二个指定位置与当前的位置。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Determine the type of content adjacent to the current position in a specified direction.</source>
          <target state="translated">确定指定方向中的当前位置到相邻的内容类型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> enumeration.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> that scopes or is adjacent to the current position.</source>
          <target state="translated">获取<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>的作用域或靠近当前的位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A&gt;</ph> method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get the text container that scopes the current document.</source>
          <target state="translated">获取文本容器的作用域的当前文档。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> property.</source>
          <target state="translated">请参阅 <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get a specified number of characters preceding or following the current position.</source>
          <target state="translated">获取指定的数目的字符之前或之后的当前位置。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Insert a string of characters at the current position.</source>
          <target state="translated">在当前的位置插入字符的字符串。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A&gt;</ph> method.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Find line boundaries in content.</source>
          <target state="translated">在内容中找到行边界。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> property.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Translate between <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> positions and symbol offsets into content.</source>
          <target state="translated">之间进行转换<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>位置与符号偏移量为内容。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> methods.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Perform visual hit testing by translating between a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position and a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> representing relative coordinates.</source>
          <target state="translated">执行之间进行转换来的可视命中测试<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>位置和一个<ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>表示相对坐标。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Find a nearby insertion position, or check whether the current position is an insertion position.</source>
          <target state="translated">查找附近的插入位置，或检查当前的位置是否的插入位置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> methods and the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A&gt;</ph> property.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>方法和<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The position and <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> indicated by a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> object are immutable.</source>
          <target state="translated">位置和<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph>由<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>对象是不可变。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>When content is edited or modified, the position indicated by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</source>
          <target state="translated">编辑或修改所指示的位置的内容时<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不会更改相对于周围文本; 而是相应地调整的内容从一开始该位置的偏移量以反映新的相对位置中内容。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</source>
          <target state="translated">例如， <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> ，该值指示给定的段的开头的位置继续指向该段的开头，即使内容被插入或删除段落之前或之后。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class does not provide any public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>类不提供任何公共构造函数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An instance of <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is created by using properties or methods of other objects (including other <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> objects).</source>
          <target state="translated">实例<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>创建通过属性或方法的其他对象 (包括其他<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>对象)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following list provides a few examples of methods and properties that create and return a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">以下列表提供了几个示例的方法和属性创建并将返回<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>This list is not exhaustive:</source>
          <target state="translated">此列表并不详尽:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextRange.Start%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.TextRange.End%2A&gt;</ph>.</source>
          <target state="translated">从<ph id="ph1">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>:<ph id="ph2">&lt;xref:System.Windows.Documents.TextRange.Start%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Documents.TextRange.End%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>:  <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement.ContentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextElement.ElementStart%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement.ElementEnd%2A&gt;</ph>.</source>
          <target state="translated">从<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement.ContentStart%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement.ContentEnd%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Documents.TextElement.ElementStart%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Documents.TextElement.ElementEnd%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> (text container): <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.ContentEnd%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A&gt;</ph>.</source>
          <target state="translated">从<ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>（文本容器）： <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock.ContentStart%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.ContentEnd%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> (text container): <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument.ContentStart%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument.ContentEnd%2A&gt;</ph></source>
          <target state="translated">从<ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>（文本容器）： <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument.ContentStart%2A&gt;</ph>，和 <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument.ContentEnd%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From an existing <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>.</source>
          <target state="translated">从现有<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to find a position just inside of the first <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element in a specified text container.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>查找仅在第一个位置<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>指定的文本容器中的元素。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following example implements a simplistic find algorithm using <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> facilities.</source>
          <target state="translated">下面的示例实现非常简单的查找算法使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>设施。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to compare to the current position.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指定要与当前位置进行比较的位置。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>Performs an ordinal comparison between the positions specified by the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and a second specified <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">对当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 和第二个指定 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 所表示位置的顺序进行比较。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>–1 if the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes <ph id="ph2">&lt;paramref name="position" /&gt;</ph>; 0 if the locations are the same; +1 if the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> follows <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">如果当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 位于 <ph id="ph2">&lt;paramref name="position" /&gt;</ph> 之前，则为 –1；如果位置相同，则为 0；如果当前 <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 位于 <ph id="ph4">&lt;paramref name="position" /&gt;</ph> 之后，则为 +1。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of –1 indicates that the position specified by the current <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> precedes the position specified by <ph id="ph2">`position`</ph>.</source>
          <target state="translated">值 – 1 指示位置指定由当前<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>之前指定的位置<ph id="ph2">`position`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of 0 indicates that the indicated positions are equal.</source>
          <target state="translated">值为 0 指示所指示的位置相等。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of positive +1 indicates that the position specified by the current <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> follows the position specified by <ph id="ph2">`position`</ph>.</source>
          <target state="translated">值为正 + 1 表示由当前指定的位置<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>由指定的位置之后<ph id="ph2">`position`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>In the example, the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> method is used in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> method to test whether a specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> is empty.</source>
          <target state="translated">在示例中，<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph>结合使用方法<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph>方法测试是否指定<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>为空。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> specifies a position outside of the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> 指定位于与当前位置相关联的文本容器之外的某个位置。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters to delete, starting at the current position.</source>
          <target state="translated">从当前位置开始要删除的字符数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</source>
          <target state="translated">指定正值将删除当前位置之后的字符；指定负值将删除当前位置之前的字符。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Deletes the specified number of characters from the position indicated by the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">从当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 指示的位置开始删除指定数目的字符。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters actually deleted.</source>
          <target state="translated">实际删除的字符数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Specify a positive value to delete characters that follow the current position (as in <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>); specify a negative value to delete characters that precede the current position (as in <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">指定正值，若要删除当前的位置之后的字符 (如<ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>); 指定负值可删除的当前的位置之前的字符 (如<ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters actually deleted may be less than the number specified by <ph id="ph1">`count`</ph>.</source>
          <target state="translated">实际删除的字符数可能小于指定的数<ph id="ph1">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>This happens in cases where <ph id="ph1">`count`</ph> specifies more characters than exist to be deleted.</source>
          <target state="translated">在情况下将发生这种情况其中<ph id="ph1">`count`</ph>指定多于存在要删除的多个字符。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The method is called at a position where text is not allowed.</source>
          <target state="translated">在不允许出现文本的位置处调用此方法。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the end of content in the text container associated with the current position.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向文本容器中与当前位置相关联的内容的结束位置。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the end of content in the text container associated with the current position.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向文本容器中与当前位置相关联的内容的结束位置。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> for the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is always a text container (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), rather than a <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph>针对返回<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>始终是文本容器 (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>)，而不是<ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the beginning of content in the text container associated with the current position.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向文本容器中与当前位置相关联的内容的开始位置。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the beginning of content in the text container associated with the current position.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向文本容器中与当前位置相关联的内容的开始位置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</source>
          <target state="translated">使用此属性返回作为基准位置，从可用来处理到其他位置的相对偏移量的位置。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> methods provide a way to translate between positions and position offsets.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>方法提供了一种方法的位置和位置之间进行转换偏移量。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> for the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is always a text container (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), rather than a <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph>针对返回<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>始终是文本容器 (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>)，而不是<ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for an adjacent element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定搜索相邻元素时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>Returns the element, if any, that borders the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">返回在指定逻辑方向上的边界正好位于当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 处的元素（如果有）。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>The adjacent element in the specified <ph id="ph1">&lt;paramref name="direction" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no adjacent element exists.</source>
          <target state="translated">指定 <ph id="ph1">&lt;paramref name="direction" /&gt;</ph> 上的相邻元素；或者，如果不存在任何相邻元素，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>The returned element is typically a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">返回的元素是通常<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> can be returned when the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> indicates a position inside a <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph> element or an <ph id="ph4">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> element.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>时，会返回<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>指示的位置位于<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>元素或<ph id="ph4">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find a content bounding box.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定查找内容边框时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Returns a bounding box (<ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>) for content that borders the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">返回在指定逻辑方向上的边界正好位于当前 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 处的内容的边框 (<ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>A bounding box for content that borders the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified direction, or <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> if current, valid layout information is unavailable.</source>
          <target state="translated">在指定方向上的边界正好位于当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 处的内容的边框；或者，如果当前没有可用的有效布局信息，则为 <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> edges are not considered content for the purposes of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> 边缘出于的此方法不考虑内容。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is positioned before a <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> edge, the return value is a bounding box for the next non-<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> content in the specified direction.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>位于之前<ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>边缘，则返回值是边界框的下一非<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>内容按指定的方向。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>If there is no content in the specified direction, a zero-width <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is returned with a height matching the height of any preceding content.</source>
          <target state="translated">指定的方向，零宽度中是否存在任何内容<ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>返回与匹配内容的任何前面高度高度。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>The operation performed by this method depends on a valid layout.</source>
          <target state="translated">此方法执行的操作取决于有效的布局。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">重新生成布局可以是一个代价相对较大的操作。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph>属性来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>布局<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the closest insertion position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定搜索最近插入位置时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the closest insertion position in the specified logical direction.</source>
          <target state="translated">返回一个指向指定逻辑方向上的最近插入位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the closest insertion position in the specified direction.</source>
          <target state="translated">一个指向指定方向上的最近插入位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">插入位置是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">一个有效的示例<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不的插入位置的位置是相邻两个位置<ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>已指向一个有效的插入的位置，但结束标记为非空的格式设置序列紧随的给定的方向中的此位置则<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>返回由此方法进行调整，以指向插入恰好在格式设置序列的关闭后的位置。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>For example, consider the markup sequence <ph id="ph1">`&lt;Bold&gt;a&lt;/Bold&gt;b`</ph>.</source>
          <target state="translated">例如，考虑标记序列<ph id="ph1">`&lt;Bold&gt;a&lt;/Bold&gt;b`</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Note that there are two insertion positions between the letters <ph id="ph1">`a`</ph> and <ph id="ph2">`b`</ph> — one that precedes the closing <ph id="ph3">`Bold`</ph> tag, and one directly following the closing <ph id="ph4">`Bold`</ph> tag.</source>
          <target state="translated">请注意，有两个字母之间的插入位置<ph id="ph1">`a`</ph>和<ph id="ph2">`b`</ph>— 一个之前结束<ph id="ph3">`Bold`</ph>标记和另一个紧随结束<ph id="ph4">`Bold`</ph>标记。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> is called on a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to the position directly after the letter <ph id="ph3">`a`</ph> and before of the closing <ph id="ph4">`Bold`</ph> tag, and with a <ph id="ph5">`direction`</ph> of <ph id="ph6">&lt;xref:System.Windows.Documents.LogicalDirection.Forward&gt;</ph>, the returned <ph id="ph7">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is adjusted to point to the position just before the letter <ph id="ph8">`b`</ph>, after the closing <ph id="ph9">`Bold`</ph> tag.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph>上调用<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>到紧跟字母位置<ph id="ph3">`a`</ph>和之前的结束<ph id="ph4">`Bold`</ph>标记，并与<ph id="ph5">`direction`</ph>的<ph id="ph6">&lt;xref:System.Windows.Documents.LogicalDirection.Forward&gt;</ph>，返回<ph id="ph7">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>调整以指向位置之前字母<ph id="ph8">`b`</ph>之后，结束<ph id="ph9">`Bold`</ph>标记。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</source>
          <target state="translated">类似调整专为在相反的逻辑方向中工作时打开格式设置的标记。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method is intended to provide a means of disambiguation between insertion positions in similar cases.</source>
          <target state="translated">此方法旨在提供一种消除两个在类似情况下的插入位置之间的歧义。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</source>
          <target state="translated">此方法还可以用于涉及的结构化标记序列时，应慎重有关插入点。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>) or at the end of the preceding paragraph (by specifying <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">例如，在关闭和打开段落标记之间的位置，方向参数可以用于选择下一段落开头最近的插入点 (通过指定<ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>) 或在前面的段落 （末尾通过指定<ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified <ph id="ph1">`direction`</ph>, the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to the same position as the calling <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">如果指针已插入位置，并在指定有无相邻的格式设置标记<ph id="ph1">`direction`</ph>，返回<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>指向与发出调用的相同位置<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>It is possible that no valid insertion position exists relative to the position pointed to by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">可能没有有效的插入位置存在相对于指向的位置<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This can happen if the referenced content is structurally incomplete, as in an empty table or list.</source>
          <target state="translated">如果引用的内容在结构上不完整，如下所示的空表或列表，也可能发生。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In such cases, this method simply returns a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to the same position as the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> from which this method was called.</source>
          <target state="translated">在这种情况下，此方法只返回<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>到同一位置<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>从中调用此方法。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method always returns a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">此方法始终返回一个有效<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> method to check whether a specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> is empty of printable content.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph>方法来检查是否指定<ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>为空的可打印的内容。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向相对于当前 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 指定的行的开始位置。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>The number of start-of-line markers to skip when determining the line for which to return the starting position.</source>
          <target state="translated">在确定要返回其开始位置的行时要跳过的行开始位置标记数。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</source>
          <target state="translated">负值指定前面的行，0 指定当前行，正值指定后面的行。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向相对于当前 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 指定的行的开始位置。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> pointing to the beginning of the specified line (with the <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>), or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if the specified line is out of range or otherwise cannot be located.</source>
          <target state="translated">一个指向指定行的开始位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>（<ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>）；或者，如果指定行超出范围或无法定位，则为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> is selected as the relative starting line.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph>被选为相对的起始行。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>The operation performed by this method depends on a valid layout.</source>
          <target state="translated">此方法执行的操作取决于有效的布局。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">重新生成布局可以是一个代价相对较大的操作。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph>来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>布局<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>The number of start-of-line markers to skip when determining the line for which to return the starting position.</source>
          <target state="translated">在确定要返回其开始位置的行时要跳过的行开始位置标记数。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</source>
          <target state="translated">负值指定前面的行，0 指定当前行，正值指定后面的行。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</source>
          <target state="translated">此方法返回时，将包含在确定要返回其开始位置的行时所实际跳过的行开始位置标记数。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>This value may be less than <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> if the beginning or end of content is encountered before the specified number of lines are skipped.</source>
          <target state="translated">如果在跳过指定行数之前遇到内容的开始或结束位置，则此值可能小于 <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>, and reports how many lines were skipped.</source>
          <target state="translated">返回一个指向相对于当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 所指定行的开始位置的 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，并报告跳过的行数。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> pointing to the beginning of the specified line (with the <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>), or to the beginning of the line closest to the specified line if the specified line is out of range.</source>
          <target state="translated">一个指向指定行的开始位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>（<ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>）；或者，如果指定行超出范围，则指向最靠近指定行的行的开始位置。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> property is selected as the relative starting line.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph>属性被选为相对的起始行。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the next symbol.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定搜索下一个符号时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a pointer to the next symbol in the specified logical direction.</source>
          <target state="translated">返回一个指向指定逻辑方向上的下一个符号的指针。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the next symbol in the requested direction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> borders the start or end of content.</source>
          <target state="translated">一个指向请求方向上的下一个符号的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>；或者，如果当前 <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 是内容开始或结束位置的边界，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">以下任一被视为可符号：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the next symbol is categorized as <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.EmbeddedElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext.ElementStart&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext.ElementEnd&gt;</ph> (as identified by the <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method), then the <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is advanced by exactly one symbol from the current position.</source>
          <target state="translated">如果下一步符号被归类为<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.EmbeddedElement&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext.ElementStart&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext.ElementEnd&gt;</ph>(由鉴定<ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph>方法)，则<ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>返回此方法从当前位置高级由恰好一个符号。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the next symbol is categorized as <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> is not <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>).</source>
          <target state="translated">如果下一步符号被归类为<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>，则<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>返回此方法对下一步的非文本符号的高级越过文本 (即的下一个位置<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph>不<ph id="ph4">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The exact symbol count crossed can be calculated in advance by calling the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A&gt;</ph> method.</source>
          <target state="translated">可以通过调用提前计算超过的确切符号数<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method to traverse and extract the symbols in a specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A&gt;</ph>方法结合<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph>方法来遍历并提取中指定的符号<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>While the example can be used to extract a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> structure for the contents of a given <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>, it is intended for illustrative purposes only, and should not be used in production code.</source>
          <target state="translated">虽然可以使用该示例提取<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph>的内容的结构给定<ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>，它旨在仅，供说明用途，不应在生产代码中使用。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>See the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace for a rich set of types designed for working with and processing XML.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Xml&gt;</ph>一套丰富的设计用于处理和处理 XML 的类型的命名空间。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the next insertion position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定搜索下一个插入位置时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the next insertion position in the specified logical direction.</source>
          <target state="translated">返回一个指向指定逻辑方向上的下一个插入位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that identifies the next insertion position in the requested direction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no next insertion position can be found.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它标识所请求方向上的下一个插入位置；或者，如果找不到下一个插入位置，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An <bpt id="p1">*</bpt>insertion position<ept id="p1">*</ept> is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated"><bpt id="p1">*</bpt>插入位置<ept id="p1">*</ept>是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">一个有效的示例<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不的插入位置的位置是相邻两个位置<ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> method to traverse content element boundaries in order to count the number of <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> elements present between two specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>方法来遍历以便指定数目的内容的元素边界<ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>之间两个指定的元素存在<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to find the distance (in symbols) to.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指定一个位置，将查找该位置与当前位置之间相距的距离（以符号数为单位）。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Returns the count of symbols between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and a second specified <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 与第二个指定 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 之间的符号数。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The relative number of symbols between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and <ph id="ph2">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="position" /&gt;</ph> 之间的相对符号数。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A negative value indicates that the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> follows the position specified by <ph id="ph2">&lt;paramref name="position" /&gt;</ph>, 0 indicates that the positions are equal, and a positive value indicates that the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes the position specified by <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">负值指示当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 位于 <ph id="ph2">&lt;paramref name="position" /&gt;</ph> 指定的位置之后，0 指示位置相同，正值指示当前 <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 位于 <ph id="ph4">&lt;paramref name="position" /&gt;</ph> 指定的位置之前。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">以下任一被视为可符号：</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> method to find the offsets for two <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances, and then uses this information to save and restore the selection in a <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph>方法来查找两个偏移量<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>实例，，然后使用此信息用于保存和还原中的选定<ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The example assumes that the contents of the <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> have not changed between a selection save and a selection restore.</source>
          <target state="translated">该示例假定的内容<ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>未保存的选项并选择还原之间更改。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> specifies a position outside of the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> 指定位于与当前位置相关联的文本容器之外的某个位置。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to determine the category for adjacent content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定确定相邻内容的类别时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>Returns a category indicator for the content adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">返回在指定逻辑方向上与当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 相邻的内容的类别指示标志。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointerContext" /&gt;</ph> values that indicates the category for adjacent content in the specified logical direction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointerContext" /&gt;</ph> 值之一，它指示指定逻辑方向上相邻内容的类别。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> positions.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph>方法来实现一种算法用于计算的开始和结束之间两个指定的元素标记之间的平衡<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>位置。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>Each opening element tag is counted as +1, and each closing element tag is counted as –1.</source>
          <target state="translated">每个开始元素标记计数为 + 1，和每个结束元素标记会被计为 – 1。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of content.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向从内容开始位置计算的由指定偏移量（以符号数为单位）指示的位置。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>An offset, in symbols, for which to calculate and return the position.</source>
          <target state="translated">偏移量（以符号数为单位），使用它计算并返回位置。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> property.</source>
          <target state="translated">如果偏移量为负，则在与 <ph id="ph1">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> 属性指示的方向相反的逻辑方向上计算位置。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向从当前 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 的开始位置计算的由指定偏移量（以符号数为单位）指示的位置。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no corresponding position can be found.</source>
          <target state="translated">一个指向由指定偏移量指示的位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>；或者，如果找不到对应位置，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">以下任一被视为可符号：</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to a specified offset in a specified paragraph.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>方法实现的方法，其中一个来计算到相对于任何托管段落和另一个要返回的指定位置的偏移量对<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>到指定段中指定的偏移量。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>An offset, in symbols, for which to calculate and return the position.</source>
          <target state="translated">偏移量（以符号数为单位），使用它计算并返回位置。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>If the offset is negative, the returned <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>; otherwise, it follows.</source>
          <target state="translated">如果偏移量为负，则返回的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 位于当前 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 之前；否则，位于它之后。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction of the returned <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定返回的 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 的逻辑方向。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and in the specified direction.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指向从当前 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 的开始位置沿指定方向计算的由指定偏移量（以符号数为单位）指示的位置。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the offset extends past the end of the content.</source>
          <target state="translated">一个指向由指定偏移量指示的位置的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>；或者，如果偏移量超过了内容的结束位置，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">以下任一被视为可符号：</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns text adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">返回与当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 相邻的文本。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find and return any adjacent text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定查找并返回任何相邻文本时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Returns a string containing any text adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">返回一个字符串，其中包含在指定逻辑方向上与当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 相邻的任何文本。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>A string containing any adjacent text in the specified logical direction, or <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> if no adjacent text can be found.</source>
          <target state="translated">一个包含指定逻辑方向上的任何相邻文本的字符串；或者，如果找不到相邻文本，则为 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>This method returns only uninterrupted runs of text.</source>
          <target state="translated">此方法仅返回不中断的文本。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Nothing is returned if any symbol type other than <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> is adjacent to the current <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> in the specified direction.</source>
          <target state="translated">未返回任何内容如果以外的任何符号类型<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>靠近当前<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>按指定的方向。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Similarly, text is returned only up to the next non-text symbol.</source>
          <target state="translated">同样，最多的下一步的非文本符号只被返回的文本。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> method to implement a simple text extractor.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph>方法来实现简单文本提取程序。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The method returns a string concatenation of all text between two specified <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances.</source>
          <target state="translated">该方法返回的所有文本的字符串串联两个指定之间<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>While the example can be used to extract any text between two <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances, it is intended for illustrative purposes only, and should not be used in production code.</source>
          <target state="translated">虽然可以使用该示例提取间两个的任何文本<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>实例，它旨在仅，供说明用途，不应在生产代码中使用。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">改用 <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find and copy any adjacent text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定查找并复制任何相邻文本时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>A buffer into which any text is copied.</source>
          <target state="translated">要向其中复制文本的缓冲区。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>An index into <bpt id="p1">&lt;c&gt;</bpt>textBuffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing copied text.</source>
          <target state="translated">一个索引，从该索引处开始将复制的文本写入 <bpt id="p1">&lt;c&gt;</bpt>textBuffer<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy.</source>
          <target state="translated">要复制的最大字符数。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</source>
          <target state="translated">将从指定方向上的任何相邻文本中提取的指定了最大数量的字符复制到由调用方提供的字符数组中。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters actually copied into <ph id="ph1">&lt;paramref name="textBuffer" /&gt;</ph>.</source>
          <target state="translated">实际复制到 <ph id="ph1">&lt;paramref name="textBuffer" /&gt;</ph> 中的字符数。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>This method returns only uninterrupted runs of text.</source>
          <target state="translated">此方法仅返回不中断的文本。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Nothing is returned if any symbol type other than <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> is adjacent to the current <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> in the specified direction.</source>
          <target state="translated">未返回任何内容如果以外的任何符号类型<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>靠近当前<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>按指定的方向。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Similarly, text is returned only up to the next non-text symbol.</source>
          <target state="translated">同样，最多的下一步的非文本符号只被返回的文本。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than 0 or greater than the <ph id="ph2">&lt;see cref="P:System.Array.Length" /&gt;</ph> property of <ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 小于 0 或大于 <ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="P:System.Array.Length" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0 or greater than the remaining space in <ph id="ph2">&lt;paramref name="textBuffer" /&gt;</ph> (<ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.<ph id="ph4">&lt;see cref="P:System.Array.Length" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小于 0 或大于 <ph id="ph2">&lt;paramref name="textBuffer" /&gt;</ph> 中的剩余空间（<ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.<ph id="ph4">&lt;see cref="P:System.Array.Length" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>minus <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>).</source>
          <target state="translated">减去 <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to count the number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值之一，它指定计数字符数时的逻辑方向。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Returns the number of Unicode characters between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and the next non-text symbol, in the specified logical direction.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 与指定逻辑方向上的下一个非文本符号之间的 Unicode 字符数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>The number of Unicode characters between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and the next non-text symbol.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 与下一个非文本符号之间的 Unicode 字符数。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>This number may be 0 if there is no adjacent text.</source>
          <target state="translated">如果没有相邻文本，则此数目可以为 0。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">以下任一被视为可符号：</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">一个开始标记或结束标记<ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>中包含的元素<ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">请注意，此类<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>始终算做一个符号; 任何其他内容或包含的元素<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>不被视为符号。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 位<ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph>字符文本内<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</source>
          <target state="translated">获取一个值，该值指示与当前位置相关联的文本容器是否具有有效（最新）的布局。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the layout is current and valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果布局是最新的而且有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>When necessary, operations that depend on a valid layout (such as the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A&gt;</ph> method, and <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">如有必要，取决于有效的布局的操作 (如<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A&gt;</ph>方法，和<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph>属性) 尝试自动重新生成一个有效的布局，然后再继续操作。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">重新生成布局可以是一个代价相对较大的操作。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Use this property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">此属性用于在执行可能会重新生成布局的操作之前检查存在有效的布局。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>布局<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertLineBreak">
          <source>Inserts a line break at the current position.</source>
          <target state="translated">在当前位置插入一个换行符。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertLineBreak">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> positioned immediately after the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.LineBreak" /&gt;</ph> element inserted by this method.</source>
          <target state="translated">紧接在由此方法插入的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> 元素之后的 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.LineBreak" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>Inserts a paragraph break at the current position.</source>
          <target state="translated">在当前位置插入一个分段符。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning (<ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextElement.ContentStart" /&gt;</ph>) of the new paragraph.</source>
          <target state="translated">一个指向新段落开始位置 (<ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>) 的 <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextElement.ContentStart" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called when the current position is inside of an existing <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</source>
          <target state="translated">如果此方法调用时当前的位置是在现有内部<ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>元素、 现有段落和它包含任何内容将被拆分为两个段落中的当前的位置。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</source>
          <target state="translated">如果当前的位置不是在现有段落内部时，调用此方法，将插入一个新的空段落。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> element), an exception is thrown.</source>
          <target state="translated">如果调用此方法是在位置不适用于拆分或插入段落 (例如，如果当前位置是内<ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph>元素)，将引发异常。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Hyperlink" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Documents.InlineUIContainer" /&gt;</ph>.</source>
          <target state="translated">应针对无法进行拆分以容纳一个新段落的位置调用此方法，例如在 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Hyperlink" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.Documents.InlineUIContainer" /&gt;</ph> 的范围内。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>The text to insert.</source>
          <target state="translated">要插入的文本。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>Inserts the specified text into the text <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> at the current position.</source>
          <target state="translated">将指定文本插入到文本 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> 中的当前位置。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is not scoped by a <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element, a <ph id="ph3">&lt;xref:System.Windows.Documents.Run&gt;</ph> is inserted along with the <ph id="ph4">`textData`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不的作用范围由<ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph>元素，<ph id="ph3">&lt;xref:System.Windows.Documents.Run&gt;</ph>连同插入<ph id="ph4">`textData`</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>The current position is not within a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> element.</source>
          <target state="translated">当前位置没有位于 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> 元素内。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source><ph id="ph1">&lt;paramref name="textData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textData" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>Gets a value that indicates whether the current position is an insertion position.</source>
          <target state="translated">获取一个值，该值指示当前位置是否是一个插入位置。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current position is an insertion position; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前位置是插入位置，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">插入位置是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">一个有效的示例<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>不的插入位置的位置是相邻两个位置<ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Gets a value that indicates whether the current position is at the beginning of a line.</source>
          <target state="translated">获取一个值，该值指示当前位置是否位于行的开始处。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current position is at the beginning of a line; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前位置位于行的开始处，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> property is selected as the relative starting line.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph>属性被选为相对的起始行。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>The operation performed by this property depends on a valid layout.</source>
          <target state="translated">此属性执行的操作取决于有效的布局。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">重新生成布局可以是一个代价相对较大的操作。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph>属性来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>布局<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to compare to the current position.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>，它指定要与当前位置进行比较的位置。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Indicates whether the specified position is in the same text container as the current position.</source>
          <target state="translated">指示指定位置与当前位置是否位于相同的文本容器内。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="textPosition" /&gt;</ph> indicates a position that is in the same text container as the current position; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="textPosition" /&gt;</ph> 指示的位置与当前位置位于相同的文本容器内，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Most operations that involve multiple <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances are only valid if the instances in question indicate positions that are in the same text container scope.</source>
          <target state="translated">大多数操作涉及多个<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>实例才有效，如果问题实例表示相同的文本容器作用域中的位置。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>For example the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> methods cannot be used with a <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to a position outside of the text container associated with the current position.</source>
          <target state="translated">例如<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph>方法不能与使用<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>到当前的位置与关联的文本容器之外的位置。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Use this method to verify that a specified <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is compatible with the current position for such operations.</source>
          <target state="translated">使用此方法来验证是否指定<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>与此类操作的当前位置兼容。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">下面的示例演示此方法的用法。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> method to check whether a specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is positioned between two other specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances in a situation when there is no guarantee that all three positions belong to the same text container.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph>方法来检查是否指定<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>位于之间其他两个指定<ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>时就不能保证所有三个位置都属于相同的文本容器的情况下的实例。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="textPosition" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textPosition" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</source>
          <target state="translated">获取与当前位置相关联的逻辑方向，用于消除与当前位置相关联内容的不确定性。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> value that is associated with the current position.</source>
          <target state="translated">与当前位置相关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>As an example of how this property is used, the <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by a hit test method gives a hit that is between two characters of text.</source>
          <target state="translated">作为示例，了解如何使用此属性，<ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>返回命中测试方法提供的命中位于的文本的两个字符之间。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>The logical direction specifies which of the two characters was actually hit—the left or the right.</source>
          <target state="translated">逻辑方向指定这两个字符实际命中 — 左侧或右侧。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.Paragraph">
          <source>Gets the paragraph that scopes the current position, if any.</source>
          <target state="translated">获取涵盖当前位置的段落（如果有）。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.Paragraph">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Paragraph" /&gt;</ph> that scopes the current position, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no such paragraph exists.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.Paragraph" /&gt;</ph>的作用域的当前的位置，或<ph id="ph2">&lt;see langword="null" /&gt;</ph>如果没有此类段落存在。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.Parent">
          <source>Gets the logical parent that scopes the current position.</source>
          <target state="translated">获取涵盖当前位置的逻辑父项。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.Parent">
          <source>The logical parent that scopes the current position.</source>
          <target state="translated">涵盖当前位置的逻辑父项。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.ToString">
          <source>This type or member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">此类型或成员支持 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 基础结构，但不可直接在代码中使用。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.ToString">
          <source>The string that represents the object.</source>
          <target state="translated">表示该对象的字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>