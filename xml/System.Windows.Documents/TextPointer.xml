<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5691fcb27097765370af5592f11712f056d7fa3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8fe43-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fe43-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-102"><xref:System.Windows.Documents.TextPointer>类引入了以下术语：</span><span class="sxs-lookup"><span data-stu-id="8fe43-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="8fe43-103">位置-本质上就是，<xref:System.Windows.Documents.TextPointer>始终指向*位置*内容中。</span><span class="sxs-lookup"><span data-stu-id="8fe43-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="8fe43-104">请在之间的内容中的字符或之间流内容元素标记此类位置定义的内容的结构。</span><span class="sxs-lookup"><span data-stu-id="8fe43-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="8fe43-105">当前位置-因为<xref:System.Windows.Documents.TextPointer>始终指示一个位置，而是因为可以通过执行的操作的许多<xref:System.Windows.Documents.TextPointer>相对于当前指向的位置是<xref:System.Windows.Documents.TextPointer>，因此只需引用指示的位置<xref:System.Windows.Documents.TextPointer>作为*当前位置*。</span><span class="sxs-lookup"><span data-stu-id="8fe43-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="8fe43-106">插入位置-*插入位置*是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="8fe43-107">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="8fe43-108">一个有效的示例<xref:System.Windows.Documents.TextPointer>不的插入位置的位置是相邻两个位置<xref:System.Windows.Documents.Paragraph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="8fe43-109">符号-出于<xref:System.Windows.Documents.TextPointer>涉及符号的操作，将以下任一被视为可*符号*:</span><span class="sxs-lookup"><span data-stu-id="8fe43-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="8fe43-110">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="8fe43-111">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-112">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="8fe43-113">每个 16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="8fe43-114">文本容器-一个*文本容器*窗体流内容手头的最终边框的元素; 所指示的位置<xref:System.Windows.Documents.TextPointer>始终在范围内的文本容器。</span><span class="sxs-lookup"><span data-stu-id="8fe43-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="8fe43-115">目前，文本容器必须是<xref:System.Windows.Documents.FlowDocument>或<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="8fe43-116">一般来讲，之间的操作<xref:System.Windows.Documents.TextPointer>不支持在不同的文本容器中的实例。</span><span class="sxs-lookup"><span data-stu-id="8fe43-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="8fe43-117">文档的文本容器中的内容被称为*文档*，类似于<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法和<xref:System.Windows.Documents.TextPointer.DocumentStart%2A>和<xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fe43-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="8fe43-118"><xref:System.Windows.Documents.TextPointer>类旨在促进遍历和操作的内容由[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]流内容元素; 一般情况下，此类元素派生自<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="8fe43-119">某些操作，<xref:System.Windows.Documents.TextPointer>促进如下：</span><span class="sxs-lookup"><span data-stu-id="8fe43-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="8fe43-120">执行序号比较的第二个指定位置与当前的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="8fe43-121">请参阅<xref:System.Windows.Documents.TextPointer.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="8fe43-122">确定指定方向中的当前位置到相邻的内容类型。</span><span class="sxs-lookup"><span data-stu-id="8fe43-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="8fe43-123">请参阅<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法和<xref:System.Windows.Documents.TextPointerContext>枚举。</span><span class="sxs-lookup"><span data-stu-id="8fe43-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="8fe43-124">获取<xref:System.Windows.Documents.TextElement>的作用域或靠近当前的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="8fe43-125">请参阅<xref:System.Windows.Documents.Paragraph>和<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="8fe43-126">获取文本容器的作用域的当前文档。</span><span class="sxs-lookup"><span data-stu-id="8fe43-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="8fe43-127">请参阅 <xref:System.Windows.Documents.TextPointer.Parent%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8fe43-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="8fe43-128">获取指定的数目的字符之前或之后的当前位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="8fe43-129">请参阅<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="8fe43-130">在当前的位置插入字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="8fe43-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="8fe43-131">请参阅<xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="8fe43-132">在内容中找到行边界。</span><span class="sxs-lookup"><span data-stu-id="8fe43-132">Find line boundaries in content.</span></span>  <span data-ttu-id="8fe43-133">请参阅<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fe43-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="8fe43-134">之间进行转换<xref:System.Windows.Documents.TextPointer>位置与符号偏移量为内容。</span><span class="sxs-lookup"><span data-stu-id="8fe43-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="8fe43-135">请参阅<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="8fe43-136">执行之间进行转换来的可视命中测试<xref:System.Windows.Documents.TextPointer>位置和一个<xref:System.Windows.Point>表示相对坐标。</span><span class="sxs-lookup"><span data-stu-id="8fe43-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="8fe43-137">查找附近的插入位置，或检查当前的位置是否的插入位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="8fe43-138">请参阅<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8fe43-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="8fe43-139">位置和<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>由<xref:System.Windows.Documents.TextPointer>对象是不可变。</span><span class="sxs-lookup"><span data-stu-id="8fe43-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="8fe43-140">编辑或修改所指示的位置的内容时<xref:System.Windows.Documents.TextPointer>不会更改相对于周围文本; 而是相应地调整的内容从一开始该位置的偏移量以反映新的相对位置中内容。</span><span class="sxs-lookup"><span data-stu-id="8fe43-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="8fe43-141">例如， <xref:System.Windows.Documents.TextPointer> ，该值指示给定的段的开头的位置继续指向该段的开头，即使内容被插入或删除段落之前或之后。</span><span class="sxs-lookup"><span data-stu-id="8fe43-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="8fe43-142"><xref:System.Windows.Documents.TextPointer>类不提供任何公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="8fe43-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="8fe43-143">实例<xref:System.Windows.Documents.TextPointer>创建通过属性或方法的其他对象 (包括其他<xref:System.Windows.Documents.TextPointer>对象)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="8fe43-144">以下列表提供了几个示例的方法和属性创建并将返回<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="8fe43-145">此列表并不详尽:</span><span class="sxs-lookup"><span data-stu-id="8fe43-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="8fe43-146">从<xref:System.Windows.Documents.TextRange>:<xref:System.Windows.Documents.TextRange.Start%2A>和<xref:System.Windows.Documents.TextRange.End%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="8fe43-147">从<xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>， <xref:System.Windows.Documents.TextElement.ContentEnd%2A>， <xref:System.Windows.Documents.TextElement.ElementStart%2A>，和<xref:System.Windows.Documents.TextElement.ElementEnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="8fe43-148">从<xref:System.Windows.Controls.TextBlock>（文本容器）： <xref:System.Windows.Controls.TextBlock.ContentStart%2A>， <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>，和<xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="8fe43-149">从<xref:System.Windows.Documents.FlowDocument>（文本容器）： <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>，和 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="8fe43-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="8fe43-150">从现有<xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>， <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>， <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>，和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-151">下面的示例演示如何使用<xref:System.Windows.Documents.TextPointer>查找仅在第一个位置<xref:System.Windows.Documents.Run>指定的文本容器中的元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="8fe43-152">下面的示例实现非常简单的查找算法使用<xref:System.Windows.Documents.TextPointer>设施。</span><span class="sxs-lookup"><span data-stu-id="8fe43-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="8fe43-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-156">值 – 1 指示位置指定由当前<xref:System.Windows.Documents.TextPointer>之前指定的位置`position`。</span><span class="sxs-lookup"><span data-stu-id="8fe43-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="8fe43-157">值为 0 指示所指示的位置相等。</span><span class="sxs-lookup"><span data-stu-id="8fe43-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="8fe43-158">值为正 + 1 表示由当前指定的位置<xref:System.Windows.Documents.TextPointer>由指定的位置之后`position`。</span><span class="sxs-lookup"><span data-stu-id="8fe43-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-159">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="8fe43-160">在示例中，<xref:System.Windows.Documents.TextPointer.CompareTo%2A>结合使用方法<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法测试是否指定<xref:System.Windows.Documents.TextElement>为空。</span><span class="sxs-lookup"><span data-stu-id="8fe43-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fe43-161">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="8fe43-162">The number of characters to delete, starting at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="8fe43-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-165">The number of characters actually deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-166">指定正值，若要删除当前的位置之后的字符 (如<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); 指定负值可删除的当前的位置之前的字符 (如<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="8fe43-167">实际删除的字符数可能小于指定的数`count`。</span><span class="sxs-lookup"><span data-stu-id="8fe43-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="8fe43-168">在情况下将发生这种情况其中`count`指定多于存在要删除的多个字符。</span><span class="sxs-lookup"><span data-stu-id="8fe43-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fe43-169">The method is called at a position where text is not allowed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-171">A<see cref="T:System.Windows.Documents.TextPointer" />与当前位置关联的文本容器中的内容的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-172"><xref:System.Windows.Documents.TextPointer.Parent%2A>针对返回<xref:System.Windows.Documents.TextPointer>始终是文本容器 (<xref:System.Windows.Controls.TextBlock>或<xref:System.Windows.Documents.FlowDocument>)，而不是<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-174">A<see cref="T:System.Windows.Documents.TextPointer" />与当前位置关联的文本容器中的内容的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-175">使用此属性返回作为基准位置，从可用来处理到其他位置的相对偏移量的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="8fe43-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法提供了一种方法的位置和位置之间进行转换偏移量。</span><span class="sxs-lookup"><span data-stu-id="8fe43-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="8fe43-177"><xref:System.Windows.Documents.TextPointer.Parent%2A>针对返回<xref:System.Windows.Documents.TextPointer>始终是文本容器 (<xref:System.Windows.Controls.TextBlock>或<xref:System.Windows.Documents.FlowDocument>)，而不是<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-181">返回的元素是通常<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="8fe43-182">A<xref:System.Windows.UIElement>时，会返回<xref:System.Windows.Documents.TextPointer>指示的位置位于<xref:System.Windows.Documents.BlockUIContainer>元素或<xref:System.Windows.Documents.InlineUIContainer>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-186"><xref:System.Windows.Documents.TextElement> 边缘出于的此方法不考虑内容。</span><span class="sxs-lookup"><span data-stu-id="8fe43-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="8fe43-187">如果<xref:System.Windows.Documents.TextPointer>位于之前<xref:System.Windows.Documents.TextElement>边缘，则返回值是边界框的下一非<xref:System.Windows.Documents.TextElement>内容按指定的方向。</span><span class="sxs-lookup"><span data-stu-id="8fe43-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="8fe43-188">指定的方向，零宽度中是否存在任何内容<xref:System.Windows.Rect>返回与匹配内容的任何前面高度高度。</span><span class="sxs-lookup"><span data-stu-id="8fe43-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="8fe43-189">此方法执行的操作取决于有效的布局。</span><span class="sxs-lookup"><span data-stu-id="8fe43-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="8fe43-190">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="8fe43-191">重新生成布局可以是一个代价相对较大的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="8fe43-192">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>属性来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="8fe43-193">有关详细信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-197">插入位置是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="8fe43-198">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="8fe43-199">一个有效的示例<xref:System.Windows.Documents.TextPointer>不的插入位置的位置是相邻两个位置<xref:System.Windows.Documents.Paragraph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="8fe43-200">如果<xref:System.Windows.Documents.TextPointer>已指向一个有效的插入的位置，但结束标记为非空的格式设置序列紧随的给定的方向中的此位置则<xref:System.Windows.Documents.TextPointer>返回由此方法进行调整，以指向插入恰好在格式设置序列的关闭后的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="8fe43-201">例如，考虑标记序列`<Bold>a</Bold>b`。</span><span class="sxs-lookup"><span data-stu-id="8fe43-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="8fe43-202">请注意，有两个字母之间的插入位置`a`和`b`— 一个之前结束`Bold`标记和另一个紧随结束`Bold`标记。</span><span class="sxs-lookup"><span data-stu-id="8fe43-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="8fe43-203">如果<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>上调用<xref:System.Windows.Documents.TextPointer>到紧跟字母位置`a`和之前的结束`Bold`标记，并与`direction`的<xref:System.Windows.Documents.LogicalDirection.Forward>，返回<xref:System.Windows.Documents.TextPointer>调整以指向位置之前字母`b`之后，结束`Bold`标记。</span><span class="sxs-lookup"><span data-stu-id="8fe43-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="8fe43-204">类似调整专为在相反的逻辑方向中工作时打开格式设置的标记。</span><span class="sxs-lookup"><span data-stu-id="8fe43-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="8fe43-205">此方法旨在提供一种消除两个在类似情况下的插入位置之间的歧义。</span><span class="sxs-lookup"><span data-stu-id="8fe43-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="8fe43-206">此方法还可以用于涉及的结构化标记序列时，应慎重有关插入点。</span><span class="sxs-lookup"><span data-stu-id="8fe43-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="8fe43-207">例如，在关闭和打开段落标记之间的位置，方向参数可以用于选择下一段落开头最近的插入点 (通过指定<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) 或在前面的段落 （末尾通过指定<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="8fe43-208">如果指针已插入位置，并在指定有无相邻的格式设置标记`direction`，返回<xref:System.Windows.Documents.TextPointer>指向与发出调用的相同位置<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="8fe43-209">可能没有有效的插入位置存在相对于指向的位置<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="8fe43-210">如果引用的内容在结构上不完整，如下所示的空表或列表，也可能发生。</span><span class="sxs-lookup"><span data-stu-id="8fe43-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="8fe43-211">在这种情况下，此方法只返回<xref:System.Windows.Documents.TextPointer>到同一位置<xref:System.Windows.Documents.TextPointer>从中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="8fe43-212">此方法始终返回一个有效<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-213">此示例演示如何使用<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法来检查是否指定<xref:System.Windows.Documents.TextElement>为空的可打印的内容。</span><span class="sxs-lookup"><span data-stu-id="8fe43-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="8fe43-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="8fe43-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-219">如果<xref:System.Windows.Documents.TextPointer>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>被选为相对的起始行。</span><span class="sxs-lookup"><span data-stu-id="8fe43-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="8fe43-220">此方法执行的操作取决于有效的布局。</span><span class="sxs-lookup"><span data-stu-id="8fe43-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="8fe43-221">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="8fe43-222">重新生成布局可以是一个代价相对较大的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="8fe43-223">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="8fe43-224">有关详细信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="8fe43-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="8fe43-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="8fe43-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="8fe43-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="8fe43-229">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-232">如果<xref:System.Windows.Documents.TextPointer>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>属性被选为相对的起始行。</span><span class="sxs-lookup"><span data-stu-id="8fe43-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-236">以下任一被视为可符号：</span><span class="sxs-lookup"><span data-stu-id="8fe43-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="8fe43-237">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="8fe43-238">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-239">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="8fe43-240">16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="8fe43-241">如果下一步符号被归类为<xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>， <xref:System.Windows.Documents.TextPointerContext.ElementStart>，或<xref:System.Windows.Documents.TextPointerContext.ElementEnd>(由鉴定<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法)，则<xref:System.Windows.Documents.TextPointer>返回此方法从当前位置高级由恰好一个符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="8fe43-242">如果下一步符号被归类为<xref:System.Windows.Documents.TextPointerContext.Text>，则<xref:System.Windows.Documents.TextPointer>返回此方法对下一步的非文本符号的高级越过文本 (即的下一个位置<xref:System.Windows.Documents.TextPointerContext>不<xref:System.Windows.Documents.TextPointerContext.Text>)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="8fe43-243">可以通过调用提前计算超过的确切符号数<xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-244">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="8fe43-245">该示例使用<xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A>方法结合<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法来遍历并提取中指定的符号<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="8fe43-246">虽然可以使用该示例提取[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]的内容的结构给定<xref:System.Windows.Documents.TextElement>，它旨在仅，供说明用途，不应在生产代码中使用。</span><span class="sxs-lookup"><span data-stu-id="8fe43-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="8fe43-247">请参阅<xref:System.Xml>一套丰富的设计用于处理和处理 XML 的类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="8fe43-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-251">*插入位置*是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="8fe43-252">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="8fe43-253">一个有效的示例<xref:System.Windows.Documents.TextPointer>不的插入位置的位置是相邻两个位置<xref:System.Windows.Documents.Paragraph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-254">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="8fe43-255">该示例使用<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法来遍历以便指定数目的内容的元素边界<xref:System.Windows.Documents.Paragraph>之间两个指定的元素存在<xref:System.Windows.Documents.TextPointer>实例。</span><span class="sxs-lookup"><span data-stu-id="8fe43-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="8fe43-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="8fe43-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-260">以下任一被视为可符号：</span><span class="sxs-lookup"><span data-stu-id="8fe43-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="8fe43-261">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="8fe43-262">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-263">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="8fe43-264">16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-265">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="8fe43-266">该示例使用<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法来查找两个偏移量<xref:System.Windows.Documents.TextPointer>实例，，然后使用此信息用于保存和还原中的选定<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="8fe43-267">该示例假定的内容<xref:System.Windows.Controls.RichTextBox>未保存的选项并选择还原之间更改。</span><span class="sxs-lookup"><span data-stu-id="8fe43-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fe43-268">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fe43-272">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="8fe43-273">该示例使用<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法来实现一种算法用于计算的开始和结束之间两个指定的元素标记之间的平衡<xref:System.Windows.Documents.TextPointer>位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="8fe43-274">每个开始元素标记计数为 + 1，和每个结束元素标记会被计为 – 1。</span><span class="sxs-lookup"><span data-stu-id="8fe43-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="8fe43-276">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="8fe43-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-280">以下任一被视为可符号：</span><span class="sxs-lookup"><span data-stu-id="8fe43-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="8fe43-281">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="8fe43-282">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-283">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="8fe43-284">16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-285">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="8fe43-286">该示例使用<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法实现的方法，其中一个来计算到相对于任何托管段落和另一个要返回的指定位置的偏移量对<xref:System.Windows.Documents.TextPointer>到指定段中指定的偏移量。</span><span class="sxs-lookup"><span data-stu-id="8fe43-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="8fe43-287">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="8fe43-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="8fe43-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-292">以下任一被视为可符号：</span><span class="sxs-lookup"><span data-stu-id="8fe43-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="8fe43-293">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="8fe43-294">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-295">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="8fe43-296">16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-301">此方法仅返回不中断的文本。</span><span class="sxs-lookup"><span data-stu-id="8fe43-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="8fe43-302">未返回任何内容如果以外的任何符号类型<xref:System.Windows.Documents.TextPointerContext.Text>靠近当前<xref:System.Windows.Documents.TextPointer>按指定的方向。</span><span class="sxs-lookup"><span data-stu-id="8fe43-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="8fe43-303">同样，最多的下一步的非文本符号只被返回的文本。</span><span class="sxs-lookup"><span data-stu-id="8fe43-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-304">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="8fe43-305">该示例使用<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法来实现简单文本提取程序。</span><span class="sxs-lookup"><span data-stu-id="8fe43-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="8fe43-306">该方法返回的所有文本的字符串串联两个指定之间<xref:System.Windows.Documents.TextPointer>实例。</span><span class="sxs-lookup"><span data-stu-id="8fe43-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="8fe43-307">虽然可以使用该示例提取间两个的任何文本<xref:System.Windows.Documents.TextPointer>实例，它旨在仅，供说明用途，不应在生产代码中使用。</span><span class="sxs-lookup"><span data-stu-id="8fe43-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="8fe43-308">改用 <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="8fe43-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="8fe43-310">A buffer into which any text is copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="8fe43-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8fe43-312">The maximum number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-315">此方法仅返回不中断的文本。</span><span class="sxs-lookup"><span data-stu-id="8fe43-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="8fe43-316">未返回任何内容如果以外的任何符号类型<xref:System.Windows.Documents.TextPointerContext.Text>靠近当前<xref:System.Windows.Documents.TextPointer>按指定的方向。</span><span class="sxs-lookup"><span data-stu-id="8fe43-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="8fe43-317">同样，最多的下一步的非文本符号只被返回的文本。</span><span class="sxs-lookup"><span data-stu-id="8fe43-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8fe43-318">
            <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="8fe43-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="8fe43-320">minus <paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-320">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8fe43-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="8fe43-324">This number may be 0 if there is no adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-324">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-325">以下任一被视为可符号：</span><span class="sxs-lookup"><span data-stu-id="8fe43-325">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="8fe43-326">一个开始标记或结束标记<xref:System.Windows.Documents.TextElement>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-326">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="8fe43-327">A<xref:System.Windows.UIElement>中包含的元素<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="8fe43-327">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="8fe43-328">请注意，此类<xref:System.Windows.UIElement>始终算做一个符号; 任何其他内容或包含的元素<xref:System.Windows.UIElement>不被视为符号。</span><span class="sxs-lookup"><span data-stu-id="8fe43-328">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="8fe43-329">16 位[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]字符文本内<xref:System.Windows.Documents.Run>元素。</span><span class="sxs-lookup"><span data-stu-id="8fe43-329">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-331">
            <see langword="true" /> 如果布局，则当前和有效，则为否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-331">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-332">如有必要，取决于有效的布局的操作 (如<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法，<xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A>方法，和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>属性) 尝试自动重新生成一个有效的布局，然后再继续操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-332">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="8fe43-333">重新生成布局可以是一个代价相对较大的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-333">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="8fe43-334">此属性用于在执行可能会重新生成布局的操作之前检查存在有效的布局。</span><span class="sxs-lookup"><span data-stu-id="8fe43-334">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="8fe43-335">有关详细信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-335">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-336">Inserts a line break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-336">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-338">Inserts a paragraph break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-338">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-340">如果此方法调用时当前的位置是在现有内部<xref:System.Windows.Documents.Paragraph>元素、 现有段落和它包含任何内容将被拆分为两个段落中的当前的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-340">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="8fe43-341">如果当前的位置不是在现有段落内部时，调用此方法，将插入一个新的空段落。</span><span class="sxs-lookup"><span data-stu-id="8fe43-341">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="8fe43-342">如果调用此方法是在位置不适用于拆分或插入段落 (例如，如果当前位置是内<xref:System.Windows.Documents.Hyperlink>元素)，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="8fe43-342">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fe43-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="8fe43-344">The text to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-344">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-346">如果<xref:System.Windows.Documents.TextPointer>不的作用范围由<xref:System.Windows.Documents.Run>元素，<xref:System.Windows.Documents.Run>连同插入`textData`。</span><span class="sxs-lookup"><span data-stu-id="8fe43-346">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fe43-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fe43-348">
            <paramref name="textData" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-348">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-349">Gets a value that indicates whether the current position is an insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-349">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-350">
            <see langword="true" /> 如果当前位置是插入位置;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-350">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-351">插入位置是可在该处添加新的内容而不会破坏关联内容的任何语义规则的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-351">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="8fe43-352">在实践中，插入位置位于任意位置内容可能放置一个插入符号的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-352">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="8fe43-353">一个有效的示例<xref:System.Windows.Documents.TextPointer>不的插入位置的位置是相邻两个位置<xref:System.Windows.Documents.Paragraph>标记 (即上, 一段的结束标记和下一段的开始标记之间)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-353">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-355">
            <see langword="true" /> 如果当前位置位于行; 开头否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-355">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-356">如果<xref:System.Windows.Documents.TextPointer>指向为此位置不明确的位置，例如，两条线之间的行中指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>属性被选为相对的起始行。</span><span class="sxs-lookup"><span data-stu-id="8fe43-356">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="8fe43-357">此属性执行的操作取决于有效的布局。</span><span class="sxs-lookup"><span data-stu-id="8fe43-357">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="8fe43-358">如有必要，此方法会尝试自动重新生成一个有效的布局，然后再继续操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-358">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="8fe43-359">重新生成布局可以是一个代价相对较大的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-359">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="8fe43-360">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>属性来检查是否存在有效布局，然后执行可能会重新生成布局的操作。</span><span class="sxs-lookup"><span data-stu-id="8fe43-360">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="8fe43-361">有关详细信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="8fe43-361">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="8fe43-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fe43-363">Indicates whether the specified position is in the same text container as the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-363">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-364">
            <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-364">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-365">大多数操作涉及多个<xref:System.Windows.Documents.TextPointer>实例才有效，如果问题实例表示相同的文本容器作用域中的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-365">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="8fe43-366">例如<xref:System.Windows.Documents.TextPointer.CompareTo%2A>和<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法不能与使用<xref:System.Windows.Documents.TextPointer>到当前的位置与关联的文本容器之外的位置。</span><span class="sxs-lookup"><span data-stu-id="8fe43-366">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="8fe43-367">使用此方法来验证是否指定<xref:System.Windows.Documents.TextPointer>与此类操作的当前位置兼容。</span><span class="sxs-lookup"><span data-stu-id="8fe43-367">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe43-368">下面的示例演示此方法的用法。</span><span class="sxs-lookup"><span data-stu-id="8fe43-368">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="8fe43-369">该示例使用<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法来检查是否指定<xref:System.Windows.Documents.TextPointer>位于之间其他两个指定<xref:System.Windows.Documents.TextPointer>时就不能保证所有三个位置都属于相同的文本容器的情况下的实例。</span><span class="sxs-lookup"><span data-stu-id="8fe43-369">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fe43-370">
            <paramref name="textPosition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-370">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-372">
            <see cref="T:System.Windows.Documents.LogicalDirection" />与当前的位置相关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-372">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe43-373">作为示例，了解如何使用此属性，<xref:System.Windows.Documents.LogicalDirection>的<xref:System.Windows.Documents.TextPointer>返回命中测试方法提供的命中位于的文本的两个字符之间。</span><span class="sxs-lookup"><span data-stu-id="8fe43-373">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="8fe43-374">逻辑方向指定这两个字符实际命中 — 左侧或右侧。</span><span class="sxs-lookup"><span data-stu-id="8fe43-374">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-375">Gets the paragraph that scopes the current position, if any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-375">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-376">
            <see cref="T:System.Windows.Documents.Paragraph" />的作用域的当前的位置，或<see langword="null" />如果没有此类段落存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-376">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-377">Gets the logical parent that scopes the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-377">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fe43-378">涵盖当前位置逻辑父级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-378">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fe43-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fe43-380">The string that represents the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fe43-380">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>