<Type Name="BlockUIContainer" FullName="System.Windows.Documents.BlockUIContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4cd60d834aaf6c57b1a15cd34ea556ad9b34786" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48735671" /></Metadata><TypeSignature Language="C#" Value="public class BlockUIContainer : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockUIContainer extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.BlockUIContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockUIContainer&#xA;Inherits Block" />
  <TypeSignature Language="C++ CLI" Value="public ref class BlockUIContainer : System::Windows::Documents::Block" />
  <TypeSignature Language="F#" Value="type BlockUIContainer = class&#xA;    inherit Block" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一个块级别的流内容元素使 <see cref="T:System.Windows.UIElement" /> 元素（例如，<see cref="T:System.Windows.Controls.Button" />）嵌入（承载）流内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.Windows.UIElement>元素 (即<xref:System.Windows.Controls.Button>) 可以直接在流内容中嵌入括在<xref:System.Windows.Documents.BlockUIContainer>（请参阅下面的示例）。  
  
 <xref:System.Windows.Documents.BlockUIContainer>只能直接承载不超过一个<xref:System.Windows.UIElement>子。  但是，子元素承载<xref:System.Windows.Documents.BlockUIContainer>可以托管自己的子级。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Documents.BlockUIContainer>元素与主机<xref:System.Windows.UIElement>流内容内的元素。  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 下图显示了此示例的呈现效果。  
  
 ![屏幕快照： 嵌入在流内容中的 UIElement](~/add/media/blockuicontainer.png "屏幕快照： 嵌入在流内容中的 UIElement")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类的新的空实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer (System.Windows.UIElement uiElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement uiElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockUIContainer(System::Windows::UIElement ^ uiElement);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.BlockUIContainer : System.Windows.UIElement -&gt; System.Windows.Documents.BlockUIContainer" Usage="new System.Windows.Documents.BlockUIContainer uiElement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="uiElement"><see cref="T:System.Windows.UIElement" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 的初始内容。</param>
        <summary>初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.UIElement" /> 对象作为新的 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 的初始内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示此构造函数的使用情况。  
  
 [!code-csharp[SpanSnippets#_BlockUI_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_const1)]
 [!code-vb[SpanSnippets#_BlockUI_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.BlockUIContainer.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Documents.BlockUIContainer.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Windows.UIElement" /> 承载的 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</summary>
        <value>由 <see cref="T:System.Windows.UIElement" /> 承载的 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.BlockUIContainer>只能直接承载不超过一个<xref:System.Windows.UIElement>子。  但是，子元素承载<xref:System.Windows.Documents.BlockUIContainer>可以托管自己的子级。  
  
 在[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]、 环绕<xref:System.Windows.UIElement>中<xref:System.Windows.Documents.BlockUIContainer>等效于设置<xref:System.Windows.UIElement>的值作为<xref:System.Windows.Documents.BlockUIContainer.Child%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Documents.BlockUIContainer>元素与主机<xref:System.Windows.UIElement>流内容内的元素。  
  
 [!code-xaml[SpanSnippets#_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 下图显示了此示例的呈现效果。  
  
 ![屏幕快照： 嵌入在流内容中的 UIElement](~/add/media/blockuicontainer.png "屏幕快照： 嵌入在流内容中的 UIElement")  
  
 下面的示例演示如何使用<xref:System.Windows.Documents.BlockUIContainer.Child%2A>属性以编程方式。  
  
 [!code-csharp[spansnippets#_BlockUI_Child](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_child)]
 [!code-vb[spansnippets#_BlockUI_Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>