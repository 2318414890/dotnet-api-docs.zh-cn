<Type Name="Inline" FullName="System.Windows.Documents.Inline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf810396dd351ec9161e46a8a219201bf066328b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Inline : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Inline extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Inline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Inline&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Inline abstract : System::Windows::Documents::TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Documents.TextElementEditingBehavior(IsMergeable=true, IsTypographicOnly=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为所有内联流内容元素提供基类的抽象类。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Documents.Block" />
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Inline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Inline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Inline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>由某个派生类调用时，初始化基类值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.BaselineAlignment BaselineAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.BaselineAlignment BaselineAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.BaselineAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineAlignment As BaselineAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::BaselineAlignment BaselineAlignment { System::Windows::BaselineAlignment get(); void set(System::Windows::BaselineAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.BaselineAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Documents.Inline" /> 元素的基线对齐方式。</summary>
        <value>
          <see cref="T:System.Windows.BaselineAlignment" /> 枚举的一个成员，它指定 <see cref="T:System.Windows.Documents.Inline" /> 元素的基线对齐方式。  
  
 默认值是<see cref="T:System.Windows.BaselineAlignment" />。**基线**。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BaselineAlignment"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Inline.BaselineAlignmentProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BaselineAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BaselineAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Inline.BaselineAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BaselineAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BaselineAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 <see cref="T:System.Windows.Documents.Inline" /> 元素中内容流的相对方向。</summary>
        <value>
          <see cref="T:System.Windows.FlowDirection" /> 枚举的一个成员，它指定相对流动方向。  获取此属性将返回当前有效的流动方向。  设置此属性将导致 <see cref="T:System.Windows.Documents.Inline" /> 元素的内容重新沿指示的方向流动。  
  
 默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容的流动方向通常对应于所表示语言的固有流动方向。  希伯来语和阿拉伯语提供从右到左流动的语言的示例。  英语、 德语和俄语提供自然流从左到右的语言的示例。  
  
 **注意：** 此属性的值不会自动更改以匹配由操作系统使用的语言。 如果你需要使用不同的值，则默认的<xref:System.Windows.FlowDirection.LeftToRight>，您必须亲自指定。  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Inline.FlowDirectionProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Windows.Documents.Inline.FlowDirection%2A>属性<xref:System.Windows.Documents.Inline>元素 (<xref:System.Windows.Documents.Run>)。  
  
 [!code-xaml[InlineSnippets#_Inline_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_flowdirectionxaml)]  
  
 下面的示例演示如何设置<xref:System.Windows.Documents.Inline.FlowDirection%2A>属性以编程方式。  
  
 [!code-csharp[InlineSnippets#_Inline_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_flowdirection)]
 [!code-vb[InlineSnippets#_Inline_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Inline.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextInline">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Inline NextInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Inline NextInline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.NextInline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextInline As Inline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Inline ^ NextInline { System::Windows::Documents::Inline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Inline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此元素对等的下一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
        <value>
          <see cref="T:System.Windows.Documents.Inline" />表示下一个对象<see cref="T:System.Windows.Documents.Inline" />与此元素，对等的元素或**null**没有下一步是否<see cref="T:System.Windows.Documents.Inline" />元素。  
  
 此属性没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Documents.Inline.NextInline%2A> 属性。  
  
 [!code-csharp[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_siblingbase)]
 [!code-vb[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_siblingbase)]  
  
 [!code-csharp[InlineSnippets#_Inline_NextSibling](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_nextsibling)]
 [!code-vb[InlineSnippets#_Inline_NextSibling](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_nextsibling)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Inline.PreviousInline" />
        <altmember cref="P:System.Windows.Documents.Inline.SiblingInlines" />
      </Docs>
    </Member>
    <Member MemberName="PreviousInline">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Inline PreviousInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Inline PreviousInline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.PreviousInline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousInline As Inline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Inline ^ PreviousInline { System::Windows::Documents::Inline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Inline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此元素对等的上一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
        <value>
          <see cref="T:System.Windows.Documents.Inline" />对象，表示以前<see cref="T:System.Windows.Documents.Inline" />与此元素，对等的元素或**null**如果不再具有以前<see cref="T:System.Windows.Documents.Inline" />元素。  
  
 此属性没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Documents.Inline.NextInline%2A> 属性。  
  
 [!code-csharp[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_siblingbase)]
 [!code-vb[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_siblingbase)]  
  
 [!code-csharp[InlineSnippets#_Inline_PreviousSibling](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_previoussibling)]
 [!code-vb[InlineSnippets#_Inline_PreviousSibling](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_previoussibling)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Inline.NextInline" />
        <altmember cref="P:System.Windows.Documents.Inline.SiblingInlines" />
      </Docs>
    </Member>
    <Member MemberName="SiblingInlines">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.InlineCollection SiblingInlines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.InlineCollection SiblingInlines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.SiblingInlines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingInlines As InlineCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::InlineCollection ^ SiblingInlines { System::Windows::Documents::InlineCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.InlineCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection" />，它包含与此元素同级（对等）的 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
        <value>一个 <see cref="T:System.Windows.Documents.InlineCollection" /> 对象，它包含与此元素同级的 <see cref="T:System.Windows.Documents.Inline" /> 元素。  
  
 此属性没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 始终返回此属性的集合包含通过其请求集合的元素。  也就是说，一个内联元素被视为可自己同级，以便生成的同级元素的集合。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Documents.Inline.SiblingInlines%2A> 属性。  
  
 [!code-csharp[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_siblingbase)]
 [!code-vb[InlineSnippets#_Inline_SiblingBase](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_siblingbase)]  
  
 [!code-csharp[InlineSnippets#_Inline_Siblings](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_siblings)]
 [!code-vb[InlineSnippets#_Inline_Siblings](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_siblings)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Inline.NextInline" />
        <altmember cref="P:System.Windows.Documents.Inline.PreviousInline" />
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Inline.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Windows.TextDecorationCollection" />，它包含要应用于此元素的文本修饰。</summary>
        <value>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 集合，它包含应用于此元素的文本修饰。  
  
 默认值是**null** （没有应用文本修饰）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.TextDecoration>对象是你可以将其添加到文本的视觉装饰。 文本修饰的四种类型： 下划线、 基线、 删除线和上划线。  文本修饰的详细信息，请参阅[如何： 创建文本效果](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)。  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Inline.TextDecorationsProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Windows.Documents.Inline.TextDecorations%2A>属性<xref:System.Windows.Documents.Inline>元素 (<xref:System.Windows.Documents.Run>)。  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 下图显示了此示例的呈现效果。  
  
 ![屏幕快照： 具有默认删除线效果的文本](~/add/media/inline-textdec-strike.png "屏幕快照： 具有默认删除线效果的文本")  
  
 下图显示了**上划线**，**基线**，和**Underline**修饰呈现，分别。  
  
 ![屏幕快照： 上划线划线 TextDecorator](~/add/media/inline-textdec-over.png "屏幕快照： 上划线划线 TextDecorator")  
  
 ![屏幕快照： 默认基线效果文本](~/add/media/inline-textdec-base.png "屏幕快照： 默认基线效果文本")  
  
 ![屏幕快照： 具有默认下划线效果的文本](~/add/media/inline-textdec-under.png "屏幕快照： 具有默认下划线效果的文本")  
  
 下面的示例演示如何设置<xref:System.Windows.Documents.Inline.TextDecorations%2A>属性以编程方式。  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Inline.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>