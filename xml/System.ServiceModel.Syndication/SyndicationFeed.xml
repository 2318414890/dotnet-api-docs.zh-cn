<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SyndicationFeed.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15fe635a15eb1d7f7a82bb7e0c502c3fe3586cc900.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe635a15eb1d7f7a82bb7e0c502c3fe3586cc900</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Represents a top-level feed object, <ph id="ph1">&amp;lt;</ph><ph id="ph2">&lt;see langword="feed" /&gt;</ph><ph id="ph3">&amp;gt;</ph> in Atom 1.0 and <ph id="ph4">&amp;lt;</ph><ph id="ph5">&lt;see langword="rss" /&gt;</ph><ph id="ph6">&amp;gt;</ph> in RSS 2.0.</source>
          <target state="translated">表示顶级源的对象中，在 Atom 1.0 为 <ph id="ph1">&amp;lt;</ph><ph id="ph2">&lt;see langword="feed" /&gt;</ph><ph id="ph3">&amp;gt;</ph>，在 RSS 2.0 中为 <ph id="ph4">&amp;lt;</ph><ph id="ph5">&lt;see langword="rss" /&gt;</ph><ph id="ph6">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>When serialized to Atom 1.0, a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is written to a &lt;<ph id="ph2">`feed`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>实例写入到 &lt;<ph id="ph2">`feed`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following table shows how each property defined in the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> class is serialized to Atom 1.0.</source>
          <target state="translated">下表显示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 类中定义的每个属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>SyndicationFeed property</source>
          <target state="translated">SyndicationFeed 属性</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Serialized form</source>
          <target state="translated">序列化形式</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An attribute in the &lt;<ph id="ph1">`feed`</ph>&gt; element for each attribute in the collection.</source>
          <target state="translated">中的属性 &lt;<ph id="ph1">`feed`</ph>&gt; 集合中每个属性的元素。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`author`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`author`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`category`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`category`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`contributor`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`contributor`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`rights`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`rights`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`subtitle`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`subtitle`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Each element in the collection is written within the &lt;<ph id="ph1">`feed`</ph>&gt; element.</source>
          <target state="translated">集合中的每个元素内写入 &lt;<ph id="ph1">`feed`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`generator`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`generator`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`id`</ph>&gt;element.</source>
          <target state="translated">&lt;<ph id="ph1">`id`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`logo`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`logo`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`entry`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`entry`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Not serialized.</source>
          <target state="translated">未序列化。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`updated`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`updated`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`link`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`link`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`title`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`title`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>When serialized to RSS 2.0, a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is written to an &lt;<ph id="ph2">`rss`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>实例写入到 &lt;<ph id="ph2">`rss`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following table shows how each property defined in the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> class is serialized to RSS 2.0.</source>
          <target state="translated">下表显示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 类中定义的每个属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>SyndicationFeed property</source>
          <target state="translated">SyndicationFeed 属性</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Serialized form</source>
          <target state="translated">序列化形式</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An attribute in the &lt;<ph id="ph1">`channel`</ph>&gt; element for each attribute in the collection.</source>
          <target state="translated">中的属性 &lt;<ph id="ph1">`channel`</ph>&gt; 集合中每个属性的元素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`managingEditor`</ph>&gt; element if only one <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> is in the collection; otherwise, an &lt;<ph id="ph3">`a10:author`</ph>&gt; element for each <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`managingEditor`</ph>&gt; 元素，如果只有一个<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>是否在集合; 否则为 &lt;<ph id="ph3">`a10:author`</ph>&gt; 每个元素<ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`category`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`category`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:contributor`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:contributor`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`copyright`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`copyright`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`description`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`description`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Each element in the collection is written within the &lt;<ph id="ph1">`channel`</ph>&gt; element.</source>
          <target state="translated">集合中的每个元素内写入 &lt;<ph id="ph1">`channel`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`generator`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`generator`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:id`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:id`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`image`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`image`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`item`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`item`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`language`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`language`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`lastBuildDate`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`lastBuildDate`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:link`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:link`</ph>&gt; 每个元素<ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>集合中。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`title`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`title`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance and serialize it to both Atom 1.0 and RSS 2.0.</source>
          <target state="translated">下面的代码演示如何创建 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例并将其序列化为 Atom 1.0 和 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following XML shows how a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following XML shows how a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified collection of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 对象集合初始化 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The collection of <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects passed into this constructor is buffered.</source>
          <target state="translated">已缓冲传入此构造函数的 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">下面的示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> used to initialize the new instance.</source>
          <target state="translated">用于初始化新实例的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>A value that specifies whether to clone the items in the source instance.</source>
          <target state="translated">一个指定是否克隆源实例中各项的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified feed.</source>
          <target state="translated">使用指定的源创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`true`</ph>, all <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instances in the source <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance are cloned and added to the <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of the new <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">如果 <ph id="ph1">`cloneItems`</ph> 参数为 <ph id="ph2">`true`</ph>，则会克隆源 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 实例中的所有 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例，并将其添加到新 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 实例的 <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of the new <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance contains references to the existing <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instances.</source>
          <target state="translated">如果 <ph id="ph1">`cloneItems`</ph> 参数为 <ph id="ph2">`false`</ph>，则新 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 实例的 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合会包含对现有 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 实例的引用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The title of the feed.</source>
          <target state="translated">源的标题。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The description of the feed.</source>
          <target state="translated">源的说明。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The URI for the feed.</source>
          <target state="translated">源的 URI。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified title, description, and Uniform Resource Identifier (URI).</source>
          <target state="translated">使用指定的标题、说明和统一资源标识符 (URI) 初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">下面的示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The title of the feed.</source>
          <target state="translated">源的标题。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The description of the feed.</source>
          <target state="translated">源的说明。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The URI for the feed.</source>
          <target state="translated">源的 URI。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified title, description, URI, and collection of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated">使用指定的标题、说明、URI 和 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 对象集合初始化 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">下面的示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The syndication feed title.</source>
          <target state="translated">联合源的标题。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The syndication feed description.</source>
          <target state="translated">联合源的说明。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The alternate URI for the syndication feed.</source>
          <target state="translated">联合源的替换 URI。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The ID of the syndication feed.</source>
          <target state="translated">联合源的 ID。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the last time the syndication feed was updated.</source>
          <target state="translated">包含联合源上次更新时间的 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The following code shows how to call this constructor.</source>
          <target state="translated">下面的代码演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The syndication feed title.</source>
          <target state="translated">联合源的标题。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The syndication feed description.</source>
          <target state="translated">联合源的说明。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The alternate URI for the syndication feed.</source>
          <target state="translated">联合源的替换 URI。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The ID of the syndication feed.</source>
          <target state="translated">联合源的 ID。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the last time the syndication feed was updated.</source>
          <target state="translated">包含联合源上次更新时间的 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following code shows how to call this constructor.</source>
          <target state="translated">下面的代码演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>Gets a collection of attribute extensions.</source>
          <target state="translated">获取属性扩展的集合。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>A dictionary that contains a collection of attribute extensions.</source>
          <target state="translated">一个包含属性扩展集合的字典。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>An attribute extension is a valid XML attribute that is not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">属性扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 属性。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>When serialized to Atom 1.0, each custom attribute in the collection is written to the &lt;<ph id="ph1">`atom`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时，将集合中的每个自定义属性写入到 &lt;<ph id="ph1">`atom`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>When serialized to RSS 2.0, each custom attribute is written to the &lt;<ph id="ph1">`channel`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时，每个自定义属性写入到 &lt;<ph id="ph1">`channel`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>For an example of adding an attribute extension, see the <bpt id="p1">[</bpt>Loosely-Typed Extensions<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> sample.</source>
          <target state="translated">添加属性扩展的示例，请参阅<bpt id="p1">[</bpt>Loosely-Typed 扩展<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept>示例。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following code shows how to add an attribute extension to a syndication feed.</source>
          <target state="translated">下面的代码说明如何向联合源添加属性扩展。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following XML shows how an attribute extension is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将属性扩展序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following XML shows how an attribute extension is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将属性扩展序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>Gets a collection of authors of the feed.</source>
          <target state="translated">获取源作者的集合。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> objects that represents the authors of the feed.</source>
          <target state="translated">一个表示源作者的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to an &lt;<ph id="ph2">`author`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>在集合都写入到 &lt;<ph id="ph2">`author`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>When serialized to RSS 2.0, if only a single <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> exists in the collection, it is written to a &lt;<ph id="ph2">`managingEditor`</ph>&gt; element.</source>
          <target state="translated">如果只有一个序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>存在于集合中，它写入 &lt;<ph id="ph2">`managingEditor`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>Otherwise, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> is written to an &lt;<ph id="ph2">`a10:author`</ph>&gt; element.</source>
          <target state="translated">否则为每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>写入到 &lt;<ph id="ph2">`a10:author`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following code shows how to add an author to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何将作者添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 集合序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 集合序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>Gets and sets the base URI for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated">获取和设置 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 实例的基 URI。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>The base URI for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 实例的基 URI。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>The following code shows how to access the base URI of a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何访问 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例的基 URI。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>Gets a collection of categories for the feed.</source>
          <target state="translated">获取源类别的集合。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> objects that represent the categories for the feed.</source>
          <target state="translated">一个表示源类别的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`category`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>在集合都写入到 &lt;<ph id="ph2">`category`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>When serialized to RSS 2.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`category`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>在集合都写入到 &lt;<ph id="ph2">`category`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following code shows how to add a category to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何将类别添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 集合序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 集合序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>A value that specifies whether the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects are cloned.</source>
          <target state="translated">一个指定是否克隆 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 对象的值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 实例的副本。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>A duplicate <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> object.</source>
          <target state="translated">一个重复的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`true`</ph>, all items within the <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> object are cloned; otherwise, the new <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance's items collection contain references to the original <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance's items.</source>
          <target state="translated">如果 <ph id="ph1">`cloneItems`</ph> 参数为 <ph id="ph2">`true`</ph>，则会克隆 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 对象中的所有项；否则，新 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例的项集合会包含对原始 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例的项的引用。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>Gets a collection of the contributors to the feed.</source>
          <target state="translated">获取源参与者的集合。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> objects that represents the contributors to the feed.</source>
          <target state="translated">一个表示源参与者的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`contributor`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>在集合都写入到 &lt;<ph id="ph2">`contributor`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>When serialized to RSS 2.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to an &lt;<ph id="ph2">`a10:contributor`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时每个<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>在集合都写入到 &lt;<ph id="ph2">`a10:contributor`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following code shows how to add a contributor to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何将参与者添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 集合序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 集合序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>Gets and sets copyright information for the feed.</source>
          <target state="translated">获取和设置源的版权信息。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationContent" /&gt;</ph> object that represents copyright information for the feed.</source>
          <target state="translated">一个表示源版权信息的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationContent" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is written to a &lt;<ph id="ph2">`rights`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph>写入到 &lt;<ph id="ph2">`rights`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is written to a &lt;<ph id="ph2">`copyright`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph>写入到 &lt;<ph id="ph2">`copyright`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following code shows how to set the copyright information for a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何设置 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 的版权信息。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> 序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何按照 RSS 2.0 序列化 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">创建一个新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection.</source>
          <target state="translated">此方法不会将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">创建一个新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection.</source>
          <target state="translated">此方法不会将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">创建一个新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>The new <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> instance is not added to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance used to create it.</source>
          <target state="translated">新的 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 实例不会添加到用于创建它的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> instance.</source>
          <target state="translated">创建一个新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collections.</source>
          <target state="translated">此方法不会将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 对象添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 集合或 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>Gets and sets a description of the feed.</source>
          <target state="translated">获取和设置源的说明。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> object that represents the description of the feed.</source>
          <target state="translated">一个表示源说明的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>When serialized to Atom 1.0, <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is written to a &lt;<ph id="ph2">`subtitle`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph>写入到 &lt;<ph id="ph2">`subtitle`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>When serialized to RSS 2.0, <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is written to a &lt;<ph id="ph2">`description`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph>写入到 &lt;<ph id="ph2">`description`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何设置 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following XML shows how <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> 序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following XML shows how <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> 序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>Gets the element extensions for the feed.</source>
          <target state="translated">获取源的元素扩展。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph> instance that contains the element extensions in the feed.</source>
          <target state="translated">一个包含源中元素扩展的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>For an example of adding element extensions, see the <bpt id="p1">[</bpt>Loosely-Typed Extensions<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> sample.</source>
          <target state="translated">添加元素扩展的示例，请参阅<bpt id="p1">[</bpt>Loosely-Typed 扩展<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept>示例。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>The following code shows how to add element extensions to a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何将元素扩展添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>Gets and sets the generator of the feed.</source>
          <target state="translated">获取和设置源的生成器。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The name of the tool that generated the feed.</source>
          <target state="translated">生成源的工具名称。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>When serialized to Atom 1.0 and RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> is written to a &lt;<ph id="ph2">`generator`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 和 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph>写入到 &lt;<ph id="ph2">`generator`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">下面的代码演示如何设置 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> property is serialized to Atom 1.0 and RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> 属性序列化为 Atom 1.0 和 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</source>
          <target state="translated">一个指定是否使用 Atom 1.0 命名空间序列化元素和属性扩展的值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">获取一个新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>The RSS 2.0 specification allows elements and attributes that are not specified in its specification only if they are within a namespace.</source>
          <target state="translated">RSS 2.0 规范允许使用未在其规范中指定的元素和属性，但前提是这些元素和属性必须在命名空间中。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>When the <ph id="ph1">`serializedExtensionsAsAtom`</ph> parameter is <ph id="ph2">`true`</ph>, the formatter automatically adds the <ph id="ph3">`a10`</ph> namespace qualifier to all extensions; otherwise, the extensions are not serialized.</source>
          <target state="translated">如果 <ph id="ph1">`serializedExtensionsAsAtom`</ph> 参数为 <ph id="ph2">`true`</ph> 时，则格式化程序会自动将 <ph id="ph3">`a10`</ph> 命名空间限定符添加到所有的扩展；否则，不会序列化扩展。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>Gets and sets the ID of the feed.</source>
          <target state="translated">获取和设置源的 ID。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The ID of the feed.</source>
          <target state="translated">源的 ID。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> is written to an &lt;<ph id="ph2">`id`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph>写入到 &lt;<ph id="ph2">`id`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> is written to an &lt;<ph id="ph2">`a10:id`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph>写入到 &lt;<ph id="ph2">`a10:id`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何在 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 实例上设置 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>Gets and sets the image URL for the feed.</source>
          <target state="translated">获取和设置源的图像 URL。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The URL for the image for the feed.</source>
          <target state="translated">源的图像 URL。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`logo`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`logo`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is written to an &lt;<ph id="ph2">`image`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`image`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何在 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 实例上设置 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>Gets a collection of the feed items contained in the feed.</source>
          <target state="translated">获取源中包含的源项的集合。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is written to &lt;<ph id="ph2">`entry`</ph>&gt; elements.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph>集合写入 &lt;<ph id="ph2">`entry`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is written to &lt;<ph id="ph2">`item`</ph>&gt; elements.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph>集合写入 &lt;<ph id="ph2">`item`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何设置 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 实例的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 集合序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 集合序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>Gets and sets the language of the feed.</source>
          <target state="translated">获取和设置源的语言。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The name of the language the feed is written in.</source>
          <target state="translated">写入源时使用的语言名称。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is written to the <ph id="ph2">`lang`</ph> attribute in the &lt;<ph id="ph3">`feed`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph>属性写入<ph id="ph2">`lang`</ph>属性中 &lt;<ph id="ph3">`feed`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is written to the &lt;<ph id="ph2">`language`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`language`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何在 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 实例上设置 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>Gets and sets the time the feed was last updated.</source>
          <target state="translated">获取和设置上次更新源的时间。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> instance set to the time the feed was last updated.</source>
          <target state="translated">一个设置为源上次更新时间的 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is written to an &lt;<ph id="ph2">`updated`</ph>&gt;element.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`updated`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`lastBuildDate`</ph>&gt; element.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`lastBuildDate`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following code shows how to se the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何在 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 实例上设置 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>Gets the links associated with the feed.</source>
          <target state="translated">获取与源关联的链接。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is written to a number of &lt;<ph id="ph2">`link`</ph>&gt; elements.</source>
          <target state="translated">序列化为 Atom 1.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph>集合写入大量的 &lt;<ph id="ph2">`link`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is written to a number of &lt;<ph id="ph2">`a10:link`</ph>&gt; elements.</source>
          <target state="translated">序列化为 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph>集合写入大量的 &lt;<ph id="ph2">`a10:link`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following code shows how to add a link to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何将链接添加到 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 实例的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 集合中。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 集合序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 集合序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to load the feed from.</source>
          <target state="translated">要从其中加载源的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>Loads a syndication feed from the specified XML reader.</source>
          <target state="translated">从指定的 XML 读取器加载联合源。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> that contains the loaded contents.</source>
          <target state="translated">一个包含已加载内容的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>The following example demonstrates how to call this method.</source>
          <target state="translated">下面的示例演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The syndication feed type.</source>
          <target state="translated">联合源的类型。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">要从其中进行读取的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>-derived instance from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">从指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 加载一个 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 派生实例。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>-derived instance that contains the feed.</source>
          <target state="translated">一个包含源的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 派生实例。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Use this method when you are loading a syndication item into a class derived from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">若要将联合项加载到从 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 派生的类中，可以使用此方法。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The following code shows how to load a syndication feed from an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何从 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 实例加载联合源。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">读取过程中遇到无效的 XML。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">要向其中进行写入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>Write the syndication feed to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in Atom 1.0 format.</source>
          <target state="translated">以 Atom 1.0 格式将联合源写入指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>The following code shows how to write out a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance in the Atom 1.0 format.</source>
          <target state="translated">下面的代码演示如何以 Atom 1.0 格式写出 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">要向其中进行写入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>Write the syndication feed to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in RSS 2.0 format.</source>
          <target state="translated">以 RSS 2.0 格式将联合源写入指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>The following code shows how to write out a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance in the RSS 2.0 format.</source>
          <target state="translated">下面的代码演示如何以 RSS 2.0 格式写出 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>Gets and sets the title of the feed.</source>
          <target state="translated">获取和设置源的标题。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> instance that contains the title of the feed.</source>
          <target state="translated">一个包含源标题的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>When serialized to Atom 1.0 and RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`title`</ph>&gt; element.</source>
          <target state="translated">序列化为 Atom 1.0 和 RSS 2.0 时<ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph>属性写入 &lt;<ph id="ph2">`title`</ph>&gt; 元素。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">下面的代码演示如何设置 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 实例的 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 属性序列化为 Atom 1.0。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">下面的 XML 演示如何将 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 属性序列化为 RSS 2.0。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The name of the element.</source>
          <target state="translated">元素的名称。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The namespace of the element.</source>
          <target state="translated">元素的命名空间。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The attribute to parse.</source>
          <target state="translated">要分析的属性。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The syndication version to use when parsing.</source>
          <target state="translated">要在分析时使用的联合版本。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attempts to parse an attribute extension.</source>
          <target state="translated">试图分析属性扩展。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>A value that specifies whether the attribute extension was parsed successfully.</source>
          <target state="translated">一个指定是否已成功分析属性扩展的值。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>They are serialized as an attribute of the &lt;<ph id="ph1">`feed`</ph>&gt; (for Atom 1.0) or &lt;<ph id="ph2">`rss`</ph>&gt; (for RSS 1.0) element, which depends upon the syndication version being used.</source>
          <target state="translated">这些扩展会序列化为的属性 &lt;<ph id="ph1">`feed`</ph>&gt; （为 Atom 1.0) 或 &lt;<ph id="ph2">`rss`</ph>&gt; （为 RSS 1.0) 元素，它取决于正在使用的联合版本。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</source>
          <target state="translated">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的反序列化。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">为此，必须从 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 中派生一个类，并重写此方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">将为所有无法识别的属性扩展调用此方法。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Invalid XML Encountered during read.</source>
          <target state="translated">读取过程中遇到无效的 XML。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">要从其中进行读取的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The syndication version to use while parsing.</source>
          <target state="translated">要在分析时使用的联合版本。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Attempts to parse an element extension.</source>
          <target state="translated">试图分析元素扩展。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>A value that specifies whether the element extension was parsed successfully.</source>
          <target state="translated">一个指定是否已成功分析元素扩展的值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom element extension.</source>
          <target state="translated">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的反序列化。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">为此，必须从 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 中派生一个类，并重写此方法。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">将为所有无法识别的元素扩展调用此方法。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">读取过程中遇到无效的 XML。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">要向其中进行写入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">要在写入时使用的联合版本。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the attribute extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">使用指定的联合版本将属性扩展写入指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>They are serialized as an attribute of the &lt;<ph id="ph1">`feed`</ph>&gt; (for Atom 1.0) or &lt;<ph id="ph2">`rss`</ph>&gt; (for RSS 1.0) element, which depends upon the syndication version being used.</source>
          <target state="translated">这些扩展会序列化为的属性 &lt;<ph id="ph1">`feed`</ph>&gt; （为 Atom 1.0) 或 &lt;<ph id="ph2">`rss`</ph>&gt; （为 RSS 1.0) 元素，它取决于正在使用的联合版本。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom attribute extensions.</source>
          <target state="translated">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的序列化。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">为此，必须从 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 中派生一个类，并重写此方法。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">将为所有无法识别的属性扩展调用此方法。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">要向其中进行写入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">要在写入时使用的联合版本。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the element extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">使用指定的联合版本将元素扩展写入指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom element extensions.</source>
          <target state="translated">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的序列化。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">为此，必须从 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 中派生一个类，并重写此方法。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">将为所有无法识别的元素扩展调用此方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>