<Type Name="SyndicationFeed" FullName="System.ServiceModel.Syndication.SyndicationFeed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe635a15eb1d7f7a82bb7e0c502c3fe3586cc900" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationFeed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationFeed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationFeed" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationFeed" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationFeed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7a4f9-101">表示顶级源的对象中，在 Atom 1.0 为 &lt;<see langword="feed" />&gt;，在 RSS 2.0 中为 &lt;<see langword="rss" />&gt;。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a4f9-101">Represents a top-level feed object, &lt;<see langword="feed" />&gt; in Atom 1.0 and &lt;<see langword="rss" />&gt; in RSS 2.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-102">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed>实例写入到 <`feed`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-102">When serialized to Atom 1.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to a <`feed`> element.</span></span> <span data-ttu-id="7a4f9-103">下表显示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed> 类中定义的每个属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-103">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to Atom 1.0.</span></span>  
  
|<span data-ttu-id="7a4f9-104">SyndicationFeed 属性</span><span class="sxs-lookup"><span data-stu-id="7a4f9-104">SyndicationFeed property</span></span>|<span data-ttu-id="7a4f9-105">序列化形式</span><span class="sxs-lookup"><span data-stu-id="7a4f9-105">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="7a4f9-106">中的属性 <`feed`> 集合中每个属性的元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-106">An attribute in the <`feed`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="7a4f9-107"><`author`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationPerson>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-107">An <`author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="7a4f9-108">A <`category`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationCategory>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-108">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="7a4f9-109">A <`contributor`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationPerson>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-109">A <`contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="7a4f9-110">A <`rights`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-110">A <`rights`> element.</span></span>|  
|`Description`|<span data-ttu-id="7a4f9-111">A <`subtitle`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-111">A <`subtitle`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="7a4f9-112">集合中的每个元素内写入 <`feed`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-112">Each element in the collection is written within the <`feed`> element.</span></span>|  
|`Generator`|<span data-ttu-id="7a4f9-113">A <`generator`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-113">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="7a4f9-114"><`id`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-114">An <`id`>element.</span></span>|  
|`ImageUri`|<span data-ttu-id="7a4f9-115">A <`logo`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-115">A <`logo`> element.</span></span>|  
|`Items`|<span data-ttu-id="7a4f9-116"><`entry`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationItem>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-116">An <`entry`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="7a4f9-117">未序列化。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-117">Not serialized.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="7a4f9-118"><`updated`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-118">An <`updated`> element.</span></span>|  
|`Links`|<span data-ttu-id="7a4f9-119">A <`link`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationLink>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-119">A <`link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="7a4f9-120">A <`title`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-120">A <`title`> element.</span></span>|  
  
 <span data-ttu-id="7a4f9-121">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed>实例写入到 <`rss`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-121">When serialized to RSS 2.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to an <`rss`> element.</span></span> <span data-ttu-id="7a4f9-122">下表显示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed> 类中定义的每个属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-122">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to RSS 2.0.</span></span>  
  
|<span data-ttu-id="7a4f9-123">SyndicationFeed 属性</span><span class="sxs-lookup"><span data-stu-id="7a4f9-123">SyndicationFeed property</span></span>|<span data-ttu-id="7a4f9-124">序列化形式</span><span class="sxs-lookup"><span data-stu-id="7a4f9-124">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="7a4f9-125">中的属性 <`channel`> 集合中每个属性的元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-125">An attribute in the <`channel`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="7a4f9-126">A <`managingEditor`> 元素，如果只有一个<xref:System.ServiceModel.Syndication.SyndicationPerson>是否在集合; 否则为 <`a10:author`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationPerson>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-126">A <`managingEditor`> element if only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is in the collection; otherwise, an <`a10:author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="7a4f9-127">A <`category`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationCategory>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-127">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="7a4f9-128"><`a10:contributor`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationPerson>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-128">An <`a10:contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="7a4f9-129">A <`copyright`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-129">A <`copyright`> element.</span></span>|  
|`Description`|<span data-ttu-id="7a4f9-130">A <`description`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-130">A <`description`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="7a4f9-131">集合中的每个元素内写入 <`channel`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-131">Each element in the collection is written within the <`channel`> element.</span></span>|  
|`Generator`|<span data-ttu-id="7a4f9-132">A <`generator`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-132">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="7a4f9-133"><`a10:id`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-133">An <`a10:id`> element.</span></span>|  
|`ImageUri`|<span data-ttu-id="7a4f9-134"><`image`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-134">An <`image`> element.</span></span>|  
|`Items`|<span data-ttu-id="7a4f9-135"><`item`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationItem>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-135">An <`item`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="7a4f9-136">A <`language`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-136">A <`language`> element.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="7a4f9-137">A <`lastBuildDate`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-137">A <`lastBuildDate`> element.</span></span>|  
|`Links`|<span data-ttu-id="7a4f9-138"><`a10:link`> 每个元素<xref:System.ServiceModel.Syndication.SyndicationLink>集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-138">An <`a10:link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="7a4f9-139">A <`title`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-139">A <`title`> element.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-140">下面的代码演示如何创建 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例并将其序列化为 Atom 1.0 和 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-140">The following code shows how to create a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance and serialize it to both Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#0)]
 [!code-vb[SyndicationFeed#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#0)]  
  
 <span data-ttu-id="7a4f9-141">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-141">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#1)]  
  
 <span data-ttu-id="7a4f9-142">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-142">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#2](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-143">初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-143">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-144">初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-144">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="7a4f9-145">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-145">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-146">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 对象集合初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-146">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-147">已缓冲传入此构造函数的 <xref:System.ServiceModel.Syndication.SyndicationItem> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-147">The collection of <xref:System.ServiceModel.Syndication.SyndicationItem> objects passed into this constructor is buffered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-148">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-148">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#3)]
 [!code-vb[SyndicationFeed#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationFeed (System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationFeed, cloneItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationFeed(System::ServiceModel::Syndication::SyndicationFeed ^ source, bool cloneItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationFeed" />
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7a4f9-149">用于初始化新实例的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-149">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to initialize the new instance.</span>
          </span>
        </param>
        <param name="cloneItems">
          <span data-ttu-id="7a4f9-150">一个指定是否克隆源实例中各项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-150">A value that specifies whether to clone the items in the source instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-151">使用指定的源创建 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-151">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified feed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-152">如果 `cloneItems` 参数为 `true`，则会克隆源 <xref:System.ServiceModel.Syndication.SyndicationItem> 实例中的所有 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例，并将其添加到新 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 实例的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-152">If the `cloneItems` parameter is `true`, all <xref:System.ServiceModel.Syndication.SyndicationItem> instances in the source <xref:System.ServiceModel.Syndication.SyndicationFeed> instance are cloned and added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span> <span data-ttu-id="7a4f9-153">如果 `cloneItems` 参数为 `false`，则新 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 实例的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合会包含对现有 <xref:System.ServiceModel.Syndication.SyndicationItem> 实例的引用。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-153">If the `cloneItems` parameter is `false`, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance contains references to the existing <xref:System.ServiceModel.Syndication.SyndicationItem> instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="7a4f9-154">源的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-154">The title of the feed.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7a4f9-155">源的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-155">The description of the feed.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="7a4f9-156">源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-156">The URI for the feed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-157">使用指定的标题、说明和统一资源标识符 (URI) 初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-157">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, and Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-158">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-158">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#4)]
 [!code-vb[SyndicationFeed#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="7a4f9-159">源的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-159">The title of the feed.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7a4f9-160">源的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-160">The description of the feed.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="7a4f9-161">源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-161">The URI for the feed.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="7a4f9-162">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-162">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-163">使用指定的标题、说明、URI 和 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 对象集合初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-163">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, URI, and collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-164">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-164">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#5)]
 [!code-vb[SyndicationFeed#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="7a4f9-165">联合源的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-165">The syndication feed title.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7a4f9-166">联合源的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-166">The syndication feed description.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="7a4f9-167">联合源的替换 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-167">The alternate URI for the syndication feed.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="7a4f9-168">联合源的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-168">The ID of the syndication feed.</span>
          </span>
        </param>
        <param name="lastUpdatedTime">
          <span data-ttu-id="7a4f9-169">包含联合源上次更新时间的 <see cref="T:System.DateTimeOffset" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-169">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-170">创建 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-170">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-171">下面的代码演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-171">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#49](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#49)]
 [!code-vb[SyndicationFeed#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="7a4f9-172">联合源的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-172">The syndication feed title.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7a4f9-173">联合源的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-173">The syndication feed description.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="7a4f9-174">联合源的替换 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-174">The alternate URI for the syndication feed.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="7a4f9-175">联合源的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-175">The ID of the syndication feed.</span>
          </span>
        </param>
        <param name="lastUpdatedTime">
          <span data-ttu-id="7a4f9-176">包含联合源上次更新时间的 <see cref="T:System.DateTimeOffset" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-176">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="7a4f9-177">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-177">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-178">创建 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-178">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-179">下面的代码演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-179">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#50](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#50)]
 [!code-vb[SyndicationFeed#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-180">获取属性扩展的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-180">Gets a collection of attribute extensions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-181">一个包含属性扩展集合的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-181">A dictionary that contains a collection of attribute extensions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-182">属性扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-182">An attribute extension is a valid XML attribute that is not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-183">序列化为 Atom 1.0 时，将集合中的每个自定义属性写入到 <`atom`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-183">When serialized to Atom 1.0, each custom attribute in the collection is written to the <`atom`> element.</span></span> <span data-ttu-id="7a4f9-184">序列化为 RSS 2.0 时，每个自定义属性写入到 <`channel`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-184">When serialized to RSS 2.0, each custom attribute is written to the <`channel`> element.</span></span> <span data-ttu-id="7a4f9-185">添加属性扩展的示例，请参阅[Loosely-Typed 扩展](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)示例。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-185">For an example of adding an attribute extension, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-186">下面的代码说明如何向联合源添加属性扩展。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-186">The following code shows how to add an attribute extension to a syndication feed.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#0](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/program.cs#0)] 
 [!code-vb[LooselyTypedExtensions#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/program.vb#0)]   
  
 <span data-ttu-id="7a4f9-187">下面的 XML 演示如何将属性扩展序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-187">The following XML shows how an attribute extension is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="7a4f9-188">下面的 XML 演示如何将属性扩展序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-188">The following XML shows how an attribute extension is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#15](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Authors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Authors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Authors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Authors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-189">获取源作者的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-189">Gets a collection of authors of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-190">一个表示源作者的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-190">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the authors of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-191">序列化为 Atom 1.0 时每个<xref:System.ServiceModel.Syndication.SyndicationPerson>在集合都写入到 <`author`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-191">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`author`> element.</span></span> <span data-ttu-id="7a4f9-192">如果只有一个序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationPerson>存在于集合中，它写入 <`managingEditor`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-192">When serialized to RSS 2.0, if only a single <xref:System.ServiceModel.Syndication.SyndicationPerson> exists in the collection, it is written to a <`managingEditor`> element.</span></span> <span data-ttu-id="7a4f9-193">否则为每个<xref:System.ServiceModel.Syndication.SyndicationPerson>写入到 <`a10:author`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-193">Otherwise, each <xref:System.ServiceModel.Syndication.SyndicationPerson> is written to an <`a10:author`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-194">下面的代码演示如何将作者添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-194">The following code shows how to add an author to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#8)]
 [!code-vb[SyndicationFeed#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#8)]  
  
 <span data-ttu-id="7a4f9-195">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-195">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#16](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#16)]  
  
 <span data-ttu-id="7a4f9-196">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-196">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#17](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-197">获取和设置 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 实例的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-197">Gets and sets the base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-198">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 实例的基 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-198">The base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-199">下面的代码演示如何访问 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例的基 URI。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-199">The following code shows how to access the base URI of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#48](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#48)]
 [!code-vb[SyndicationFeed#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As Collection(Of SyndicationCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ Categories { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-200">获取源类别的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-200">Gets a collection of categories for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-201">一个表示源类别的 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-201">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-202">序列化为 Atom 1.0 时每个<xref:System.ServiceModel.Syndication.SyndicationCategory>在集合都写入到 <`category`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-202">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-203">序列化为 RSS 2.0 时每个<xref:System.ServiceModel.Syndication.SyndicationCategory>在集合都写入到 <`category`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-203">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-204">下面的代码演示如何将类别添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-204">The following code shows how to add a category to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#10)]
 [!code-vb[SyndicationFeed#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#10)]  
  
 <span data-ttu-id="7a4f9-205">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#18](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#18)]  
  
 <span data-ttu-id="7a4f9-206">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-206">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#19](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationFeed Clone (bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationFeed Clone(bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (cloneItems As Boolean) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationFeed ^ Clone(bool cloneItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneItems">
          <span data-ttu-id="7a4f9-207">一个指定是否克隆 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-207">A value that specifies whether the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects are cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-208">创建 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 实例的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-208">Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-209">一个重复的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-209">A duplicate <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-210">如果 `cloneItems` 参数为 `true`，则会克隆 <xref:System.ServiceModel.Syndication.SyndicationFeed> 对象中的所有项；否则，新 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例的项集合会包含对原始 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例的项的引用。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-210">If the `cloneItems` parameter is `true`, all items within the <xref:System.ServiceModel.Syndication.SyndicationFeed> object are cloned; otherwise, the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items collection contain references to the original <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-211">下面的代码演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-211">The following code shows how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#47](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#47)]
 [!code-vb[SyndicationFeed#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contributors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contributors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Contributors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-212">获取源参与者的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-212">Gets a collection of the contributors to the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-213">一个表示源参与者的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-213">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the contributors to the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-214">序列化为 Atom 1.0 时每个<xref:System.ServiceModel.Syndication.SyndicationPerson>在集合都写入到 <`contributor`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-214">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to a <`contributor`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-215">序列化为 RSS 2.0 时每个<xref:System.ServiceModel.Syndication.SyndicationPerson>在集合都写入到 <`a10:contributor`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-215">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`a10:contributor`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-216">下面的代码演示如何将参与者添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-216">The following code shows how to add a contributor to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#11)]
 [!code-vb[SyndicationFeed#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#11)]  
  
 <span data-ttu-id="7a4f9-217">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-217">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#20](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#20)]  
  
 <span data-ttu-id="7a4f9-218">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-218">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#21](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Copyright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Copyright" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public Property Copyright As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Copyright { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-219">获取和设置源的版权信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-219">Gets and sets copyright information for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-220">一个表示源版权信息的 <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-220">A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object that represents copyright information for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-221">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>写入到 <`rights`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-221">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`rights`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-222">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>写入到 <`copyright`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-222">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`copyright`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-223">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationFeed> 的版权信息。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-223">The following code shows how to set the copyright information for a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#12)]
 [!code-vb[SyndicationFeed#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#12)]  
  
 <span data-ttu-id="7a4f9-224">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-224">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#22](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#22)]  
  
```  
<rights type="text">Copyright 2007</rights>  
```  
  
 <span data-ttu-id="7a4f9-225">下面的 XML 演示如何按照 RSS 2.0 序列化 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-225">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#23](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCategory">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationCategory CreateCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationCategory CreateCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateCategory () As SyndicationCategory" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationCategory ^ CreateCategory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationCategory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-226">创建一个新的 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-226">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-227">新 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-227">A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-228">此方法不会将 <xref:System.ServiceModel.Syndication.SyndicationCategory> 对象添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-228">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationCategory> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationItem CreateItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationItem CreateItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateItem () As SyndicationItem" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationItem ^ CreateItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-229">创建一个新的 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-229">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-230">新 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-230">A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-231">此方法不会将 <xref:System.ServiceModel.Syndication.SyndicationItem> 对象添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-231">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationItem> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLink">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationLink CreateLink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink CreateLink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateLink () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ CreateLink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-232">创建一个新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-232">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-233">新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-233">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-234">新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 实例不会添加到用于创建它的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-234">The new <xref:System.ServiceModel.Syndication.SyndicationLink> instance is not added to the <xref:System.ServiceModel.Syndication.SyndicationFeed> instance used to create it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePerson">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationPerson CreatePerson ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson CreatePerson() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreatePerson () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ CreatePerson();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-235">创建一个新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-235">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-236">新 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-236">A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-237">此方法不会将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 对象添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 集合或 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-237">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationPerson> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> or <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Description { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-238">获取和设置源的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-238">Gets and sets a description of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-239">一个表示源说明的 <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-239">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that represents the description of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-240">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>写入到 <`subtitle`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-240">When serialized to Atom 1.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`subtitle`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-241">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>写入到 <`description`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-241">When serialized to RSS 2.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`description`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-242">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> 的 <xref:System.ServiceModel.Syndication.SyndicationFeed>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-242">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#13)]
 [!code-vb[SyndicationFeed#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#13)]  
  
 <span data-ttu-id="7a4f9-243">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-243">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#24](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#24)]  
  
 <span data-ttu-id="7a4f9-244">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> 序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-244">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#25](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-245">获取源的元素扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-245">Gets the element extensions for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-246">一个包含源中元素扩展的 <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-246">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance that contains the element extensions in the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-247">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-247">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-248">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-248">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
 `<mg:MyElement xmlns:mg="http://myserver/elements" />`  
  
 <span data-ttu-id="7a4f9-249">添加元素扩展的示例，请参阅[Loosely-Typed 扩展](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)示例。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-249">For an example of adding element extensions, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-250">下面的代码演示如何将元素扩展添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-250">The following code shows how to add element extensions to a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#1](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#1)]
 [!code-vb[LooselyTypedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generator">
      <MemberSignature Language="C#" Value="public string Generator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Generator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Generator" />
      <MemberSignature Language="VB.NET" Value="Public Property Generator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Generator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-251">获取和设置源的生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-251">Gets and sets the generator of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-252">生成源的工具名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-252">The name of the tool that generated the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-253">序列化为 Atom 1.0 和 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A>写入到 <`generator`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-253">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> is written to a <`generator`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-254">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> 的 <xref:System.ServiceModel.Syndication.SyndicationFeed>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-254">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="7a4f9-255">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> 属性序列化为 Atom 1.0 和 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-255">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> property is serialized to Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#26](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtom10Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAtom10Formatter () As Atom10FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Atom10FeedFormatter ^ GetAtom10Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Atom10FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-256">获取一个 <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-256">Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-257">一个 <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-257">An <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRss20Formatter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-258">获取一个 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-258">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter () As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-259">获取一个 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-259">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-260">一个 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-260">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter (bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter(bool serializeExtensionsAsAtom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter (serializeExtensionsAsAtom As Boolean) As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter(bool serializeExtensionsAsAtom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializeExtensionsAsAtom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializeExtensionsAsAtom">
          <span data-ttu-id="7a4f9-261">一个指定是否使用 Atom 1.0 命名空间序列化元素和属性扩展的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-261">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-262">获取一个新的 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-262">Gets a new <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-263">一个 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-263">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-264">RSS 2.0 规范允许使用未在其规范中指定的元素和属性，但前提是这些元素和属性必须在命名空间中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-264">The RSS 2.0 specification allows elements and attributes that are not specified in its specification only if they are within a namespace.</span></span> <span data-ttu-id="7a4f9-265">如果 `serializedExtensionsAsAtom` 参数为 `true` 时，则格式化程序会自动将 `a10` 命名空间限定符添加到所有的扩展；否则，不会序列化扩展。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-265">When the `serializedExtensionsAsAtom` parameter is `true`, the formatter automatically adds the `a10` namespace qualifier to all extensions; otherwise, the extensions are not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-266">获取和设置源的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-266">Gets and sets the ID of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-267">源的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-267">The ID of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-268">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A>写入到 <`id`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-268">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`id`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-269">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A>写入到 <`a10:id`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-269">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`a10:id`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-270">下面的代码演示如何在 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 实例上设置 <xref:System.ServiceModel.Syndication.SyndicationFeed> 属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-270">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#40](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#40)]
 [!code-vb[SyndicationFeed#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#40)]  
  
 <span data-ttu-id="7a4f9-271">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-271">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#27](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#27)]  
  
 <span data-ttu-id="7a4f9-272">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-272">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#28](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public Uri ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ImageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-273">获取和设置源的图像 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-273">Gets and sets the image URL for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-274">源的图像 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-274">The URL for the image for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-275">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A>属性写入 <`logo`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-275">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to a <`logo`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-276">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A>属性写入 <`image`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-276">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to an <`image`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-277">下面的代码演示如何在 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 实例上设置 <xref:System.ServiceModel.Syndication.SyndicationFeed>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-277">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#41](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#41)]
 [!code-vb[SyndicationFeed#41](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#41)]  
  
 <span data-ttu-id="7a4f9-278">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-278">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#29](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#29)]  
  
 <span data-ttu-id="7a4f9-279">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-279">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#30](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As IEnumerable(Of SyndicationItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-280">获取源中包含的源项的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-280">Gets a collection of the feed items contained in the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-281">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-281">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-282">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A>集合写入 <`entry`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-282">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`entry`> elements.</span></span>  
  
 <span data-ttu-id="7a4f9-283">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A>集合写入 <`item`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-283">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`item`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-284">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 实例的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-284">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#42](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#42)]
 [!code-vb[SyndicationFeed#42](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#42)]  
  
 <span data-ttu-id="7a4f9-285">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-285">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#31](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#31)]  
  
 <span data-ttu-id="7a4f9-286">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-286">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#32](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-287">获取和设置源的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-287">Gets and sets the language of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-288">写入源时使用的语言名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-288">The name of the language the feed is written in.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-289">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A>属性写入`lang`属性中 <`feed`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-289">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the `lang` attribute in the <`feed`> element.</span></span>  
  
 <span data-ttu-id="7a4f9-290">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A>属性写入 <`language`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-290">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the <`language`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-291">下面的代码演示如何在 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 实例上设置 <xref:System.ServiceModel.Syndication.SyndicationFeed> 属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-291">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#43](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#43)]
 [!code-vb[SyndicationFeed#43](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#43)]  
  
 <span data-ttu-id="7a4f9-292">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-292">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="7a4f9-293">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-293">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#33](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastUpdatedTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastUpdatedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastUpdatedTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastUpdatedTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-294">获取和设置上次更新源的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-294">Gets and sets the time the feed was last updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-295">一个设置为源上次更新时间的 <see cref="T:System.DateTimeOffset" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-295">A <see cref="T:System.DateTimeOffset" /> instance set to the time the feed was last updated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-296">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A>属性写入 <`updated`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-296">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to an <`updated`>element.</span></span>  
  
 <span data-ttu-id="7a4f9-297">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A>属性写入 <`lastBuildDate`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-297">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to a <`lastBuildDate`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-298">下面的代码演示如何在 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 实例上设置 <xref:System.ServiceModel.Syndication.SyndicationFeed> 属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-298">The following code shows how to se the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#44](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#44)]
 [!code-vb[SyndicationFeed#44](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#44)]  
  
 <span data-ttu-id="7a4f9-299">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-299">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#34](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#34)]  
  
 <span data-ttu-id="7a4f9-300">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-300">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#35](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationLink&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As Collection(Of SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ Links { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-301">获取与源关联的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-301">Gets the links associated with the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-302">
            <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-302">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-303">序列化为 Atom 1.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A>集合写入大量的 <`link`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-303">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`link`> elements.</span></span>  
  
 <span data-ttu-id="7a4f9-304">序列化为 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A>集合写入大量的 <`a10:link`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-304">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`a10:link`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-305">下面的代码演示如何将链接添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 实例的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 集合中。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-305">The following code shows how to add a link to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#45](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#45)]
 [!code-vb[SyndicationFeed#45](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#45)]  
  
 <span data-ttu-id="7a4f9-306">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-306">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 <span data-ttu-id="7a4f9-307">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-307">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationFeed Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationFeed Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationFeed ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="7a4f9-308">要从其中加载源的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-308">The <see cref="T:System.Xml.XmlReader" /> to load the feed from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-309">从指定的 XML 读取器加载联合源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-309">Loads a syndication feed from the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-310">一个包含已加载内容的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-310">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that contains the loaded contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-311">下面的示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-311">The following example demonstrates how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load&lt;TSyndicationFeed&gt;">
      <MemberSignature Language="C#" Value="public static TSyndicationFeed Load&lt;TSyndicationFeed&gt; (System.Xml.XmlReader reader) where TSyndicationFeed : System.ServiceModel.Syndication.SyndicationFeednew();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSyndicationFeed Load&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt;(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load(Of TSyndicationFeed As {SyndicationFeedNew}) (reader As XmlReader) As TSyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : System::ServiceModel::Syndication::SyndicationFeedgcnew() static TSyndicationFeed Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSyndicationFeed</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSyndicationFeed">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <typeparam name="TSyndicationFeed">
          <span data-ttu-id="7a4f9-312">联合源的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-312">The syndication feed type.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="7a4f9-313">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-313">The <see cref="T:System.Xml.XmlReader" /> to read from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-314">从指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 加载一个 <see cref="T:System.Xml.XmlReader" /> 派生实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-314">Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-315">一个包含源的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 派生实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-315">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance that contains the feed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-316">若要将联合项加载到从 <xref:System.ServiceModel.Syndication.SyndicationFeed> 派生的类中，可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-316">Use this method when you are loading a syndication item into a class derived from <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-317">下面的代码演示如何从 <xref:System.Xml.XmlReader> 实例加载联合源。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-317">The following code shows how to load a syndication feed from an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="7a4f9-318">读取过程中遇到无效的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-318">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAsAtom10">
      <MemberSignature Language="C#" Value="public void SaveAsAtom10 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsAtom10(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsAtom10 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsAtom10(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="7a4f9-319">要向其中进行写入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-319">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-320">以 Atom 1.0 格式将联合源写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-320">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-321">下面的代码演示如何以 Atom 1.0 格式写出 <xref:System.ServiceModel.Syndication.SyndicationFeed>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-321">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the Atom 1.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#52](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#52)]
 [!code-vb[SyndicationFeed#52](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsRss20">
      <MemberSignature Language="C#" Value="public void SaveAsRss20 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsRss20(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsRss20 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsRss20(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="7a4f9-322">要向其中进行写入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-322">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-323">以 RSS 2.0 格式将联合源写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-323">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a4f9-324">下面的代码演示如何以 RSS 2.0 格式写出 <xref:System.ServiceModel.Syndication.SyndicationFeed>。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-324">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the RSS 2.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#51](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#51)]
 [!code-vb[SyndicationFeed#51](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Title { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a4f9-325">获取和设置源的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-325">Gets and sets the title of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a4f9-326">一个包含源标题的 <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-326">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that contains the title of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-327">序列化为 Atom 1.0 和 RSS 2.0 时<xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A>属性写入 <`title`> 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-327">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is written to a <`title`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4f9-328">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 实例的 <xref:System.ServiceModel.Syndication.SyndicationFeed> 属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-328">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#46](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#46)]
 [!code-vb[SyndicationFeed#46](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#46)]  
  
 <span data-ttu-id="7a4f9-329">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-329">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="7a4f9-330">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-330">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#38](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7a4f9-331">元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-331">The name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="7a4f9-332">元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-332">The namespace of the element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7a4f9-333">要分析的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-333">The attribute to parse.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="7a4f9-334">要在分析时使用的联合版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-334">The syndication version to use when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-335">试图分析属性扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-335">Attempts to parse an attribute extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-336">一个指定是否已成功分析属性扩展的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-336">A value that specifies whether the attribute extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-337">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-337">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-338">这些扩展会序列化为的属性 <`feed`> （为 Atom 1.0) 或 <`rss`> （为 RSS 1.0) 元素，它取决于正在使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-338">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="7a4f9-339">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-339">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="7a4f9-340">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationFeed> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-340">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="7a4f9-341">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-341">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="7a4f9-342">读取过程中遇到无效的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-342">Invalid XML Encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="7a4f9-343">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-343">The <see cref="T:System.Xml.XmlReader" /> to read from.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="7a4f9-344">要在分析时使用的联合版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-344">The syndication version to use while parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-345">试图分析元素扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-345">Attempts to parse an element extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a4f9-346">一个指定是否已成功分析元素扩展的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-346">A value that specifies whether the element extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-347">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-347">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-348">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-348">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="7a4f9-349">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-349">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="7a4f9-350">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationFeed> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-350">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="7a4f9-351">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-351">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="7a4f9-352">读取过程中遇到无效的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-352">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="7a4f9-353">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-353">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="7a4f9-354">要在写入时使用的联合版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-354">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-355">使用指定的联合版本将属性扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-355">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-356">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-356">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-357">这些扩展会序列化为的属性 <`feed`> （为 Atom 1.0) 或 <`rss`> （为 RSS 1.0) 元素，它取决于正在使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-357">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="7a4f9-358">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-358">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="7a4f9-359">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationFeed> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-359">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="7a4f9-360">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-360">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="7a4f9-361">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-361">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="7a4f9-362">要在写入时使用的联合版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-362">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a4f9-363">使用指定的联合版本将元素扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a4f9-363">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4f9-364">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-364">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="7a4f9-365">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-365">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="7a4f9-366">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-366">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="7a4f9-367">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationFeed> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-367">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="7a4f9-368">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="7a4f9-368">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>