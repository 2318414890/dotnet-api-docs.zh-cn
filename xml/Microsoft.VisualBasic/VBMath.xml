<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9ec51fc0d9afec7126314ff80bbb18b76041c0e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37709604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8556b-101">
        <see langword="VbMath" /> 模块包含用于执行算术操作的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8556b-101">The <see langword="VbMath" /> module contains procedures used to perform mathematical operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8556b-102">此模块支持的 Visual Basic 语言关键字和运行时库成员用于生成随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-102">This module supports the Visual Basic language keywords and run-time library members for generating random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8556b-103">此示例使用`Rnd`函数以生成从 1 到 6 的范围内的随机整数值。</span><span class="sxs-lookup"><span data-stu-id="8556b-103">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8556b-104">初始化随机数生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-104">Initializes the random-number generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8556b-105">初始化随机数生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-105">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8556b-106">此重载`Randomize`方法不接受种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-106">This overload of the `Randomize` method does not take a seed value.</span></span> <span data-ttu-id="8556b-107">相反，返回系统计时器的值用作新的种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-107">Instead, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="8556b-108">如果`Randomize`未使用，`Rnd`函数 （不带任何参数） 使用的同一个数字作为种子第一次它被调用，并且此后使用上一次生成数量作为种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-108">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8556b-109">若要重复执行一系列随机数字，调用`Rnd`与之前使用参数为负`Randomize`使用数值自变量。</span><span class="sxs-lookup"><span data-stu-id="8556b-109">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8556b-110">因为`Random`语句和`Rnd`函数起始种子值和生成在有限范围内的数字，结果可能是可预测的人知道用于生成它们的算法。</span><span class="sxs-lookup"><span data-stu-id="8556b-110">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="8556b-111">因此，`Random`语句和`Rnd`函数不应该用于生成加密中使用的随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-111">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="8556b-112">有关详情，请参阅<xref:System.Security.Cryptography.RandomNumberGenerator>。</span><span class="sxs-lookup"><span data-stu-id="8556b-112">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8556b-113">此示例使用`Randomize`语句初始化随机数生成器。</span><span class="sxs-lookup"><span data-stu-id="8556b-113">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="8556b-114">Number 参数已被省略，因为`Randomize`使用的返回值`Timer`函数作为新的种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-114">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="8556b-115">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-115">Optional.</span>
          </span>
          <span data-ttu-id="8556b-116">一个 <see langword="Object" /> 或任何有效的数值表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-116">An <see langword="Object" /> or any valid numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8556b-117">初始化随机数生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-117">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8556b-118">`Randomize` 使用`Number`初始化`Rnd`函数的随机数字生成器，向其提供新的种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-118">`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value.</span></span> <span data-ttu-id="8556b-119">如果省略`Number`，返回系统计时器的值用作新的种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-119">If you omit `Number`, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="8556b-120">如果`Randomize`未使用，`Rnd`函数 （不带任何参数） 使用的同一个数字作为种子第一次它被调用，并且此后使用上一次生成数量作为种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-120">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8556b-121">若要重复执行一系列随机数字，调用`Rnd`与之前使用参数为负`Randomize`使用数值自变量。</span><span class="sxs-lookup"><span data-stu-id="8556b-121">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="8556b-122">使用`Randomize`具有相同值的`Number`不重复前一序列。</span><span class="sxs-lookup"><span data-stu-id="8556b-122">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8556b-123">因为`Random`语句和`Rnd`函数起始种子值和生成在有限范围内的数字，结果可能是可预测的人知道用于生成它们的算法。</span><span class="sxs-lookup"><span data-stu-id="8556b-123">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="8556b-124">因此，`Random`语句和`Rnd`函数不应该用于生成加密中使用的随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-124">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="8556b-125">有关详情，请参阅<xref:System.Security.Cryptography.RandomNumberGenerator>。</span><span class="sxs-lookup"><span data-stu-id="8556b-125">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8556b-126">此示例使用`Randomize`语句初始化随机数生成器。</span><span class="sxs-lookup"><span data-stu-id="8556b-126">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="8556b-127">Number 参数已被省略，因为`Randomize`使用的返回值`Timer`函数作为新的种子值。</span><span class="sxs-lookup"><span data-stu-id="8556b-127">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8556b-128">返回一个 <see langword="Single" /> 类型的随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-128">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8556b-129">返回一个 <see langword="Single" /> 类型的随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-129">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8556b-130">序列中的下一个随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-130">The next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8556b-131">`Rnd`函数返回一个值小于 1，但大于或等于零。</span><span class="sxs-lookup"><span data-stu-id="8556b-131">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="8556b-132">然后再调用`Rnd`，使用`Randomize`语句，不带参数初始化了种子随机数字生成器根据系统计时器。</span><span class="sxs-lookup"><span data-stu-id="8556b-132">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="8556b-133">若要生成在给定范围内的随机整数，请使用下面的公式。</span><span class="sxs-lookup"><span data-stu-id="8556b-133">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="8556b-134">在这里，`upperbound`是在范围内，最大数目和`lowerbound`为范围中最小的数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-134">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8556b-135">若要重复执行一系列随机数字，调用`Rnd`与之前使用参数为负`Randomize`使用数值自变量。</span><span class="sxs-lookup"><span data-stu-id="8556b-135">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8556b-136">因为`Random`语句和`Rnd`函数起始种子值和生成在有限范围内的数字，结果可能是可预测的人知道用于生成它们的算法。</span><span class="sxs-lookup"><span data-stu-id="8556b-136">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="8556b-137">因此，`Random`语句和`Rnd`函数不应该用于生成加密中使用的随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-137">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8556b-138">此示例使用`Rnd`函数以生成从 1 到 6 的范围内的随机整数值。</span><span class="sxs-lookup"><span data-stu-id="8556b-138">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="8556b-139">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-139">Optional.</span>
          </span>
          <span data-ttu-id="8556b-140">一个 <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-140">A <see langword="Single" /> value or any valid <see langword="Single" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8556b-141">返回一个 <see langword="Single" /> 类型的随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-141">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8556b-142">如果 Number 小于零，则 Rnd 每次都使用 <paramref name="Number" /> 作为种子生成相同的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-142">If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed.</span>
          </span>
          <span data-ttu-id="8556b-143">如果 Number 大于零，则 Rnd 生成序列中的下一个随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-143">If number is greater than zero, Rnd generates the next random number in the sequence.</span>
          </span>
          <span data-ttu-id="8556b-144">如果 Number 等于零，则 Rnd 生成最近生成的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-144">If number is equal to zero, Rnd generates the most recently generated number.</span>
          </span>
          <span data-ttu-id="8556b-145">如果未提供 Number，则 Rnd 生成序列中的下一个随机数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8556b-145">If number is not supplied, Rnd generates the next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8556b-146">`Rnd`函数返回一个值小于 1，但大于或等于零。</span><span class="sxs-lookup"><span data-stu-id="8556b-146">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="8556b-147">值`Number`确定如何`Rnd`生成随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-147">The value of `Number` determines how `Rnd` generates a random number.</span></span>  
  
 <span data-ttu-id="8556b-148">对于任何给定的初始种子，会生成相同的数字序列，因为每次连续调用`Rnd`函数使用以前生成的数字作为种子序列中的下一个编号。</span><span class="sxs-lookup"><span data-stu-id="8556b-148">For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.</span></span>  
  
 <span data-ttu-id="8556b-149">然后再调用`Rnd`，使用`Randomize`语句，不带参数初始化了种子随机数字生成器根据系统计时器。</span><span class="sxs-lookup"><span data-stu-id="8556b-149">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="8556b-150">若要生成在给定范围内的随机整数，请使用下面的公式。</span><span class="sxs-lookup"><span data-stu-id="8556b-150">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="8556b-151">在这里，`upperbound`是在范围内，最大数目和`lowerbound`为范围中最小的数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-151">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8556b-152">若要重复执行一系列随机数字，调用`Rnd`与之前使用参数为负`Randomize`使用数值自变量。</span><span class="sxs-lookup"><span data-stu-id="8556b-152">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="8556b-153">使用`Randomize`具有相同值的`Number`不重复前一序列。</span><span class="sxs-lookup"><span data-stu-id="8556b-153">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8556b-154">因为`Random`语句和`Rnd`函数起始种子值和生成在有限范围内的数字，结果可能是可预测的人知道用于生成它们的算法。</span><span class="sxs-lookup"><span data-stu-id="8556b-154">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="8556b-155">因此，`Random`语句和`Rnd`函数不应该用于生成加密中使用的随机数字。</span><span class="sxs-lookup"><span data-stu-id="8556b-155">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8556b-156">此示例使用`Rnd`函数以生成从 1 到 6 的范围内的随机整数值。</span><span class="sxs-lookup"><span data-stu-id="8556b-156">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>