<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Collection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528818091bfa2bd27afdc2ecfcceb158714c2dc63.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28818091bfa2bd27afdc2ecfcceb158714c2dc63</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Collection">
          <source>A Visual Basic <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> is an ordered set of items that can be referred to as a unit.</source>
          <target state="translated">Visual Basic <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 是可作为单元引用的一组有序项。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Whenever possible, you should use the generic collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace or the <ph id="ph2">&lt;xref:System.Collections.Concurrent&gt;</ph> namespace instead of a Visual Basic <ph id="ph3">`Collection`</ph>.</source>
          <target state="translated">只要可能，您应使用 <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 命名空间或 <ph id="ph2">&lt;xref:System.Collections.Concurrent&gt;</ph> 命名空间而不是 Visual Basic <ph id="ph3">`Collection`</ph> 中的泛型集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>For more information, see <bpt id="p1">[</bpt>Collections<ept id="p1">](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>集合<ept id="p1">](http://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>The Visual Basic <ph id="ph1">`Collection`</ph> object provides a convenient way to refer to a related group of items as a single object.</source>
          <target state="translated">Visual Basic<ph id="ph1">`Collection`</ph>对象提供一组作为单个对象相关的项是指一种简便方式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>The items, or <bpt id="p1">*</bpt>elements<ept id="p1">*</ept>, in a collection need only be related by the fact that they exist in the collection.</source>
          <target state="translated">该项目，或<bpt id="p1">*</bpt>元素<ept id="p1">*</ept>中只需要相关，因为它们存在于集合的集合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Elements of a collection do not have to share the same data type.</source>
          <target state="translated">集合中的元素不需要共享相同的数据类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>You can create a collection the same way you create other objects, as the following example illustrates.</source>
          <target state="translated">可以创建集合相同的方式创建其他对象，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Once you have created a collection, you can do any of the following:</source>
          <target state="translated">一旦你已创建集合，可以执行以下任一操作：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Add an element with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph> method.</source>
          <target state="translated">添加具有的元素<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Remove an element with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;</ph> method.</source>
          <target state="translated">删除具有的元素<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Remove all elements with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;</ph> method.</source>
          <target state="translated">删除具有的所有元素<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Find out how many elements the collection contains with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property.</source>
          <target state="translated">了解集合包含具有的元素数量<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Check whether a specific element is present with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;</ph> method.</source>
          <target state="translated">检查的特定元素是否存在与<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Return a specific element from the collection with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph> property.</source>
          <target state="translated">返回集合中具有的特定元素<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Iterate through the entire collection with the <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>.</source>
          <target state="translated">循环访问整个集合<bpt id="p1">[</bpt>每个...下一条语句<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Although the Visual Basic <ph id="ph1">`Collection`</ph> object has functionality identical to the <ph id="ph2">`Collection`</ph> object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</source>
          <target state="translated">尽管 Visual Basic<ph id="ph1">`Collection`</ph>对象具有相同的功能<ph id="ph2">`Collection`</ph>对象在 Visual Basic 6.0 中，两个无法在 COM 环境进行交互操作。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Iterating through a Visual Basic <ph id="ph1">`Collection`</ph> is not a thread-safe procedure.</source>
          <target state="translated">循环访问 Visual Basic<ph id="ph1">`Collection`</ph>不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</source>
          <target state="translated">即使集合已同步，其他线程仍可以修改集合，从而导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，请锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>For more information on locking a programming element, see <bpt id="p1">[</bpt>SyncLock Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept>.</source>
          <target state="translated">锁定编程元素的详细信息，请参阅<bpt id="p1">[</bpt>SyncLock 语句<ept id="p1">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>The following example creates the <ph id="ph1">`Collection`</ph> object <ph id="ph2">`names`</ph> and a dialog box with which a user can add objects (names) to the collection.</source>
          <target state="translated">下面的示例创建<ph id="ph1">`Collection`</ph>对象<ph id="ph2">`names`</ph>和一个对话框，使用该用户可以向集合添加对象 （名称）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>It then displays the names in the collection, and finally empties the collection without disposing of the <ph id="ph1">`Collection`</ph> object itself.</source>
          <target state="translated">它然后在集合中，显示名称和最后不必释放的清空集合<ph id="ph1">`Collection`</ph>对象本身。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>To see how this works, choose the <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> command from the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu and declare a public variable called <ph id="ph1">`instanceName`</ph> at the module level of <ph id="ph2">`nameClass`</ph> (type <ph id="ph3">`Public instanceName`</ph>) to hold the names of each instance.</source>
          <target state="translated">若要查看此工作原理，请选择<bpt id="p1">**</bpt>添加类<ept id="p1">**</ept>命令<bpt id="p2">**</bpt>项目<ept id="p2">**</ept>菜单，并声明调用的公共变量<ph id="ph1">`instanceName`</ph>在模块级别的<ph id="ph2">`nameClass`</ph>(类型<ph id="ph3">`Public instanceName`</ph>) 来保存每个实例的名称。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Leave the default name as <ph id="ph1">`nameClass`</ph>.</source>
          <target state="translated">保留默认名称为<ph id="ph1">`nameClass`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>Copy and paste the following code into the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> section of another module, and then start it with the statement <ph id="ph1">`classNamer`</ph> in another procedure.</source>
          <target state="translated">复制并粘贴下面的代码插入<bpt id="p1">**</bpt>常规<ept id="p1">**</ept>另一个模块，部分，然后启动它与语句<ph id="ph1">`classNamer`</ph>在另一个过程。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Collection">
          <source>(This example works only with host applications that support classes.)</source>
          <target state="translated">（此示例仅适用于托管应用程序支持类。）</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source>Creates and returns a new <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">创建并返回一个新的 <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collection returned by this constructor is empty and does not have any initial capacity allocated.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>由此构造函数返回的集合为空且不具有任何已分配的初始容量。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collections are not compatible with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> collections available in the <ph id="ph3">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.Specialized?displayProperty=nameWithType&gt;</ph> namespaces.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> 集合不是与兼容<ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>集合中提供<ph id="ph3">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>，和<ph id="ph5">&lt;xref:System.Collections.Specialized?displayProperty=nameWithType&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source>The following example creates a new <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collection and assigns it to the variable <ph id="ph2">`coll`</ph>:</source>
          <target state="translated">下面的示例创建一个新<ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>集合并将其分配给该变量<ph id="ph2">`coll`</ph>:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source>This <ph id="ph1">`Collection`</ph> object is one-based, which means that the index values of the elements range from 1 through the value of the <ph id="ph2">`Count`</ph> property.</source>
          <target state="translated">这<ph id="ph1">`Collection`</ph>对象是从一开始，这意味着，从 1 到的值的元素范围的索引值<ph id="ph2">`Count`</ph>属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.#ctor">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> collections hold elements of type <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> 集合会保留类型的元素<ph id="ph2">&lt;xref:System.Object&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>An object of any type that specifies the element to add to the collection.</source>
          <target state="translated">指定要添加到集合的元素的任意类型的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>A unique <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</source>
          <target state="translated">指定键字符串的唯一 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，可以用此键字符串代替定位索引访问集合的这个新元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">指定集合中的相对位置的表达式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The element to be added is placed in the collection before the element identified by the <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> argument.</source>
          <target state="translated">将要添加的元素放在集合中由 <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> 参数标识的元素前面。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> is a numeric expression, it must be a number from 1 through the value of the collection's <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> property.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> 是数值表达式，则它必须是介于 1 和集合的 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> 属性值之间的数值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，则它必须对应于将引用的元素添加到集合时指定的键字符串。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>You cannot specify both <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>After<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">不能同时指定 <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>After<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">指定集合中的相对位置的表达式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The element to be added is placed in the collection after the element identified by the <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> argument.</source>
          <target state="translated">将要添加的元素放在集合中由 <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> 参数标识的元素后面。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> is a numeric expression, it must be a number from 1 through the value of the collection's <ph id="ph1">&lt;see langword="Count" /&gt;</ph> property.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> 是数值表达式，则它必须是介于 1 和集合的 <ph id="ph1">&lt;see langword="Count" /&gt;</ph> 属性值之间的数值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, it must correspond to the key string specified when the element referred to was added to the collection.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>After<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，则它必须对应于将引用的元素添加到集合时指定的键字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>You cannot specify both <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>After<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">不能同时指定 <bpt id="p1">&lt;c&gt;</bpt>Before<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>After<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Adds an element to a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object.</source>
          <target state="translated">将一个元素添加到 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`Before`</ph> or <ph id="ph2">`After`</ph> argument must refer to an existing element of the collection; otherwise, an error occurs.</source>
          <target state="translated"><ph id="ph1">`Before`</ph>或<ph id="ph2">`After`</ph>参数必须引用现有元素的集合; 否则，会出现错误。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>If both the <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph> arguments are omitted, the new object is added to the end of the collection.</source>
          <target state="translated">如果这两个<ph id="ph1">`Before`</ph>和<ph id="ph2">`After`</ph>参数将被省略，将新对象添加到集合的末尾。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>An error also occurs if a specified <ph id="ph1">`Key`</ph> value matches the key for an existing element of the collection.</source>
          <target state="translated">如果指定，也会发生错误<ph id="ph1">`Key`</ph>值与现有元素的集合的键匹配。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`Add`</ph> method to add <ph id="ph2">`child`</ph> objects — instances of a class called <ph id="ph3">`child`</ph> containing a <ph id="ph4">`Public`</ph> property <ph id="ph5">`name`</ph> — to a collection called <ph id="ph6">`family`</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`Add`</ph>方法将添加<ph id="ph2">`child`</ph>对象-类的实例调用<ph id="ph3">`child`</ph>包含<ph id="ph4">`Public`</ph>属性<ph id="ph5">`name`</ph>-一个名为集合到<ph id="ph6">`family`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>To see how this works, create a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls and set their <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> properties to <ph id="ph4">`Add`</ph> and <ph id="ph5">`List`</ph>.</source>
          <target state="translated">若要查看此工作原理，创建<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含两个<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件并设置其<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性设置为<ph id="ph4">`Add`</ph>和<ph id="ph5">`List`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Add the <ph id="ph1">`child`</ph> class definition and the <ph id="ph2">`family`</ph> declaration to the form code.</source>
          <target state="translated">添加<ph id="ph1">`child`</ph>类定义和<ph id="ph2">`family`</ph>对窗体代码的声明。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>Modify the <ph id="ph1">`_Click`</ph> event handlers for the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> and <bpt id="p2">**</bpt>List<ept id="p2">**</ept> buttons as shown.</source>
          <target state="translated">修改<ph id="ph1">`_Click`</ph>事件处理程序<bpt id="p1">**</bpt>添加<ept id="p1">**</ept>和<bpt id="p2">**</bpt>列表<ept id="p2">**</ept>按钮如下所示。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> button allows you to add children.</source>
          <target state="translated"><bpt id="p1">**</bpt>添加<ept id="p1">**</ept>按钮允许您添加子级。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
          <source>The <bpt id="p1">**</bpt>List<ept id="p1">**</ept> button displays the names of all the children.</source>
          <target state="translated"><bpt id="p1">**</bpt>列表<ept id="p1">**</ept>按钮将显示的所有子级的名称。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Clear">
          <source>Deletes all elements of a Visual Basic <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object.</source>
          <target state="translated">删除 Visual Basic <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的所有元素。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Clear">
          <source>The <ph id="ph1">`Clear`</ph> method empties the collection and resets its <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property to 0.</source>
          <target state="translated"><ph id="ph1">`Clear`</ph>方法可清空集合并将重置其<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph>属性设为 0。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression that specifies the key for which to search the elements of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，指定搜索集合的元素所用的键。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a Visual Basic <ph id="ph2">&lt;see langword="Collection" /&gt;</ph> object contains an element with a specific key.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，该值指示 Visual Basic <ph id="ph2">&lt;see langword="Collection" /&gt;</ph> 对象是否包含一个带有特定键的元素。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a Visual Basic <ph id="ph2">&lt;see langword="Collection" /&gt;</ph> object contains an element with a specific key.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，该值指示 Visual Basic <ph id="ph2">&lt;see langword="Collection" /&gt;</ph> 对象是否包含一个带有特定键的元素。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source><ph id="ph1">`Contains`</ph> returns <ph id="ph2">`True`</ph> if the collection contains an element with a key exactly matching <ph id="ph3">`Key`</ph>.</source>
          <target state="translated"><ph id="ph1">`Contains`</ph> 返回<ph id="ph2">`True`</ph>如果集合包含具有完全匹配的键的元素<ph id="ph3">`Key`</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>Otherwise, <ph id="ph1">`Contains`</ph> returns <ph id="ph2">`False`</ph>.</source>
          <target state="translated">否则为<ph id="ph1">`Contains`</ph>返回<ph id="ph2">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>Case is ignored when matching key values.</source>
          <target state="translated">密钥值进行匹配时忽略大小写。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>A Visual Basic <ph id="ph1">`Collection`</ph> can hold some elements that have keys and other elements without keys.</source>
          <target state="translated">Visual Basic<ph id="ph1">`Collection`</ph>可以存放一些具有键的元素和其他没有键的元素。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>This depends on whether the call to the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph> method supplies an argument to the optional <ph id="ph2">`Key`</ph> parameter.</source>
          <target state="translated">这取决于是否对的调用<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</ph>方法提供可选的自变量<ph id="ph2">`Key`</ph>参数。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
          <source>If you intend to search the collection for elements using their keys, remember to supply the <ph id="ph1">`Key`</ph> argument every time you call the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">如果你想要使用其键的元素在集合中搜索，请记得提供<ph id="ph1">`Key`</ph>自变量每次调用时<ph id="ph2">`Add`</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the number of elements in a collection.</source>
          <target state="translated">返回一个包含集合中的元素数量的 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the number of elements in a collection.</source>
          <target state="translated">返回一个包含集合中的元素数量的 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>Use the <ph id="ph1">`Count`</ph> property to determine the number of elements in a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">使用<ph id="ph1">`Count`</ph>属性来确定中的元素数<ph id="ph2">`Collection`</ph>对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>This example illustrates the use of the <ph id="ph1">`Count`</ph> property to display the number of elements in a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object in the variable <ph id="ph3">`birthdays`</ph>.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">`Count`</ph>属性来显示中的元素数<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>变量中的对象<ph id="ph3">`birthdays`</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Count">
          <source>The <ph id="ph1">`Collection`</ph> object is one-based, which means that the index values of the elements range from 1 through the value of the <ph id="ph2">`Count`</ph> property.</source>
          <target state="translated"><ph id="ph1">`Collection`</ph>对象是从一开始，这意味着，从 1 到的值的元素范围的索引值<ph id="ph2">`Count`</ph>属性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">返回一个对枚举数对象的引用，该对象用于循环访问 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">返回一个对枚举数对象的引用，该对象用于循环访问 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>The <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept> calls <ph id="ph1">`GetEnumerator`</ph> to obtain an enumerator object to support iteration over a collection's elements.</source>
          <target state="translated"><bpt id="p1">[</bpt>每个...下一条语句<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>调用<ph id="ph1">`GetEnumerator`</ph>若要获取的枚举器对象，用于支持循环访问集合的元素。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>Normally, you use a <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> loop to traverse a collection or array, and you do not need to call <ph id="ph3">`GetEnumerator`</ph> explicitly.</source>
          <target state="translated">通常情况下，使用<ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph>循环遍历集合或数组，并且不需要调用<ph id="ph3">`GetEnumerator`</ph>显式。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>If you need closer control over the iteration than the <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> statements provide, you can use the <ph id="ph3">`GetEnumerator`</ph> method to perform a customized traversal.</source>
          <target state="translated">如果需要进一步控制比迭代<ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph>语句提供，你可以使用<ph id="ph3">`GetEnumerator`</ph>方法来执行自定义的遍历。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>The following are some cases in which you might need to do this.</source>
          <target state="translated">以下是某些情况下，你可能需要执行此操作。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>You might want to return to the beginning of the collection and start the iteration again before it is finished.</source>
          <target state="translated">你可能想要返回到集合的开头并重新开始迭代之前完成。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>You might want to skip over one or more elements for a variety of reasons.</source>
          <target state="translated">你可能想要跳过的原因有多种多样的一个或多个元素。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>You might need to change the elements of the collection in the middle of a traversal.</source>
          <target state="translated">你可能需要更改中间遍历集合的元素。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>In this case you must obtain a new enumerator object because the previous one is invalidated.</source>
          <target state="translated">在这种情况下，因为失效前一个，你必须获取新的枚举器对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>The following example shows how to use <ph id="ph1">`GetEnumerator`</ph> to retrieve all the elements of a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">`GetEnumerator`</ph>要从中检索的所有元素<ph id="ph2">`Collection`</ph>对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source><ph id="ph1">`GetEnumerator`</ph> constructs and returns an enumerator object, which implements the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface of the <ph id="ph3">&lt;xref:System.Collections&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">`GetEnumerator`</ph> 构造并返回一个枚举器对象，它实现<ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph>界面<ph id="ph3">&lt;xref:System.Collections&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>The enumerator object exposes the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> methods.</source>
          <target state="translated">枚举器对象公开<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetEnumerator">
          <source>For more information, see <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>每个...下一条语句<ept id="p1">](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Collection">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Collection">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(A) 一个数值表达式，用于指定集合的元素位置。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> must be a number from 1 through the value of the collection's <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> 必须为介于 1 到集合的 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> 属性的值之间的数字。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Or (B) An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">或 (B) 指定集合中元素的位置或键字符串的 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>属于类型<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>属性尝试将其视为<ph id="ph4">`String`</ph>， <ph id="ph5">`Char`</ph>，<ph id="ph6">`Char`</ph>数组或整数值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">如果<ph id="ph1">`Item`</ph>不能转换<ph id="ph2">`Index`</ph>到<ph id="ph3">`String`</ph>或<ph id="ph4">`Integer`</ph>，它将引发<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>属性是集合的默认属性。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">因此，以下代码行是等效的。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>The following example uses the <ph id="ph1">`Item`</ph> property to retrieve a reference to an object in a collection.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`Item`</ph>属性来检索集合中对象的引用。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>It creates <ph id="ph1">`birthdays`</ph> as a <ph id="ph2">`Collection`</ph> object and then retrieves the object representing Bill's birthday, using the key <ph id="ph3">`"Bill"`</ph> as the <ph id="ph4">`Index`</ph> argument.</source>
          <target state="translated">它将创建<ph id="ph1">`birthdays`</ph>作为<ph id="ph2">`Collection`</ph>对象，然后检索表示帐单的生日，使用密钥的对象<ph id="ph3">`"Bill"`</ph>作为<ph id="ph4">`Index`</ph>自变量。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Note that the first call explicitly specifies the <ph id="ph1">`Item`</ph> property, but the second does not.</source>
          <target state="translated">请注意，第一次调用显式指定<ph id="ph1">`Item`</ph>属性，但第二个却没有。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
          <source>Both calls work because the <ph id="ph1">`Item`</ph> property is the default property for a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">这两个调用起作用，因为<ph id="ph1">`Item`</ph>属性是其默认属性<ph id="ph2">`Collection`</ph>对象。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(A) 一个数值表达式，用于指定集合的元素位置。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> must be a number from 1 through the value of the collection's <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> 必须为介于 1 到集合的 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> 属性的值之间的数字。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Or (B) An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">或 (B) 指定集合中元素的位置或键字符串的 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>属于类型<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>属性尝试将其视为<ph id="ph4">`String`</ph>， <ph id="ph5">`Char`</ph>，<ph id="ph6">`Char`</ph>数组或整数值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">如果<ph id="ph1">`Item`</ph>不能转换<ph id="ph2">`Index`</ph>到<ph id="ph3">`String`</ph>或<ph id="ph4">`Integer`</ph>，它将引发<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>属性是集合的默认属性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">因此，以下代码行是等效的。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>The following example uses the <ph id="ph1">`Item`</ph> property to retrieve a reference to an object in a collection.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`Item`</ph>属性来检索集合中对象的引用。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>It creates <ph id="ph1">`birthdays`</ph> as a <ph id="ph2">`Collection`</ph> object and then retrieves the object representing Bill's birthday, using the key <ph id="ph3">`"Bill"`</ph> as the <ph id="ph4">`Index`</ph> argument.</source>
          <target state="translated">它将创建<ph id="ph1">`birthdays`</ph>作为<ph id="ph2">`Collection`</ph>对象，然后检索表示帐单的生日，使用密钥的对象<ph id="ph3">`"Bill"`</ph>作为<ph id="ph4">`Index`</ph>自变量。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Note that the first call explicitly specifies the <ph id="ph1">`Item`</ph> property, but the second does not.</source>
          <target state="translated">请注意，第一次调用显式指定<ph id="ph1">`Item`</ph>属性，但第二个却没有。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
          <source>Both calls work because the <ph id="ph1">`Item`</ph> property is the default property for a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">这两个调用起作用，因为<ph id="ph1">`Item`</ph>属性是其默认属性<ph id="ph2">`Collection`</ph>对象。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>A unique <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">指定键字符串的唯一 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，可以使用此键字符串代替位置索引访问集合中的元素。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> must correspond to the <bpt id="p2">&lt;c&gt;</bpt>Key<ept id="p2">&lt;/c&gt;</ept> argument specified when the element was added to the collection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> 必须对应于将元素添加到集合中时指定的 <bpt id="p2">&lt;c&gt;</bpt>Key<ept id="p2">&lt;/c&gt;</ept> 参数。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Returns a specific element of a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object either by position or by key.</source>
          <target state="translated">按位置或键返回 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象的特定元素。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>属于类型<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>属性尝试将其视为<ph id="ph4">`String`</ph>， <ph id="ph5">`Char`</ph>，<ph id="ph6">`Char`</ph>数组或整数值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">如果<ph id="ph1">`Item`</ph>不能转换<ph id="ph2">`Index`</ph>到<ph id="ph3">`String`</ph>或<ph id="ph4">`Integer`</ph>，它将引发<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>属性是集合的默认属性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">因此，以下代码行是等效的。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>The following example uses the <ph id="ph1">`Item`</ph> property to retrieve a reference to an object in a collection.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`Item`</ph>属性来检索集合中对象的引用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>It creates <ph id="ph1">`birthdays`</ph> as a <ph id="ph2">`Collection`</ph> object and then retrieves the object representing Bill's birthday, using the key <ph id="ph3">`"Bill"`</ph> as the <ph id="ph4">`Index`</ph> argument.</source>
          <target state="translated">它将创建<ph id="ph1">`birthdays`</ph>作为<ph id="ph2">`Collection`</ph>对象，然后检索表示帐单的生日，使用密钥的对象<ph id="ph3">`"Bill"`</ph>作为<ph id="ph4">`Index`</ph>自变量。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Note that the first call explicitly specifies the <ph id="ph1">`Item`</ph> property, but the second does not.</source>
          <target state="translated">请注意，第一次调用显式指定<ph id="ph1">`Item`</ph>属性，但第二个却没有。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Collection.Item(System.String)">
          <source>Both calls work because the <ph id="ph1">`Item`</ph> property is the default property for a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">这两个调用起作用，因为<ph id="ph1">`Item`</ph>属性是其默认属性<ph id="ph2">`Collection`</ph>对象。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Collection">
          <source>Removes an element from a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象移除元素。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">一个数值表达式，用于指定集合的元素位置。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> must be a number from 1 through the value of the collection's <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Index<ept id="p1">&lt;/c&gt;</ept> 必须为介于 1 到集合的 <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Collection.Count" /&gt;</ph> 属性的值之间的数字。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>Removes an element from a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象移除元素。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property by one.</source>
          <target state="translated">当<ph id="ph1">`Remove`</ph>从集合中删除元素它递减集合的<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph>通过一个属性。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">它还递减<ph id="ph1">`Index`</ph>先前跟在集合中删除的元素之后的每个元素的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">如果元素已添加到集合而无需<ph id="ph1">`Key`</ph>，必须使用其<ph id="ph2">`Index`</ph>，将其删除。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>This example illustrates the use of the <ph id="ph1">`Remove`</ph> method to remove objects from a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object in the variable <ph id="ph3">`birthdays`</ph>.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">`Remove`</ph>方法可以删除对象从<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>变量中的对象<ph id="ph3">`birthdays`</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>Following the four calls to the <ph id="ph1">`Add`</ph> method, the <ph id="ph2">`Count`</ph> property contains 4, element <ph id="ph3">`"Bill"`</ph> has index value 1, and element <ph id="ph4">`"Pete"`</ph> has index value 4.</source>
          <target state="translated">以下四个调用<ph id="ph1">`Add`</ph>方法，<ph id="ph2">`Count`</ph>属性包含 4，元素<ph id="ph3">`"Bill"`</ph>有索引值为 1，并且元素<ph id="ph4">`"Pete"`</ph>的索引值为 4。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>Following the first call to <ph id="ph1">`Remove`</ph>, <ph id="ph2">`Count`</ph> is 3, element <ph id="ph3">`"Bill"`</ph> is deleted, and element <ph id="ph4">`"Pete"`</ph> has index value 3.</source>
          <target state="translated">以下首次调用<ph id="ph1">`Remove`</ph>，<ph id="ph2">`Count`</ph>为 3，元素<ph id="ph3">`"Bill"`</ph>被删除，和元素<ph id="ph4">`"Pete"`</ph>的索引值为 3。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
          <source>Following the second call to <ph id="ph1">`Remove`</ph>, <ph id="ph2">`Count`</ph> is 2, element <ph id="ph3">`"Mike"`</ph> is deleted, and element <ph id="ph4">`"Pete"`</ph> has index value 2.</source>
          <target state="translated">以下第二次调用<ph id="ph1">`Remove`</ph>，<ph id="ph2">`Count`</ph>为 2，元素<ph id="ph3">`"Mike"`</ph>被删除，和元素<ph id="ph4">`"Pete"`</ph>的索引值为 2。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>A unique <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">指定键字符串的唯一 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 表达式，可以使用此键字符串代替位置索引访问集合中的元素。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> must correspond to the <bpt id="p2">&lt;c&gt;</bpt>Key<ept id="p2">&lt;/c&gt;</ept> argument specified when the element was added to the collection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> 必须对应于将元素添加到集合中时指定的 <bpt id="p2">&lt;c&gt;</bpt>Key<ept id="p2">&lt;/c&gt;</ept> 参数。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>Removes an element from a <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see langword="Collection" /&gt;</ph> 对象移除元素。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph> property by one.</source>
          <target state="translated">当<ph id="ph1">`Remove`</ph>从集合中删除元素它递减集合的<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</ph>通过一个属性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">它还递减<ph id="ph1">`Index`</ph>先前跟在集合中删除的元素之后的每个元素的值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">如果元素已添加到集合而无需<ph id="ph1">`Key`</ph>，必须使用其<ph id="ph2">`Index`</ph>，将其删除。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>This example illustrates the use of the <ph id="ph1">`Remove`</ph> method to remove objects from a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object in the variable <ph id="ph3">`birthdays`</ph>.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">`Remove`</ph>方法可以删除对象从<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>变量中的对象<ph id="ph3">`birthdays`</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>Following the four calls to the <ph id="ph1">`Add`</ph> method, the <ph id="ph2">`Count`</ph> property contains 4, element <ph id="ph3">`"Bill"`</ph> has index value 1, and element <ph id="ph4">`"Pete"`</ph> has index value 4.</source>
          <target state="translated">以下四个调用<ph id="ph1">`Add`</ph>方法，<ph id="ph2">`Count`</ph>属性包含 4，元素<ph id="ph3">`"Bill"`</ph>有索引值为 1，并且元素<ph id="ph4">`"Pete"`</ph>的索引值为 4。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>Following the first call to <ph id="ph1">`Remove`</ph>, <ph id="ph2">`Count`</ph> is 3, element <ph id="ph3">`"Bill"`</ph> is deleted, and element <ph id="ph4">`"Pete"`</ph> has index value 3.</source>
          <target state="translated">以下首次调用<ph id="ph1">`Remove`</ph>，<ph id="ph2">`Count`</ph>为 3，元素<ph id="ph3">`"Bill"`</ph>被删除，和元素<ph id="ph4">`"Pete"`</ph>的索引值为 3。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
          <source>Following the second call to <ph id="ph1">`Remove`</ph>, <ph id="ph2">`Count`</ph> is 2, element <ph id="ph3">`"Mike"`</ph> is deleted, and element <ph id="ph4">`"Pete"`</ph> has index value 2.</source>
          <target state="translated">以下第二次调用<ph id="ph1">`Remove`</ph>，<ph id="ph2">`Count`</ph>为 2，元素<ph id="ph3">`"Mike"`</ph>被删除，和元素<ph id="ph4">`"Pete"`</ph>的索引值为 2。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，它是从 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">从特定的 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 索引处开始，将 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的元素复制到一个 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.</source>
          <target state="translated">元素被复制到<ph id="ph1">&lt;xref:System.Array&gt;</ph>枚举数循环访问的相同顺序<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is obtained from the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>从获取<ph id="ph3">&lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中的元素数目大于从 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象的类型强制转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">返回一个循环访问集合的枚举器。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">一个可用于循环访问集合的 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 语言的 <ph id="ph1">`foreach`</ph> 语句（在 Visual Basic 中为 <ph id="ph2">`for each`</ph>）隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建议使用 <ph id="ph1">`foreach`</ph>，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中第一个元素的前面。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>方法还会枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">在此位置上，<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>属性是不确定。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，必须调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>方法将枚举数前移到集合，然后再读取的值的第一个元素<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 之前，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 返回同一对象。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 将 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为下一个元素。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>还返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最后一次调用到<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是不确定的。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次将 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为集合的第一个元素，可以调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 并接着调用 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">要添加到 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">向 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象添加项。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">新元素的插入位置。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</ph>中不存在要添加新元素的键的值设置属性<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象具有固定大小。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListClear">
          <source>Removes all items from the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中移除所有项。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListClear">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListClear">
          <source>This method removes all items from the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.</source>
          <target state="translated">此方法中移除所有项从<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListClear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 为只读。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 对象中查找的 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object contains a specific value.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象是否包含特定值。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)">
          <source>Returns <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 对象中找到 <ph id="ph3">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph>，则返回 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，否则返回 <ph id="ph4">&lt;see langword="False" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)">
          <source>This method determines whether the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object contains a specific value.</source>
          <target state="translated">此方法可确定是否<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象包含特定值。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 对象中查找的 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中特定项的索引。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the collection; otherwise, -1.</source>
          <target state="translated">如果在集合中找到该对象，则为 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>；否则为 -1。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)">
          <source>This method determines the index of a specific item in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.</source>
          <target state="translated">此方法确定中特定项的索引<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">从零开始的索引，应在该位置插入 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">要插入到 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 对象中的 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>Inserts an item to the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object at the specified index.</source>
          <target state="translated">将项插入 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中的指定索引处。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object, then <ph id="ph3">`value`</ph> is appended to the end.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>等于的中的项数<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象，然后<ph id="ph3">`value`</ph>追加到末尾。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中的有效索引。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象具有固定大小。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is null reference in the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 在 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中为空引用。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">要从 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 对象中移除的 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中移除特定对象的第一个匹配项。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not found in the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object, the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object remains unchanged and no exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>中找不到<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象，<ph id="ph3">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象保持不变且不引发异常。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象具有固定大小。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">要移除的项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object item at the specified index.</source>
          <target state="translated">移除指定索引处的 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象项。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象中的有效索引。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象具有固定大小。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">启动回调的对象。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)">
          <source>Runs after the entire <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object graph has been deserialized.</source>
          <target state="translated">在整个 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象图反序列化后运行。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)">
          <source>This method is called after the entire <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object graph has been deserialized.</source>
          <target state="translated">在整个之后调用此方法<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象图形已经反序列化。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象，包含序列化 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 所需的信息。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 对象，它包含与 <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象关联的已序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Returns the data needed to serialize the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> object.</source>
          <target state="translated">返回对 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Collection" /&gt;</ph> 对象进行序列化所需的数据。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method returns the data needed to serialize the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph> object.</source>
          <target state="translated">此方法返回序列化所需的数据<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Collection&gt;</ph>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>