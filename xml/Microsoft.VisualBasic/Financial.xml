<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e6ab8-101"><see langword="Financial" /> 模块包含用于执行财务运算的过程。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-102">此模块支持执行如折旧、 现在和将来的值、 利率、 返回时，和付款的比率的财务计算的 Visual Basic 运行时库成员。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-103">此示例使用`Rate`函数来计算的贷款利率付款的总数目 (`TotPmts`)，贷款付款金额 (`Payment`)，现值或主体的贷款 (`PVal`)，将来贷款值 (`FVal`)，一个数字，指示是否付款的开头或末尾付款周期截止时间是 (`PayType`)，并预期利率的近似值 (`Guess`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="e6ab8-104">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-104">Required.</span></span> <span data-ttu-id="e6ab8-105">指定资产原始成本的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-105"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="e6ab8-106">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-106">Required.</span></span> <span data-ttu-id="e6ab8-107">指定资产在使用年限结束时的价值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-107"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="e6ab8-108">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-108">Required.</span></span> <span data-ttu-id="e6ab8-109">指定资产使用年限的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-109"><see langword="Double" /> specifying length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="e6ab8-110">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-110">Required.</span></span> <span data-ttu-id="e6ab8-111">指定计算资产折旧时所用期间的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-111"><see langword="Double" /> specifying period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="e6ab8-112">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-112">Optional.</span></span> <span data-ttu-id="e6ab8-113">指定余额下降比率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-113"><see langword="Double" /> specifying rate at which the balance declines.</span></span> <span data-ttu-id="e6ab8-114">如果省略，则假定为 2（双倍余额递减法）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-114">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-115">返回一个 <see langword="Double" /> 数据类型，它使用双倍余额递减法或指定的其他方法来指定特定时间段内的资产折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-115">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-116">返回一个 <see langword="Double" /> 数据类型，它使用双倍余额递减法或指定的其他方法来指定特定时间段内的资产折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-116">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-117">双倍余额递减平衡方法来计算折旧以加速的速率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-117">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="e6ab8-118">折旧是第一个时间段内最高和后续周期中会降低。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-118">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="e6ab8-119">`Life`和`Period`自变量必须以相同的单位表示。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-119">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="e6ab8-120">例如，如果`Life`在月中，给定`Period`还必须为其提供在月中。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-120">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="e6ab8-121">所有参数必须都是正数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-121">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="e6ab8-122">`DDB`函数使用以下公式计算的一段给定时间折旧值：</span><span class="sxs-lookup"><span data-stu-id="e6ab8-122">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="e6ab8-123">折旧 / 段 = ((Cost – Salvage) \* 因素) / 生命</span><span class="sxs-lookup"><span data-stu-id="e6ab8-123">Depreciation / Period = ((Cost – Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-124">此示例使用`DDB`函数来返回指定期间内的初始成本资产折旧 (`InitCost`)，资产的使用年限末尾的补救值 (`SalvageVal`)，以年为单位 (资产的总生存期`LifeTime`)，和为其计算折旧的几年期 (`Depr`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-124">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-125"><paramref name="Factor" /> &lt;= 0，<paramref name="Salvage" /> &lt; 0，<paramref name="Period" /> &lt;= 0，或 <paramref name="Period" /> &gt; <paramref name="Life." /></span><span class="sxs-lookup"><span data-stu-id="e6ab8-125"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-126">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-126">Required.</span></span> <span data-ttu-id="e6ab8-127">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-127"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="e6ab8-128">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-128">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="e6ab8-129">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-129">Required.</span></span> <span data-ttu-id="e6ab8-130">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-130"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-131">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-131">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="e6ab8-132">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-132">Required.</span></span> <span data-ttu-id="e6ab8-133">指定每期应付金额的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-133"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="e6ab8-134">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-134">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-135">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-135">Optional.</span></span> <span data-ttu-id="e6ab8-136">指定未来一系列付款金额（或一次付清款项）现值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-136"><see langword="Double" /> specifying present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="e6ab8-137">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-137">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="e6ab8-138">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-138">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-139">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-139">Optional.</span></span> <span data-ttu-id="e6ab8-140"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-140">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-141">如果在付款期末付款，则此参数必须为 <see langword="DueDate.EndOfPeriod" />；如果在付款期初付款，则此参数必须为 <see langword="DueDate.BegOfPeriod" />。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-141">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-142">如果省略，则假定为 <see langword="DueDate.EndOfPeriod" />。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-142">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-143">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-143">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-144">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-144">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-145">年金是一系列段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-145">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="e6ab8-146">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-146">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-147">`Rate`和`NPer`必须使用以相同的单位表示的付款周期计算自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-147">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="e6ab8-148">例如，如果`Rate`使用月计算`NPer`还必须按月进行计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-148">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="e6ab8-149">（如存款） 中支付的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-149">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-150">此示例使用`FV`函数以返回给定百分比投资的将来值速率，每个期间累算的时间 (`APR / 12`)，付款的总数 (`TotPmts`)，支付 (`Payment`) 的当前值投资 (`PVal`)，和一个数字，指示是否付款的开头或末尾付款周期 (`PayType`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-150">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="e6ab8-151">请注意，因为`Payment`表示现金支出，它为负数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-151">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-152">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-152">Required.</span></span> <span data-ttu-id="e6ab8-153">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-153"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="e6ab8-154">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-154">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="e6ab8-155">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-155">Required.</span></span> <span data-ttu-id="e6ab8-156">在从 1 到 <c>NPer</c> 范围内指定支付周期的 <see langword="Double" />。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-156"><see langword="Double" /> specifying payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="e6ab8-157">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-157">Required.</span></span> <span data-ttu-id="e6ab8-158">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-158"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-159">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-159">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-160">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-160">Required.</span></span> <span data-ttu-id="e6ab8-161">指定未来一系列支出或收入现值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-161"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="e6ab8-162">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-162">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-163">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-163">Optional.</span></span> <span data-ttu-id="e6ab8-164"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-164"><see langword="Double" /> specifying future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="e6ab8-165">例如，贷款的终值为 0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-165">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="e6ab8-166">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-166">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-167">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-167">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-168">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-168">Optional.</span></span> <span data-ttu-id="e6ab8-169"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-169">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-170">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-170">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-171">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-171">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-172">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金在给定期间的支付利息。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-172">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-173">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金在给定期间的支付利息。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-173">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-174">年金是一系列段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-174">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="e6ab8-175">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-175">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-176">`Rate`和`NPer`必须使用以相同的单位表示的付款周期计算自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-176">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="e6ab8-177">例如，如果`Rate`使用月计算`NPer`还必须按月进行计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-177">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="e6ab8-178">（如存款） 中支付的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-178">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-179">此示例使用`IPmt`函数来计算所有付款时的相同的值的付款多少是感兴趣。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-179">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="e6ab8-180">鉴于提供每个周期的利率百分比 (`APR / 12`)、 为其所需的相关部分付款周期 (`Period`)，付款的总数 (`TotPmts`)，现值或主体的贷款 (`PVal`)，则将来的贷款的值 (`FVal`)，以及一个用于指示是否付款的开头或末尾付款周期截止时间是数字 (`PayType`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-180">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-181"><paramref name="Per" /> &lt;= 0 或 <paramref name="Per" /> &gt; <paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="e6ab8-181"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="e6ab8-182">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-182">Required.</span></span> <span data-ttu-id="e6ab8-183">指定现金流值的 <see langword="Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-183">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="e6ab8-184">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-184">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="e6ab8-185">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-185">Optional.</span></span> <span data-ttu-id="e6ab8-186">指定 <see langword="IRR" /> 将返回的估算值的对象。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-186">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="e6ab8-187">如果省略，<c>Guess</c> 便为 0.1 (10%)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-187">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="e6ab8-188">返回一个 <see langword="Double" /> 数据类型，它指定一系列定期现金流（支出和收入）的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-188">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="e6ab8-189">返回一个 <see langword="Double" /> 数据类型，它指定一系列定期现金流（支出和收入）的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-189">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-190">返回的内部收益率是收到组成付款和收款定期进行投资的兴趣速率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-190">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="e6ab8-191">`IRR`函数使用在该数组中的值的顺序来解释付款和收款的顺序。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-191">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="e6ab8-192">请确保以正确的顺序输入付款和回执值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-192">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="e6ab8-193">每个段内现金流量不必固定的、 按原样年金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-193">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="e6ab8-194">`IRR` 通过迭代计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-194">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="e6ab8-195">从的值开始`Guess`，`IRR`进行计算，直到结果是精确到 0.00001%范围内的周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-195">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="e6ab8-196">如果`IRR`找不到 20 后的结果尝试，它将失败。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-196">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-197">在此示例中，`IRR`函数返回的数组中包含的五个现金流的内部收益率`Values()`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-197">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="e6ab8-198">第一个数组元素是表示业务启动成本的负现金流。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-198">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="e6ab8-199">剩余的四个现金流后续 4 年之久表示正现金流。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-199">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="e6ab8-200">`Guess` 是估计的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-200">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6ab8-201">Array 参数值无效或 <paramref name="Guess" /> &lt;= -1。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-201">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="e6ab8-202">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-202">Required.</span></span> <span data-ttu-id="e6ab8-203">指定现金流值的 <see langword="Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-203">Array of <see langword="Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="e6ab8-204">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-204">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="e6ab8-205">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-205">Required.</span></span> <span data-ttu-id="e6ab8-206">指定作为财务成本支付的利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-206"><see langword="Double" /> specifying interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="e6ab8-207">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-207">Required.</span></span> <span data-ttu-id="e6ab8-208">指定从现金再投资收益中所得利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-208"><see langword="Double" /> specifying interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="e6ab8-209">返回一个 <see langword="Double" /> 数据类型，它指定一系列定期现金流（支出和收入）修改后的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-209">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="e6ab8-210">返回一个 <see langword="Double" /> 数据类型，它指定一系列定期现金流（支出和收入）修改后的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-210">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-211">已修改的内部收益率时付款和收款利率时不同的速率的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-211">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="e6ab8-212">`MIRR`函数将考虑在内的投资成本 (`FinanceRate`) 和中得到的现金利率的利率 (`ReinvestRate`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-212">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="e6ab8-213">`FinanceRate`和`ReinvestRatearguments`是表示为十进制值的百分比。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-213">The `FinanceRate` and `ReinvestRatearguments` are percentages expressed as decimal values.</span></span> <span data-ttu-id="e6ab8-214">例如，12%表示为 0.12。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-214">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="e6ab8-215">`MIRR`函数使用在该数组中的值的顺序来解释付款和收款的顺序。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-215">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="e6ab8-216">请确保以正确的顺序输入付款和回执值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-216">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-217">此示例使用`MIRR`函数以返回一系列的现金流包含在数组中的已修改内部收益率`Values()`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-217">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="e6ab8-218">`LoanAPR` 表示财务感兴趣，和`InvAPR`代表中得到的利率的兴趣速率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-218">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6ab8-219"><paramref name="ValueArray" /> 的秩不等于 1，<paramref name="FinanceRate" /> = -1，或 <paramref name="ReinvestRate" /> = -1</span><span class="sxs-lookup"><span data-stu-id="e6ab8-219">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="e6ab8-220">出现被零除。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-220">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-221">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-221">Required.</span></span> <span data-ttu-id="e6ab8-222">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-222"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="e6ab8-223">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-223">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="e6ab8-224">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-224">Required.</span></span> <span data-ttu-id="e6ab8-225">指定每期应付金额的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-225"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="e6ab8-226">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-226">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-227">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-227">Required.</span></span> <span data-ttu-id="e6ab8-228">指定未来一系列支出或收入现值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-228"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="e6ab8-229">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-229">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-230">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-230">Optional.</span></span> <span data-ttu-id="e6ab8-231"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-231"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="e6ab8-232">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-232">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="e6ab8-233">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-233">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-234">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-234">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-235">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-235">Optional.</span></span> <span data-ttu-id="e6ab8-236"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-236">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-237">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-237">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-238">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-238">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-239">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的期数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-239">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-240">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的期数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-240">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-241">年金是一系列段一段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-241">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="e6ab8-242">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-242">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-243">（如存款） 中支付的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-243">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-244">此示例使用`NPer`中包含函数返回在此期间必须进行付款发挥效用贷款其值的期限数`PVal`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-244">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="e6ab8-245">此外提供了每个周期的利率百分比 (`APR / 12`)，支付 (`Payment`) 的贷款将来的值 (`FVal`)，以及一个用于指示是否付款的开头或末尾付款周期截止时间是数字 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="e6ab8-245">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-246"><paramref name="Rate" /> = 0 和 <paramref name="Pmt" /> = 0</span><span class="sxs-lookup"><span data-stu-id="e6ab8-246"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-247">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-247">Required.</span></span> <span data-ttu-id="e6ab8-248">指定每期贴现率的 <see langword="Double" /> 数据类型，以小数表示。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-248"><see langword="Double" /> specifying discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="e6ab8-249">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-249">Required.</span></span> <span data-ttu-id="e6ab8-250">指定现金流值的 <see langword="Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-250">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="e6ab8-251">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-251">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="e6ab8-252">返回一个 <see langword="Double" /> 数据类型，它基于一系列定期现金流（支出和收入）和贴现率来指定投资的净现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-252">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-253">返回一个 <see langword="Double" /> 数据类型，它基于一系列定期现金流（支出和收入）和贴现率来指定投资的净现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-253">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-254">投资的净现值是未来的一系列付款和收款的当前值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-254">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="e6ab8-255">`NPV`函数使用在该数组中的值的顺序来解释付款和收款的顺序。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-255">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="e6ab8-256">请确保以正确的顺序输入付款和回执值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-256">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="e6ab8-257">`NPV`投资日期之前的第一个现金流量值的一个周期开始和结束的最后一个的现金流值数组中。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-257">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="e6ab8-258">Net 存在的值计算基于未来的现金流。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-258">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="e6ab8-259">如果在第一个期间开始处出现第一个的现金流，第一个的值必须添加到返回的值`NPV`和中的现金流值不能包含`ValueArray`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-259">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="e6ab8-260">`NPV`函数是类似于`PV`函数 （现值） 但`PV`函数允许现金流开始在结束或句点开头。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-260">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="e6ab8-261">与该变量不同`NPV`现金流量值`PV`现金流必须固定在整个投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-261">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-262">此示例使用`NPV`函数以返回一系列的现金流数组中包含的净现值`values()`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-262">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="e6ab8-263">中存储的返回值`FixedRetRate`，表示固定的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-263">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-264"><paramref name="ValueArray" /> 为 <see langword="Nothing" />，<paramref name="ValueArray" /> 的轶 &lt;&gt; 1，或 <paramref name="Rate" /> = -1</span><span class="sxs-lookup"><span data-stu-id="e6ab8-264"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-265">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-265">Required.</span></span> <span data-ttu-id="e6ab8-266">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-266"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="e6ab8-267">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-267">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="e6ab8-268">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-268">Required.</span></span> <span data-ttu-id="e6ab8-269">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-269"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-270">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-270">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-271">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-271">Required.</span></span> <span data-ttu-id="e6ab8-272">指定在未来一系列要支付的付款现值（或一次付清款项）的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-272"><see langword="Double" /> specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="e6ab8-273">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-273">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-274">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-274">Optional.</span></span> <span data-ttu-id="e6ab8-275"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-275"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="e6ab8-276">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-276">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="e6ab8-277">但是，如果您想用 18 年的时间储蓄 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-277">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-278">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-278">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-279">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-279">Optional.</span></span> <span data-ttu-id="e6ab8-280"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-280">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-281">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-281">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-282">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-282">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-283">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的付款金额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-283">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-284">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金的付款金额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-284">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-285">年金是一系列在一段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-285">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="e6ab8-286">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-286">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-287">`Rate`和`NPer`必须使用以相同的单位表示的付款周期计算自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-287">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="e6ab8-288">例如，如果`Rate`使用月计算`NPer`还必须按月进行计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-288">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="e6ab8-289">（如存款） 付费的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-289">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-290">此示例使用`Pmt`函数以返回固定的时间段内的每月付款的贷款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-290">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="e6ab8-291">鉴于提供每个周期的利率百分比 (`APR / 12`)，付款的总数 (`TotPmts`)，现值或主体的贷款 (`PVal`) 的贷款将来的值 (`FVal`)，和一个数字，指示是否付款的开头或末尾付款周期截止时间是 `(PayType).`</span><span class="sxs-lookup"><span data-stu-id="e6ab8-291">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-292"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="e6ab8-292"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-293">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-293">Required.</span></span> <span data-ttu-id="e6ab8-294">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-294"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="e6ab8-295">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-295">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="e6ab8-296">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-296">Required.</span></span> <span data-ttu-id="e6ab8-297"><see langword="Double" /> 指定从 1 到 <c>NPer</c> 范围内的支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-297"><see langword="Double" /> specifies the payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="e6ab8-298">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-298">Required.</span></span> <span data-ttu-id="e6ab8-299">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-299"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-300">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-300">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-301">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-301">Required.</span></span> <span data-ttu-id="e6ab8-302">指定未来一系列支出或收入现值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-302"><see langword="Double" /> specifies the current value of a series of future payments or receipts.</span></span> <span data-ttu-id="e6ab8-303">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-303">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-304">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-304">Optional.</span></span> <span data-ttu-id="e6ab8-305"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-305"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="e6ab8-306">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-306">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="e6ab8-307">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-307">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-308">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-308">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-309">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-309">Optional.</span></span> <span data-ttu-id="e6ab8-310"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-310">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-311">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-311">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-312">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-312">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-313">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金在给定期间的本金付款额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-313">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-314">返回一个 <see langword="Double" /> 数据类型，它基于等额分期付款和固定利率指定年金在给定期间的本金付款额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-314">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-315">年金是一系列段一段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-315">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="e6ab8-316">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-316">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-317">`Rate`和`NPer`必须使用以相同的单位表示的付款周期计算自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-317">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="e6ab8-318">例如，如果`Rate`使用月计算`NPer`还必须按月进行计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-318">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="e6ab8-319">（如存款） 付费的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-319">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-320">此示例使用`PPmt`函数来计算所有付款时相同的值的多少特定时间段内的付款是主体。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-320">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="e6ab8-321">鉴于提供每个周期的利率百分比 (`APR / 12`)、 为其所需的主体部分付款周期 (`Period`)，付款的总数 (`TotPmts`)，现值或主体的贷款 (`PVal`)，则将来的贷款的值 (`FVal`)，以及一个用于指示是否付款的开头或末尾付款周期截止时间是数字 (`PayType`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-321">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-322"><paramref name="Per" /> &lt;=0 或 <paramref name="Per" /> &gt; <paramref name="NPer" />。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-322"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="e6ab8-323">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-323">Required.</span></span> <span data-ttu-id="e6ab8-324">指定每期利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-324"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="e6ab8-325">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-325">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="e6ab8-326">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-326">Required.</span></span> <span data-ttu-id="e6ab8-327">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-327"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-328">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-328">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="e6ab8-329">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-329">Required.</span></span> <span data-ttu-id="e6ab8-330">指定每期应付金额的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-330"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="e6ab8-331">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-331">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-332">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-332">Optional.</span></span> <span data-ttu-id="e6ab8-333"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-333"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="e6ab8-334">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-334">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="e6ab8-335">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-335">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-336">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-336">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-337">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-337">Optional.</span></span> <span data-ttu-id="e6ab8-338"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-338">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-339">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-339">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-340">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-340">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="e6ab8-341">返回一个 <see langword="Double" /> 数据类型，它基于未来等额分期付款和固定利率指定年金的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-341">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-342">返回一个 <see langword="Double" /> 数据类型，它基于未来等额分期付款和固定利率指定年金的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-342">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-343">年金是一系列段一段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-343">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="e6ab8-344">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-344">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-345">`Rate`和`NPer`必须使用以相同的单位表示的付款周期计算自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-345">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="e6ab8-346">例如，如果`Rate`使用月计算`NPer`还必须按月进行计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-346">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="e6ab8-347">（如存款） 中支付的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-347">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-348">在此示例中，`PV`函数返回将提供 50000 元的下一步 20 年内每年的 $1000000 年金的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-348">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="e6ab8-349">提供的是预期的年度百分比速率 (`APR`)，付款的总数 (`TotPmts`)，每个付款金额 (`YrIncome`)，投资的总值将来 (`FVal`)，和一个数字，指示是否每个付款的开头或末尾付款周期 (`PayType`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-349">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="e6ab8-350">请注意，`YrIncome`是负数，因为它代表现金，每年从年金中付费。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-350">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="e6ab8-351">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-351">Required.</span></span> <span data-ttu-id="e6ab8-352">指定年金付款总期数的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-352"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="e6ab8-353">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-353">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="e6ab8-354">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-354">Required.</span></span> <span data-ttu-id="e6ab8-355">指定每期应付金额的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-355"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="e6ab8-356">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-356">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="e6ab8-357">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-357">Required.</span></span> <span data-ttu-id="e6ab8-358">指定未来一系列支出或收入现值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-358"><see langword="Double" /> specifies the present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="e6ab8-359">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-359">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="e6ab8-360">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-360">Optional.</span></span> <span data-ttu-id="e6ab8-361"><see langword="Double" /> 数据类型，指定完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-361"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="e6ab8-362">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-362">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="e6ab8-363">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-363">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="e6ab8-364">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-364">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="e6ab8-365">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-365">Optional.</span></span> <span data-ttu-id="e6ab8-366"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-366">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="e6ab8-367">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-367">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="e6ab8-368">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-368">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="e6ab8-369">可选。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-369">Optional.</span></span> <span data-ttu-id="e6ab8-370">指定 <see langword="Double" /> 返回的估计值的 <see langword="Rate" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-370"><see langword="Double" /> specifying value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="e6ab8-371">如果省略，<c>Guess</c> 便为 0.1 (10%)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-371">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="e6ab8-372">返回一个指定每期年金利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-372">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-373">返回一个指定每期年金利率的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-373">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-374">年金是一系列段一段时间内所做的固定数量现金付款。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-374">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="e6ab8-375">年金可以 （例如住房抵押） 贷款或 （如每月节省计划） 投资。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-375">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="e6ab8-376">（如存款） 中支付的现金表示为负数; 对于所有参数，表示正数表示 （如被除数检查） 收到的现金。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-376">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="e6ab8-377">`Rate` 通过迭代计算。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-377">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="e6ab8-378">从的值开始`Guess`，`Rate`进行计算，直到结果是精确到 0.00001%范围内的周期。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-378">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="e6ab8-379">如果`Rate`找不到 20 后的结果尝试，它将失败。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-379">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="e6ab8-380">如果该值为 10%和`Rate`失败，请尝试不同的值`Guess`。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-380">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-381">此示例使用`Rate`函数来计算给定的付款总数贷款利率 (`TotPmts`)，贷款付款金额 (`Payment`)，现值或主体的贷款 (`PVal`)，将来贷款值 (`FVal`)，一个数字，指示是否付款的开头或末尾付款周期截止时间是 (`PayType`)，并预期利率的近似值 (`Guess`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-381">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-382"><paramref name="NPer" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="e6ab8-382"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="e6ab8-383">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-383">Required.</span></span> <span data-ttu-id="e6ab8-384">指定资产原始成本的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-384"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="e6ab8-385">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-385">Required.</span></span> <span data-ttu-id="e6ab8-386">指定资产在使用年限结束时的价值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-386"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="e6ab8-387">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-387">Required.</span></span> <span data-ttu-id="e6ab8-388">指定资产使用年限的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-388"><see langword="Double" /> specifying length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="e6ab8-389">返回一个 <see langword="Double" /> 数据类型，它指定资产在一个周期内的直线折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-389">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-390">返回一个 <see langword="Double" /> 数据类型，它指定资产在一个周期内的直线折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-390">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-391">必须为相同的单位表示折旧期间`Life`自变量。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-391">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="e6ab8-392">所有参数必须都是正数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-392">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-393">此示例使用`SLN`函数以返回为单个周期指定资产的初始成本资产直线折旧 (`InitCost`)，资产的使用年限末尾的补救值 (`SalvageVal`)，和的总生存期以年为单位的资产 (`LifeTime`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-393">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-394"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="e6ab8-394"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="e6ab8-395">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-395">Required.</span></span> <span data-ttu-id="e6ab8-396">指定资产原始成本的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-396"><see langword="Double" /> specifying the initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="e6ab8-397">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-397">Required.</span></span> <span data-ttu-id="e6ab8-398">指定资产在使用年限结束时的价值的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-398"><see langword="Double" /> specifying the value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="e6ab8-399">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-399">Required.</span></span> <span data-ttu-id="e6ab8-400">指定资产使用年限的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-400"><see langword="Double" /> specifying the length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="e6ab8-401">必须的。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-401">Required.</span></span> <span data-ttu-id="e6ab8-402">指定计算资产折旧时所用期间的 <see langword="Double" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-402"><see langword="Double" /> specifying the period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="e6ab8-403">返回一个 <see langword="Double" /> 数据类型，它指定资产在指定期间用年数总计法计算的折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-403">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="e6ab8-404">返回一个 <see langword="Double" /> 数据类型，它指定资产在指定期间用年数总计法计算的折旧。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-404">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6ab8-405">`Life`和`Period`自变量必须以相同的单位表示。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-405">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="e6ab8-406">例如，如果`Life`在月中，给定`Period`还必须为其提供在月中。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-406">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="e6ab8-407">所有参数必须都是正数。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-407">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6ab8-408">此示例使用`SYD`函数以返回给定资产的初始成本在指定期间内的资产折旧 (`InitCost`)，资产的使用年限末尾的补救值 (`SalvageVal`)，和中资产的总生存期年 (`LifeTime`)。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-408">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6ab8-409"><paramref name="Salvage" /> &lt; 0，<paramref name="Period" /> &gt; <paramref name="Life" />，或 <paramref name="Period" /> &lt;=0。</span><span class="sxs-lookup"><span data-stu-id="e6ab8-409"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
  </Members>
</Type>