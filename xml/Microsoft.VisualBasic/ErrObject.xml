<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99efa4f2fa97adfbbe2e2ba0ece6a60e4e9943ba" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52221913" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a24f3-101"><see langword="ErrObject" /> 模块包含用于使用 <see langword="Err" /> 对象标识和处理运行时错误的属性和过程。</span><span class="sxs-lookup"><span data-stu-id="a24f3-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-102">`ErrObject`模块支持`Err`对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="a24f3-103">有关详情，请参阅<xref:Microsoft.VisualBasic.Information.Err%2A>。</span><span class="sxs-lookup"><span data-stu-id="a24f3-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-104">此示例使用的属性`Err`构造一个错误消息对话框中的对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="a24f3-105">请注意，当你使用时，会发生什么情况`Clear`方法第一个： 然后生成与 Visual Basic 错误`Raise`方法中，Visual Basic 的默认值将成为属性的`Err`对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a24f3-106">On Error 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="a24f3-107">Try...Catch...Finally 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="a24f3-108">关键字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="a24f3-109">Visual Basic 运行时库成员</span><span class="sxs-lookup"><span data-stu-id="a24f3-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a24f3-110">清除 <see langword="Err" /> 对象的所有属性设置。</span><span class="sxs-lookup"><span data-stu-id="a24f3-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-111">使用`Clear`若要显式清除`Err`对象后已处理错误，例如在使用延迟的错误处理与`On Error Resume Next`。</span><span class="sxs-lookup"><span data-stu-id="a24f3-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="a24f3-112">`Clear`方法称为自动每当执行任何以下语句：</span><span class="sxs-lookup"><span data-stu-id="a24f3-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="a24f3-113">任何类型的`Resume`语句</span><span class="sxs-lookup"><span data-stu-id="a24f3-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="a24f3-114">`Exit Sub`、`Exit Function` 或 `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="a24f3-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="a24f3-115">任何`On Error`语句</span><span class="sxs-lookup"><span data-stu-id="a24f3-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="a24f3-116">任何`Try...Catch...Finally`语句</span><span class="sxs-lookup"><span data-stu-id="a24f3-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="a24f3-117">`On Error Resume Next`构造可能优于`On Error GoTo`处理期间对其他对象的访问生成的错误时。</span><span class="sxs-lookup"><span data-stu-id="a24f3-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="a24f3-118">检查`Err`与对象的每个交互清楚地了解对象所访问的代码后： 可以确定哪个对象放置中的错误代码`Err.Number`，以及哪个对象最初生成错误 （的对象指定在`Err.Source`)。</span><span class="sxs-lookup"><span data-stu-id="a24f3-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-119">此示例使用`Err`对象的`Clear`方法来重置的数值属性`Err`零并且其字符串属性设置为零长度字符串的对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="a24f3-120">而无需在调用`Clear`，第二次调用`MsgBox`将显示相同的错误消息。</span><span class="sxs-lookup"><span data-stu-id="a24f3-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a24f3-121">On Error 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-122">返回或设置 <see langword="String" /> 表达式，该表达式包含与某个错误关联的描述性字符串。</span><span class="sxs-lookup"><span data-stu-id="a24f3-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="a24f3-123">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="a24f3-124">返回或设置 <see langword="String" /> 表达式，该表达式包含与某个错误关联的描述性字符串。</span><span class="sxs-lookup"><span data-stu-id="a24f3-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="a24f3-125">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-126">`Description`属性设置包含错误的简短说明。</span><span class="sxs-lookup"><span data-stu-id="a24f3-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="a24f3-127">使用此属性不能或不希望处理的错误向用户发出警报。</span><span class="sxs-lookup"><span data-stu-id="a24f3-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="a24f3-128">在生成一个用户定义的错误时，将分配到错误的简短说明`Description`属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="a24f3-129">如果`Description`属性未填入，和的值<xref:Microsoft.VisualBasic.ErrObject.Number%2A>属性对应于 Visual Basic 运行时错误，则返回的字符串<xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>函数中设置`Description`属性时生成错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-130">此示例将分配到的用户定义的消息`Description`属性的`Err`对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-131">返回指示上一条执行语句的行号的整数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-131">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a24f3-132">只读。</span><span class="sxs-lookup"><span data-stu-id="a24f3-132">Read-only.</span></span></summary>
        <value><span data-ttu-id="a24f3-133">返回指示上一条执行语句的行号的整数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-133">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a24f3-134">只读。</span><span class="sxs-lookup"><span data-stu-id="a24f3-134">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-135">如果 Visual Basic 遇到无行号，则返回 0。</span><span class="sxs-lookup"><span data-stu-id="a24f3-135">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-136">此示例使用`Erl`属性以指示的行号。</span><span class="sxs-lookup"><span data-stu-id="a24f3-136">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a24f3-137">返回表示所发生错误的异常。</span><span class="sxs-lookup"><span data-stu-id="a24f3-137">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="a24f3-138">返回表示所发生错误的异常。</span><span class="sxs-lookup"><span data-stu-id="a24f3-138">Returns the exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-139">`GetException`函数是只能从`Err`对象类。</span><span class="sxs-lookup"><span data-stu-id="a24f3-139">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="a24f3-140">它适用于`Exception`属性的`Err`要显示已发生的错误的对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-140">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-141">下面的代码显示分配给在异常消息`Err`对象：</span><span class="sxs-lookup"><span data-stu-id="a24f3-141">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-142">返回或设置一个 <see langword="Integer" />，它包含帮助文件中某个主题的上下文 ID。</span><span class="sxs-lookup"><span data-stu-id="a24f3-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="a24f3-143">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-143">Read/write.</span></span></summary>
        <value><span data-ttu-id="a24f3-144">返回或设置一个 <see langword="Integer" />，它包含帮助文件中某个主题的上下文 ID。</span><span class="sxs-lookup"><span data-stu-id="a24f3-144">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="a24f3-145">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-145">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-146">`HelpContext`属性用于显示应用程序的上下文相关帮助。</span><span class="sxs-lookup"><span data-stu-id="a24f3-146">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="a24f3-147">如果帮助文件中指定`HelpFile`，则`HelpContext`属性用于自动显示标识的帮助文件。</span><span class="sxs-lookup"><span data-stu-id="a24f3-147">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="a24f3-148">如果这两个`HelpFile`并`HelpContext`属性为空、 的值<xref:Microsoft.VisualBasic.ErrObject.Number%2A>属性处于选中状态。</span><span class="sxs-lookup"><span data-stu-id="a24f3-148">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="a24f3-149">如果的值`Number`属性对应于 Visual Basic 运行时错误值，则使用该错误的 Visual Basic 帮助上下文 ID。</span><span class="sxs-lookup"><span data-stu-id="a24f3-149">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="a24f3-150">如果的值`Number`属性不对应于 Visual Basic 错误，则将显示 Visual Basic 帮助文件的内容屏幕。</span><span class="sxs-lookup"><span data-stu-id="a24f3-150">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a24f3-151">在你的应用程序来处理典型的错误，应编写例程。</span><span class="sxs-lookup"><span data-stu-id="a24f3-151">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="a24f3-152">编程时对一个对象，可以使用对象的帮助文件，以改善质量的错误处理，或向用户显示有意义的消息，如果错误是不可恢复。</span><span class="sxs-lookup"><span data-stu-id="a24f3-152">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-153">此示例使用`HelpContext`的属性`Err`对象以显示 Visual Basic 帮助主题`Overflow`错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-153">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-154">返回或设置一个 <see langword="String" /> 表达式，该表达式包含帮助文件的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="a24f3-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="a24f3-155">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-155">Read/write.</span></span></summary>
        <value><span data-ttu-id="a24f3-156">返回或设置一个 <see langword="String" /> 表达式，该表达式包含帮助文件的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="a24f3-156">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="a24f3-157">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-157">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-158">如果通过指定帮助文件`HelpFile`属性，它会自动调用用户按帮助键 （或 f1） 中的错误消息对话框。</span><span class="sxs-lookup"><span data-stu-id="a24f3-158">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="a24f3-159">如果`HelpContext`属性包含有效的上下文自动显示为指定的文件，该主题的 ID。</span><span class="sxs-lookup"><span data-stu-id="a24f3-159">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="a24f3-160">如果没有`HelpFile`指定，则会显示 Visual Basic 帮助文件。</span><span class="sxs-lookup"><span data-stu-id="a24f3-160">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a24f3-161">在你的应用程序来处理典型的错误，应编写例程。</span><span class="sxs-lookup"><span data-stu-id="a24f3-161">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="a24f3-162">编程时对一个对象，可以使用对象的帮助文件，以改善质量的错误处理，或向用户显示有意义的消息，如果错误是不可恢复。</span><span class="sxs-lookup"><span data-stu-id="a24f3-162">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-163">此示例使用`HelpFile`属性的`Err`对象以开始帮助系统。</span><span class="sxs-lookup"><span data-stu-id="a24f3-163">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="a24f3-164">默认情况下，`HelpFile`属性包含 Visual Basic 帮助文件的名称。</span><span class="sxs-lookup"><span data-stu-id="a24f3-164">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-165">返回调用动态链接库 (DLL) 所产生的系统错误代码。</span><span class="sxs-lookup"><span data-stu-id="a24f3-165">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="a24f3-166">只读。</span><span class="sxs-lookup"><span data-stu-id="a24f3-166">Read-only.</span></span></summary>
        <value><span data-ttu-id="a24f3-167">返回调用动态链接库 (DLL) 所产生的系统错误代码。</span><span class="sxs-lookup"><span data-stu-id="a24f3-167">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="a24f3-168">只读。</span><span class="sxs-lookup"><span data-stu-id="a24f3-168">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-169"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>属性仅适用于从 Visual Basic 代码进行的 DLL 调用。</span><span class="sxs-lookup"><span data-stu-id="a24f3-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="a24f3-170">当进行此类调用时，所调用的函数通常返回指示成功或失败，代码和<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>填充属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-170">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="a24f3-171">检查以确定指示成功或失败的返回值的 DLL 函数的文档。</span><span class="sxs-lookup"><span data-stu-id="a24f3-171">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="a24f3-172">Visual Basic 应用程序时返回失败代码，则应立即检查<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-172">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="a24f3-173">不会引发异常时<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="a24f3-173">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a24f3-174"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>属性受<xref:System.Security.Permissions.SecurityAction.LinkDemand>，这有助于防止其不受信任的代码中，阻止访问。</span><span class="sxs-lookup"><span data-stu-id="a24f3-174">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="a24f3-175">但是，<xref:System.Security.Permissions.SecurityAction.LinkDemand>要求仅对直接调用方具有<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>权限。</span><span class="sxs-lookup"><span data-stu-id="a24f3-175">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="a24f3-176">如果可以从部分受信任代码调用你的代码，公开的值<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>不用的情况下验证安全风险。</span><span class="sxs-lookup"><span data-stu-id="a24f3-176">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="a24f3-177">有关如何使用有关的重要限制<xref:System.Security.Permissions.SecurityAction.LinkDemand>成员，请参阅[Demand vs。LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)。</span><span class="sxs-lookup"><span data-stu-id="a24f3-177">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="a24f3-178">有关权限的详细信息，请参阅<xref:System.Security.Permissions.SecurityPermission>并[代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="a24f3-178">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="a24f3-179">请为智能设备注意此属性始终返回零。</span><span class="sxs-lookup"><span data-stu-id="a24f3-179">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-180">下面的示例演示如何使用`LastDllError`属性后调用 Windows API 中的函数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-180">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="a24f3-181">`PrintWindowCoordinates`的过程采用一个窗口，并调用到一个句柄`GetWindowRect`函数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-181">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="a24f3-182">`GetWindowRect` RECT 数据结构填充构成了窗口的矩形的边的长度。</span><span class="sxs-lookup"><span data-stu-id="a24f3-182">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="a24f3-183">如果传递无效的句柄，发生错误，并且错误号是可通过`LastDllError`属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-183">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-184">返回或设置指定错误的数值。</span><span class="sxs-lookup"><span data-stu-id="a24f3-184">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="a24f3-185">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-185">Read/write.</span></span></summary>
        <value><span data-ttu-id="a24f3-186">返回或设置指定错误的数值。</span><span class="sxs-lookup"><span data-stu-id="a24f3-186">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="a24f3-187">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-187">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-188">所有`Raise`除参数`Number`都是可选的。</span><span class="sxs-lookup"><span data-stu-id="a24f3-188">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="a24f3-189">如果省略可选参数和属性设置的`Err`对象包含未清除的值，这些值用作您的错误的值。</span><span class="sxs-lookup"><span data-stu-id="a24f3-189">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="a24f3-190">因为`Err`对象提供了更丰富的信息比生成的错误时`Error`语句，`Raise`可用于编写类模块时生成错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-190">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="a24f3-191">例如，对于`Raise`方法，可以在指定生成错误的源`Source`属性，该错误的联机帮助可以引用，依次类推。</span><span class="sxs-lookup"><span data-stu-id="a24f3-191">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="a24f3-192">当从对象返回一个用户定义的错误，则设置`Err.Number`通过添加数所选为错误代码为`VbObjectError`常量。</span><span class="sxs-lookup"><span data-stu-id="a24f3-192">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="a24f3-193">例如，使用以下代码以返回数字 1051年作为错误代码：</span><span class="sxs-lookup"><span data-stu-id="a24f3-193">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-194">此示例演示了使用典型的`Number`错误处理例程中的属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-194">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="a24f3-195">此示例使用`Err`对象的`Raise`方法来生成原始错误中用 Visual Basic 编写的函数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-195">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="a24f3-196">调用的函数可以捕获错误并报告给用户。</span><span class="sxs-lookup"><span data-stu-id="a24f3-196">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="a24f3-197">请注意，该过程`CallingProcedure`形成了鲜明对比的信息可以从派生类型`Err`对象的信息，可以从派生`Exception`对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-197">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a24f3-198"><paramref name="Number" /> 大于 65535。</span><span class="sxs-lookup"><span data-stu-id="a24f3-198"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a24f3-199">必须的。</span><span class="sxs-lookup"><span data-stu-id="a24f3-199">Required.</span></span> <span data-ttu-id="a24f3-200">标识错误本质的 <see langword="Long" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-200"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="a24f3-201">Visual Basic 错误处于 0 到 65535 的范围内：范围 0 到 512 保留用于系统错误，范围 513 到 65535 则用于用户定义的错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-201">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span></span> <span data-ttu-id="a24f3-202">当在类模块中将 <see langword="Number" /> 属性设置为您自己的错误代码时，将错误代码号添加到 <see langword="vbObjectError" /> 常数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-202">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="a24f3-203">例如，将 <c>vbObjectError + 513</c> 分配给 <see langword="Number" /> 属性，生成错误号 513。</span><span class="sxs-lookup"><span data-stu-id="a24f3-203">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="a24f3-204">可选。</span><span class="sxs-lookup"><span data-stu-id="a24f3-204">Optional.</span></span> <span data-ttu-id="a24f3-205"><see langword="String" /> 表达式，用于命名生成错误的对象或应用程序。</span><span class="sxs-lookup"><span data-stu-id="a24f3-205"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="a24f3-206">设置对象的这一属性时，应使用如下形式：<c>project</c>.<c>class</c>。</span><span class="sxs-lookup"><span data-stu-id="a24f3-206">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="a24f3-207">如果未指定 <paramref name="Source" />，则使用当前 Visual Basic 项目的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="a24f3-207">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="a24f3-208">可选。</span><span class="sxs-lookup"><span data-stu-id="a24f3-208">Optional.</span></span> <span data-ttu-id="a24f3-209">描述错误的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="a24f3-209"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="a24f3-210">如果未指定，则检查 <see langword="Number" /> 属性值。</span><span class="sxs-lookup"><span data-stu-id="a24f3-210">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="a24f3-211">如果它可以映射到 Visual Basic 运行时错误代码，则将 <see langword="Error" /> 函数要返回的字符串用作 <see langword="Description" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-211">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="a24f3-212">如果没有对应于 <see langword="Number" /> 属性的 Visual Basic 错误，则使用"应用程序定义的错误或对象定义的错误"消息。</span><span class="sxs-lookup"><span data-stu-id="a24f3-212">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="a24f3-213">可选。</span><span class="sxs-lookup"><span data-stu-id="a24f3-213">Optional.</span></span> <span data-ttu-id="a24f3-214">帮助文件的完全限定路径，在该文件中可找到有关此错误的帮助信息。</span><span class="sxs-lookup"><span data-stu-id="a24f3-214">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="a24f3-215">如果未指定该参数，则 Visual Basic 使用 Visual Basic 帮助文件的完全限定的驱动器、路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="a24f3-215">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="a24f3-216">可选。</span><span class="sxs-lookup"><span data-stu-id="a24f3-216">Optional.</span></span> <span data-ttu-id="a24f3-217">上下文 ID，用于标识 <paramref name="HelpFile" /> 中提供有关错误的帮助主题。</span><span class="sxs-lookup"><span data-stu-id="a24f3-217">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="a24f3-218">如果省略该参数，则使用与 <see langword="Number" /> 属性对应的错误的 Visual Basic 帮助文件上下文 ID（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a24f3-218">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="a24f3-219">生成一个运行时错误；可以替代 <see langword="Error" /> 语句使用。</span><span class="sxs-lookup"><span data-stu-id="a24f3-219">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-220">所有`Raise`除参数`Number`都是可选的。</span><span class="sxs-lookup"><span data-stu-id="a24f3-220">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="a24f3-221">如果省略可选参数和属性设置的`Err`对象包含未清除的值，这些值用作您的错误的值。</span><span class="sxs-lookup"><span data-stu-id="a24f3-221">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="a24f3-222">因为`Err`对象提供了更丰富的信息比生成的错误时`Error`语句，`Raise`可用于编写类模块时生成错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-222">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="a24f3-223">例如，对于`Raise`方法，可以在指定生成错误的源`Source`属性，该错误的联机帮助可以引用，依次类推。</span><span class="sxs-lookup"><span data-stu-id="a24f3-223">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-224">此示例使用`Err`对象的`Raise`方法生成用 Visual Basic 编写的函数中出现错误。</span><span class="sxs-lookup"><span data-stu-id="a24f3-224">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="a24f3-225">调用的函数可以捕获错误并将其报告给消息框的用户。</span><span class="sxs-lookup"><span data-stu-id="a24f3-225">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="a24f3-226">Error 语句</span><span class="sxs-lookup"><span data-stu-id="a24f3-226">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a24f3-227">On Error 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-227">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a24f3-228">返回或设置一个 <see langword="String" /> 表达式，该表达式指定最初生成错误的对象或应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="a24f3-228">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="a24f3-229">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-229">Read/write.</span></span></summary>
        <value><span data-ttu-id="a24f3-230">返回或设置一个 <see langword="String" /> 表达式，该表达式指定最初生成错误的对象或应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="a24f3-230">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="a24f3-231">读/写。</span><span class="sxs-lookup"><span data-stu-id="a24f3-231">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a24f3-232">`Source`属性指定`String`表达式表示的对象生成了错误; 表达式通常是对象的类名称或进程 id。</span><span class="sxs-lookup"><span data-stu-id="a24f3-232">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="a24f3-233">使用`Source`属性无法处理的访问的对象生成的错误代码时提供的信息。</span><span class="sxs-lookup"><span data-stu-id="a24f3-233">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="a24f3-234">例如，如果您访问 Microsoft Excel 并生成`Division by zero`错误，Microsoft Excel 设置`Err.Number`有关该错误并设置其错误代码为`Source`到"Excel.Application"。</span><span class="sxs-lookup"><span data-stu-id="a24f3-234">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="a24f3-235">当应用程序从代码中，生成错误时`Source`是应用程序的编程 id。</span><span class="sxs-lookup"><span data-stu-id="a24f3-235">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="a24f3-236">在类中，`Source`应包含具有窗体的名称*项目*。*类*。</span><span class="sxs-lookup"><span data-stu-id="a24f3-236">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="a24f3-237">在代码中，发生意外的错误时`Source`属性自动填充。</span><span class="sxs-lookup"><span data-stu-id="a24f3-237">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="a24f3-238">在模块中，错误`Source`包含项目名称。</span><span class="sxs-lookup"><span data-stu-id="a24f3-238">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a24f3-239">此示例演示如何使用`Source`典型的错误处理例程中的属性。</span><span class="sxs-lookup"><span data-stu-id="a24f3-239">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="a24f3-240">当从引发错误`Class1`，该字符串`"Class1"`分配给`Source`属性的`Err`对象。</span><span class="sxs-lookup"><span data-stu-id="a24f3-240">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="a24f3-241">然后，此字符串将显示在信息性消息，指示源的错误数。</span><span class="sxs-lookup"><span data-stu-id="a24f3-241">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a24f3-242">On Error 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a24f3-242">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>