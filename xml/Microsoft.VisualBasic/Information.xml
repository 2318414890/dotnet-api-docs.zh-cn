<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb7b4c550a11b5654a23c73a2f51fb4d5c2526a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36726772" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ef73-101">
        <see langword="Information" /> 模块包含用于返回、测试或验证信息的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ef73-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-102">此模块支持的 Visual Basic 语言关键字和运行时库成员，它们提供的错误信息，验证数据、 确定数组界限，并检索数据类型和颜色信息。</span><span class="sxs-lookup"><span data-stu-id="1ef73-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-103">下面的示例使用`VbTypeName`函数返回的多个变量的数据类型名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ef73-104">返回指示上一条执行语句的行号的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-104">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="1ef73-105">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-105">Read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-106">返回指示上一条执行语句的行号的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-106">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="1ef73-107">只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-107">Read-only.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-108">如果 Visual Basic 遇到无行号，则返回 0。</span><span class="sxs-lookup"><span data-stu-id="1ef73-108">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-109">此示例使用`Erl`属性以指示的行号。</span><span class="sxs-lookup"><span data-stu-id="1ef73-109">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ef73-110">包含运行时错误的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-110">Contains information about run-time errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-111">包含运行时错误的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-111">Contains information about run-time errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-112">属性`Err`对象设置的错误生成器-Visual Basic、 对象或程序员。</span><span class="sxs-lookup"><span data-stu-id="1ef73-112">The properties of the `Err` object are set by the generator of an error—Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="1ef73-113">运行时错误发生时，属性`Err`对象的唯一标识错误的信息填充，并可用于处理错误。</span><span class="sxs-lookup"><span data-stu-id="1ef73-113">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="1ef73-114">若要在代码中生成运行时错误，请使用`Raise`方法。</span><span class="sxs-lookup"><span data-stu-id="1ef73-114">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="1ef73-115">`Err`对象的属性被重置为零个或零长度字符串 ("") 后`Exit Sub`， `Exit Function`， `Exit Property`，或`Resume Next`错误处理例程中的语句。</span><span class="sxs-lookup"><span data-stu-id="1ef73-115">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="1ef73-116">使用任何形式的`Resume`语句在错误处理例程之外不会重置`Err`对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1ef73-116">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="1ef73-117">你可以使用`Clear`方法来显式重置`Err`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-117">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="1ef73-118">使用`Raise`方法而不是`Error`语句以生成运行时错误的系统错误，并类模块。</span><span class="sxs-lookup"><span data-stu-id="1ef73-118">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="1ef73-119">你决定是否使用`Raise`中其他代码的方法取决于你想要返回的信息的丰富功能。</span><span class="sxs-lookup"><span data-stu-id="1ef73-119">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="1ef73-120">`Err`对象是具有全局作用域的内部对象。</span><span class="sxs-lookup"><span data-stu-id="1ef73-120">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="1ef73-121">因此，不需要在你的代码中创建它的实例。</span><span class="sxs-lookup"><span data-stu-id="1ef73-121">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-122">此示例使用的属性`Err`构造错误消息对话框中的对象。</span><span class="sxs-lookup"><span data-stu-id="1ef73-122">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="1ef73-123">请注意，如果你使用`Clear`方法首先，当你生成使用 Visual Basic 错误`Raise`方法，Visual Basic 的默认值成为的属性`Err`对象。</span><span class="sxs-lookup"><span data-stu-id="1ef73-123">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="1ef73-124">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-124">Required.</span>
          </span>
          <span data-ttu-id="1ef73-125">
            <see langword="Object" /> 变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-125">
              <see langword="Object" /> variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-126">返回一个 <see langword="Boolean" /> 值，指示变量是否指向数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-126">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-127">返回一个 <see langword="Boolean" /> 值，指示变量是否指向数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-127">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-128">`IsArray` 返回`True`如果变量指向数组中; 否则，它将返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-128">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="1ef73-129">`IsArray` 对于具有可能包含数组的对象尤其有用。</span><span class="sxs-lookup"><span data-stu-id="1ef73-129">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-130">此示例使用`IsArray`函数来检查多个变量是否引用数组。</span><span class="sxs-lookup"><span data-stu-id="1ef73-130">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-131">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-131">Required.</span>
          </span>
          <span data-ttu-id="1ef73-132">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-132">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-133">返回一个 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效的 <see langword="Date" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-133">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-134">返回一个 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效的 <see langword="Date" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-134">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-135">`IsDate` 返回`True`如果`Expression`的<xref:System.DateTime>数据类型或可被转换为它; 否则为它将返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-135">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="1ef73-136"><xref:System.DateTime>数据类型支持的日期值和时间值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-136">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="1ef73-137">`IsDate` 返回`True`如果`Expression`表示有效的日期、 有效的时间，或有效的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="1ef73-137">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-138">下面的示例使用`IsDate`函数来确定是否多个变量表示有效<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-138">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="1ef73-139">在前面的示例中，`IsDate`返回`True`前四个调用和`False`的最后一个调用。</span><span class="sxs-lookup"><span data-stu-id="1ef73-139">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-140">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-140">Required.</span>
          </span>
          <span data-ttu-id="1ef73-141">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-141">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-142">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-142">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-143">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-143">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-144">`IsDBNull` 返回`True`如果的数据类型`Expression`计算结果为<xref:System.DBNull>类型; 否则为`IsDBNull`返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-144">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="1ef73-145"><xref:System.DBNull?displayProperty=nameWithType>值，指示`Object`表示缺失或不存在的数据。</span><span class="sxs-lookup"><span data-stu-id="1ef73-145">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="1ef73-146">`DBNull` 不能与相同`Nothing`，指示尚未初始化变量。</span><span class="sxs-lookup"><span data-stu-id="1ef73-146">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="1ef73-147">`DBNull` 也不是零长度字符串相同 (`""`)，这有时称为 null 字符串。</span><span class="sxs-lookup"><span data-stu-id="1ef73-147">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-148">此示例使用`IsDBNull`函数来确定是否变量的计算结果为`DBNull`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-148">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-149">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-149">Required.</span>
          </span>
          <span data-ttu-id="1ef73-150">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-150">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-151">返回一个 <see langword="Boolean" /> 值，指示表达式是否是异常类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-151">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-152">返回一个 <see langword="Boolean" /> 值，指示表达式是否是异常类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-152">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-153">`IsError` 返回`True`如果表达式表示`Object`派生自的变量<xref:System.Exception>类<xref:System>命名空间。</span><span class="sxs-lookup"><span data-stu-id="1ef73-153">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="1ef73-154">派生自的异常<xref:System.Exception?displayProperty=nameWithType>可捕获与`Try...Catch...Finally`语句。</span><span class="sxs-lookup"><span data-stu-id="1ef73-154">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-155">下面的示例使用`IsError`函数来检查表达式是否表示系统异常。</span><span class="sxs-lookup"><span data-stu-id="1ef73-155">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-156">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-156">Required.</span>
          </span>
          <span data-ttu-id="1ef73-157">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-157">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-158">返回一个 <see langword="Boolean" /> 值，指示表达式是否未被指派对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-158">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-159">返回一个 <see langword="Boolean" /> 值，指示表达式是否未被指派对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-159">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-160">`IsNothing` 返回`True`如果表达式表示的对象变量的当前未包含任何对象分配给它; 否则为它将返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-160">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="1ef73-161">`IsNothing` 旨在作用于引用类型。</span><span class="sxs-lookup"><span data-stu-id="1ef73-161">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="1ef73-162">值类型不能包含的一个值，和将恢复为其默认值，如果将分配`Nothing`到它。</span><span class="sxs-lookup"><span data-stu-id="1ef73-162">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="1ef73-163">如果提供中的值类型`Expression`，`IsNothing`始终返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-163">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-164">下面的示例使用`IsNothing`函数来确定对象变量是否与任何对象实例关联。</span><span class="sxs-lookup"><span data-stu-id="1ef73-164">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-165">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-165">Required.</span>
          </span>
          <span data-ttu-id="1ef73-166">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-166">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-167">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-167">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-168">返回一个 <see langword="Boolean" /> 值，指示表达式的计算结果是否为数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-168">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-169">`IsNumeric` 返回`True`如果的数据类型`Expression`是`Boolean`， `Byte`， `Decimal`， `Double`， `Integer`， `Long`， `SByte`， `Short`， `Single`， `UInteger`，`ULong`，或`UShort`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-169">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="1ef73-170">它还返回`True`如果`Expression`是`Char`， `String`，或`Object`可以成功转换为数字。</span><span class="sxs-lookup"><span data-stu-id="1ef73-170">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="1ef73-171">`Expression` 可以包含非数字字符。</span><span class="sxs-lookup"><span data-stu-id="1ef73-171">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="1ef73-172">`IsNumeric` 返回`True`如果`Expression`是包含一个有效的十六进制或八进制数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ef73-172">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="1ef73-173">`IsNumeric` 也会返回`True`如果`Expression`包含有效的数值表达式开头 +、-字符或包含逗号。</span><span class="sxs-lookup"><span data-stu-id="1ef73-173">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="1ef73-174">`IsNumeric` 返回`False`如果`Expression`的数据类型`Date`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-174">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="1ef73-175">它将返回`False`如果`Expression`是`Char`， `String`，或`Object`无法成功转换为数字。</span><span class="sxs-lookup"><span data-stu-id="1ef73-175">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-176">下面的示例使用`IsNumeric`函数来确定是否可以作为数字计算变量的内容。</span><span class="sxs-lookup"><span data-stu-id="1ef73-176">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="1ef73-177">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-177">Required.</span>
          </span>
          <span data-ttu-id="1ef73-178">
            <see langword="Object" /> 表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-178">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-179">返回一个 <see langword="Boolean" /> 值，指示表达式是否为引用类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-179">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-180">返回一个 <see langword="Boolean" /> 值，指示表达式是否为引用类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-180">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-181">`IsReference` 返回`True`如果`Expression`表示引用类型，如类实例，`String`类型或数组的任何类型; 否则，它将返回`False`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-181">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="1ef73-182">引用类型包含在其他位置存储在内存中数据的指针。</span><span class="sxs-lookup"><span data-stu-id="1ef73-182">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="1ef73-183">值类型包含其自己的数据。</span><span class="sxs-lookup"><span data-stu-id="1ef73-183">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-184">此示例使用`IsReference`函数来检查是否多个变量，请参阅与引用类型。</span><span class="sxs-lookup"><span data-stu-id="1ef73-184">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="1ef73-185">在前面的示例中前, 三个调用`IsReference`返回`True`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-185">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="1ef73-186">最后一次调用返回`False`，这是因为`Integer`是值类型，而不是引用类型。</span><span class="sxs-lookup"><span data-stu-id="1ef73-186">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="1ef73-187">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-187">Required.</span>
          </span>
          <span data-ttu-id="1ef73-188">任何数据类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-188">Array of any data type.</span>
          </span>
          <span data-ttu-id="1ef73-189">希望在其中找到维度的最小可能下标的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-189">The array in which you want to find the lowest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="1ef73-190">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-190">Optional.</span>
          </span>
          <span data-ttu-id="1ef73-191">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-191">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="1ef73-192">将返回其最小可用下标的维度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-192">The dimension for which the lowest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="1ef73-193">对第一维使用 1，对第二维使用 2，依此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-193">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="1ef73-194">如果省略 <c>Rank</c>，则假定为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-194">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-195">返回数组的指示维度的最小可用下标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-195">Returns the lowest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-196">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-196">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="1ef73-197">指定维度的下标可以包含的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-197">The lowest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="1ef73-198">只要 <paramref name="Array" /> 已初始化，即使其中没有元素（例如，它是一个零长度字符串），<see langword="LBound" /> 也始终返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-198">
              <see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span>
          </span>
          <span data-ttu-id="1ef73-199">如果 <paramref name="Array" /> 为 <see langword="Nothing" />，则 <see langword="LBound" /> 将引发 <see cref="T:System.ArgumentNullException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-199">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-200">由于数组下标从 0 开始，因此每一维度最小可用的下标总是为 0。</span><span class="sxs-lookup"><span data-stu-id="1ef73-200">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="1ef73-201">对于具有以下维度的数组`LBound`下表中返回的值：</span><span class="sxs-lookup"><span data-stu-id="1ef73-201">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="1ef73-202">调用 LBound</span><span class="sxs-lookup"><span data-stu-id="1ef73-202">Call to LBound</span></span>|<span data-ttu-id="1ef73-203">返回值</span><span class="sxs-lookup"><span data-stu-id="1ef73-203">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="1ef73-204">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-204">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="1ef73-205">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-205">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="1ef73-206">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-206">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-207">下面的示例使用`LBound`函数来确定最小可用的指定维数的数组下标。</span><span class="sxs-lookup"><span data-stu-id="1ef73-207">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ef73-208">
            <paramref name="Array" /> 为 <see langword="Nothing" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-208">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="1ef73-209">
            <paramref name="Rank" /> 小于 1，或 <paramref name="Rank" /> 大于 <paramref name="Array" /> 的级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-209">
              <paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color">
          <span data-ttu-id="1ef73-210">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-210">Required.</span>
          </span>
          <span data-ttu-id="1ef73-211">0–15 范围内的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-211">A whole number in the range 0–15.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-212">返回一个 <see langword="Integer" /> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-212">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-213">返回一个 <see langword="Integer" /> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-213">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-214">从最低有效字节开始，返回的值指定用于在 Visual Basic 语言由使用的 RGB 系统中设置适当的颜色的红色、 绿色和蓝色值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-214">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="1ef73-215">`Color`自变量具有这些设置。</span><span class="sxs-lookup"><span data-stu-id="1ef73-215">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="1ef73-216">数字</span><span class="sxs-lookup"><span data-stu-id="1ef73-216">Number</span></span>|<span data-ttu-id="1ef73-217">颜色</span><span class="sxs-lookup"><span data-stu-id="1ef73-217">Color</span></span>|<span data-ttu-id="1ef73-218">数字</span><span class="sxs-lookup"><span data-stu-id="1ef73-218">Number</span></span>|<span data-ttu-id="1ef73-219">颜色</span><span class="sxs-lookup"><span data-stu-id="1ef73-219">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="1ef73-220">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-220">0</span></span>|<span data-ttu-id="1ef73-221">黑色</span><span class="sxs-lookup"><span data-stu-id="1ef73-221">Black</span></span>|<span data-ttu-id="1ef73-222">8</span><span class="sxs-lookup"><span data-stu-id="1ef73-222">8</span></span>|<span data-ttu-id="1ef73-223">灰色</span><span class="sxs-lookup"><span data-stu-id="1ef73-223">Gray</span></span>|  
|<span data-ttu-id="1ef73-224">1</span><span class="sxs-lookup"><span data-stu-id="1ef73-224">1</span></span>|<span data-ttu-id="1ef73-225">蓝色</span><span class="sxs-lookup"><span data-stu-id="1ef73-225">Blue</span></span>|<span data-ttu-id="1ef73-226">9</span><span class="sxs-lookup"><span data-stu-id="1ef73-226">9</span></span>|<span data-ttu-id="1ef73-227">浅蓝色</span><span class="sxs-lookup"><span data-stu-id="1ef73-227">Light blue</span></span>|  
|<span data-ttu-id="1ef73-228">2</span><span class="sxs-lookup"><span data-stu-id="1ef73-228">2</span></span>|<span data-ttu-id="1ef73-229">绿色</span><span class="sxs-lookup"><span data-stu-id="1ef73-229">Green</span></span>|<span data-ttu-id="1ef73-230">10</span><span class="sxs-lookup"><span data-stu-id="1ef73-230">10</span></span>|<span data-ttu-id="1ef73-231">浅绿色</span><span class="sxs-lookup"><span data-stu-id="1ef73-231">Light green</span></span>|  
|<span data-ttu-id="1ef73-232">3</span><span class="sxs-lookup"><span data-stu-id="1ef73-232">3</span></span>|<span data-ttu-id="1ef73-233">青色</span><span class="sxs-lookup"><span data-stu-id="1ef73-233">Cyan</span></span>|<span data-ttu-id="1ef73-234">11</span><span class="sxs-lookup"><span data-stu-id="1ef73-234">11</span></span>|<span data-ttu-id="1ef73-235">浅蓝</span><span class="sxs-lookup"><span data-stu-id="1ef73-235">Light cyan</span></span>|  
|<span data-ttu-id="1ef73-236">4</span><span class="sxs-lookup"><span data-stu-id="1ef73-236">4</span></span>|<span data-ttu-id="1ef73-237">红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-237">Red</span></span>|<span data-ttu-id="1ef73-238">12</span><span class="sxs-lookup"><span data-stu-id="1ef73-238">12</span></span>|<span data-ttu-id="1ef73-239">浅红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-239">Light red</span></span>|  
|<span data-ttu-id="1ef73-240">5</span><span class="sxs-lookup"><span data-stu-id="1ef73-240">5</span></span>|<span data-ttu-id="1ef73-241">洋红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-241">Magenta</span></span>|<span data-ttu-id="1ef73-242">13</span><span class="sxs-lookup"><span data-stu-id="1ef73-242">13</span></span>|<span data-ttu-id="1ef73-243">浅色洋红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-243">Light magenta</span></span>|  
|<span data-ttu-id="1ef73-244">6</span><span class="sxs-lookup"><span data-stu-id="1ef73-244">6</span></span>|<span data-ttu-id="1ef73-245">黄色</span><span class="sxs-lookup"><span data-stu-id="1ef73-245">Yellow</span></span>|<span data-ttu-id="1ef73-246">14</span><span class="sxs-lookup"><span data-stu-id="1ef73-246">14</span></span>|<span data-ttu-id="1ef73-247">浅黄色</span><span class="sxs-lookup"><span data-stu-id="1ef73-247">Light yellow</span></span>|  
|<span data-ttu-id="1ef73-248">7</span><span class="sxs-lookup"><span data-stu-id="1ef73-248">7</span></span>|<span data-ttu-id="1ef73-249">空白</span><span class="sxs-lookup"><span data-stu-id="1ef73-249">White</span></span>|<span data-ttu-id="1ef73-250">15</span><span class="sxs-lookup"><span data-stu-id="1ef73-250">15</span></span>|<span data-ttu-id="1ef73-251">亮白色</span><span class="sxs-lookup"><span data-stu-id="1ef73-251">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-252">此示例使用`QBColor`函数来更改颜色由`colorInteger`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-252">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="1ef73-253">`QBColor` 接受 0 到 15 之间的整数值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-253">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ef73-254">
            <paramref name="Color" /> 不在 0 到 15（均含）范围之内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-254">
              <paramref name="Color" /> is outside of range 0 to 15, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red">
          <span data-ttu-id="1ef73-255">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-255">Required.</span>
          </span>
          <span data-ttu-id="1ef73-256">0–255 范围内（均含）的 <see langword="Integer" /> 值。表示颜色中红色分量的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-256">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</span>
          </span>
        </param>
        <param name="Green">
          <span data-ttu-id="1ef73-257">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-257">Required.</span>
          </span>
          <span data-ttu-id="1ef73-258">0–255 范围内（均含）的 <see langword="Integer" /> 值。表示颜色中绿色分量的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-258">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</span>
          </span>
        </param>
        <param name="Blue">
          <span data-ttu-id="1ef73-259">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-259">Required.</span>
          </span>
          <span data-ttu-id="1ef73-260">0–255 范围内（均含）的 <see langword="Integer" /> 值。表示颜色中蓝色分量的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-260">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-261">返回一个 <see langword="Integer" /> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-261">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-262">返回一个 <see langword="Integer" /> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-262">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-263">应用程序方法和属性接受颜色规范预期规范是一个数字，表示 RGB 颜色值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-263">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="1ef73-264">RGB 颜色值指定相对的红色、 绿色和蓝色的导致要显示的特定颜色强度。</span><span class="sxs-lookup"><span data-stu-id="1ef73-264">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="1ef73-265">如果任何参数的值`RGB`大于 255，255 使用。</span><span class="sxs-lookup"><span data-stu-id="1ef73-265">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="1ef73-266">下表列出一些标准颜色以及它们包括在红色、 绿色和蓝色值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-266">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="1ef73-267">颜色</span><span class="sxs-lookup"><span data-stu-id="1ef73-267">Color</span></span>|<span data-ttu-id="1ef73-268">红色的值</span><span class="sxs-lookup"><span data-stu-id="1ef73-268">Red value</span></span>|<span data-ttu-id="1ef73-269">绿色值</span><span class="sxs-lookup"><span data-stu-id="1ef73-269">Green value</span></span>|<span data-ttu-id="1ef73-270">蓝色值</span><span class="sxs-lookup"><span data-stu-id="1ef73-270">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="1ef73-271">黑色</span><span class="sxs-lookup"><span data-stu-id="1ef73-271">Black</span></span>|<span data-ttu-id="1ef73-272">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-272">0</span></span>|<span data-ttu-id="1ef73-273">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-273">0</span></span>|<span data-ttu-id="1ef73-274">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-274">0</span></span>|  
|<span data-ttu-id="1ef73-275">蓝色</span><span class="sxs-lookup"><span data-stu-id="1ef73-275">Blue</span></span>|<span data-ttu-id="1ef73-276">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-276">0</span></span>|<span data-ttu-id="1ef73-277">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-277">0</span></span>|<span data-ttu-id="1ef73-278">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-278">255</span></span>|  
|<span data-ttu-id="1ef73-279">绿色</span><span class="sxs-lookup"><span data-stu-id="1ef73-279">Green</span></span>|<span data-ttu-id="1ef73-280">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-280">0</span></span>|<span data-ttu-id="1ef73-281">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-281">255</span></span>|<span data-ttu-id="1ef73-282">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-282">0</span></span>|  
|<span data-ttu-id="1ef73-283">青色</span><span class="sxs-lookup"><span data-stu-id="1ef73-283">Cyan</span></span>|<span data-ttu-id="1ef73-284">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-284">0</span></span>|<span data-ttu-id="1ef73-285">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-285">255</span></span>|<span data-ttu-id="1ef73-286">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-286">255</span></span>|  
|<span data-ttu-id="1ef73-287">红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-287">Red</span></span>|<span data-ttu-id="1ef73-288">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-288">255</span></span>|<span data-ttu-id="1ef73-289">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-289">0</span></span>|<span data-ttu-id="1ef73-290">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-290">0</span></span>|  
|<span data-ttu-id="1ef73-291">洋红色</span><span class="sxs-lookup"><span data-stu-id="1ef73-291">Magenta</span></span>|<span data-ttu-id="1ef73-292">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-292">255</span></span>|<span data-ttu-id="1ef73-293">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-293">0</span></span>|<span data-ttu-id="1ef73-294">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-294">255</span></span>|  
|<span data-ttu-id="1ef73-295">黄色</span><span class="sxs-lookup"><span data-stu-id="1ef73-295">Yellow</span></span>|<span data-ttu-id="1ef73-296">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-296">255</span></span>|<span data-ttu-id="1ef73-297">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-297">255</span></span>|<span data-ttu-id="1ef73-298">0</span><span class="sxs-lookup"><span data-stu-id="1ef73-298">0</span></span>|  
|<span data-ttu-id="1ef73-299">空白</span><span class="sxs-lookup"><span data-stu-id="1ef73-299">White</span></span>|<span data-ttu-id="1ef73-300">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-300">255</span></span>|<span data-ttu-id="1ef73-301">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-301">255</span></span>|<span data-ttu-id="1ef73-302">255</span><span class="sxs-lookup"><span data-stu-id="1ef73-302">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-303">此示例演示如何`RGB`函数用于返回一个整数，表示`RGB`颜色值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-303">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ef73-304">
            <paramref name="Green" />、<paramref name="Blue" />，或 <paramref name="Red" /> 不在 0 到 255（含 0 和 255）范围之内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-304">
              <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName">
          <span data-ttu-id="1ef73-305">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-305">Required.</span>
          </span>
          <span data-ttu-id="1ef73-306">一个包含 Visual Basic 类型名称的 <see langword="String" /> 变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-306">A <see langword="String" /> variable containing a Visual Basic type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-307">返回一个 <see langword="String" /> 值，它包含变量的系统数据类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-307">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-308">返回一个 <see langword="String" /> 值，它包含变量的系统数据类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-308">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-309">`SystemTypeName` 返回的完全限定公共语言运行时 (CLR) 类型名称对应于 Visual Basic 类型名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-309">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="1ef73-310">例如，如果`VbName`包含"日期"`SystemTypeName`返回"System.DateTime"。</span><span class="sxs-lookup"><span data-stu-id="1ef73-310">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="1ef73-311">如果`SystemTypeName`无法识别的值`VbName`，它将返回`Nothing`(不是字符串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="1ef73-311">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-312">下面的示例使用`SystemTypeName`函数返回的多个变量的数据类型名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-312">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="1ef73-313">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-313">Required.</span>
          </span>
          <span data-ttu-id="1ef73-314">
            <see langword="Object" /> 变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-314">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="1ef73-315">如果 <see langword="Option Strict" /> 为 <see langword="Off" />，则可以传递除结构之外的任何数据类型的变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-315">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-316">返回一个 <see langword="String" /> 值，它包含变量的数据类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-316">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-317">返回一个 <see langword="String" /> 值，它包含变量的数据类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-317">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-318">下表显示`String`返回的值`TypeName`的不同内容`VarName`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-318">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="1ef73-319">`VarName` 内容</span><span class="sxs-lookup"><span data-stu-id="1ef73-319">`VarName` contents</span></span>|<span data-ttu-id="1ef73-320">返回的字符串</span><span class="sxs-lookup"><span data-stu-id="1ef73-320">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="1ef73-321">16 位`True`或`False`值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-321">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="1ef73-322">"布尔"</span><span class="sxs-lookup"><span data-stu-id="1ef73-322">"Boolean"</span></span>|  
|<span data-ttu-id="1ef73-323">8 位二进制值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-323">8-bit binary value type</span></span>|<span data-ttu-id="1ef73-324">"字节"</span><span class="sxs-lookup"><span data-stu-id="1ef73-324">"Byte"</span></span>|  
|<span data-ttu-id="1ef73-325">16 位字符值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-325">16-bit character value type</span></span>|<span data-ttu-id="1ef73-326">"Char"</span><span class="sxs-lookup"><span data-stu-id="1ef73-326">"Char"</span></span>|  
|<span data-ttu-id="1ef73-327">64 位日期和时间值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-327">64-bit date and time value type</span></span>|<span data-ttu-id="1ef73-328">"日期"</span><span class="sxs-lookup"><span data-stu-id="1ef73-328">"Date"</span></span>|  
|<span data-ttu-id="1ef73-329">指示缺少或不存在数据的引用类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-329">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="1ef73-330">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="1ef73-330">"DBNull"</span></span>|  
|<span data-ttu-id="1ef73-331">128 位定点数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-331">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="1ef73-332">"小数"</span><span class="sxs-lookup"><span data-stu-id="1ef73-332">"Decimal"</span></span>|  
|<span data-ttu-id="1ef73-333">64 位浮点型数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-333">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="1ef73-334">"Double"</span><span class="sxs-lookup"><span data-stu-id="1ef73-334">"Double"</span></span>|  
|<span data-ttu-id="1ef73-335">32 位整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-335">32-bit integer value type</span></span>|<span data-ttu-id="1ef73-336">"整数"</span><span class="sxs-lookup"><span data-stu-id="1ef73-336">"Integer"</span></span>|  
|<span data-ttu-id="1ef73-337">指向非未专用化的对象的引用类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-337">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="1ef73-338">"Object"</span><span class="sxs-lookup"><span data-stu-id="1ef73-338">"Object"</span></span>|  
|<span data-ttu-id="1ef73-339">指向从类创建专用的对象的引用类型*objectclass*</span><span class="sxs-lookup"><span data-stu-id="1ef73-339">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="1ef73-340">"*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="1ef73-340">"*objectclass*"</span></span>|  
|<span data-ttu-id="1ef73-341">64 位整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-341">64-bit integer value type</span></span>|<span data-ttu-id="1ef73-342">"长度"</span><span class="sxs-lookup"><span data-stu-id="1ef73-342">"Long"</span></span>|  
|<span data-ttu-id="1ef73-343">当前分配给它的任何对象的引用类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-343">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="1ef73-344">"Nothing"</span><span class="sxs-lookup"><span data-stu-id="1ef73-344">"Nothing"</span></span>|  
|<span data-ttu-id="1ef73-345">8 位有符号的整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-345">8-bit signed integer value type</span></span>|<span data-ttu-id="1ef73-346">"SByte"</span><span class="sxs-lookup"><span data-stu-id="1ef73-346">"SByte"</span></span>|  
|<span data-ttu-id="1ef73-347">16 位整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-347">16-bit integer value type</span></span>|<span data-ttu-id="1ef73-348">"Short"</span><span class="sxs-lookup"><span data-stu-id="1ef73-348">"Short"</span></span>|  
|<span data-ttu-id="1ef73-349">32 位浮点型数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-349">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="1ef73-350">"单个"</span><span class="sxs-lookup"><span data-stu-id="1ef73-350">"Single"</span></span>|  
|<span data-ttu-id="1ef73-351">指向 16 位字符的字符串的引用类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-351">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="1ef73-352">"String"</span><span class="sxs-lookup"><span data-stu-id="1ef73-352">"String"</span></span>|  
|<span data-ttu-id="1ef73-353">32 位无符号的整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-353">32-bit unsigned integer value type</span></span>|<span data-ttu-id="1ef73-354">"UInteger"</span><span class="sxs-lookup"><span data-stu-id="1ef73-354">"UInteger"</span></span>|  
|<span data-ttu-id="1ef73-355">64 位无符号的整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-355">64-bit unsigned integer value type</span></span>|<span data-ttu-id="1ef73-356">"ULong"</span><span class="sxs-lookup"><span data-stu-id="1ef73-356">"ULong"</span></span>|  
|<span data-ttu-id="1ef73-357">16 位无符号的整数值类型</span><span class="sxs-lookup"><span data-stu-id="1ef73-357">16-bit unsigned integer value type</span></span>|<span data-ttu-id="1ef73-358">"UShort"</span><span class="sxs-lookup"><span data-stu-id="1ef73-358">"UShort"</span></span>|  
  
 <span data-ttu-id="1ef73-359">如果`VarName`是一个数组，则返回的字符串可以是任何一种使用追加的空括号前面的表中的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ef73-359">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="1ef73-360">例如，如果`VarName`指向一个整数，数组`TypeName`返回"Integer()"。</span><span class="sxs-lookup"><span data-stu-id="1ef73-360">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="1ef73-361">当`TypeName`返回引用类型的名称例如类，它将返回仅名称本身，而不是限定名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-361">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="1ef73-362">例如，如果`VarName`指向类的对象<xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>，`TypeName`返回"PaperSource"。</span><span class="sxs-lookup"><span data-stu-id="1ef73-362">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="1ef73-363">请注意，如果变量被声明为特定类类型的但没有向它分配、 对象`TypeName`返回"Nothing"。</span><span class="sxs-lookup"><span data-stu-id="1ef73-363">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-364">下面的示例使用`TypeName`函数以返回多个变量的数据类型信息。</span><span class="sxs-lookup"><span data-stu-id="1ef73-364">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="1ef73-365">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-365">Required.</span>
          </span>
          <span data-ttu-id="1ef73-366">任何数据类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-366">Array of any data type.</span>
          </span>
          <span data-ttu-id="1ef73-367">要在其中查找维度的最大可能下标的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-367">The array in which you want to find the highest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="1ef73-368">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-368">Optional.</span>
          </span>
          <span data-ttu-id="1ef73-369">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-369">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="1ef73-370">将返回其最大可用下标的维度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-370">The dimension for which the highest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="1ef73-371">对第一维使用 1，对第二维使用 2，依此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-371">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="1ef73-372">如果省略 <c>Rank</c>，则假定为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-372">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-373">返回数组的指示维度的最大可用下标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-373">Returns the highest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-374">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-374">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="1ef73-375">指定维度的下标可以包含的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-375">The highest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="1ef73-376">如果 <paramref name="Array" /> 只有一个元素，则 <see langword="UBound" /> 返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-376">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span>
          </span>
          <span data-ttu-id="1ef73-377">如果 <paramref name="Array" /> 没有元素，例如它是一个零长度字符串，则 <see langword="UBound" /> 返回 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-377">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-378">由于数组下标从 0 开始，一个维度的长度是比该维度的高可用的下标大 1。</span><span class="sxs-lookup"><span data-stu-id="1ef73-378">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="1ef73-379">对于具有以下维度的数组`UBound`下表中返回的值：</span><span class="sxs-lookup"><span data-stu-id="1ef73-379">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="1ef73-380">调用 UBound</span><span class="sxs-lookup"><span data-stu-id="1ef73-380">Call to UBound</span></span>|<span data-ttu-id="1ef73-381">返回值</span><span class="sxs-lookup"><span data-stu-id="1ef73-381">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="1ef73-382">100</span><span class="sxs-lookup"><span data-stu-id="1ef73-382">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="1ef73-383">5</span><span class="sxs-lookup"><span data-stu-id="1ef73-383">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="1ef73-384">4</span><span class="sxs-lookup"><span data-stu-id="1ef73-384">4</span></span>|  
  
 <span data-ttu-id="1ef73-385">你可以使用`UBound`来确定总中数组，但你的元素数必须调整它返回到一个事实，即下标从 0 开始的帐户的值。</span><span class="sxs-lookup"><span data-stu-id="1ef73-385">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="1ef73-386">下面的示例计算数组的总大小`a`在前面的示例：</span><span class="sxs-lookup"><span data-stu-id="1ef73-386">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="1ef73-387">值计算为`total`为 3030，即 101 * 6 * 5。</span><span class="sxs-lookup"><span data-stu-id="1ef73-387">The value calculated for `total` is 3030, which is 101 * 6 * 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-388">下面的示例使用`UBound`函数来确定最大可用的指定维数的数组下标。</span><span class="sxs-lookup"><span data-stu-id="1ef73-388">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ef73-389">
            <paramref name="Array" /> 为 <see langword="Nothing" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-389">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="1ef73-390">
            <paramref name="Rank" /> 小于 1，或 <paramref name="Rank" /> 大于 <paramref name="Array" /> 的级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-390">
              <paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="1ef73-391">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-391">Required.</span>
          </span>
          <span data-ttu-id="1ef73-392">
            <see langword="Object" /> 变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-392">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="1ef73-393">如果 <see langword="Option Strict" /> 为 <see langword="Off" />，则可以传递除结构之外的任何数据类型的变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-393">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-394">返回一个 <see langword="Integer" /> 值，它包含变量的数据类型分类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-394">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-395">返回一个 <see langword="Integer" /> 值，它包含变量的数据类型分类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-395">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-396">返回的整数值`VarType`为属于<xref:Microsoft.VisualBasic.VariantType>。</span><span class="sxs-lookup"><span data-stu-id="1ef73-396">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="1ef73-397">下表显示返回的值`VarType`的特殊情况的`VarName`。</span><span class="sxs-lookup"><span data-stu-id="1ef73-397">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="1ef73-398">表示的数据类型 `VarName`</span><span class="sxs-lookup"><span data-stu-id="1ef73-398">Data type represented by `VarName`</span></span>|<span data-ttu-id="1ef73-399">返回值 `VarType`</span><span class="sxs-lookup"><span data-stu-id="1ef73-399">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="1ef73-400">Nothing</span><span class="sxs-lookup"><span data-stu-id="1ef73-400">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="1ef73-401">枚举</span><span class="sxs-lookup"><span data-stu-id="1ef73-401">Enumeration</span></span>|<span data-ttu-id="1ef73-402">基础数据类型 (`SByte`， `Byte`， `Short`， `UShort`， `Integer`， `UInteger`， `Long`，或`ULong`)</span><span class="sxs-lookup"><span data-stu-id="1ef73-402">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="1ef73-403">数组</span><span class="sxs-lookup"><span data-stu-id="1ef73-403">Array</span></span>|<span data-ttu-id="1ef73-404">按位或数组元素类型和 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="1ef73-404">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="1ef73-405">数组的数组</span><span class="sxs-lookup"><span data-stu-id="1ef73-405">Array of arrays</span></span>|<span data-ttu-id="1ef73-406">按位或`VariantType.Object`和 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="1ef73-406">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="1ef73-407">结构 (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="1ef73-407">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="1ef73-408">未知</span><span class="sxs-lookup"><span data-stu-id="1ef73-408">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-409">下面的示例使用`VarType`函数以返回多个变量的数据类型分类信息。</span><span class="sxs-lookup"><span data-stu-id="1ef73-409">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName">
          <span data-ttu-id="1ef73-410">必须的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-410">Required.</span>
          </span>
          <span data-ttu-id="1ef73-411">
            <see langword="String" /> 变量，其中包含公共语言运行时所使用的类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-411">
              <see langword="String" /> variable containing a type name used by the common language runtime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ef73-412">返回一个 <see langword="String" /> 值，它包含变量的 Visual Basic 数据类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-412">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ef73-413">返回一个 <see langword="String" /> 值，它包含变量的 Visual Basic 数据类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ef73-413">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ef73-414">`VbTypeName` 返回与公共语言运行时类型名称对应的 Visual Basic 类型名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-414">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="1ef73-415">例如，如果`UrtName`包含"Int32"或"System.Int32"`VbTypeName`返回"整数"。</span><span class="sxs-lookup"><span data-stu-id="1ef73-415">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="1ef73-416">如果`VbTypeName`无法识别的值`UrtName`，它将返回`Nothing`(不是字符串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="1ef73-416">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="1ef73-417">中的类型名称`UrtName`可以从各种源，例如从获取<xref:System.Reflection.MemberInfo.Name%2A>中的属性<xref:System.Reflection.MemberInfo>数组<xref:System.Type>类。</span><span class="sxs-lookup"><span data-stu-id="1ef73-417">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ef73-418">下面的示例使用`VbTypeName`函数返回的多个变量的数据类型名称。</span><span class="sxs-lookup"><span data-stu-id="1ef73-418">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>