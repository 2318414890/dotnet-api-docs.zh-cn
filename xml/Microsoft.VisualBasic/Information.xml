<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Information.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c57dd6007d6c60bd212b9cf55d27c4a45966b12e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c57dd6007d6c60bd212b9cf55d27c4a45966b12e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Information">
          <source>The <ph id="ph1">&lt;see langword="Information" /&gt;</ph> module contains the procedures used to return, test for, or verify information.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Information" /&gt;</ph> 模块包含用于返回、测试或验证信息的过程。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Information">
          <source>This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</source>
          <target state="translated">此模块支持的 Visual Basic 语言关键字和运行时库成员，它们提供的错误信息，验证数据、 确定数组界限，并检索数据类型和颜色信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Information">
          <source>The following example uses the <ph id="ph1">`VbTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`VbTypeName`</ph>函数返回的多个变量的数据类型名称。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">返回指示上一条执行语句的行号的整数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">返回指示上一条执行语句的行号的整数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Read-only.</source>
          <target state="translated">只读。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">如果 Visual Basic 遇到无行号，则返回 0。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">此示例使用<ph id="ph1">`Erl`</ph>属性以指示的行号。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Contains information about run-time errors.</source>
          <target state="translated">包含运行时错误的相关信息。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Contains information about run-time errors.</source>
          <target state="translated">包含运行时错误的相关信息。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The properties of the <ph id="ph1">`Err`</ph> object are set by the generator of an error—Visual Basic, an object, or the programmer.</source>
          <target state="translated">属性<ph id="ph1">`Err`</ph>对象设置的错误生成器-Visual Basic、 对象或程序员。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>When a run-time error occurs, the properties of the <ph id="ph1">`Err`</ph> object are filled with information that uniquely identifies the error and that you can use to handle the error.</source>
          <target state="translated">运行时错误发生时，属性<ph id="ph1">`Err`</ph>对象的唯一标识错误的信息填充，并可用于处理错误。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>To generate a run-time error in your code, use the <ph id="ph1">`Raise`</ph> method.</source>
          <target state="translated">若要在代码中生成运行时错误，请使用<ph id="ph1">`Raise`</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The <ph id="ph1">`Err`</ph> object's properties are reset to zero or zero-length strings ("") after an <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, or <ph id="ph5">`Resume Next`</ph> statement within an error-handling routine.</source>
          <target state="translated"><ph id="ph1">`Err`</ph>对象的属性被重置为零个或零长度字符串 ("") 后<ph id="ph2">`Exit Sub`</ph>， <ph id="ph3">`Exit Function`</ph>， <ph id="ph4">`Exit Property`</ph>，或<ph id="ph5">`Resume Next`</ph>错误处理例程中的语句。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Using any form of the <ph id="ph1">`Resume`</ph> statement outside of an error-handling routine will not reset the <ph id="ph2">`Err`</ph> object's properties.</source>
          <target state="translated">使用任何形式的<ph id="ph1">`Resume`</ph>语句在错误处理例程之外不会重置<ph id="ph2">`Err`</ph>对象的属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>You can use the <ph id="ph1">`Clear`</ph> method to explicitly reset <ph id="ph2">`Err`</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">`Clear`</ph>方法来显式重置<ph id="ph2">`Err`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Use the <ph id="ph1">`Raise`</ph> method rather than the <ph id="ph2">`Error`</ph> statement to generate run-time errors for system errors and class modules.</source>
          <target state="translated">使用<ph id="ph1">`Raise`</ph>方法而不是<ph id="ph2">`Error`</ph>语句以生成运行时错误的系统错误，并类模块。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Your decision about whether to use the <ph id="ph1">`Raise`</ph> method in other code depends on the richness of the information you want to return.</source>
          <target state="translated">你决定是否使用<ph id="ph1">`Raise`</ph>中其他代码的方法取决于你想要返回的信息的丰富功能。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The <ph id="ph1">`Err`</ph> object is an intrinsic object with global scope.</source>
          <target state="translated"><ph id="ph1">`Err`</ph>对象是具有全局作用域的内部对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Therefore, you do not need to create an instance of it in your code.</source>
          <target state="translated">因此，不需要在你的代码中创建它的实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">此示例使用的属性<ph id="ph1">`Err`</ph>构造错误消息对话框中的对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Notice that if you use the <ph id="ph1">`Clear`</ph> method first, when you generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">请注意，如果你使用<ph id="ph1">`Clear`</ph>方法首先，当你生成使用 Visual Basic 错误<ph id="ph2">`Raise`</ph>方法，Visual Basic 的默认值成为的属性<ph id="ph3">`Err`</ph>对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 变量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a variable points to an array.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示变量是否指向数组。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a variable points to an array.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示变量是否指向数组。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">`IsArray`</ph> returns <ph id="ph2">`True`</ph> if the variable points to an array; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph> 返回<ph id="ph2">`True`</ph>如果变量指向数组中; 否则，它将返回<ph id="ph3">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">`IsArray`</ph> is especially useful with objects that might contain arrays.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph> 对于具有可能包含数组的对象尤其有用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>This example uses the <ph id="ph1">`IsArray`</ph> function to check if several variables refer to an array.</source>
          <target state="translated">此示例使用<ph id="ph1">`IsArray`</ph>函数来检查多个变量是否引用数组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression represents a valid <ph id="ph2">&lt;see langword="Date" /&gt;</ph> value.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，该值指示表达式是否表示一个有效的 <ph id="ph2">&lt;see langword="Date" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression represents a valid <ph id="ph2">&lt;see langword="Date" /&gt;</ph> value.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，该值指示表达式是否表示一个有效的 <ph id="ph2">&lt;see langword="Date" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is of the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> data type or can be converted to it; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph> 返回<ph id="ph2">`True`</ph>如果<ph id="ph3">`Expression`</ph>的<ph id="ph4">&lt;xref:System.DateTime&gt;</ph>数据类型或可被转换为它; 否则为它将返回<ph id="ph5">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> data type holds both a date value and a time value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DateTime&gt;</ph>数据类型支持的日期值和时间值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a valid date, a valid time, or a valid date and time.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph> 返回<ph id="ph2">`True`</ph>如果<ph id="ph3">`Expression`</ph>表示有效的日期、 有效的时间，或有效的日期和时间。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsDate`</ph> function to determine if several variables represent valid <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`IsDate`</ph>函数来确定是否多个变量表示有效<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>In the preceding example, <ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> for the first four calls and <ph id="ph3">`False`</ph> for the last call.</source>
          <target state="translated">在前面的示例中，<ph id="ph1">`IsDate`</ph>返回<ph id="ph2">`True`</ph>前四个调用和<ph id="ph3">`False`</ph>的最后一个调用。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to the <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> class.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式的计算结果是否为 <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to the <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> class.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式的计算结果是否为 <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`IsDBNull`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> evaluates to the <ph id="ph4">&lt;xref:System.DBNull&gt;</ph> type; otherwise, <ph id="ph5">`IsDBNull`</ph> returns <ph id="ph6">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDBNull`</ph> 返回<ph id="ph2">`True`</ph>如果的数据类型<ph id="ph3">`Expression`</ph>计算结果为<ph id="ph4">&lt;xref:System.DBNull&gt;</ph>类型; 否则为<ph id="ph5">`IsDBNull`</ph>返回<ph id="ph6">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.DBNull?displayProperty=nameWithType&gt;</ph> value indicates that the <ph id="ph2">`Object`</ph> represents missing or nonexistent data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DBNull?displayProperty=nameWithType&gt;</ph>值，指示<ph id="ph2">`Object`</ph>表示缺失或不存在的数据。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`DBNull`</ph> is not the same as <ph id="ph2">`Nothing`</ph>, which indicates that a variable has not yet been initialized.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph> 不能与相同<ph id="ph2">`Nothing`</ph>，指示尚未初始化变量。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`DBNull`</ph> is also not the same as a zero-length string (<ph id="ph2">`""`</ph>), which is sometimes referred to as a null string.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph> 也不是零长度字符串相同 (<ph id="ph2">`""`</ph>)，这有时称为 null 字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>This example uses the <ph id="ph1">`IsDBNull`</ph> function to determine if a variable evaluates to <ph id="ph2">`DBNull`</ph>.</source>
          <target state="translated">此示例使用<ph id="ph1">`IsDBNull`</ph>函数来确定是否变量的计算结果为<ph id="ph2">`DBNull`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression is an exception type.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否是异常类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression is an exception type.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否是异常类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source><ph id="ph1">`IsError`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an <ph id="ph3">`Object`</ph> variable that derives from the <ph id="ph4">&lt;xref:System.Exception&gt;</ph> class in the <ph id="ph5">&lt;xref:System&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">`IsError`</ph> 返回<ph id="ph2">`True`</ph>如果表达式表示<ph id="ph3">`Object`</ph>派生自的变量<ph id="ph4">&lt;xref:System.Exception&gt;</ph>类<ph id="ph5">&lt;xref:System&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>An exception that derives from <ph id="ph1">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph> can be caught with the <ph id="ph2">`Try...Catch...Finally`</ph> statements.</source>
          <target state="translated">派生自的异常<ph id="ph1">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>可捕获与<ph id="ph2">`Try...Catch...Finally`</ph>语句。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsError`</ph> function to check if an expression represents a system exception.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`IsError`</ph>函数来检查表达式是否表示系统异常。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否未被指派对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否未被指派对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">`IsNothing`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph> 返回<ph id="ph2">`True`</ph>如果表达式表示的对象变量的当前未包含任何对象分配给它; 否则为它将返回<ph id="ph3">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">`IsNothing`</ph> is intended to work on reference types.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph> 旨在作用于引用类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>A value type cannot hold a value of  and reverts to its default value if you assign <ph id="ph1">`Nothing`</ph> to it.</source>
          <target state="translated">值类型不能包含的一个值，和将恢复为其默认值，如果将分配<ph id="ph1">`Nothing`</ph>到它。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>If you supply a value type in <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> always returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated">如果提供中的值类型<ph id="ph1">`Expression`</ph>，<ph id="ph2">`IsNothing`</ph>始终返回<ph id="ph3">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsNothing`</ph> function to determine if an object variable is associated with any object instance.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`IsNothing`</ph>函数来确定对象变量是否与任何对象实例关联。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式的计算结果是否为数字。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式的计算结果是否为数字。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 返回<ph id="ph2">`True`</ph>如果的数据类型<ph id="ph3">`Expression`</ph>是<ph id="ph4">`Boolean`</ph>， <ph id="ph5">`Byte`</ph>， <ph id="ph6">`Decimal`</ph>， <ph id="ph7">`Double`</ph>， <ph id="ph8">`Integer`</ph>， <ph id="ph9">`Long`</ph>， <ph id="ph10">`SByte`</ph>， <ph id="ph11">`Short`</ph>， <ph id="ph12">`Single`</ph>， <ph id="ph13">`UInteger`</ph>，<ph id="ph14">`ULong`</ph>，或<ph id="ph15">`UShort`</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>It also returns <ph id="ph1">`True`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that can be successfully converted to a number.</source>
          <target state="translated">它还返回<ph id="ph1">`True`</ph>如果<ph id="ph2">`Expression`</ph>是<ph id="ph3">`Char`</ph>， <ph id="ph4">`String`</ph>，或<ph id="ph5">`Object`</ph>可以成功转换为数字。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`Expression`</ph> can contain non-numeric characters.</source>
          <target state="translated"><ph id="ph1">`Expression`</ph> 可以包含非数字字符。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is a string that contains a valid hexadecimal or octal number.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 返回<ph id="ph2">`True`</ph>如果<ph id="ph3">`Expression`</ph>是包含一个有效的十六进制或八进制数字的字符串。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> also returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> contains a valid numeric expression that begins with a + or - character or contains commas.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 也会返回<ph id="ph2">`True`</ph>如果<ph id="ph3">`Expression`</ph>包含有效的数值表达式开头 +、-字符或包含逗号。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`False`</ph> if <ph id="ph3">`Expression`</ph> is of data type <ph id="ph4">`Date`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 返回<ph id="ph2">`False`</ph>如果<ph id="ph3">`Expression`</ph>的数据类型<ph id="ph4">`Date`</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>It returns <ph id="ph1">`False`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that cannot be successfully converted to a number.</source>
          <target state="translated">它将返回<ph id="ph1">`False`</ph>如果<ph id="ph2">`Expression`</ph>是<ph id="ph3">`Char`</ph>， <ph id="ph4">`String`</ph>，或<ph id="ph5">`Object`</ph>无法成功转换为数字。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsNumeric`</ph> function to determine if the contents of a variable can be evaluated as a number.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`IsNumeric`</ph>函数来确定是否可以作为数字计算变量的内容。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 表达式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否为引用类型。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，指示表达式是否为引用类型。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source><ph id="ph1">`IsReference`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a reference type, such as a class instance, a <ph id="ph4">`String`</ph> type, or an array of any type; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph> 返回<ph id="ph2">`True`</ph>如果<ph id="ph3">`Expression`</ph>表示引用类型，如类实例，<ph id="ph4">`String`</ph>类型或数组的任何类型; 否则，它将返回<ph id="ph5">`False`</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>A reference type contains a pointer to data stored elsewhere in memory.</source>
          <target state="translated">引用类型包含在其他位置存储在内存中数据的指针。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>A value type contains its own data.</source>
          <target state="translated">值类型包含其自己的数据。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>This example uses the <ph id="ph1">`IsReference`</ph> function to check if several variables refer to reference types.</source>
          <target state="translated">此示例使用<ph id="ph1">`IsReference`</ph>函数来检查是否多个变量，请参阅与引用类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>In the preceding example, the first three calls to <ph id="ph1">`IsReference`</ph> return <ph id="ph2">`True`</ph>.</source>
          <target state="translated">在前面的示例中前, 三个调用<ph id="ph1">`IsReference`</ph>返回<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>The last call returns <ph id="ph1">`False`</ph>, because <ph id="ph2">`Integer`</ph> is a value type, not a reference type.</source>
          <target state="translated">最后一次调用返回<ph id="ph1">`False`</ph>，这是因为<ph id="ph2">`Integer`</ph>是值类型，而不是引用类型。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Array of any data type.</source>
          <target state="translated">任何数据类型的数组。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The array in which you want to find the lowest possible subscript of a dimension.</source>
          <target state="translated">希望在其中找到维度的最小可能下标的数组。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The dimension for which the lowest possible subscript is to be returned.</source>
          <target state="translated">将返回其最小可用下标的维度。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">对第一维使用 1，对第二维使用 2，依此类推。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept> is omitted, 1 is assumed.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept>，则假定为 1。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Returns the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">返回数组的指示维度的最小可用下标。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The lowest value the subscript for the specified dimension can contain.</source>
          <target state="translated">指定维度的下标可以包含的最小值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="LBound" /&gt;</ph> always returns 0 as long as <ph id="ph2">&lt;paramref name="Array" /&gt;</ph> has been initialized, even if it has no elements, for example if it is a zero-length string.</source>
          <target state="translated">只要 <ph id="ph2">&lt;paramref name="Array" /&gt;</ph> 已初始化，即使其中没有元素（例如，它是一个零长度字符串），<ph id="ph1">&lt;see langword="LBound" /&gt;</ph> 也始终返回 0。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>, <ph id="ph3">&lt;see langword="LBound" /&gt;</ph> throws an <ph id="ph4">&lt;see cref="T:System.ArgumentNullException" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>，则 <ph id="ph3">&lt;see langword="LBound" /&gt;</ph> 将引发 <ph id="ph4">&lt;see cref="T:System.ArgumentNullException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</source>
          <target state="translated">由于数组下标从 0 开始，因此每一维度最小可用的下标总是为 0。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>For an array with the following dimensions, <ph id="ph1">`LBound`</ph> returns the values in the following table:</source>
          <target state="translated">对于具有以下维度的数组<ph id="ph1">`LBound`</ph>下表中返回的值：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Call to LBound</source>
          <target state="translated">调用 LBound</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The following example uses the <ph id="ph1">`LBound`</ph> function to determine the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`LBound`</ph>函数来确定最小可用的指定维数的数组下标。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> less than 1, or <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> is greater than the rank of <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> 小于 1，或 <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> 大于 <ph id="ph3">&lt;paramref name="Array" /&gt;</ph> 的级别。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>A whole number in the range 0–15.</source>
          <target state="translated">0–15 范围内的整数。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示与指定的颜色编号对应的 RGB 颜色代码。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</source>
          <target state="translated">从最低有效字节开始，返回的值指定用于在 Visual Basic 语言由使用的 RGB 系统中设置适当的颜色的红色、 绿色和蓝色值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>The <ph id="ph1">`Color`</ph> argument has these settings.</source>
          <target state="translated"><ph id="ph1">`Color`</ph>自变量具有这些设置。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Number</source>
          <target state="translated">数字</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Color</source>
          <target state="translated">颜色</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Number</source>
          <target state="translated">数字</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Color</source>
          <target state="translated">颜色</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Black</source>
          <target state="translated">黑色</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Gray</source>
          <target state="translated">灰色</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Blue</source>
          <target state="translated">蓝色</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light blue</source>
          <target state="translated">浅蓝色</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Green</source>
          <target state="translated">绿色</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light green</source>
          <target state="translated">浅绿色</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Cyan</source>
          <target state="translated">青色</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light cyan</source>
          <target state="translated">浅蓝</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Red</source>
          <target state="translated">红色</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>12</source>
          <target state="translated">12</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light red</source>
          <target state="translated">浅红色</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Magenta</source>
          <target state="translated">洋红色</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light magenta</source>
          <target state="translated">浅色洋红色</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Yellow</source>
          <target state="translated">黄色</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light yellow</source>
          <target state="translated">浅黄色</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>White</source>
          <target state="translated">空白</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>15</source>
          <target state="translated">15</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Bright white</source>
          <target state="translated">亮白色</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>This example uses the <ph id="ph1">`QBColor`</ph> function to change to the color indicated by <ph id="ph2">`colorInteger`</ph>.</source>
          <target state="translated">此示例使用<ph id="ph1">`QBColor`</ph>函数来更改颜色由<ph id="ph2">`colorInteger`</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source><ph id="ph1">`QBColor`</ph> accepts integer values between 0 and 15.</source>
          <target state="translated"><ph id="ph1">`QBColor`</ph> 接受 0 到 15 之间的整数值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Color" /&gt;</ph> is outside of range 0 to 15, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Color" /&gt;</ph> 不在 0 到 15（均含）范围之内。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</source>
          <target state="translated">0–255 范围内（均含）的 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值。表示颜色中红色分量的强度。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</source>
          <target state="translated">0–255 范围内（均含）的 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值。表示颜色中绿色分量的强度。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</source>
          <target state="translated">0–255 范围内（均含）的 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值。表示颜色中蓝色分量的强度。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示由一组红色、绿色和蓝色分量形成的 RGB 颜色值。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</source>
          <target state="translated">应用程序方法和属性接受颜色规范预期规范是一个数字，表示 RGB 颜色值。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</source>
          <target state="translated">RGB 颜色值指定相对的红色、 绿色和蓝色的导致要显示的特定颜色强度。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>If the value for any argument to <ph id="ph1">`RGB`</ph> is greater than 255, 255 is used.</source>
          <target state="translated">如果任何参数的值<ph id="ph1">`RGB`</ph>大于 255，255 使用。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>The following table lists some standard colors and the red, green, and blue values they include.</source>
          <target state="translated">下表列出一些标准颜色以及它们包括在红色、 绿色和蓝色值。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Color</source>
          <target state="translated">颜色</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Red value</source>
          <target state="translated">红色的值</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Green value</source>
          <target state="translated">绿色值</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Blue value</source>
          <target state="translated">蓝色值</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Black</source>
          <target state="translated">黑色</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Blue</source>
          <target state="translated">蓝色</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Green</source>
          <target state="translated">绿色</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Cyan</source>
          <target state="translated">青色</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Red</source>
          <target state="translated">红色</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Magenta</source>
          <target state="translated">洋红色</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Yellow</source>
          <target state="translated">黄色</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>White</source>
          <target state="translated">空白</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>This example shows how the <ph id="ph1">`RGB`</ph> function is used to return a whole number representing an <ph id="ph2">`RGB`</ph> color value.</source>
          <target state="translated">此示例演示如何<ph id="ph1">`RGB`</ph>函数用于返回一个整数，表示<ph id="ph2">`RGB`</ph>颜色值。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Green" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Blue" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="Red" /&gt;</ph> is outside of range 0 to 255, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Green" /&gt;</ph>、<ph id="ph2">&lt;paramref name="Blue" /&gt;</ph>，或 <ph id="ph3">&lt;paramref name="Red" /&gt;</ph> 不在 0 到 255（含 0 和 255）范围之内。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> variable containing a Visual Basic type name.</source>
          <target state="translated">一个包含 Visual Basic 类型名称的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 变量。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the system data type name of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的系统数据类型名称。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the system data type name of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的系统数据类型名称。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source><ph id="ph1">`SystemTypeName`</ph> returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</source>
          <target state="translated"><ph id="ph1">`SystemTypeName`</ph> 返回的完全限定公共语言运行时 (CLR) 类型名称对应于 Visual Basic 类型名称。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>For example, if <ph id="ph1">`VbName`</ph> contains "Date", <ph id="ph2">`SystemTypeName`</ph> returns "System.DateTime".</source>
          <target state="translated">例如，如果<ph id="ph1">`VbName`</ph>包含"日期"<ph id="ph2">`SystemTypeName`</ph>返回"System.DateTime"。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>If <ph id="ph1">`SystemTypeName`</ph> does not recognize the value of <ph id="ph2">`VbName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">如果<ph id="ph1">`SystemTypeName`</ph>无法识别的值<ph id="ph2">`VbName`</ph>，它将返回<ph id="ph3">`Nothing`</ph>(不是字符串"Nothing")。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>The following example uses the <ph id="ph1">`SystemTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`SystemTypeName`</ph>函数返回的多个变量的数据类型名称。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 变量。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>If <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> is <ph id="ph2">&lt;see langword="Off" /&gt;</ph>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="Off" /&gt;</ph>，则可以传递除结构之外的任何数据类型的变量。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing data-type information about a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的数据类型信息。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing data-type information about a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的数据类型信息。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>The following table shows the <ph id="ph1">`String`</ph> values returned by <ph id="ph2">`TypeName`</ph> for different contents of <ph id="ph3">`VarName`</ph>.</source>
          <target state="translated">下表显示<ph id="ph1">`String`</ph>返回的值<ph id="ph2">`TypeName`</ph>的不同内容<ph id="ph3">`VarName`</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source><ph id="ph1">`VarName`</ph> contents</source>
          <target state="translated"><ph id="ph1">`VarName`</ph> 内容</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>String returned</source>
          <target state="translated">返回的字符串</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit <ph id="ph1">`True`</ph> or <ph id="ph2">`False`</ph> value type</source>
          <target state="translated">16 位<ph id="ph1">`True`</ph>或<ph id="ph2">`False`</ph>值类型</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Boolean"</source>
          <target state="translated">"布尔"</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>8-bit binary value type</source>
          <target state="translated">8 位二进制值类型</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Byte"</source>
          <target state="translated">"字节"</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit character value type</source>
          <target state="translated">16 位字符值类型</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Char"</source>
          <target state="translated">"Char"</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit date and time value type</source>
          <target state="translated">64 位日期和时间值类型</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Date"</source>
          <target state="translated">"日期"</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type indicating missing or nonexistent data</source>
          <target state="translated">指示缺少或不存在数据的引用类型</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"DBNull"</source>
          <target state="translated">"DBNull"</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>128-bit fixed-point numeric value type</source>
          <target state="translated">128 位定点数值类型</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Decimal"</source>
          <target state="translated">"Decimal"</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit floating-point numeric value type</source>
          <target state="translated">64 位浮点型数值类型</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Double"</source>
          <target state="translated">"Double"</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit integer value type</source>
          <target state="translated">32 位整数值类型</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Integer"</source>
          <target state="translated">"Integer"</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to an unspecialized object</source>
          <target state="translated">指向非未专用化的对象的引用类型</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Object"</source>
          <target state="translated">"Object"</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to a specialized object created from class <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept></source>
          <target state="translated">指向从类创建专用的对象的引用类型<bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"<bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>"</source>
          <target state="translated">"<bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>"</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit integer value type</source>
          <target state="translated">64 位整数值类型</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Long"</source>
          <target state="translated">"长度"</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type with no object currently assigned to it</source>
          <target state="translated">当前分配给它的任何对象的引用类型</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Nothing"</source>
          <target state="translated">"Nothing"</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>8-bit signed integer value type</source>
          <target state="translated">8 位有符号的整数值类型</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"SByte"</source>
          <target state="translated">"SByte"</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit integer value type</source>
          <target state="translated">16 位整数值类型</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Short"</source>
          <target state="translated">"Short"</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit floating-point numeric value type</source>
          <target state="translated">32 位浮点型数值类型</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Single"</source>
          <target state="translated">"单个"</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to a string of 16-bit characters</source>
          <target state="translated">指向 16 位字符的字符串的引用类型</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"String"</source>
          <target state="translated">"String"</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit unsigned integer value type</source>
          <target state="translated">32 位无符号的整数值类型</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"UInteger"</source>
          <target state="translated">"UInteger"</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit unsigned integer value type</source>
          <target state="translated">64 位无符号的整数值类型</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"ULong"</source>
          <target state="translated">"ULong"</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit unsigned integer value type</source>
          <target state="translated">16 位无符号的整数值类型</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"UShort"</source>
          <target state="translated">"UShort"</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>If <ph id="ph1">`VarName`</ph> is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</source>
          <target state="translated">如果<ph id="ph1">`VarName`</ph>是一个数组，则返回的字符串可以是任何一种使用追加的空括号前面的表中的字符串。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an array of integers, <ph id="ph2">`TypeName`</ph> returns "Integer()".</source>
          <target state="translated">例如，如果<ph id="ph1">`VarName`</ph>指向一个整数，数组<ph id="ph2">`TypeName`</ph>返回"Integer()"。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>When <ph id="ph1">`TypeName`</ph> returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</source>
          <target state="translated">当<ph id="ph1">`TypeName`</ph>返回引用类型的名称例如类，它将返回仅名称本身，而不是限定名称。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an object of class <ph id="ph2">&lt;xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">`TypeName`</ph> returns "PaperSource".</source>
          <target state="translated">例如，如果<ph id="ph1">`VarName`</ph>指向类的对象<ph id="ph2">&lt;xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType&gt;</ph>，<ph id="ph3">`TypeName`</ph>返回"PaperSource"。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, <ph id="ph1">`TypeName`</ph> returns "Nothing".</source>
          <target state="translated">请注意，如果变量被声明为特定类类型的但没有向它分配、 对象<ph id="ph1">`TypeName`</ph>返回"Nothing"。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>The following example uses the <ph id="ph1">`TypeName`</ph> function to return data type information about several variables.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`TypeName`</ph>函数以返回多个变量的数据类型信息。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Array of any data type.</source>
          <target state="translated">任何数据类型的数组。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The array in which you want to find the highest possible subscript of a dimension.</source>
          <target state="translated">要在其中查找维度的最大可能下标的数组。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The dimension for which the highest possible subscript is to be returned.</source>
          <target state="translated">将返回其最大可用下标的维度。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">对第一维使用 1，对第二维使用 2，依此类推。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept> is omitted, 1 is assumed.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept>，则假定为 1。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Returns the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">返回数组的指示维度的最大可用下标。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The highest value the subscript for the specified dimension can contain.</source>
          <target state="translated">指定维度的下标可以包含的最大值。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> has only one element, <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> returns 0.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> 只有一个元素，则 <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> 返回 0。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> has no elements, for example if it is a zero-length string, <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> returns -1.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> 没有元素，例如它是一个零长度字符串，则 <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> 返回 -1。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</source>
          <target state="translated">由于数组下标从 0 开始，一个维度的长度是比该维度的高可用的下标大 1。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>For an array with the following dimensions, <ph id="ph1">`UBound`</ph> returns the values in the following table:</source>
          <target state="translated">对于具有以下维度的数组<ph id="ph1">`UBound`</ph>下表中返回的值：</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Call to UBound</source>
          <target state="translated">调用 UBound</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>100</source>
          <target state="translated">100</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>You can use <ph id="ph1">`UBound`</ph> to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</source>
          <target state="translated">你可以使用<ph id="ph1">`UBound`</ph>来确定总中数组，但你的元素数必须调整它返回到一个事实，即下标从 0 开始的帐户的值。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The following example calculates the total size of the array <ph id="ph1">`a`</ph> in the preceding example:</source>
          <target state="translated">下面的示例计算数组的总大小<ph id="ph1">`a`</ph>在前面的示例：</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The value calculated for <ph id="ph1">`total`</ph> is 3030, which is 101 * 6 * 5.</source>
          <target state="translated">值计算为<ph id="ph1">`total`</ph>为 3030，即 101 * 6 * 5。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The following example uses the <ph id="ph1">`UBound`</ph> function to determine the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`UBound`</ph>函数来确定最大可用的指定维数的数组下标。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> is less than 1, or <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> is greater than the rank of <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> 小于 1，或 <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> 大于 <ph id="ph3">&lt;paramref name="Array" /&gt;</ph> 的级别。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 变量。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>If <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> is <ph id="ph2">&lt;see langword="Off" /&gt;</ph>, you can pass a variable of any data type except a structure.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="Off" /&gt;</ph>，则可以传递除结构之外的任何数据类型的变量。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value containing the data type classification of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，它包含变量的数据类型分类。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value containing the data type classification of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，它包含变量的数据类型分类。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The integer value returned by <ph id="ph1">`VarType`</ph> is a member of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.VariantType&gt;</ph>.</source>
          <target state="translated">返回的整数值<ph id="ph1">`VarType`</ph>为属于<ph id="ph2">&lt;xref:Microsoft.VisualBasic.VariantType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The following table shows the values returned by <ph id="ph1">`VarType`</ph> for special cases of <ph id="ph2">`VarName`</ph>.</source>
          <target state="translated">下表显示返回的值<ph id="ph1">`VarType`</ph>的特殊情况的<ph id="ph2">`VarName`</ph>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Data type represented by <ph id="ph1">`VarName`</ph></source>
          <target state="translated">表示的数据类型 <ph id="ph1">`VarName`</ph></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Value returned by <ph id="ph1">`VarType`</ph></source>
          <target state="translated">返回值 <ph id="ph1">`VarType`</ph></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source><bpt id="p1">[</bpt>Nothing<ept id="p1">](~/docs/visual-basic/language-reference/nothing.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Nothing<ept id="p1">](~/docs/visual-basic/language-reference/nothing.md)</ept></target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Enumeration</source>
          <target state="translated">枚举</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Underlying data type (<ph id="ph1">`SByte`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Short`</ph>, <ph id="ph4">`UShort`</ph>, <ph id="ph5">`Integer`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`Long`</ph>, or <ph id="ph8">`ULong`</ph>)</source>
          <target state="translated">基础数据类型 (<ph id="ph1">`SByte`</ph>， <ph id="ph2">`Byte`</ph>， <ph id="ph3">`Short`</ph>， <ph id="ph4">`UShort`</ph>， <ph id="ph5">`Integer`</ph>， <ph id="ph6">`UInteger`</ph>， <ph id="ph7">`Long`</ph>，或<ph id="ph8">`ULong`</ph>)</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Array</source>
          <target state="translated">数组</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Bitwise OR of array element type and <ph id="ph1">`VariantType.Array`</ph></source>
          <target state="translated">按位或数组元素类型和 <ph id="ph1">`VariantType.Array`</ph></target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Array of arrays</source>
          <target state="translated">数组的数组</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Bitwise OR of <ph id="ph1">`VariantType.Object`</ph> and <ph id="ph2">`VariantType.Array`</ph></source>
          <target state="translated">按位或<ph id="ph1">`VariantType.Object`</ph>和 <ph id="ph2">`VariantType.Array`</ph></target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Structure (<ph id="ph1">&lt;xref:System.ValueType?displayProperty=nameWithType&gt;</ph>)</source>
          <target state="translated">结构 (<ph id="ph1">&lt;xref:System.ValueType?displayProperty=nameWithType&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Unknown</source>
          <target state="translated">未知</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The following example uses the <ph id="ph1">`VarType`</ph> function to return data type classification information about several variables.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`VarType`</ph>函数以返回多个变量的数据类型分类信息。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Required.</source>
          <target state="translated">必须的。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> variable containing a type name used by the common language runtime.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 变量，其中包含公共语言运行时所使用的类型名称。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的 Visual Basic 数据类型名称。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 值，它包含变量的 Visual Basic 数据类型名称。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source><ph id="ph1">`VbTypeName`</ph> returns the Visual Basic type name corresponding to the common language runtime type name.</source>
          <target state="translated"><ph id="ph1">`VbTypeName`</ph> 返回与公共语言运行时类型名称对应的 Visual Basic 类型名称。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>For example, if <ph id="ph1">`UrtName`</ph> contains "Int32" or "System.Int32", <ph id="ph2">`VbTypeName`</ph> returns "Integer".</source>
          <target state="translated">例如，如果<ph id="ph1">`UrtName`</ph>包含"Int32"或"System.Int32"<ph id="ph2">`VbTypeName`</ph>返回"整数"。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>If <ph id="ph1">`VbTypeName`</ph> does not recognize the value of <ph id="ph2">`UrtName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">如果<ph id="ph1">`VbTypeName`</ph>无法识别的值<ph id="ph2">`UrtName`</ph>，它将返回<ph id="ph3">`Nothing`</ph>(不是字符串"Nothing")。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>The type name in <ph id="ph1">`UrtName`</ph> can be obtained from various sources, for example from the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property in the <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> array of the <ph id="ph4">&lt;xref:System.Type&gt;</ph> class.</source>
          <target state="translated">中的类型名称<ph id="ph1">`UrtName`</ph>可以从各种源，例如从获取<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph>中的属性<ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>数组<ph id="ph4">&lt;xref:System.Type&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>The following example uses the <ph id="ph1">`VbTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`VbTypeName`</ph>函数返回的多个变量的数据类型名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>