<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5d728-101"><see langword="Constants" /> 模块包含杂项常数。</span><span class="sxs-lookup"><span data-stu-id="5d728-101">The <see langword="Constants" /> module contains miscellaneous constants.</span></span> <span data-ttu-id="5d728-102">这些常量可以在代码中的任何地方使用。</span><span class="sxs-lookup"><span data-stu-id="5d728-102">These constants can be used anywhere in your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-103">此模块支持许多 Visual Basic 枚举的成员所对应的 Visual Basic 语言常量：</span><span class="sxs-lookup"><span data-stu-id="5d728-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-104">指示在某个消息框中单击了 <see langword="Abort" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-104">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-105">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-105">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-106">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-106">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-107">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-107">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-108">指示在调用 <see langword="Abort" /> 函数时，将显示 <see langword="Retry" />、<see langword="Ignore" /> 和 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-108">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-109">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-109">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-110">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-110">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-111">指示在调用 <see langword="MsgBox" /> 函数时，将消息框显示为模式对话框。</span><span class="sxs-lookup"><span data-stu-id="5d728-111">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-112">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-112">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-113">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-113">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-114">指示自最后一次针对文件访问函数执行备份操作以来该文件已发生更改。</span><span class="sxs-lookup"><span data-stu-id="5d728-114">Indicates that the file has changed since the last backup operation for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-115">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-115">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-116">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-116">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-117">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-117">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-118">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-118">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-119">指示变量对象的类型为数组。</span><span class="sxs-lookup"><span data-stu-id="5d728-119">Indicates that the type of a variant object is an array.</span></span> <span data-ttu-id="5d728-120">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-120">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-121">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-121">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-122">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-122">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-123">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-123">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-124">表示用于打印和显示功能的退格符。</span><span class="sxs-lookup"><span data-stu-id="5d728-124">Represents a backspace character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-125">指定在调用比较函数时应执行二进制比较。</span><span class="sxs-lookup"><span data-stu-id="5d728-125">Specifies that a binary comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-126">比较函数调用时，你可以使用<xref:Microsoft.VisualBasic.CompareMethod>代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-126">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-127">`Compare`参数采用`CompareMethod`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-127">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-128">有关二进制和文本比较，请参阅[选项比较语句](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="5d728-128">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-129">指示变量对象的类型为 <see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-129">Indicates that the type of a variant object is <see langword="Boolean" />.</span></span> <span data-ttu-id="5d728-130">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-130">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-131">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-131">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-132">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-132">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-133">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-133">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-134">指示变量对象的类型为 <see langword="Byte" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-134">Indicates that the type of a variant object is <see langword="Byte" />.</span></span> <span data-ttu-id="5d728-135">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-135">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-136">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-137">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-138">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-139">指示在某个消息框中单击了 <see langword="Cancel" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-139">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-140">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-140">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-141">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-141">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-142">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-142">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-143">表示用于打印和显示功能的回车符。</span><span class="sxs-lookup"><span data-stu-id="5d728-143">Represents a carriage-return character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-144">指示在调用 <see langword="MsgBox" /> 函数时，将显示关键消息图标。</span><span class="sxs-lookup"><span data-stu-id="5d728-144">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-145">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-145">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-146">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-146">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-147">表示用于打印和显示功能的回车符和换行符的组合。</span><span class="sxs-lookup"><span data-stu-id="5d728-147">Represents a carriage-return character combined with a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-148">指示变量对象的类型为 <see langword="Currency" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-148">Indicates that the type of a variant object is <see langword="Currency" />.</span></span> <span data-ttu-id="5d728-149">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-149">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-150">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-150">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-151">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-151">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-152">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-152">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-153">指示变量对象的类型为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-153">Indicates that the type of a variant object is <see langword="Date" />.</span></span> <span data-ttu-id="5d728-154">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-154">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-155">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-155">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-156">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-156">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-157">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-157">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-158">指示变量对象的类型为 <see langword="Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-158">Indicates that the type of a variant object is <see langword="Decimal" />.</span></span> <span data-ttu-id="5d728-159">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-159">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-160">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-160">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-161">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-161">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-162">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-162">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-163">指示在显示消息框时将最左侧的按钮作为默认按钮选中。</span><span class="sxs-lookup"><span data-stu-id="5d728-163">Indicates that the leftmost button is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-164">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-164">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-165">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-165">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-166">指示在显示消息框时将左侧起的第二个按钮作为默认按钮选中。</span><span class="sxs-lookup"><span data-stu-id="5d728-166">Indicates that the second button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-167">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-167">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-168">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-168">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-169">指示在显示消息框时将左侧起的第三个按钮作为默认按钮选中。</span><span class="sxs-lookup"><span data-stu-id="5d728-169">Indicates that the third button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-170">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-170">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-171">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-171">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-172">指示该文件是包含文件访问函数的目录或文件夹。</span><span class="sxs-lookup"><span data-stu-id="5d728-172">Indicates that the file is a directory or folder for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-173">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-173">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-174">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-174">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-175">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-175">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-176">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-176">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-177">指示变量对象的类型为 <see langword="Double" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-177">Indicates that the type of a variant object is <see langword="Double" />.</span></span> <span data-ttu-id="5d728-178">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-178">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-179">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-179">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-180">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-180">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-181">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-181">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-182">指示变量对象的类型为 <see langword="Empty" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-182">Indicates that the type of a variant object is <see langword="Empty" />.</span></span> <span data-ttu-id="5d728-183">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-183">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-184">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-184">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-185">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-185">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-186">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-186">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-187">指示在调用 <see langword="MsgBox" /> 函数时，将显示惊叹号图标。</span><span class="sxs-lookup"><span data-stu-id="5d728-187">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-188">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-188">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-189">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-189">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-190">指示在调用数字格式设置函数时应使用 <see langword="Boolean" /> 值 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-190">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-191">当你调用数字格式的函数，你可以使用的实际值替换代码中的以下枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-191">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-192">指示在调用与日期相关的函数时，应使用一年中第一个至少包含四天的周。</span><span class="sxs-lookup"><span data-stu-id="5d728-192">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-193">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-193">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-194">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-194">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-195">`FirstWeekOfYear`枚举指定的有效值`WeekOfYear`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-195">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-196">`WeekOfYear`参数采用`FirstWeekOfYear`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-196">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-197">指示在调用与日期相关的函数时，应使用一年中第一个完整的周。</span><span class="sxs-lookup"><span data-stu-id="5d728-197">Indicates that the first full week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-198">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-198">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-199">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-199">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-200">`FirstWeekOfYear`枚举指定的有效值`WeekOfYear`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-200">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-201">`WeekOfYear`参数采用`FirstWeekOfYear`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-201">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-202">指示在调用与日期相关的函数时，应使用一年中 1 月 1 日所在的周。</span><span class="sxs-lookup"><span data-stu-id="5d728-202">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-203">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-203">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-204">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-204">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-205">`FirstWeekOfYear`枚举指定的有效值`WeekOfYear`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-205">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-206">`WeekOfYear`参数采用`FirstWeekOfYear`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-206">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-207">表示用于打印功能的换页符。</span><span class="sxs-lookup"><span data-stu-id="5d728-207">Represents a form-feed character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-208">指示在调用与日期相关的函数时，应将星期五用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-208">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-209">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-209">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-210">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-210">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-211">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-211">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-212">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-212">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-213">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-213">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-214">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的常规日期格式。</span><span class="sxs-lookup"><span data-stu-id="5d728-214">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-215">当调用`FormatDateTime`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-215">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d728-216">你可以通过双击访问你的计算机的区域设置**区域选项**图标，在中找到**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="5d728-216">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-217">指定在调用 <see langword="CallByName" /> 函数时，应检索一个属性值。</span><span class="sxs-lookup"><span data-stu-id="5d728-217">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-218">当调用`CallByName`函数，你可以使用以下`CallType`代替实际值在代码中的枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-218">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-219">`UseCallType`参数采用`CallType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-219">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-220">指示该文件是包含文件访问函数的隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="5d728-220">Indicates that the file is a hidden file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-221">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-221">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-222">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-222">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-223">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-223">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-224">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-224">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-225">指示在调用 <see langword="Shell" /> 函数时，将对所调用程序隐藏窗口样式。</span><span class="sxs-lookup"><span data-stu-id="5d728-225">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-226">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-226">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-227">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-227">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-228">指示在调用 <see langword="StrConv" /> 函数时，应将平假名字符转换为片假名字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-228">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-229">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-229">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-230">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-230">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-231">指示在某个消息框中单击了 <see langword="Ignore" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-231">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-232">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-232">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-233">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-233">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-234">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-234">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-235">指示在调用 <see langword="MsgBox" /> 函数时，将显示信息图标。</span><span class="sxs-lookup"><span data-stu-id="5d728-235">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-236">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-236">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-237">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-237">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-238">指示变量对象的类型为 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-238">Indicates that the type of a variant object is <see langword="Integer" />.</span></span> <span data-ttu-id="5d728-239">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-239">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-240">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-240">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-241">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-241">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-242">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-242">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-243">指示在调用 <see langword="StrConv" /> 函数时，应将片假名字符转换为平假名字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-243">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-244">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-244">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-245">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-245">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-246">指示在调用 <see langword="CallByName" /> 函数时，应将属性值设置为对象实例。</span><span class="sxs-lookup"><span data-stu-id="5d728-246">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-247">当调用`CallByName`函数，你可以使用以下`CallType`代替实际值在代码中的枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-247">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-248">`UseCallType`参数采用`CallType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-248">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-249">表示用于打印和显示功能的换行字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-249">Represents a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-250">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为使用语言规则进行大小写，而不使用文件系统规则进行大小写。</span><span class="sxs-lookup"><span data-stu-id="5d728-250">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-251">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-251">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-252">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-252">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-253">指示变量对象的类型为 <see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-253">Indicates the type of a variant object is <see langword="Long" />.</span></span> <span data-ttu-id="5d728-254">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-254">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-255">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-255">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-256">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-256">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-257">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-257">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-258">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的长日期格式。</span><span class="sxs-lookup"><span data-stu-id="5d728-258">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-259">当调用`FormatDateTime`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-259">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d728-260">你可以通过双击访问你的计算机的区域设置**区域选项**图标，在中找到**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="5d728-260">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-261">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的长时间格式。</span><span class="sxs-lookup"><span data-stu-id="5d728-261">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-262">当调用`FormatDateTime`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-262">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d728-263">你可以通过双击访问你的计算机的区域设置**区域选项**图标，在中找到**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="5d728-263">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-264">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为小写字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-264">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-265">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-265">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-266">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-266">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-267">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最大化并将焦点提供给所调用的程序。</span><span class="sxs-lookup"><span data-stu-id="5d728-267">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-268">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-268">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-269">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-269">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-270">指定在调用 <see langword="CallByName" /> 函数时，应调用一个方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-270">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-271">当调用`CallByName`函数，你可以使用以下`CallType`代替实际值在代码中的枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-271">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-272">`UseCallType`参数采用`CallType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-272">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-273">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最小化并将焦点提供给所调用的程序。</span><span class="sxs-lookup"><span data-stu-id="5d728-273">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-274">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-274">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-275">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-275">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-276">指示在调用 <see langword="Shell" /> 函数时，将使窗口样式最小化，但不将焦点提供给所调用的程序。</span><span class="sxs-lookup"><span data-stu-id="5d728-276">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-277">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-277">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-278">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-278">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-279">指示在调用与日期相关的函数时，应将星期一用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-279">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-280">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-281">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-282">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-282">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-283">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-283">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-284">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-284">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-285">指示在调用 <see langword="Help" /> 函数时，将显示 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-285">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-286">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-286">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-287">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-287">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-288">指示在调用 <see langword="MsgBox" /> 函数时，将使文本右对齐。</span><span class="sxs-lookup"><span data-stu-id="5d728-288">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-289">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-289">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-290">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-290">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-291">指示在调用 <see langword="MsgBox" /> 函数时，将显示从右向左阅读的文本（希伯来语和阿拉伯语系统）。</span><span class="sxs-lookup"><span data-stu-id="5d728-291">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-292">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-292">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-293">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-293">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-294">指示在调用 <see langword="MsgBox" /> 函数时，将在前台显示消息框。</span><span class="sxs-lookup"><span data-stu-id="5d728-294">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-295">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-295">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-296">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-296">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-297">指示在调用 <see langword="StrConv" /> 函数时，应将宽（双字节）字符转换为窄（单字节）字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-297">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-298">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-298">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-299">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-299">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-300">表示用于打印和显示功能的换行字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-300">Represents a newline character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-301">指示在某个消息框中单击了 <see langword="No" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-301">Indicates that the <see langword="No" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-302">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-302">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-303">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-303">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-304">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-304">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-305">指示该文件是包含文件访问函数的常规文件。</span><span class="sxs-lookup"><span data-stu-id="5d728-305">Indicates that the file is a normal file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-306">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-306">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-307">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-307">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-308">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-308">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-309">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-309">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-310">指示在调用 <see langword="Shell" /> 函数时，将正常显示窗口样式并将焦点提供给所调用的程序。</span><span class="sxs-lookup"><span data-stu-id="5d728-310">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-311">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-311">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-312">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-312">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-313">指示在调用 <see langword="Shell" /> 函数时，将正常显示窗口样式，但不将焦点提供给所调用的程序。</span><span class="sxs-lookup"><span data-stu-id="5d728-313">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-314">当发出`Shell`可以代替实际值在代码中使用下列枚举成员的命令。</span><span class="sxs-lookup"><span data-stu-id="5d728-314">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-315">`Style`参数采用`AppWinStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-315">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-316">指示变量对象的类型为 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-316">Indicates that the type of a variant object is <see langword="Nothing" />.</span></span> <span data-ttu-id="5d728-317">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-317">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-318">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-318">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-319">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-319">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-320">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-320">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-321">表示用于打印和显示功能的 null 字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-321">Represents a null character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-322">表示用于打印和显示功能以及用于调用外部过程的零长度字符串。</span><span class="sxs-lookup"><span data-stu-id="5d728-322">Represents a zero-length string for print and display functions, and for calling external procedures.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-323">指示变量对象的类型为 <see langword="Object" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-323">Indicates that the type of a variant object is <see langword="Object" />.</span></span> <span data-ttu-id="5d728-324">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-324">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-325">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-325">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-326">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-326">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-327">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-327">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-328">表示对象错误号。</span><span class="sxs-lookup"><span data-stu-id="5d728-328">Represents the object error number.</span></span> <span data-ttu-id="5d728-329">用户定义的错误号应当大于此值。</span><span class="sxs-lookup"><span data-stu-id="5d728-329">User-defined error numbers should be greater than this value.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-330">指示在某个消息框中单击了 <see langword="OK" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-330">Indicates that the <see langword="OK" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-331">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-331">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-332">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-332">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-333">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-333">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-334">指示在调用 <see langword="OK" /> 函数时，将显示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-334">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-335">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-335">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-336">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-336">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-337">指示在调用 <see langword="OK" /> 函数时，将只显示 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-337">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-338">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-338">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-339">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-339">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-340">指示在调用 <see langword="StrConv" /> 函数时，应将字符串中每个单词的第一个字母转换为大写，并将其余字符转换为小写。</span><span class="sxs-lookup"><span data-stu-id="5d728-340">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-341">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-341">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-342">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-342">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-343">指示在调用 <see langword="MsgBox" /> 函数时，将显示问号图标。</span><span class="sxs-lookup"><span data-stu-id="5d728-343">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-344">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-344">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-345">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-345">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-346">指示该文件是包含文件访问函数的只读文件。</span><span class="sxs-lookup"><span data-stu-id="5d728-346">Indicates that the file is a read-only file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-347">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-347">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-348">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-348">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-349">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-349">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-350">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-350">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-351">指示在某个消息框中单击了 <see langword="Retry" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-351">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-352">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-352">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-353">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-353">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-354">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-354">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-355">指示在调用 <see langword="Retry" /> 函数时，将显示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-355">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-356">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-356">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-357">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-357">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-358">指示在调用与日期相关的函数时，应将星期六用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-358">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-359">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-359">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-360">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-360">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-361">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-361">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-362">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-362">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-363">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-363">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-364">指示在调用 <see langword="CallByName" /> 函数时，应设置一个属性值。</span><span class="sxs-lookup"><span data-stu-id="5d728-364">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-365">当调用`CallByName`函数，你可以使用以下`CallType`代替实际值在代码中的枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-365">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-366">`UseCallType`参数采用`CallType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-366">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-367">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的短日期格式。</span><span class="sxs-lookup"><span data-stu-id="5d728-367">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-368">当调用`FormatDateTime`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-368">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d728-369">你可以通过双击访问你的计算机的区域设置**区域选项**图标，在中找到**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="5d728-369">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-370">指示在调用 <see langword="FormatDateTime" /> 函数时，应使用当前区域性的短时间格式。</span><span class="sxs-lookup"><span data-stu-id="5d728-370">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-371">当调用`FormatDateTime`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-371">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d728-372">你可以通过双击访问你的计算机的区域设置**区域选项**图标，在中找到**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="5d728-372">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-373">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为简体中文字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-373">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-374">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-374">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-375">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-375">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-376">指示变量对象的类型为 <see langword="Single" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-376">Indicates that the type of a variant object is <see langword="Single" />.</span></span> <span data-ttu-id="5d728-377">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-377">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-378">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-379">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-380">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-381">指示变量对象的类型为 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-381">Indicates that the type of a variant object is <see langword="String" />.</span></span> <span data-ttu-id="5d728-382">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-382">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-383">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-383">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-384">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-384">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-385">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-385">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-386">指示在调用与日期相关的函数时，应将星期日用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-386">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-387">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-387">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-388">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-388">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-389">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-389">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-390">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-390">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-391">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-391">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-392">指示该文件是包含文件访问函数的系统文件。</span><span class="sxs-lookup"><span data-stu-id="5d728-392">Indicates that the file is a system file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-393">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-393">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-394">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-394">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-395">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-395">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-396">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-396">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-397">指示在调用 <see langword="MsgBox" /> 函数时，将消息框显示为模式对话框。</span><span class="sxs-lookup"><span data-stu-id="5d728-397">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-398">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-398">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-399">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-399">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-400">表示用于打印和显示功能的制表符。</span><span class="sxs-lookup"><span data-stu-id="5d728-400">Represents a tab character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-401">指示在调用比较函数时，应执行文本比较。</span><span class="sxs-lookup"><span data-stu-id="5d728-401">Indicates that a text comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-402">比较函数调用时，你可以使用<xref:Microsoft.VisualBasic.CompareMethod>代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-402">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-403">`Compare`参数采用`CompareMethod`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-403">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-404">有关二进制和文本比较的详细信息的详细信息，请参阅[选项比较语句](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="5d728-404">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-405">指示在调用与日期相关的函数时，应将星期四用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-405">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-406">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-406">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-407">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-407">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-408">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-408">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-409">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-409">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-410">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-410">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-411">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为繁体中文字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-411">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-412">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-412">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-413">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-413">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-414">指示在调用数字格式设置函数时应使用 <see langword="Boolean" /> 值 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-414">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-415">当你调用数字格式的函数，你可以使用的实际值替换代码中的以下枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-415">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-416">指示在调用与日期相关的函数时，应将星期二用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-416">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-417">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-417">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-418">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-418">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-419">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-419">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-420">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-420">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-421">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-421">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-422">指示在调用 <see langword="StrConv" /> 函数时，应将字符转换为大写字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-422">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-423">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-423">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-424">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-424">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-425">指示在调用数字格式设置函数时，应使用默认 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5d728-425">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-426">当你调用数字格式的函数，你可以使用的实际值替换代码中的以下枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-426">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-427">指示变量对象的类型为用户定义的类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-427">Indicates that the type of a variant object is a user-defined type.</span></span> <span data-ttu-id="5d728-428">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-428">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-429">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-429">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-430">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-430">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-431">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-431">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-432">指示在调用与日期相关的函数时，应使用系统指定的那一周作为一年中的第一周。</span><span class="sxs-lookup"><span data-stu-id="5d728-432">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-433">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-433">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-434">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-434">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-435">`FirstWeekOfYear`枚举指定的有效值`WeekOfYear`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-435">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-436">`WeekOfYear`参数采用`FirstWeekOfYear`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-436">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-437">指示在调用与日期相关的函数时，应使用系统指定的那一天为一周中的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-437">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-438">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-438">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-439">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-439">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-440">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-440">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-441">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-441">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-442">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-442">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-443">指示变量对象的类型为 <see langword="Variant" />。</span><span class="sxs-lookup"><span data-stu-id="5d728-443">Indicates that the type of a variant object is <see langword="Variant" />.</span></span> <span data-ttu-id="5d728-444">由 <see langword="VarType" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-444">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-445">当调用`VarType`函数，来代替实际值在代码中，可以使用枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-445">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-446">`VariantType`枚举定义常量用于标识可能`Variant`类型。</span><span class="sxs-lookup"><span data-stu-id="5d728-446">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="5d728-447">下表列出`VariantType`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-447">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d728-448">表示用于打印功能的回车字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-448">Represents a carriage-return character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-449">指示文件访问函数的卷标文件特性。</span><span class="sxs-lookup"><span data-stu-id="5d728-449">Indicates the volume label file attribute for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-450">此属性不是有效的`SetAttr`函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-450">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="5d728-451">当调用`Dir`， `GetAttr`，或`SetAttr`函数，你可以使用`FileAttribute`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-451">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-452">`Attributes`参数采用`FileAttribute`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-452">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-453">执行文件 I/O 操作时`My.Computer.FileSystem`对象提供更高的性能和易用性比传统的文件 I/O 的方法。</span><span class="sxs-lookup"><span data-stu-id="5d728-453">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="5d728-454">有关详细信息，请参阅<xref:Microsoft.VisualBasic.FileSystem>对象。</span><span class="sxs-lookup"><span data-stu-id="5d728-454">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-455">指示在调用与日期相关的函数时，应将星期三用作一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="5d728-455">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-456">在调用与日期相关的函数时，你可以代替实际值在代码中使用下列枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-456">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-457">某些与日期相关函数采用`DayOfWeek`自变量，`WeekOfYear`参数或两者。</span><span class="sxs-lookup"><span data-stu-id="5d728-457">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="5d728-458">`FirstDayOfWeek`枚举指定的有效值`DayOfWeek`自变量，以及可能的返回值从函数。</span><span class="sxs-lookup"><span data-stu-id="5d728-458">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="5d728-459">`DayOfWeek`参数采用`FirstDayOfWeek`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-459">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="5d728-460">与日期相关的函数还返回`FirstDayOfWeek`值 (除`System`)。</span><span class="sxs-lookup"><span data-stu-id="5d728-460">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-461">指示在调用 <see langword="StrConv" /> 函数时，应将窄（单字节）字符转换为宽（双字节）字符。</span><span class="sxs-lookup"><span data-stu-id="5d728-461">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-462">当调用`StrConv`函数，你可以使用下列枚举成员来代替实际值在代码中。</span><span class="sxs-lookup"><span data-stu-id="5d728-462">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-463">`Conversion`参数采用`VbStrConv`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-463">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-464">指示在某个消息框中单击了 <see langword="Yes" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-464">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span></span> <span data-ttu-id="5d728-465">由 <see langword="MsgBox" /> 函数返回。</span><span class="sxs-lookup"><span data-stu-id="5d728-465">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-466">当调用`MsgBox`函数，你可以使用`MsgBoxResult`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-466">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="5d728-467">`MsgBox`函数返回`MsgBoxResult`枚举值。</span><span class="sxs-lookup"><span data-stu-id="5d728-467">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-468">指示在调用 <see langword="Yes" /> 函数时，将显示 <see langword="No" /> 和 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-468">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-469">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-469">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-470">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-470">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5d728-471">指示在调用 <see langword="Yes" /> 函数时，将显示 <see langword="No" />、<see langword="Cancel" /> 和 <see langword="MsgBox" /> 按钮。</span><span class="sxs-lookup"><span data-stu-id="5d728-471">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d728-472">当调用`MsgBox`函数，你可以使用`MsgBoxStyle`代替实际值在代码中的枚举。</span><span class="sxs-lookup"><span data-stu-id="5d728-472">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="5d728-473">`Buttons`参数采用`MsgBoxStyle`枚举成员。</span><span class="sxs-lookup"><span data-stu-id="5d728-473">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>