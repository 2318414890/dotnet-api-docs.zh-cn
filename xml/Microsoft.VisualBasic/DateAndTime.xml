<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59d35cb4d0012b6046a7dc9eaed7c9256370add6" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52210111" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09867-101"><see langword="DateAndTime" /> 模块包含在日期和时间操作中使用的过程和属性。</span><span class="sxs-lookup"><span data-stu-id="09867-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-102">此模块支持的 Visual Basic 语言关键字和运行时库成员，获取当前日期或时间、 执行日期计算，返回日期或时间、 设置的日期或时间，或记录的进程的持续时间。</span><span class="sxs-lookup"><span data-stu-id="09867-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-103">此示例使用`Today`属性以返回当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="09867-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md"><span data-ttu-id="09867-104">日期和时间摘要</span><span class="sxs-lookup"><span data-stu-id="09867-104">Dates and Times Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="09867-105">关键字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="09867-106">Visual Basic 运行时库成员</span><span class="sxs-lookup"><span data-stu-id="09867-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09867-107">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-108">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-108">Required.</span></span> <span data-ttu-id="09867-109">表示要加上的时间间隔的 <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-109"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="09867-110">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-110">Required.</span></span> <span data-ttu-id="09867-111"><see langword="Double" />。</span><span class="sxs-lookup"><span data-stu-id="09867-111"><see langword="Double" />.</span></span> <span data-ttu-id="09867-112">表示希望添加的时间间隔数的浮点表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-112">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="09867-113"><paramref name="Number" /> 可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。</span><span class="sxs-lookup"><span data-stu-id="09867-113"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="09867-114">在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="09867-114">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="09867-115">对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</span><span class="sxs-lookup"><span data-stu-id="09867-115">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="09867-116">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-116">Required.</span></span> <span data-ttu-id="09867-117"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-117"><see langword="Date" />.</span></span> <span data-ttu-id="09867-118">表示要在其基础上加上此时间间隔的日期和时间的表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-118">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="09867-119"><paramref name="DateValue" /> 本身在调用程序中并未改变。</span><span class="sxs-lookup"><span data-stu-id="09867-119"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="09867-120">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-120">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="09867-121">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-121">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-122">可以使用`DateAdd`函数要添加或减去指定的时间间隔从日期。</span><span class="sxs-lookup"><span data-stu-id="09867-122">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="09867-123">例如，可以计算从现在今天或 45 分钟的时间之前的 30 天的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-123">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="09867-124">若要添加的天数`DateValue`，可以使用`DateInterval.Day`， `DateInterval.DayOfYear`，或`DateInterval.Weekday`。</span><span class="sxs-lookup"><span data-stu-id="09867-124">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="09867-125">这些被视为等效项，因为`DayOfYear`和`Weekday`不是有意义的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-125">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="09867-126">`DateAdd`函数永远不会返回无效的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-126">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="09867-127">如有必要，会生成日期的日部分向调整为结果生成的年中月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="09867-127">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="09867-128">下面的示例将年 1 月 31 日加上一个月：</span><span class="sxs-lookup"><span data-stu-id="09867-128">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="09867-129">在此示例中，`DateAdd`将返回`#2/28/1995#`，而不`#2/31/1995#`。</span><span class="sxs-lookup"><span data-stu-id="09867-129">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="09867-130">如果`DateValue`是`#1/31/1996#`，它将返回`#2/29/1996#`因为 1996 年为闰年。</span><span class="sxs-lookup"><span data-stu-id="09867-130">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09867-131">`DateAdd` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-131">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-132">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-132">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="09867-133">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以添加时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-133">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="09867-134">例如，可以添加的天数，为舍入到最接近的毫秒小数`Date`变量，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09867-134">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="09867-135">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-135">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-136">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-136">Enumeration value</span></span>|<span data-ttu-id="09867-137">String</span><span class="sxs-lookup"><span data-stu-id="09867-137">String</span></span>|<span data-ttu-id="09867-138">要添加的时间间隔单位</span><span class="sxs-lookup"><span data-stu-id="09867-138">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-139">d</span><span class="sxs-lookup"><span data-stu-id="09867-139">d</span></span>|<span data-ttu-id="09867-140">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-140">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-141">y</span><span class="sxs-lookup"><span data-stu-id="09867-141">y</span></span>|<span data-ttu-id="09867-142">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-142">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-143">h</span><span class="sxs-lookup"><span data-stu-id="09867-143">h</span></span>|<span data-ttu-id="09867-144">小时;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-144">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-145">n</span><span class="sxs-lookup"><span data-stu-id="09867-145">n</span></span>|<span data-ttu-id="09867-146">分钟;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-146">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-147">m</span><span class="sxs-lookup"><span data-stu-id="09867-147">m</span></span>|<span data-ttu-id="09867-148">月;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-148">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-149">q</span><span class="sxs-lookup"><span data-stu-id="09867-149">q</span></span>|<span data-ttu-id="09867-150">每个季度;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-150">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-151">秒</span><span class="sxs-lookup"><span data-stu-id="09867-151">s</span></span>|<span data-ttu-id="09867-152">第二个;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-152">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-153">w</span><span class="sxs-lookup"><span data-stu-id="09867-153">w</span></span>|<span data-ttu-id="09867-154">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-154">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-155">ww</span><span class="sxs-lookup"><span data-stu-id="09867-155">ww</span></span>|<span data-ttu-id="09867-156">一周;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-156">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-157">yyyy</span><span class="sxs-lookup"><span data-stu-id="09867-157">yyyy</span></span>|<span data-ttu-id="09867-158">年;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-158">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-159">此示例采用一个日期，并通过`DateAdd`函数中，显示的相应日期在将来的月数。</span><span class="sxs-lookup"><span data-stu-id="09867-159">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-160"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-160"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-161"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="09867-161"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09867-162">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</span><span class="sxs-lookup"><span data-stu-id="09867-162">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-163">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-163">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-164">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-164">Required.</span></span> <span data-ttu-id="09867-165">表示要加上的时间间隔的 <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-165"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="09867-166">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-166">Required.</span></span> <span data-ttu-id="09867-167"><see langword="Double" />。</span><span class="sxs-lookup"><span data-stu-id="09867-167"><see langword="Double" />.</span></span> <span data-ttu-id="09867-168">表示希望添加的时间间隔数的浮点表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-168">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="09867-169"><paramref name="Number" /> 可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。</span><span class="sxs-lookup"><span data-stu-id="09867-169"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="09867-170">在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="09867-170">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="09867-171">对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</span><span class="sxs-lookup"><span data-stu-id="09867-171">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="09867-172">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-172">Required.</span></span> <span data-ttu-id="09867-173"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-173"><see langword="Date" />.</span></span> <span data-ttu-id="09867-174">表示要在其基础上加上此时间间隔的日期和时间的表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-174">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="09867-175"><paramref name="DateValue" /> 本身在调用程序中并未改变。</span><span class="sxs-lookup"><span data-stu-id="09867-175"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="09867-176">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-176">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="09867-177">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-177">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-178">可以使用`DateAdd`函数要添加或减去指定的时间间隔从日期。</span><span class="sxs-lookup"><span data-stu-id="09867-178">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="09867-179">例如，可以计算从现在今天或 45 分钟的时间之前的 30 天的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-179">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="09867-180">若要添加的天数`DateValue`，可以使用`DateInterval.Day`， `DateInterval.DayOfYear`，或`DateInterval.Weekday`。</span><span class="sxs-lookup"><span data-stu-id="09867-180">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="09867-181">这些被视为等效项，因为`DayOfYear`和`Weekday`不是有意义的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-181">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="09867-182">`DateAdd`函数永远不会返回无效的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-182">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="09867-183">如有必要，会生成日期的日部分向调整为结果生成的年中月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="09867-183">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="09867-184">下面的示例将年 1 月 31 日加上一个月：</span><span class="sxs-lookup"><span data-stu-id="09867-184">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="09867-185">在此示例中，`DateAdd`将返回`#2/28/1995#`，而不`#2/31/1995#`。</span><span class="sxs-lookup"><span data-stu-id="09867-185">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="09867-186">如果`DateValue`是`#1/31/1996#`，它将返回`#2/29/1996#`因为 1996 年为闰年。</span><span class="sxs-lookup"><span data-stu-id="09867-186">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09867-187">`DateAdd` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-187">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-188">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-188">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="09867-189">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以添加时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-189">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="09867-190">例如，可以添加的天数，为舍入到最接近的毫秒小数`Date`变量，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09867-190">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="09867-191">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-191">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-192">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-192">Enumeration value</span></span>|<span data-ttu-id="09867-193">String</span><span class="sxs-lookup"><span data-stu-id="09867-193">String</span></span>|<span data-ttu-id="09867-194">要添加的时间间隔单位</span><span class="sxs-lookup"><span data-stu-id="09867-194">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-195">d</span><span class="sxs-lookup"><span data-stu-id="09867-195">d</span></span>|<span data-ttu-id="09867-196">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-196">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-197">y</span><span class="sxs-lookup"><span data-stu-id="09867-197">y</span></span>|<span data-ttu-id="09867-198">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-198">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-199">h</span><span class="sxs-lookup"><span data-stu-id="09867-199">h</span></span>|<span data-ttu-id="09867-200">小时;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-200">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-201">n</span><span class="sxs-lookup"><span data-stu-id="09867-201">n</span></span>|<span data-ttu-id="09867-202">分钟;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-202">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-203">m</span><span class="sxs-lookup"><span data-stu-id="09867-203">m</span></span>|<span data-ttu-id="09867-204">月;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-204">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-205">q</span><span class="sxs-lookup"><span data-stu-id="09867-205">q</span></span>|<span data-ttu-id="09867-206">每个季度;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-206">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-207">秒</span><span class="sxs-lookup"><span data-stu-id="09867-207">s</span></span>|<span data-ttu-id="09867-208">第二个;舍入为接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="09867-208">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-209">w</span><span class="sxs-lookup"><span data-stu-id="09867-209">w</span></span>|<span data-ttu-id="09867-210">一天;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-210">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-211">ww</span><span class="sxs-lookup"><span data-stu-id="09867-211">ww</span></span>|<span data-ttu-id="09867-212">一周;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-212">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-213">yyyy</span><span class="sxs-lookup"><span data-stu-id="09867-213">yyyy</span></span>|<span data-ttu-id="09867-214">年;截断为整数值</span><span class="sxs-lookup"><span data-stu-id="09867-214">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-215">此示例采用一个日期，并通过`DateAdd`函数中，显示的相应日期在将来的月数。</span><span class="sxs-lookup"><span data-stu-id="09867-215">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-216"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-216"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-217"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="09867-217"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09867-218">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</span><span class="sxs-lookup"><span data-stu-id="09867-218">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-219">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-219">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09867-220">返回一个 <see langword="Long" /> 值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="09867-220">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-221">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-221">Required.</span></span> <span data-ttu-id="09867-222"><see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-222"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="09867-223">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-223">Required.</span></span> <span data-ttu-id="09867-224"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-224"><see langword="Date" />.</span></span> <span data-ttu-id="09867-225">要在计算中使用的第一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-225">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="09867-226">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-226">Required.</span></span> <span data-ttu-id="09867-227"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-227"><see langword="Date" />.</span></span> <span data-ttu-id="09867-228">要在计算中使用的第二个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-228">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="09867-229">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-229">Optional.</span></span> <span data-ttu-id="09867-230">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-230">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-231">如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="09867-231">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="09867-232">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-232">Optional.</span></span> <span data-ttu-id="09867-233">从 <see langword="FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="09867-233">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="09867-234">如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="09867-234">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-235">返回一个 <see langword="Long" /> 值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="09867-235">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="09867-236">返回一个 <see langword="Long" /> 值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="09867-236">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-237">可以使用`DateDiff`函数来确定两个日期/时间值之间存在多少指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-237">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="09867-238">例如，可以使用`DateDiff`来计算两个日期或当前年度结束之间的周数之间的天数。</span><span class="sxs-lookup"><span data-stu-id="09867-238">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="09867-239">行为</span><span class="sxs-lookup"><span data-stu-id="09867-239">Behavior</span></span>  
  
-   <span data-ttu-id="09867-240">**参数的处理方式。**</span><span class="sxs-lookup"><span data-stu-id="09867-240">**Treatment of Parameters.**</span></span> <span data-ttu-id="09867-241">`DateDiff` 值中减去`Date1`的值从`Date2`以生成不同之处。</span><span class="sxs-lookup"><span data-stu-id="09867-241">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="09867-242">两个值被更改调用程序中。</span><span class="sxs-lookup"><span data-stu-id="09867-242">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="09867-243">**返回值。**</span><span class="sxs-lookup"><span data-stu-id="09867-243">**Return Values.**</span></span> <span data-ttu-id="09867-244">因为`Date1`并`Date2`属于`Date`数据类型，保留日期和时间值精确到 100 毫微秒系统计时器。</span><span class="sxs-lookup"><span data-stu-id="09867-244">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="09867-245">但是，`DateDiff`始终返回为时间间隔数`Long`值。</span><span class="sxs-lookup"><span data-stu-id="09867-245">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="09867-246">如果`Date1`表示的更高版本的日期和时间长于`Date2`，`DateDiff`返回一个负数。</span><span class="sxs-lookup"><span data-stu-id="09867-246">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="09867-247">**一天的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-247">**Day Intervals.**</span></span> <span data-ttu-id="09867-248">如果`Interval`设置为`DateInterval.DayOfYear`，则将其视为相同`DateInterval.Day`，这是因为`DayOfYear`时间间隔内不是有意义的单位。</span><span class="sxs-lookup"><span data-stu-id="09867-248">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="09867-249">**一周的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-249">**Week Intervals.**</span></span> <span data-ttu-id="09867-250">如果`Interval`设置为`DateInterval.WeekOfYear`，则返回值表示之间的包含的一周的第一天的周数`Date1`和包含的一周的第一天`Date2`。</span><span class="sxs-lookup"><span data-stu-id="09867-250">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="09867-251">下面的示例演示如何，这会生成不同的结果从`DateInterval.Weekday`。</span><span class="sxs-lookup"><span data-stu-id="09867-251">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="09867-252">在前面的示例中，`DateDiff`返回 0 到`wD`因为两个日期之间的区别是七天内，但它将返回 1 到`wY`因为没有相应的日历的第一天之间相差七天周。</span><span class="sxs-lookup"><span data-stu-id="09867-252">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="09867-253">**更大的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-253">**Larger Intervals.**</span></span> <span data-ttu-id="09867-254">如果`Interval`设置为`DateInterval.Year`，返回值的计算纯粹从的年份组成部分`Date1`和`Date2`。</span><span class="sxs-lookup"><span data-stu-id="09867-254">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="09867-255">同样，对于返回值`DateInterval.Month`纯粹从年份和月份的各部分的自变量，以及计算`DateInterval.Quarter`从包含两个日期的季度。</span><span class="sxs-lookup"><span data-stu-id="09867-255">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="09867-256">例如，当比较年 12 月 31 日的下一 1 年月 1 日`DateDiff`返回 1 `DateInterval.Year`， `DateInterval.Quarter`，或`DateInterval.Month`，即使最多只能一天已过。</span><span class="sxs-lookup"><span data-stu-id="09867-256">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="09867-257">例如，有多个纪元的日语区域性`DateDiff`方法不返回年存在差异，如果区别跨越两个或多个纪元。</span><span class="sxs-lookup"><span data-stu-id="09867-257">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="09867-258">相反，您可以计算返回的值之间的差异<xref:System.DateTime.Year%2A>属性，如下面的示例中所示： `date2.Year - date1.Year`。</span><span class="sxs-lookup"><span data-stu-id="09867-258">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="09867-259">**其他时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-259">**Other Intervals.**</span></span> <span data-ttu-id="09867-260">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以查找时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-260">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="09867-261">例如，可以使用`Subtract`方法重载形式之一：<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>减去<xref:System.TimeSpan>从`Date`变量返回另一个`Date`值，和<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>减去`Date`值若要返回<xref:System.TimeSpan>。</span><span class="sxs-lookup"><span data-stu-id="09867-261">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="09867-262">若要了解需要，如以下示例所示的毫秒数的进程的时间。</span><span class="sxs-lookup"><span data-stu-id="09867-262">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="09867-263">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-263">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-264">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-264">Enumeration value</span></span>|<span data-ttu-id="09867-265">字符串值</span><span class="sxs-lookup"><span data-stu-id="09867-265">String value</span></span>|<span data-ttu-id="09867-266">单位的时间差异</span><span class="sxs-lookup"><span data-stu-id="09867-266">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-267">"d"</span><span class="sxs-lookup"><span data-stu-id="09867-267">"d"</span></span>|<span data-ttu-id="09867-268">天</span><span class="sxs-lookup"><span data-stu-id="09867-268">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-269">“y”</span><span class="sxs-lookup"><span data-stu-id="09867-269">"y"</span></span>|<span data-ttu-id="09867-270">天</span><span class="sxs-lookup"><span data-stu-id="09867-270">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-271">“h”</span><span class="sxs-lookup"><span data-stu-id="09867-271">"h"</span></span>|<span data-ttu-id="09867-272">小时</span><span class="sxs-lookup"><span data-stu-id="09867-272">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-273">"n"</span><span class="sxs-lookup"><span data-stu-id="09867-273">"n"</span></span>|<span data-ttu-id="09867-274">分钟</span><span class="sxs-lookup"><span data-stu-id="09867-274">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-275">“m”</span><span class="sxs-lookup"><span data-stu-id="09867-275">"m"</span></span>|<span data-ttu-id="09867-276">月份</span><span class="sxs-lookup"><span data-stu-id="09867-276">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-277">"q"</span><span class="sxs-lookup"><span data-stu-id="09867-277">"q"</span></span>|<span data-ttu-id="09867-278">每个季度</span><span class="sxs-lookup"><span data-stu-id="09867-278">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-279">“s”</span><span class="sxs-lookup"><span data-stu-id="09867-279">"s"</span></span>|<span data-ttu-id="09867-280">秒</span><span class="sxs-lookup"><span data-stu-id="09867-280">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-281">“w”</span><span class="sxs-lookup"><span data-stu-id="09867-281">"w"</span></span>|<span data-ttu-id="09867-282">周</span><span class="sxs-lookup"><span data-stu-id="09867-282">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-283">"ww"</span><span class="sxs-lookup"><span data-stu-id="09867-283">"ww"</span></span>|<span data-ttu-id="09867-284">日历周</span><span class="sxs-lookup"><span data-stu-id="09867-284">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-285">“yyyy”</span><span class="sxs-lookup"><span data-stu-id="09867-285">"yyyy"</span></span>|<span data-ttu-id="09867-286">年</span><span class="sxs-lookup"><span data-stu-id="09867-286">Year</span></span>|  
  
 <span data-ttu-id="09867-287">`DayOfWeek`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-287">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-288">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-288">Enumeration value</span></span>|<span data-ttu-id="09867-289">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-289">Value</span></span>|<span data-ttu-id="09867-290">描述</span><span class="sxs-lookup"><span data-stu-id="09867-290">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-291">0</span><span class="sxs-lookup"><span data-stu-id="09867-291">0</span></span>|<span data-ttu-id="09867-292">系统设置中指定的每周的第一天</span><span class="sxs-lookup"><span data-stu-id="09867-292">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-293">1</span><span class="sxs-lookup"><span data-stu-id="09867-293">1</span></span>|<span data-ttu-id="09867-294">Sunday （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-294">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-295">2</span><span class="sxs-lookup"><span data-stu-id="09867-295">2</span></span>|<span data-ttu-id="09867-296">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-296">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-297">3</span><span class="sxs-lookup"><span data-stu-id="09867-297">3</span></span>|<span data-ttu-id="09867-298">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-298">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-299">4</span><span class="sxs-lookup"><span data-stu-id="09867-299">4</span></span>|<span data-ttu-id="09867-300">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-300">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-301">5</span><span class="sxs-lookup"><span data-stu-id="09867-301">5</span></span>|<span data-ttu-id="09867-302">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-302">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-303">6</span><span class="sxs-lookup"><span data-stu-id="09867-303">6</span></span>|<span data-ttu-id="09867-304">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-304">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-305">7</span><span class="sxs-lookup"><span data-stu-id="09867-305">7</span></span>|<span data-ttu-id="09867-306">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-306">Saturday</span></span>|  
  
 <span data-ttu-id="09867-307">`WeekOfYear`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-307">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-308">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-308">Enumeration value</span></span>|<span data-ttu-id="09867-309">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-309">Value</span></span>|<span data-ttu-id="09867-310">描述</span><span class="sxs-lookup"><span data-stu-id="09867-310">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="09867-311">0</span><span class="sxs-lookup"><span data-stu-id="09867-311">0</span></span>|<span data-ttu-id="09867-312">系统设置中指定的年的第一周</span><span class="sxs-lookup"><span data-stu-id="09867-312">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="09867-313">1</span><span class="sxs-lookup"><span data-stu-id="09867-313">1</span></span>|<span data-ttu-id="09867-314">1 月 1 日所在的周 （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-314">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="09867-315">2</span><span class="sxs-lookup"><span data-stu-id="09867-315">2</span></span>|<span data-ttu-id="09867-316">在新的一年 （符合 ISO 8601 标准第 3.17 节） 中具有至少四天的周</span><span class="sxs-lookup"><span data-stu-id="09867-316">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="09867-317">3</span><span class="sxs-lookup"><span data-stu-id="09867-317">3</span></span>|<span data-ttu-id="09867-318">在新的一年中第一个完整的周</span><span class="sxs-lookup"><span data-stu-id="09867-318">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-319">此示例使用`DateDiff`函数显示在给定的日期和今天之间的天数。</span><span class="sxs-lookup"><span data-stu-id="09867-319">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-320"><paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="09867-320"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-321"><paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</span><span class="sxs-lookup"><span data-stu-id="09867-321"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-322">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-322">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-323">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-323">Required.</span></span> <span data-ttu-id="09867-324"><see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-324"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="09867-325">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-325">Required.</span></span> <span data-ttu-id="09867-326"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-326"><see langword="Date" />.</span></span> <span data-ttu-id="09867-327">要在计算中使用的第一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-327">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="09867-328">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-328">Required.</span></span> <span data-ttu-id="09867-329"><see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-329"><see langword="Date" />.</span></span> <span data-ttu-id="09867-330">要在计算中使用的第二个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-330">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="09867-331">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-331">Optional.</span></span> <span data-ttu-id="09867-332">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-332">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-333">如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="09867-333">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="09867-334">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-334">Optional.</span></span> <span data-ttu-id="09867-335">从 <see langword="FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="09867-335">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="09867-336">如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="09867-336">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-337">返回一个 <see langword="Long" /> 值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="09867-337">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="09867-338">返回一个 <see langword="Long" /> 值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="09867-338">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-339">可以使用`DateDiff`函数来确定两个日期/时间值之间存在多少指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="09867-339">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="09867-340">例如，可以使用`DateDiff`来计算两个日期或当前年度结束之间的周数之间的天数。</span><span class="sxs-lookup"><span data-stu-id="09867-340">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="09867-341">行为</span><span class="sxs-lookup"><span data-stu-id="09867-341">Behavior</span></span>  
  
-   <span data-ttu-id="09867-342">**参数的处理方式。**</span><span class="sxs-lookup"><span data-stu-id="09867-342">**Treatment of Parameters.**</span></span> <span data-ttu-id="09867-343">`DateDiff` 值中减去`Date1`的值从`Date2`以生成不同之处。</span><span class="sxs-lookup"><span data-stu-id="09867-343">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="09867-344">两个值被更改调用程序中。</span><span class="sxs-lookup"><span data-stu-id="09867-344">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="09867-345">**返回值。**</span><span class="sxs-lookup"><span data-stu-id="09867-345">**Return Values.**</span></span> <span data-ttu-id="09867-346">因为`Date1`并`Date2`属于`Date`数据类型，保留日期和时间值精确到 100 毫微秒系统计时器。</span><span class="sxs-lookup"><span data-stu-id="09867-346">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="09867-347">但是，`DateDiff`始终返回为时间间隔数`Long`值。</span><span class="sxs-lookup"><span data-stu-id="09867-347">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="09867-348">如果`Date1`表示的更高版本的日期和时间长于`Date2`，`DateDiff`返回一个负数。</span><span class="sxs-lookup"><span data-stu-id="09867-348">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="09867-349">**一天的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-349">**Day Intervals.**</span></span> <span data-ttu-id="09867-350">如果`Interval`设置为`DateInterval.DayOfYear`，则将其视为相同`DateInterval.Day`，这是因为`DayOfYear`时间间隔内不是有意义的单位。</span><span class="sxs-lookup"><span data-stu-id="09867-350">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="09867-351">**一周的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-351">**Week Intervals.**</span></span> <span data-ttu-id="09867-352">如果`Interval`设置为`DateInterval.WeekOfYear`，则返回值表示之间的包含的一周的第一天的周数`Date1`和包含的一周的第一天`Date2`。</span><span class="sxs-lookup"><span data-stu-id="09867-352">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="09867-353">下面的示例演示如何，这会生成不同的结果从`DateInterval.Weekday`。</span><span class="sxs-lookup"><span data-stu-id="09867-353">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="09867-354">在前面的示例中，`DateDiff`返回 0 到`wD`因为两个日期之间的区别是七天内，但它将返回 1 到`wY`因为没有相应的日历的第一天之间相差七天周。</span><span class="sxs-lookup"><span data-stu-id="09867-354">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="09867-355">**更大的时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-355">**Larger Intervals.**</span></span> <span data-ttu-id="09867-356">如果`Interval`设置为`DateInterval.Year`，返回值的计算纯粹从的年份组成部分`Date1`和`Date2`。</span><span class="sxs-lookup"><span data-stu-id="09867-356">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="09867-357">同样，对于返回值`DateInterval.Month`纯粹从年份和月份的各部分的自变量，以及计算`DateInterval.Quarter`从包含两个日期的季度。</span><span class="sxs-lookup"><span data-stu-id="09867-357">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="09867-358">例如，当比较年 12 月 31 日的下一 1 年月 1 日`DateDiff`返回 1 `DateInterval.Year`， `DateInterval.Quarter`，或`DateInterval.Month`，即使最多只能一天已过。</span><span class="sxs-lookup"><span data-stu-id="09867-358">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="09867-359">例如，有多个纪元的日语区域性`DateDiff`方法不返回年存在差异，如果区别跨越两个或多个纪元。</span><span class="sxs-lookup"><span data-stu-id="09867-359">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="09867-360">相反，您可以计算返回的值之间的差异<xref:System.DateTime.Year%2A>属性，如下面的示例中所示： `date2.Year - date1.Year`。</span><span class="sxs-lookup"><span data-stu-id="09867-360">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="09867-361">**其他时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="09867-361">**Other Intervals.**</span></span> <span data-ttu-id="09867-362">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以查找时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-362">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="09867-363">例如，可以使用`Subtract`方法重载形式之一：<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>减去<xref:System.TimeSpan>从`Date`变量返回另一个`Date`值，和<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>减去`Date`值若要返回<xref:System.TimeSpan>。</span><span class="sxs-lookup"><span data-stu-id="09867-363">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="09867-364">若要了解需要，如以下示例所示的毫秒数的进程的时间。</span><span class="sxs-lookup"><span data-stu-id="09867-364">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="09867-365">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-365">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-366">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-366">Enumeration value</span></span>|<span data-ttu-id="09867-367">字符串值</span><span class="sxs-lookup"><span data-stu-id="09867-367">String value</span></span>|<span data-ttu-id="09867-368">单位的时间差异</span><span class="sxs-lookup"><span data-stu-id="09867-368">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-369">"d"</span><span class="sxs-lookup"><span data-stu-id="09867-369">"d"</span></span>|<span data-ttu-id="09867-370">天</span><span class="sxs-lookup"><span data-stu-id="09867-370">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-371">“y”</span><span class="sxs-lookup"><span data-stu-id="09867-371">"y"</span></span>|<span data-ttu-id="09867-372">天</span><span class="sxs-lookup"><span data-stu-id="09867-372">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-373">“h”</span><span class="sxs-lookup"><span data-stu-id="09867-373">"h"</span></span>|<span data-ttu-id="09867-374">小时</span><span class="sxs-lookup"><span data-stu-id="09867-374">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-375">"n"</span><span class="sxs-lookup"><span data-stu-id="09867-375">"n"</span></span>|<span data-ttu-id="09867-376">分钟</span><span class="sxs-lookup"><span data-stu-id="09867-376">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-377">“m”</span><span class="sxs-lookup"><span data-stu-id="09867-377">"m"</span></span>|<span data-ttu-id="09867-378">月份</span><span class="sxs-lookup"><span data-stu-id="09867-378">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-379">"q"</span><span class="sxs-lookup"><span data-stu-id="09867-379">"q"</span></span>|<span data-ttu-id="09867-380">每个季度</span><span class="sxs-lookup"><span data-stu-id="09867-380">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-381">“s”</span><span class="sxs-lookup"><span data-stu-id="09867-381">"s"</span></span>|<span data-ttu-id="09867-382">秒</span><span class="sxs-lookup"><span data-stu-id="09867-382">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-383">“w”</span><span class="sxs-lookup"><span data-stu-id="09867-383">"w"</span></span>|<span data-ttu-id="09867-384">周</span><span class="sxs-lookup"><span data-stu-id="09867-384">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-385">"ww"</span><span class="sxs-lookup"><span data-stu-id="09867-385">"ww"</span></span>|<span data-ttu-id="09867-386">日历周</span><span class="sxs-lookup"><span data-stu-id="09867-386">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-387">“yyyy”</span><span class="sxs-lookup"><span data-stu-id="09867-387">"yyyy"</span></span>|<span data-ttu-id="09867-388">年</span><span class="sxs-lookup"><span data-stu-id="09867-388">Year</span></span>|  
  
 <span data-ttu-id="09867-389">`DayOfWeek`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-389">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-390">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-390">Enumeration value</span></span>|<span data-ttu-id="09867-391">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-391">Value</span></span>|<span data-ttu-id="09867-392">描述</span><span class="sxs-lookup"><span data-stu-id="09867-392">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-393">0</span><span class="sxs-lookup"><span data-stu-id="09867-393">0</span></span>|<span data-ttu-id="09867-394">系统设置中指定的每周的第一天</span><span class="sxs-lookup"><span data-stu-id="09867-394">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-395">1</span><span class="sxs-lookup"><span data-stu-id="09867-395">1</span></span>|<span data-ttu-id="09867-396">Sunday （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-396">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-397">2</span><span class="sxs-lookup"><span data-stu-id="09867-397">2</span></span>|<span data-ttu-id="09867-398">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-398">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-399">3</span><span class="sxs-lookup"><span data-stu-id="09867-399">3</span></span>|<span data-ttu-id="09867-400">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-400">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-401">4</span><span class="sxs-lookup"><span data-stu-id="09867-401">4</span></span>|<span data-ttu-id="09867-402">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-402">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-403">5</span><span class="sxs-lookup"><span data-stu-id="09867-403">5</span></span>|<span data-ttu-id="09867-404">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-404">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-405">6</span><span class="sxs-lookup"><span data-stu-id="09867-405">6</span></span>|<span data-ttu-id="09867-406">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-406">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-407">7</span><span class="sxs-lookup"><span data-stu-id="09867-407">7</span></span>|<span data-ttu-id="09867-408">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-408">Saturday</span></span>|  
  
 <span data-ttu-id="09867-409">`WeekOfYear`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-409">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-410">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-410">Enumeration value</span></span>|<span data-ttu-id="09867-411">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-411">Value</span></span>|<span data-ttu-id="09867-412">描述</span><span class="sxs-lookup"><span data-stu-id="09867-412">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="09867-413">0</span><span class="sxs-lookup"><span data-stu-id="09867-413">0</span></span>|<span data-ttu-id="09867-414">系统设置中指定的年的第一周</span><span class="sxs-lookup"><span data-stu-id="09867-414">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="09867-415">1</span><span class="sxs-lookup"><span data-stu-id="09867-415">1</span></span>|<span data-ttu-id="09867-416">1 月 1 日所在的周 （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-416">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="09867-417">2</span><span class="sxs-lookup"><span data-stu-id="09867-417">2</span></span>|<span data-ttu-id="09867-418">在新的一年 （符合 ISO 8601 标准第 3.17 节） 中具有至少四天的周</span><span class="sxs-lookup"><span data-stu-id="09867-418">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="09867-419">3</span><span class="sxs-lookup"><span data-stu-id="09867-419">3</span></span>|<span data-ttu-id="09867-420">在新的一年中第一个完整的周</span><span class="sxs-lookup"><span data-stu-id="09867-420">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-421">此示例使用`DateDiff`函数显示在给定的日期和今天之间的天数。</span><span class="sxs-lookup"><span data-stu-id="09867-421">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-422"><paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="09867-422"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-423"><paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</span><span class="sxs-lookup"><span data-stu-id="09867-423"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-424">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-424">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09867-425">返回一个 <see langword="Integer" /> 值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="09867-425">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-426">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-426">Required.</span></span> <span data-ttu-id="09867-427"><see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示要返回的日期/时间值部分。</span><span class="sxs-lookup"><span data-stu-id="09867-427"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="09867-428">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-428">Required.</span></span> <span data-ttu-id="09867-429">要计算的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-429"><see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="09867-430">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-430">Optional.</span></span> <span data-ttu-id="09867-431">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-431">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-432">如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="09867-432">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="FirstWeekOfYearValue"><span data-ttu-id="09867-433">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-433">Optional.</span></span> <span data-ttu-id="09867-434">从 <see langword="FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="09867-434">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="09867-435">如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="09867-435">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-436">返回一个 <see langword="Integer" /> 值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="09867-436">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="09867-437">返回一个 <see langword="Integer" /> 值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="09867-437">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-438">可以使用`DatePart`函数来计算日期/时间值并返回特定的组件。</span><span class="sxs-lookup"><span data-stu-id="09867-438">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="09867-439">例如，可以使用`DatePart`计算一周或在当前小时的某个日期。</span><span class="sxs-lookup"><span data-stu-id="09867-439">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="09867-440">如果愿意`DateInterval.Weekday`有关`Interval`参数，返回的值是与的值一致`FirstDayOfWeek`枚举。</span><span class="sxs-lookup"><span data-stu-id="09867-440">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="09867-441">如果愿意`DateInterval.WeekOfYear`，`DatePart`使用<xref:System.Globalization.Calendar>并<xref:System.Globalization.CultureInfo>类的<xref:System.Globalization>命名空间来确定您的当前设置。</span><span class="sxs-lookup"><span data-stu-id="09867-441">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="09867-442">`FirstDayOfWeekValue`参数会影响使用的计算`DateInterval.Weekday`并`DateInterval.WeekOfYear``Interval`设置。</span><span class="sxs-lookup"><span data-stu-id="09867-442">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="09867-443">`FirstWeekOfYearValue`参数会影响指定的计算`DateInterval.WeekOfYear`为`Interval`。</span><span class="sxs-lookup"><span data-stu-id="09867-443">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="09867-444">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以检索日期/时间部分的过程中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-444">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="09867-445">例如，可以获取的整个日期值`Date`变量，将时间值会设置为午夜，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="09867-445">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="09867-446">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-446">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-447">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-447">Enumeration value</span></span>|<span data-ttu-id="09867-448">String</span><span class="sxs-lookup"><span data-stu-id="09867-448">String</span></span>|<span data-ttu-id="09867-449">要返回的日期/时间值的一部分</span><span class="sxs-lookup"><span data-stu-id="09867-449">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-450">d</span><span class="sxs-lookup"><span data-stu-id="09867-450">d</span></span>|<span data-ttu-id="09867-451">一月的某一日（1 到 31）</span><span class="sxs-lookup"><span data-stu-id="09867-451">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-452">y</span><span class="sxs-lookup"><span data-stu-id="09867-452">y</span></span>|<span data-ttu-id="09867-453">一年的某一日（1 到 366）</span><span class="sxs-lookup"><span data-stu-id="09867-453">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-454">h</span><span class="sxs-lookup"><span data-stu-id="09867-454">h</span></span>|<span data-ttu-id="09867-455">小时</span><span class="sxs-lookup"><span data-stu-id="09867-455">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-456">n</span><span class="sxs-lookup"><span data-stu-id="09867-456">n</span></span>|<span data-ttu-id="09867-457">分钟</span><span class="sxs-lookup"><span data-stu-id="09867-457">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-458">m</span><span class="sxs-lookup"><span data-stu-id="09867-458">m</span></span>|<span data-ttu-id="09867-459">月份</span><span class="sxs-lookup"><span data-stu-id="09867-459">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-460">q</span><span class="sxs-lookup"><span data-stu-id="09867-460">q</span></span>|<span data-ttu-id="09867-461">每个季度</span><span class="sxs-lookup"><span data-stu-id="09867-461">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-462">秒</span><span class="sxs-lookup"><span data-stu-id="09867-462">s</span></span>|<span data-ttu-id="09867-463">秒</span><span class="sxs-lookup"><span data-stu-id="09867-463">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-464">w</span><span class="sxs-lookup"><span data-stu-id="09867-464">w</span></span>|<span data-ttu-id="09867-465">一周的某一日（1 到 7）</span><span class="sxs-lookup"><span data-stu-id="09867-465">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-466">ww</span><span class="sxs-lookup"><span data-stu-id="09867-466">ww</span></span>|<span data-ttu-id="09867-467">一年的某一周（1 到 53）</span><span class="sxs-lookup"><span data-stu-id="09867-467">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-468">yyyy</span><span class="sxs-lookup"><span data-stu-id="09867-468">yyyy</span></span>|<span data-ttu-id="09867-469">年</span><span class="sxs-lookup"><span data-stu-id="09867-469">Year</span></span>|  
  
 <span data-ttu-id="09867-470">`FirstDayOfWeekValue`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-470">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-471">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-471">Enumeration value</span></span>|<span data-ttu-id="09867-472">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-472">Value</span></span>|<span data-ttu-id="09867-473">描述</span><span class="sxs-lookup"><span data-stu-id="09867-473">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-474">0</span><span class="sxs-lookup"><span data-stu-id="09867-474">0</span></span>|<span data-ttu-id="09867-475">系统设置中指定的每周的第一天</span><span class="sxs-lookup"><span data-stu-id="09867-475">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-476">1</span><span class="sxs-lookup"><span data-stu-id="09867-476">1</span></span>|<span data-ttu-id="09867-477">Sunday （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-477">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-478">2</span><span class="sxs-lookup"><span data-stu-id="09867-478">2</span></span>|<span data-ttu-id="09867-479">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-479">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-480">3</span><span class="sxs-lookup"><span data-stu-id="09867-480">3</span></span>|<span data-ttu-id="09867-481">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-481">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-482">4</span><span class="sxs-lookup"><span data-stu-id="09867-482">4</span></span>|<span data-ttu-id="09867-483">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-483">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-484">5</span><span class="sxs-lookup"><span data-stu-id="09867-484">5</span></span>|<span data-ttu-id="09867-485">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-485">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-486">6</span><span class="sxs-lookup"><span data-stu-id="09867-486">6</span></span>|<span data-ttu-id="09867-487">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-487">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-488">7</span><span class="sxs-lookup"><span data-stu-id="09867-488">7</span></span>|<span data-ttu-id="09867-489">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-489">Saturday</span></span>|  
  
 <span data-ttu-id="09867-490">`FirstWeekOfYearValue`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-490">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-491">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-491">Enumeration value</span></span>|<span data-ttu-id="09867-492">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-492">Value</span></span>|<span data-ttu-id="09867-493">描述</span><span class="sxs-lookup"><span data-stu-id="09867-493">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="09867-494">0</span><span class="sxs-lookup"><span data-stu-id="09867-494">0</span></span>|<span data-ttu-id="09867-495">系统设置中指定的年的第一周</span><span class="sxs-lookup"><span data-stu-id="09867-495">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="09867-496">1</span><span class="sxs-lookup"><span data-stu-id="09867-496">1</span></span>|<span data-ttu-id="09867-497">1 月 1 日所在的周 （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-497">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="09867-498">2</span><span class="sxs-lookup"><span data-stu-id="09867-498">2</span></span>|<span data-ttu-id="09867-499">在新的一年 （符合 ISO 8601 标准第 3.17 节） 中具有至少四天的周</span><span class="sxs-lookup"><span data-stu-id="09867-499">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="09867-500">3</span><span class="sxs-lookup"><span data-stu-id="09867-500">3</span></span>|<span data-ttu-id="09867-501">新的一年的第一个完整的周</span><span class="sxs-lookup"><span data-stu-id="09867-501">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-502">此示例采用一个日期，并通过`DatePart`函数中，显示其中发生的一年中的每个季度。</span><span class="sxs-lookup"><span data-stu-id="09867-502">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-503"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="09867-503"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-504"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-504"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-505">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-505">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="09867-506">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-506">Required.</span></span> <span data-ttu-id="09867-507"><see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示要返回的日期/时间值部分。</span><span class="sxs-lookup"><span data-stu-id="09867-507"><see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="09867-508">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-508">Required.</span></span> <span data-ttu-id="09867-509">要计算的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-509"><see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="09867-510">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-510">Optional.</span></span> <span data-ttu-id="09867-511">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-511">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-512">如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="09867-512">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="09867-513">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-513">Optional.</span></span> <span data-ttu-id="09867-514">从 <see langword="FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="09867-514">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="09867-515">如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="09867-515">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-516">返回一个 <see langword="Integer" /> 值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="09867-516">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="09867-517">返回一个 <see langword="Integer" /> 值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="09867-517">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-518">可以使用`DatePart`函数来计算日期/时间值并返回特定的组件。</span><span class="sxs-lookup"><span data-stu-id="09867-518">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="09867-519">例如，可以使用`DatePart`计算一周或在当前小时的某个日期。</span><span class="sxs-lookup"><span data-stu-id="09867-519">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="09867-520">如果愿意`DateInterval.Weekday`有关`Interval`参数，返回的值是与的值一致`FirstDayOfWeek`枚举。</span><span class="sxs-lookup"><span data-stu-id="09867-520">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="09867-521">如果愿意`DateInterval.WeekOfYear`，`DatePart`使用<xref:System.Globalization.Calendar>并<xref:System.Globalization.CultureInfo>类的<xref:System.Globalization>命名空间来确定您的当前设置。</span><span class="sxs-lookup"><span data-stu-id="09867-521">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="09867-522">`FirstDayOfWeekValue`参数会影响使用的计算`DateInterval.Weekday`并`DateInterval.WeekOfYear``Interval`设置。</span><span class="sxs-lookup"><span data-stu-id="09867-522">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="09867-523">`FirstWeekOfYearValue`参数会影响指定的计算`DateInterval.WeekOfYear`为`Interval`。</span><span class="sxs-lookup"><span data-stu-id="09867-523">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="09867-524">由于每个`Date`支持值<xref:System.DateTime>结构，其方法，您可以检索日期/时间部分的过程中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="09867-524">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="09867-525">例如，可以获取的整个日期值`Date`变量，将时间值会设置为午夜，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="09867-525">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="09867-526">`Interval`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-526">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-527">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-527">Enumeration value</span></span>|<span data-ttu-id="09867-528">String</span><span class="sxs-lookup"><span data-stu-id="09867-528">String</span></span>|<span data-ttu-id="09867-529">要返回的日期/时间值的一部分</span><span class="sxs-lookup"><span data-stu-id="09867-529">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="09867-530">d</span><span class="sxs-lookup"><span data-stu-id="09867-530">d</span></span>|<span data-ttu-id="09867-531">一月的某一日（1 到 31）</span><span class="sxs-lookup"><span data-stu-id="09867-531">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="09867-532">y</span><span class="sxs-lookup"><span data-stu-id="09867-532">y</span></span>|<span data-ttu-id="09867-533">一年的某一日（1 到 366）</span><span class="sxs-lookup"><span data-stu-id="09867-533">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="09867-534">h</span><span class="sxs-lookup"><span data-stu-id="09867-534">h</span></span>|<span data-ttu-id="09867-535">小时</span><span class="sxs-lookup"><span data-stu-id="09867-535">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="09867-536">n</span><span class="sxs-lookup"><span data-stu-id="09867-536">n</span></span>|<span data-ttu-id="09867-537">分钟</span><span class="sxs-lookup"><span data-stu-id="09867-537">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="09867-538">m</span><span class="sxs-lookup"><span data-stu-id="09867-538">m</span></span>|<span data-ttu-id="09867-539">月份</span><span class="sxs-lookup"><span data-stu-id="09867-539">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="09867-540">q</span><span class="sxs-lookup"><span data-stu-id="09867-540">q</span></span>|<span data-ttu-id="09867-541">每个季度</span><span class="sxs-lookup"><span data-stu-id="09867-541">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="09867-542">秒</span><span class="sxs-lookup"><span data-stu-id="09867-542">s</span></span>|<span data-ttu-id="09867-543">秒</span><span class="sxs-lookup"><span data-stu-id="09867-543">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="09867-544">w</span><span class="sxs-lookup"><span data-stu-id="09867-544">w</span></span>|<span data-ttu-id="09867-545">一周的某一日（1 到 7）</span><span class="sxs-lookup"><span data-stu-id="09867-545">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="09867-546">ww</span><span class="sxs-lookup"><span data-stu-id="09867-546">ww</span></span>|<span data-ttu-id="09867-547">一年的某一周（1 到 53）</span><span class="sxs-lookup"><span data-stu-id="09867-547">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="09867-548">yyyy</span><span class="sxs-lookup"><span data-stu-id="09867-548">yyyy</span></span>|<span data-ttu-id="09867-549">年</span><span class="sxs-lookup"><span data-stu-id="09867-549">Year</span></span>|  
  
 <span data-ttu-id="09867-550">`FirstDayOfWeekValue`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-550">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-551">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-551">Enumeration value</span></span>|<span data-ttu-id="09867-552">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-552">Value</span></span>|<span data-ttu-id="09867-553">描述</span><span class="sxs-lookup"><span data-stu-id="09867-553">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-554">0</span><span class="sxs-lookup"><span data-stu-id="09867-554">0</span></span>|<span data-ttu-id="09867-555">系统设置中指定的每周的第一天</span><span class="sxs-lookup"><span data-stu-id="09867-555">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-556">1</span><span class="sxs-lookup"><span data-stu-id="09867-556">1</span></span>|<span data-ttu-id="09867-557">Sunday （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-557">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-558">2</span><span class="sxs-lookup"><span data-stu-id="09867-558">2</span></span>|<span data-ttu-id="09867-559">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-559">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-560">3</span><span class="sxs-lookup"><span data-stu-id="09867-560">3</span></span>|<span data-ttu-id="09867-561">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-561">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-562">4</span><span class="sxs-lookup"><span data-stu-id="09867-562">4</span></span>|<span data-ttu-id="09867-563">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-563">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-564">5</span><span class="sxs-lookup"><span data-stu-id="09867-564">5</span></span>|<span data-ttu-id="09867-565">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-565">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-566">6</span><span class="sxs-lookup"><span data-stu-id="09867-566">6</span></span>|<span data-ttu-id="09867-567">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-567">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-568">7</span><span class="sxs-lookup"><span data-stu-id="09867-568">7</span></span>|<span data-ttu-id="09867-569">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-569">Saturday</span></span>|  
  
 <span data-ttu-id="09867-570">`FirstWeekOfYearValue`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-570">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-571">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-571">Enumeration value</span></span>|<span data-ttu-id="09867-572">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-572">Value</span></span>|<span data-ttu-id="09867-573">描述</span><span class="sxs-lookup"><span data-stu-id="09867-573">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="09867-574">0</span><span class="sxs-lookup"><span data-stu-id="09867-574">0</span></span>|<span data-ttu-id="09867-575">系统设置中指定的年的第一周</span><span class="sxs-lookup"><span data-stu-id="09867-575">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="09867-576">1</span><span class="sxs-lookup"><span data-stu-id="09867-576">1</span></span>|<span data-ttu-id="09867-577">1 月 1 日所在的周 （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-577">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="09867-578">2</span><span class="sxs-lookup"><span data-stu-id="09867-578">2</span></span>|<span data-ttu-id="09867-579">在新的一年 （符合 ISO 8601 标准第 3.17 节） 中具有至少四天的周</span><span class="sxs-lookup"><span data-stu-id="09867-579">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="09867-580">3</span><span class="sxs-lookup"><span data-stu-id="09867-580">3</span></span>|<span data-ttu-id="09867-581">新的一年的第一个完整的周</span><span class="sxs-lookup"><span data-stu-id="09867-581">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-582">此示例采用一个日期，并通过`DatePart`函数中，显示其中发生的一年中的每个季度。</span><span class="sxs-lookup"><span data-stu-id="09867-582">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-583"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="09867-583"><paramref name="Interval" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-584"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="09867-584"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-585">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-585">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year"><span data-ttu-id="09867-586">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-586">Required.</span></span> <span data-ttu-id="09867-587">范围为 1 到 9999 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-587"><see langword="Integer" /> expression from 1 through 9999.</span></span> <span data-ttu-id="09867-588">但是，也接受小于此范围的值。</span><span class="sxs-lookup"><span data-stu-id="09867-588">However, values below this range are also accepted.</span></span> <span data-ttu-id="09867-589">如果 <paramref name="Year" /> 为 0 到 99，它被解释为介于 1930 年和 2029 年之间，下面的"备注"部分对此做了解释。</span><span class="sxs-lookup"><span data-stu-id="09867-589">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span></span> <span data-ttu-id="09867-590">如果 <paramref name="Year" /> 小于 1，则从当前年份减去它。</span><span class="sxs-lookup"><span data-stu-id="09867-590">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span></span></param>
        <param name="Month"><span data-ttu-id="09867-591">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-591">Required.</span></span> <span data-ttu-id="09867-592">范围为 1 到 12 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-592"><see langword="Integer" /> expression from 1 through 12.</span></span> <span data-ttu-id="09867-593">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="09867-593">However, values outside this range are also accepted.</span></span> <span data-ttu-id="09867-594"><paramref name="Month" /> 值的偏移量为 1，且该值应用于所计算年份的 1 月。</span><span class="sxs-lookup"><span data-stu-id="09867-594">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span></span> <span data-ttu-id="09867-595">换言之，就是 1 月加上 (<paramref name="Month" /> - 1)。</span><span class="sxs-lookup"><span data-stu-id="09867-595">In other words, (<paramref name="Month" /> - 1) is added to January.</span></span> <span data-ttu-id="09867-596">若有必要则对年份进行重新计算。</span><span class="sxs-lookup"><span data-stu-id="09867-596">The year is recalculated if necessary.</span></span> <span data-ttu-id="09867-597">以下的结果阐释了这种效果：</span><span class="sxs-lookup"><span data-stu-id="09867-597">The following results illustrate this effect:</span></span> 
<span data-ttu-id="09867-598">如果 <paramref name="Month" /> 为 1，则结果为所计算年份的 1 月。</span><span class="sxs-lookup"><span data-stu-id="09867-598">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span></span>  
  
<span data-ttu-id="09867-599">如果 <paramref name="Month" /> 为 0，则结果为上一年的 12 月。</span><span class="sxs-lookup"><span data-stu-id="09867-599">If <paramref name="Month" /> is 0, the result is December of the previous year.</span></span>  
  
<span data-ttu-id="09867-600">如果 <paramref name="Month" /> 为 -1，则结果为上一年的 11 月。</span><span class="sxs-lookup"><span data-stu-id="09867-600">If <paramref name="Month" /> is -1, the result is November of the previous year.</span></span>  
  
<span data-ttu-id="09867-601">如果 <paramref name="Month" /> 为 13，则结果为下一年的 1 月。</span><span class="sxs-lookup"><span data-stu-id="09867-601">If <paramref name="Month" /> is 13, the result is January of the following year.</span></span></param>
        <param name="Day"><span data-ttu-id="09867-602">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-602">Required.</span></span> <span data-ttu-id="09867-603">范围为 1 到 31 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-603"><see langword="Integer" /> expression from 1 through 31.</span></span> <span data-ttu-id="09867-604">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="09867-604">However, values outside this range are also accepted.</span></span> <span data-ttu-id="09867-605"><paramref name="Day" /> 值偏移量为 1，该值应用于所计算月份的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-605">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span></span> <span data-ttu-id="09867-606">换言之，就是该月份的第一天加上 (<paramref name="Day" /> - 1)。</span><span class="sxs-lookup"><span data-stu-id="09867-606">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span></span> <span data-ttu-id="09867-607">若有必要，则对月份和年份进行重新计算。</span><span class="sxs-lookup"><span data-stu-id="09867-607">The month and year are recalculated if necessary.</span></span> <span data-ttu-id="09867-608">以下的结果阐释了这种效果：</span><span class="sxs-lookup"><span data-stu-id="09867-608">The following results illustrate this effect:</span></span> 
<span data-ttu-id="09867-609">如果 <paramref name="Day" /> 为 1，则结果为所计算月份的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-609">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span></span>  
  
<span data-ttu-id="09867-610">如果 <paramref name="Day" /> 为 0，则结果为上一月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="09867-610">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span></span>  
  
<span data-ttu-id="09867-611">如果 <paramref name="Day" /> 为 -1，则结果为上一月份的倒数第二天。</span><span class="sxs-lookup"><span data-stu-id="09867-611">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span></span>  
  
<span data-ttu-id="09867-612">如果 <paramref name="Day" /> 超过当前月份的月末，则结果为下一月份中相应的一天。</span><span class="sxs-lookup"><span data-stu-id="09867-612">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span></span> <span data-ttu-id="09867-613">例如，如果 <paramref name="Month" /> 为 4 且 <paramref name="Day" /> 为 31，则结果为 5 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="09867-613">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span></span></param>
        <summary><span data-ttu-id="09867-614">返回表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="09867-614">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="09867-615">返回表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="09867-615">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-616">在 Windows 98 或 Windows 2000 下的两位数年份`Year`参数基于用户定义的计算机设置进行解释。</span><span class="sxs-lookup"><span data-stu-id="09867-616">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="09867-617">默认设置是从 0 到 29 值被解释为 2000 年 – 2029 年之间，并从 30 到 99 之间的值被解释为 1930年 – 1999 年。</span><span class="sxs-lookup"><span data-stu-id="09867-617">The default settings are that values from 0 through 29 are interpreted as the years 2000–2029, and values from 30 through 99 are interpreted as the years 1930–1999.</span></span> <span data-ttu-id="09867-618">对于所有其他`Year`参数，使用四位数年份; 例如，选择 1924年。</span><span class="sxs-lookup"><span data-stu-id="09867-618">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="09867-619">早期版本的 Windows 解释两位数年份基于前面所述的默认设置。</span><span class="sxs-lookup"><span data-stu-id="09867-619">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="09867-620">若要确保该函数返回正确的值，请使用四位数字`Year`。</span><span class="sxs-lookup"><span data-stu-id="09867-620">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="09867-621">下面的示例演示负、 零，并且正参数值。</span><span class="sxs-lookup"><span data-stu-id="09867-621">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="09867-622">在这里，`DateSerial`函数返回`Date`表示 10 年之前的当前年份; 年 3 月的第一天的前一天换而言之，十年前年 2 月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="09867-622">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="09867-623">如果任一`Month`或`Day`超过其正常范围内，应用于根据下一个较大的单位。</span><span class="sxs-lookup"><span data-stu-id="09867-623">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="09867-624">例如，如果指定 32 天，它计算为一个月和一到四天，具体取决于值`Month`。</span><span class="sxs-lookup"><span data-stu-id="09867-624">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="09867-625">如果`Year`大于 9999，或如果任一参数超出范围-2147483648 到 2147483647，<xref:System.ArgumentException>发生错误。</span><span class="sxs-lookup"><span data-stu-id="09867-625">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="09867-626">如果由三个参数指定的日期到 9999，早于 1，或晚于 12 月 31 日 23:59:59 年的 1 月 1 日 00:00:00<xref:System.ArgumentOutOfRangeException>发生错误。</span><span class="sxs-lookup"><span data-stu-id="09867-626">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="09867-627">`Date`数据类型包括时间组件。</span><span class="sxs-lookup"><span data-stu-id="09867-627">The `Date` data type includes time components.</span></span> <span data-ttu-id="09867-628">`DateSerial` 设置所有这些为 0，因此返回的值表示计算的一天的开始。</span><span class="sxs-lookup"><span data-stu-id="09867-628">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="09867-629">由于每个`Date`值受<xref:System.DateTime>结构，其方法，您可以在编写的其他选项`Date`值。</span><span class="sxs-lookup"><span data-stu-id="09867-629">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="09867-630">例如，可以使用某个重载<xref:System.DateTime.%23ctor%2A>构造函数来填充`Date`使用所需的组件组合的变量。</span><span class="sxs-lookup"><span data-stu-id="09867-630">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="09867-631">下面的示例设置`NewDateTime`1978 年 6，在上午 8:30 秒的十分之一到：</span><span class="sxs-lookup"><span data-stu-id="09867-631">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="09867-632">此示例使用`DateSerial`函数以返回指定的年、 月和日的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-632">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-633">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-633">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-634">返回或设置一个 <see langword="String" /> 值，该值表示与系统对应的当前日期。</span><span class="sxs-lookup"><span data-stu-id="09867-634">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="09867-635">返回或设置一个 <see langword="String" /> 值，该值表示与系统对应的当前日期。</span><span class="sxs-lookup"><span data-stu-id="09867-635">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-636">`DateString` 以 MM dd yyyy 格式，它使用缩写的月份名称返回系统日期。</span><span class="sxs-lookup"><span data-stu-id="09867-636">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="09867-637">接受日期的格式是 yyyy，M-d-M d y、 年-月-日和年-/ y。</span><span class="sxs-lookup"><span data-stu-id="09867-637">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="09867-638">这适用于除使用双字节字符集 (DBCS) 的所有系统区域设置。</span><span class="sxs-lookup"><span data-stu-id="09867-638">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="09867-639">如果系统区域设置使用双字节字符集`DateString`中的年-月-日格式返回系统日期。</span><span class="sxs-lookup"><span data-stu-id="09867-639">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="09867-640">使用设置系统区域设置**时钟、 语言和区域**中的项**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="09867-640">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="09867-641">**请注意**`DateString`属性仅在为年-月-日格式返回系统日期`zh`（简体中文）， `ko` （朝鲜语） 和`ja`（日语） 系统区域设置，如果您正在运行中的 Visual BasicSilverlight。</span><span class="sxs-lookup"><span data-stu-id="09867-641">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="09867-642">获取或设置当前系统时间作为`String`，使用<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-642">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="09867-643">若要获取当前系统日期或时间，格式为您的区域设置，或自定义格式，请提供<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>属性设置为<xref:Microsoft.VisualBasic.Strings.Format%2A>函数，并指定预定义或用户定义的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="09867-643">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="09867-644">下面的示例演示这一操作。</span><span class="sxs-lookup"><span data-stu-id="09867-644">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="09867-645">若要访问的当前系统日期`Date`，使用<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-645">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09867-646">设置系统日期或时间要求非托管的代码的权限，这可能会影响在部分信任情况下执行。</span><span class="sxs-lookup"><span data-stu-id="09867-646">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="09867-647">有关详细信息，请参阅<xref:System.Security.Permissions.SecurityPermission>并[代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="09867-647">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-648">下面的示例使用`DateString`属性来显示当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="09867-648">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-649">用于设置 <see langword="DateString" /> 值的格式无效。</span><span class="sxs-lookup"><span data-stu-id="09867-649">Invalid format used to set the value of <see langword="DateString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate"><span data-ttu-id="09867-650">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-650">Required.</span></span> <span data-ttu-id="09867-651"><see langword="String" /> 表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-651"><see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="09867-652">返回一个 <see langword="Date" /> 值，该值包含用字符串表示的日期信息，其时间信息设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="09867-652">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="09867-653"><see langword="Date" /> 值，它包含由字符串表示的日期信息，其中的时间信息设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="09867-653"><see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-654">如果`StringDate`包括仅从 1 到 12 由有效的日期分隔符分隔的数字`DateValue`将识别月、 日和年根据为你的系统指定的短日期格式的顺序。</span><span class="sxs-lookup"><span data-stu-id="09867-654">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="09867-655">`DateValue` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-655">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-656">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-656">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="09867-657">可以通过设置替代的短日期格式<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>的属性<xref:System.Globalization.DateTimeFormatInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-657">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="09867-658">`DateValue` 识别长、 缩写形式和数字的窗体中的月份名称。</span><span class="sxs-lookup"><span data-stu-id="09867-658">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="09867-659">例如，除了识别 12/30/1991年和 12/30/91 `DateValue` 1991 年 12 月 30 和 1991 年 12 月 30，还可以识别。</span><span class="sxs-lookup"><span data-stu-id="09867-659">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="09867-660">如果的年份部分`StringDate`省略，则`DateValue`使用来自计算机的系统日期的当前年份。</span><span class="sxs-lookup"><span data-stu-id="09867-660">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="09867-661">如果`StringDate`自变量包含时间的信息，`DateValue`不包括在返回的值。</span><span class="sxs-lookup"><span data-stu-id="09867-661">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="09867-662">但是，如果`StringDate`包括无效的时间信息，例如"89: 98"<xref:System.InvalidCastException>发生错误。</span><span class="sxs-lookup"><span data-stu-id="09867-662">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-663">此示例使用`DateValue`函数将字符串转换为日期。</span><span class="sxs-lookup"><span data-stu-id="09867-663">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="09867-664">此外可以使用的日期文本将直接分配到日期`Object`或`Date`变量，例如， `oldDate = #2/12/69#`。</span><span class="sxs-lookup"><span data-stu-id="09867-664">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-665"><paramref name="StringDate" /> 包含无效的时间信息。</span><span class="sxs-lookup"><span data-stu-id="09867-665"><paramref name="StringDate" /> includes invalid time information.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="09867-666">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09867-666">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="09867-667">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-667">Required.</span></span> <span data-ttu-id="09867-668">要从中提取天的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-668"><see langword="Date" /> value from which you want to extract the day.</span></span></param>
        <summary><span data-ttu-id="09867-669">返回一个 <see langword="Integer" /> 值，范围在 1 到 31 之间，表示月中的一天。</span><span class="sxs-lookup"><span data-stu-id="09867-669">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span></span></summary>
        <returns><span data-ttu-id="09867-670">返回一个 <see langword="Integer" /> 值，范围在 1 到 31 之间，表示月中的一天。</span><span class="sxs-lookup"><span data-stu-id="09867-670">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-671">如果您使用`Day`函数，您可能需要限定其与`Microsoft.VisualBasic`命名空间，因为<xref:System.Windows.Forms>命名空间定义<xref:System.Windows.Forms.Day>为枚举。</span><span class="sxs-lookup"><span data-stu-id="09867-671">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="09867-672">下面的示例演示如何限定`Day`解决此多义性问题：</span><span class="sxs-lookup"><span data-stu-id="09867-672">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="09867-673">你还可以通过调用获取每月天数`DatePart`并指定`DateInterval.Day`有关*间隔*参数。</span><span class="sxs-lookup"><span data-stu-id="09867-673">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-674">下面的示例使用`Day`函数从指定日期中获取每月天数。</span><span class="sxs-lookup"><span data-stu-id="09867-674">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="09867-675">在开发环境中，日期文本显示在标准短格式 （例如"12/02/1969") 使用您的代码的区域设置。</span><span class="sxs-lookup"><span data-stu-id="09867-675">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="09867-676">`Day` 受到限定，以将其从区分开来<xref:System.Windows.Forms.Day?displayProperty=nameWithType>枚举。</span><span class="sxs-lookup"><span data-stu-id="09867-676">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="09867-677">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-677">Required.</span></span> <span data-ttu-id="09867-678">要从中提取小时的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-678"><see langword="Date" /> value from which you want to extract the hour.</span></span></param>
        <summary><span data-ttu-id="09867-679">返回一个 0 到 23 之间的 <see langword="Integer" /> 值，它表示一天中的某小时。</span><span class="sxs-lookup"><span data-stu-id="09867-679">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span></span></summary>
        <returns><span data-ttu-id="09867-680">返回一个 0 到 23 之间的 <see langword="Integer" /> 值，它表示一天中的某小时。</span><span class="sxs-lookup"><span data-stu-id="09867-680">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-681">你还可以通过调用获取一天的小时`DatePart`并指定`DateInterval.Hour`为`Interval`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-681">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-682">此示例使用`Hour`函数来获取从指定的时间的小时。</span><span class="sxs-lookup"><span data-stu-id="09867-682">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="09867-683">在开发环境中，以使用你的代码的区域设置的短时间格式显示时间文字。</span><span class="sxs-lookup"><span data-stu-id="09867-683">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="09867-684">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-684">Required.</span></span> <span data-ttu-id="09867-685">要从中提取分钟的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-685"><see langword="Date" /> value from which you want to extract the minute.</span></span></param>
        <summary><span data-ttu-id="09867-686">返回一个 0 到 59 之间的 <see langword="Integer" /> 值，它表示一小时中的某分钟。</span><span class="sxs-lookup"><span data-stu-id="09867-686">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span></span></summary>
        <returns><span data-ttu-id="09867-687">返回一个 0 到 59 之间的 <see langword="Integer" /> 值，它表示一小时中的某分钟。</span><span class="sxs-lookup"><span data-stu-id="09867-687">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-688">你还可以通过调用获取小时的分钟`DatePart`并指定`DateInterval.Minute`为`Interval`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-688">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-689">此示例使用`Minute`函数获取从指定的时间的小时的分钟。</span><span class="sxs-lookup"><span data-stu-id="09867-689">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="09867-690">在开发环境中，以使用你的代码的区域设置的短时间格式显示时间文字。</span><span class="sxs-lookup"><span data-stu-id="09867-690">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="09867-691">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-691">Required.</span></span> <span data-ttu-id="09867-692">要从中提取月的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-692"><see langword="Date" /> value from which you want to extract the month.</span></span></param>
        <summary><span data-ttu-id="09867-693">返回一个 <see langword="Integer" /> 值，范围为 1 到 12，表示一年中的月份。</span><span class="sxs-lookup"><span data-stu-id="09867-693">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span></span></summary>
        <returns><span data-ttu-id="09867-694">返回一个 <see langword="Integer" /> 值，范围为 1 到 12，表示一年中的月份。</span><span class="sxs-lookup"><span data-stu-id="09867-694">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-695">你还可以通过调用获取一年中的月份`DatePart`并指定`DateInterval.Month`为`Interval`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-695">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-696">此示例使用`Month`函数获取从指定日期的月份。</span><span class="sxs-lookup"><span data-stu-id="09867-696">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="09867-697">在开发环境中，使用你的代码的区域设置以短日期格式显示文本的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-697">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month"><span data-ttu-id="09867-698">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-698">Required.</span></span> <span data-ttu-id="09867-699"><see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="09867-699"><see langword="Integer" />.</span></span> <span data-ttu-id="09867-700">以数字表示的月份，介于 1 到 13 之间；1 表示 1 月，12 表示 12 月。</span><span class="sxs-lookup"><span data-stu-id="09867-700">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span></span> <span data-ttu-id="09867-701">值 13 可用于 13 月制日历。</span><span class="sxs-lookup"><span data-stu-id="09867-701">You can use the value 13 with a 13-month calendar.</span></span> <span data-ttu-id="09867-702">若系统正在使用 12 月制日历，而 <paramref name="Month" /> 为 13，则 <see langword="MonthName" /> 返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="09867-702">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <see langword="MonthName" /> returns an empty string.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="09867-703">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-703">Optional.</span></span> <span data-ttu-id="09867-704">指示是否缩写月份名称的 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-704"><see langword="Boolean" /> value that indicates if the month name is to be abbreviated.</span></span> <span data-ttu-id="09867-705">若省略，则默认为 <see langword="False" />，表示不缩写月份名。</span><span class="sxs-lookup"><span data-stu-id="09867-705">If omitted, the default is <see langword="False" />, which means the month name is not abbreviated.</span></span></param>
        <summary><span data-ttu-id="09867-706">返回包含指定月份名称的 <see langword="String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-706">Returns a <see langword="String" /> value containing the name of the specified month.</span></span></summary>
        <returns><span data-ttu-id="09867-707">返回包含指定月份名称的 <see langword="String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-707">Returns a <see langword="String" /> value containing the name of the specified month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-708">返回的字符串`MonthName`取决于不在输入参数，而且还**区域选项**Windows 中指定的设置**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="09867-708">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09867-709">`MonthName` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-709">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-710">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-710">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-711">此示例使用`MonthName`函数来确定通过给定整数的月份的名称。</span><span class="sxs-lookup"><span data-stu-id="09867-711">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="09867-712">布尔值将确定是否完整名称 (`False`) 或缩写的名称 (`True`) 将显示。</span><span class="sxs-lookup"><span data-stu-id="09867-712">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-713"><paramref name="Month" /> 小于 1 或大于 13。</span><span class="sxs-lookup"><span data-stu-id="09867-713"><paramref name="Month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-714">返回一个 <see langword="Date" /> 值，该值包含与系统对应的当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="09867-714">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span></span></summary>
        <value><span data-ttu-id="09867-715">返回一个 <see langword="Date" /> 值，该值包含与系统对应的当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="09867-715">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-716">若要设置系统日期，使用<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-716">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="09867-717">若要设置系统时间，使用<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-717">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-718">下面的示例使用`Now`属性以返回当前系统日期和时间。</span><span class="sxs-lookup"><span data-stu-id="09867-718">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="09867-719">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-719">Required.</span></span> <span data-ttu-id="09867-720">要从中提取秒的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-720"><see langword="Date" /> value from which you want to extract the second.</span></span></param>
        <summary><span data-ttu-id="09867-721">返回一个 0 到 59 之间的 <see langword="Integer" /> 值，它表示一分钟中的某秒。</span><span class="sxs-lookup"><span data-stu-id="09867-721">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span></span></summary>
        <returns><span data-ttu-id="09867-722">返回一个 0 到 59 之间的 <see langword="Integer" /> 值，它表示一分钟中的某秒。</span><span class="sxs-lookup"><span data-stu-id="09867-722">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-723">你还可以通过调用获取的第二个分钟`DatePart`并指定`DateInterval.Second`为`Interval`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-723">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-724">下面的示例使用`Second`函数获取从指定的时间的秒数第二个。</span><span class="sxs-lookup"><span data-stu-id="09867-724">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="09867-725">在开发环境中，以使用你的代码的区域设置的短时间格式显示时间文字。</span><span class="sxs-lookup"><span data-stu-id="09867-725">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-726">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</span><span class="sxs-lookup"><span data-stu-id="09867-726">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="09867-727">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</span><span class="sxs-lookup"><span data-stu-id="09867-727">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-728">`Date`数据类型包括日期组件。</span><span class="sxs-lookup"><span data-stu-id="09867-728">The `Date` data type includes date components.</span></span> <span data-ttu-id="09867-729">返回系统时间时`TimeOfDay`设置为 1，所有这些，因此返回的值表示 1 年的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-729">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="09867-730">设置系统时间时`TimeOfDay`忽略日期部分。</span><span class="sxs-lookup"><span data-stu-id="09867-730">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="09867-731">若要访问当前系统时间作为`String`，使用<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-731">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="09867-732">若要获取或设置当前系统日期，使用<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-732">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09867-733">设置系统日期或时间要求非托管的代码的权限，这可能会影响在部分信任情况下执行。</span><span class="sxs-lookup"><span data-stu-id="09867-733">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="09867-734">有关详细信息，请参阅<xref:System.Security.Permissions.SecurityPermission>并[代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="09867-734">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-735">此示例使用`TimeOfDay`属性以返回当前系统时间。</span><span class="sxs-lookup"><span data-stu-id="09867-735">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-736">返回一个 <see langword="Double" /> 值，该值表示午夜之后的秒数。</span><span class="sxs-lookup"><span data-stu-id="09867-736">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span></span></summary>
        <value><span data-ttu-id="09867-737">返回一个 <see langword="Double" /> 值，该值表示午夜之后的秒数。</span><span class="sxs-lookup"><span data-stu-id="09867-737">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-738">`Timer`属性返回最新的午夜以来的秒数和毫秒数。</span><span class="sxs-lookup"><span data-stu-id="09867-738">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="09867-739">秒是中的返回值的整数部分和毫秒数为的小数部分。</span><span class="sxs-lookup"><span data-stu-id="09867-739">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-740">此示例使用`Timer`暂停应用程序的属性。</span><span class="sxs-lookup"><span data-stu-id="09867-740">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="09867-741">它可以执行其他处理期间暂停。</span><span class="sxs-lookup"><span data-stu-id="09867-741">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="09867-742">请注意，必须限定`Timer`具有属性<xref:Microsoft.VisualBasic?displayProperty=nameWithType>命名空间，因为`Timer`也是在定义的类<xref:System.Threading?displayProperty=nameWithType>， <xref:System.Timers?displayProperty=nameWithType>，并<xref:System.Windows.Forms?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-742">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour"><span data-ttu-id="09867-743">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-743">Required.</span></span> <span data-ttu-id="09867-744">范围为 0 到 23 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-744"><see langword="Integer" /> expression from 0 through 23.</span></span> <span data-ttu-id="09867-745">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="09867-745">However, values outside this range are also accepted.</span></span></param>
        <param name="Minute"><span data-ttu-id="09867-746">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-746">Required.</span></span> <span data-ttu-id="09867-747">范围为 0 到 59 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-747"><see langword="Integer" /> expression from 0 through 59.</span></span> <span data-ttu-id="09867-748">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="09867-748">However, values outside this range are also accepted.</span></span> <span data-ttu-id="09867-749"><paramref name="Minute" /> 的值加入所计算的小时，因此负值指定该小时前的某几分钟。</span><span class="sxs-lookup"><span data-stu-id="09867-749">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span></span></param>
        <param name="Second"><span data-ttu-id="09867-750">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-750">Required.</span></span> <span data-ttu-id="09867-751">范围为 0 到 59 的 <see langword="Integer" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="09867-751"><see langword="Integer" /> expression from 0 through 59.</span></span> <span data-ttu-id="09867-752">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="09867-752">However, values outside this range are also accepted.</span></span> <span data-ttu-id="09867-753"><paramref name="Second" /> 的值加入所计算的分钟，因此负值指定该分钟前的某几秒。</span><span class="sxs-lookup"><span data-stu-id="09867-753">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span></span></param>
        <summary><span data-ttu-id="09867-754">返回一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="09867-754">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="09867-755">返回一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="09867-755">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-756">下面的示例演示负、 零，并且正参数值。</span><span class="sxs-lookup"><span data-stu-id="09867-756">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="09867-757">`TimeSerial`函数将返回表示中午或上午 8:45:00 前三个小时之前的 15 分钟的时间。</span><span class="sxs-lookup"><span data-stu-id="09867-757">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="09867-758">如果任一`Minute`或`Second`超过其正常范围内，应用于根据下一个较大的单位。</span><span class="sxs-lookup"><span data-stu-id="09867-758">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="09867-759">例如，如果指定为 75 分钟，则将它评估为 1 小时 15 分钟。</span><span class="sxs-lookup"><span data-stu-id="09867-759">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="09867-760">`TimeSerial` 减少的总秒数，取模 86,400，这是一天中的秒数。</span><span class="sxs-lookup"><span data-stu-id="09867-760">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="09867-761">因此，返回的时间始终为 00:00:00 和 23:59:59 之间。</span><span class="sxs-lookup"><span data-stu-id="09867-761">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="09867-762">`Date`数据类型包括日期组件。</span><span class="sxs-lookup"><span data-stu-id="09867-762">The `Date` data type includes date components.</span></span> <span data-ttu-id="09867-763">`TimeSerial` 设置所有这些为 1，因此返回的值表示 1 年的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-763">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="09867-764">但是，如果自变量的值导致计算出的时间超过 24 小时，一天会相应增加。</span><span class="sxs-lookup"><span data-stu-id="09867-764">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="09867-765">在下面的示例的值`Hour`和`Minute`导致的合并时间为超过 24 小时。</span><span class="sxs-lookup"><span data-stu-id="09867-765">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="09867-766">如果参数的值会导致负的计算时间，日期信息设置为 0001 年 1 月 1 日和时间信息调整在 00:00:00 到 23:59:59 之间。</span><span class="sxs-lookup"><span data-stu-id="09867-766">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="09867-767">但是，如果计算出的时间为小于负 24 小时，<xref:System.ArgumentOutOfRangeException>发生错误。</span><span class="sxs-lookup"><span data-stu-id="09867-767">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="09867-768">由于每个`Date`值受<xref:System.DateTime?displayProperty=nameWithType>结构，其方法，您可以在编写的其他选项`Date`值。</span><span class="sxs-lookup"><span data-stu-id="09867-768">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="09867-769">例如，您可以使用其中一个重载<xref:System.DateTime.%23ctor%2A>构造函数来填充`Date`使用所需的组件组合的变量。</span><span class="sxs-lookup"><span data-stu-id="09867-769">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="09867-770">下面的示例设置`newDateTime`1978 年 6，在上午 8:30 秒的十分之一到：</span><span class="sxs-lookup"><span data-stu-id="09867-770">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="09867-771">下面的示例使用`TimeSerial`函数以返回指定的小时、 分钟和秒的时间。</span><span class="sxs-lookup"><span data-stu-id="09867-771">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-772">-2,147,483,648 到 2,147,483,647 范围以外的参数。</span><span class="sxs-lookup"><span data-stu-id="09867-772">An argument is outside the range -2,147,483,648 through 2,147,483,647</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09867-773">计算所得的时间小于负 24 小时。</span><span class="sxs-lookup"><span data-stu-id="09867-773">Calculated time is less than negative 24 hours.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-774">返回或设置一个 <see langword="String" /> 值，它表示系统的当前时间（日）。</span><span class="sxs-lookup"><span data-stu-id="09867-774">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="09867-775">返回或设置一个 <see langword="String" /> 值，它表示系统的当前时间（日）。</span><span class="sxs-lookup"><span data-stu-id="09867-775">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-776">`TimeString` 始终返回系统时间为"hh: mm:"，这是 24 小时格式。</span><span class="sxs-lookup"><span data-stu-id="09867-776">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="09867-777">此格式是区域性不变，这意味着即使更改不会更改**区域选项**中**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="09867-777">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="09867-778">获取或设置的当前系统日期`String`，使用<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-778">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="09867-779">若要获取当前系统日期或时间，格式为您的区域设置，或自定义格式，请提供<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>属性设置为<xref:Microsoft.VisualBasic.Strings.Format%2A>函数，并指定预定义或用户定义的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="09867-779">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="09867-780">下面的示例演示这一操作。</span><span class="sxs-lookup"><span data-stu-id="09867-780">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="09867-781">若要访问当前系统时间作为`Date`，使用<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-781">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09867-782">设置系统日期或时间要求非托管的代码的权限，这可能会影响它在部分信任情况下执行。</span><span class="sxs-lookup"><span data-stu-id="09867-782">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="09867-783">有关详细信息，请参阅<xref:System.Security.Permissions.SecurityPermission>并[代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="09867-783">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-784">此示例使用`TimeString`属性来显示当前系统时间。</span><span class="sxs-lookup"><span data-stu-id="09867-784">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-785">用于设置 <see langword="TimeString" /> 值的格式无效。</span><span class="sxs-lookup"><span data-stu-id="09867-785">Invalid format used to set the value of <see langword="TimeString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime"><span data-ttu-id="09867-786">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-786">Required.</span></span> <span data-ttu-id="09867-787"><see langword="String" /> 表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="09867-787"><see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="09867-788">返回一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="09867-788">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="09867-789">返回一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="09867-789">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-790">可以输入有效的时间采用 12 小时或 24 小时制。</span><span class="sxs-lookup"><span data-stu-id="09867-790">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="09867-791">例如，`"2:24 P.M."`并`"14:24"`都是有效`StringTime`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-791">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="09867-792">如果`StringTime`自变量包含日期信息`TimeValue`不包括在返回的值。</span><span class="sxs-lookup"><span data-stu-id="09867-792">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="09867-793">但是，如果`StringTime`包含无效的日期信息，例如"年 1 月 32，"<xref:System.InvalidCastException>发生错误。</span><span class="sxs-lookup"><span data-stu-id="09867-793">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-794">下面的示例使用`TimeValue`函数将字符串转换到某个时间。</span><span class="sxs-lookup"><span data-stu-id="09867-794">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="09867-795">此外可以使用的日期文本将直接分配一次对`Date`变量。</span><span class="sxs-lookup"><span data-stu-id="09867-795">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="09867-796"><paramref name="StringTime" /> 包含无效的日期信息。</span><span class="sxs-lookup"><span data-stu-id="09867-796"><paramref name="StringTime" /> includes invalid date information.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09867-797">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</span><span class="sxs-lookup"><span data-stu-id="09867-797">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="09867-798">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</span><span class="sxs-lookup"><span data-stu-id="09867-798">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-799">`Date`数据类型包括时间组件。</span><span class="sxs-lookup"><span data-stu-id="09867-799">The `Date` data type includes time components.</span></span> <span data-ttu-id="09867-800">返回系统日期时`Today`设置所有这些为 0，因此返回的值表示午夜 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="09867-800">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="09867-801">设置系统日期时`Today`忽略时间组件。</span><span class="sxs-lookup"><span data-stu-id="09867-801">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="09867-802">若要访问的当前系统日期`String`，使用<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-802">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="09867-803">若要获取或设置当前系统时间，使用<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09867-803">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09867-804">设置系统日期或时间要求非托管的代码的权限，这可能会影响在部分信任情况下执行。</span><span class="sxs-lookup"><span data-stu-id="09867-804">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="09867-805">有关详细信息，请参阅<xref:System.Security.Permissions.SecurityPermission>并[代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="09867-805">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-806">此示例使用`Today`属性以返回当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="09867-806">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="09867-807">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-807">Required.</span></span> <span data-ttu-id="09867-808">要确定属于一周中的哪一天的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-808"><see langword="Date" /> value for which you want to determine the day of the week.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="09867-809">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-809">Optional.</span></span> <span data-ttu-id="09867-810">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-810">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-811">如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="09867-811">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-812">返回一个 <see langword="Integer" /> 值，该值包含表示周中某一天的数。</span><span class="sxs-lookup"><span data-stu-id="09867-812">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span></span></summary>
        <returns><span data-ttu-id="09867-813">返回一个 <see langword="Integer" /> 值，该值包含表示周中某一天的数。</span><span class="sxs-lookup"><span data-stu-id="09867-813">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-814">返回的值`Weekday`函数对应的值`FirstDayOfWeek`枚举; 也就是说，1 表示星期日，7 表示星期六。</span><span class="sxs-lookup"><span data-stu-id="09867-814">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09867-815">`Weekday` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-815">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-816">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-816">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="09867-817">`DayOfWeek`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-817">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-818">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-818">Enumeration value</span></span>|<span data-ttu-id="09867-819">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-819">Value</span></span>|<span data-ttu-id="09867-820">描述</span><span class="sxs-lookup"><span data-stu-id="09867-820">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-821">0</span><span class="sxs-lookup"><span data-stu-id="09867-821">0</span></span>|<span data-ttu-id="09867-822">系统设置中指定的每周的第一天</span><span class="sxs-lookup"><span data-stu-id="09867-822">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-823">1</span><span class="sxs-lookup"><span data-stu-id="09867-823">1</span></span>|<span data-ttu-id="09867-824">Sunday （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-824">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-825">2</span><span class="sxs-lookup"><span data-stu-id="09867-825">2</span></span>|<span data-ttu-id="09867-826">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-826">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-827">3</span><span class="sxs-lookup"><span data-stu-id="09867-827">3</span></span>|<span data-ttu-id="09867-828">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-828">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-829">4</span><span class="sxs-lookup"><span data-stu-id="09867-829">4</span></span>|<span data-ttu-id="09867-830">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-830">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-831">5</span><span class="sxs-lookup"><span data-stu-id="09867-831">5</span></span>|<span data-ttu-id="09867-832">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-832">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-833">6</span><span class="sxs-lookup"><span data-stu-id="09867-833">6</span></span>|<span data-ttu-id="09867-834">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-834">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-835">7</span><span class="sxs-lookup"><span data-stu-id="09867-835">7</span></span>|<span data-ttu-id="09867-836">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-836">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-837">下面的示例使用`Weekday`函数获取从指定日期的日期是星期几。</span><span class="sxs-lookup"><span data-stu-id="09867-837">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-838"><paramref name="DayOfWeek" /> 小于 0 或大于 7。</span><span class="sxs-lookup"><span data-stu-id="09867-838"><paramref name="DayOfWeek" /> is less than 0 or more than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday"><span data-ttu-id="09867-839">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-839">Required.</span></span> <span data-ttu-id="09867-840"><see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="09867-840"><see langword="Integer" />.</span></span> <span data-ttu-id="09867-841">以数字表示的周几，介于 1 到 7 之间；1 表示一周的第一天，7 表示一周的最后一天。</span><span class="sxs-lookup"><span data-stu-id="09867-841">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span></span> <span data-ttu-id="09867-842">第一天和最后一天指的是哪一天取决于 <paramref name="FirstDayOfWeekValue" /> 的设置。</span><span class="sxs-lookup"><span data-stu-id="09867-842">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="09867-843">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-843">Optional.</span></span> <span data-ttu-id="09867-844">指示是否缩写周几的名称的 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-844"><see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span></span> <span data-ttu-id="09867-845">如果省略，则默认为 <see langword="False" />，表示星期几的名称不缩写。</span><span class="sxs-lookup"><span data-stu-id="09867-845">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="09867-846">可选。</span><span class="sxs-lookup"><span data-stu-id="09867-846">Optional.</span></span> <span data-ttu-id="09867-847">从 <see langword="FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="09867-847">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="09867-848">如果未指定，则使用 <see langword="FirstDayOfWeek.System" />。</span><span class="sxs-lookup"><span data-stu-id="09867-848">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span></span></param>
        <summary><span data-ttu-id="09867-849">返回一个 <see langword="String" /> 值，该值包含指定工作日的名称。</span><span class="sxs-lookup"><span data-stu-id="09867-849">Returns a <see langword="String" /> value containing the name of the specified weekday.</span></span></summary>
        <returns><span data-ttu-id="09867-850">返回一个 <see langword="String" /> 值，该值包含指定工作日的名称。</span><span class="sxs-lookup"><span data-stu-id="09867-850">Returns a <see langword="String" /> value containing the name of the specified weekday.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-851">返回的字符串`WeekdayName`取决于不在输入参数，而且还**区域选项**Windows 中指定的设置**控制面板**。</span><span class="sxs-lookup"><span data-stu-id="09867-851">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09867-852">`WeekdayName` 使用中的当前日历设置<xref:System.Globalization.CultureInfo.CurrentCulture%2A>的属性<xref:System.Globalization.CultureInfo>类中<xref:System.Globalization>命名空间。</span><span class="sxs-lookup"><span data-stu-id="09867-852">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="09867-853">默认值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>值均由**控制面板**设置。</span><span class="sxs-lookup"><span data-stu-id="09867-853">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="09867-854">`FirstDayOfWeekValue`自变量可具有以下设置之一。</span><span class="sxs-lookup"><span data-stu-id="09867-854">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="09867-855">枚举值</span><span class="sxs-lookup"><span data-stu-id="09867-855">Enumeration value</span></span>|<span data-ttu-id="09867-856">“值”</span><span class="sxs-lookup"><span data-stu-id="09867-856">Value</span></span>|<span data-ttu-id="09867-857">描述</span><span class="sxs-lookup"><span data-stu-id="09867-857">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="09867-858">0</span><span class="sxs-lookup"><span data-stu-id="09867-858">0</span></span>|<span data-ttu-id="09867-859">在系统中指定的每周的第一天设置 （默认值）</span><span class="sxs-lookup"><span data-stu-id="09867-859">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="09867-860">1</span><span class="sxs-lookup"><span data-stu-id="09867-860">1</span></span>|<span data-ttu-id="09867-861">星期日</span><span class="sxs-lookup"><span data-stu-id="09867-861">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="09867-862">2</span><span class="sxs-lookup"><span data-stu-id="09867-862">2</span></span>|<span data-ttu-id="09867-863">星期一 （符合 ISO 8601 标准第 3.17 节）</span><span class="sxs-lookup"><span data-stu-id="09867-863">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="09867-864">3</span><span class="sxs-lookup"><span data-stu-id="09867-864">3</span></span>|<span data-ttu-id="09867-865">星期二</span><span class="sxs-lookup"><span data-stu-id="09867-865">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="09867-866">4</span><span class="sxs-lookup"><span data-stu-id="09867-866">4</span></span>|<span data-ttu-id="09867-867">星期三</span><span class="sxs-lookup"><span data-stu-id="09867-867">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="09867-868">5</span><span class="sxs-lookup"><span data-stu-id="09867-868">5</span></span>|<span data-ttu-id="09867-869">星期四</span><span class="sxs-lookup"><span data-stu-id="09867-869">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="09867-870">6</span><span class="sxs-lookup"><span data-stu-id="09867-870">6</span></span>|<span data-ttu-id="09867-871">星期五</span><span class="sxs-lookup"><span data-stu-id="09867-871">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="09867-872">7</span><span class="sxs-lookup"><span data-stu-id="09867-872">7</span></span>|<span data-ttu-id="09867-873">星期六</span><span class="sxs-lookup"><span data-stu-id="09867-873">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09867-874">下面的示例使用`Weekday`函数获取从指定日期的日期是星期几，然后`WeekDayName`函数根据其序号获取工作日的名称。</span><span class="sxs-lookup"><span data-stu-id="09867-874">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09867-875"><paramref name="Weekday" /> 小于 1 或大于 7，或 <paramref name="FirstDayOfWeekValue" /> 小于 0 或大于 7。</span><span class="sxs-lookup"><span data-stu-id="09867-875"><paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="09867-876">必须的。</span><span class="sxs-lookup"><span data-stu-id="09867-876">Required.</span></span> <span data-ttu-id="09867-877">要从中提取年的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09867-877"><see langword="Date" /> value from which you want to extract the year.</span></span></param>
        <summary><span data-ttu-id="09867-878">返回一个表示年的 <see langword="Integer" /> 值，范围为 1 到 9999。</span><span class="sxs-lookup"><span data-stu-id="09867-878">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span></span></summary>
        <returns><span data-ttu-id="09867-879">返回一个表示年的 <see langword="Integer" /> 值，范围为 1 到 9999。</span><span class="sxs-lookup"><span data-stu-id="09867-879">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09867-880">你还可以通过调用获取年份`DatePart`并指定`DateInterval.Year`为`Interval`参数。</span><span class="sxs-lookup"><span data-stu-id="09867-880">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09867-881">下面的示例使用`Year`函数获取从指定日期的年份。</span><span class="sxs-lookup"><span data-stu-id="09867-881">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="09867-882">在开发环境中，使用你的代码的区域设置以短日期格式显示文本的日期。</span><span class="sxs-lookup"><span data-stu-id="09867-882">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>